[
  {
    "countermeasure_id": "T1",
    "universal_id": "ff19485c-3607-48df-8269-5b0f0017c799",
    "countermeasure_name": "Use multi-factor authentication for remote access to high risk systems or administrative access to services",
    "countermeasure_solution": "Use multi-factor authentication for systems that handle sensitive data, such as Internet banking. The factors of authentication are:\n\n1. Something the user __knows__, such as a password or security question.\n2. Something the user __has__, such as Smart Cards or Password-Generating-Tokens.\n3. Something the user __is__, such as biometric factors.\n\nUse a second factor of authentication to be effective. For example, combining passwords with security questions will not result in multi-factor authentication because they both belong to the factor of what the user knows.\n\nVerify access to all accounts in a payment application, or a system with financial data, using two-factor authentication. This includes point of sale accounts with administrative permissions, and all accounts used to view or access cardholder data, or to access systems with cardholder data.\n\nAdd some of the following second forms of authentication after passwords and PINs, as suggested by the FFIEC (Federal Financial Institutions Examination Council):\n\n- USB Token Device\n- Smart Card\n- Password-Generating Token\n- Non-Hardware-Based One-Time-Password Scratch Card\n- Fingerprint Recognition\n- Face Recognition\n- Out-of-Band Authentication (such as mobile call verification)\n- Internet Protocol Address (IPA) Location and Geo-Location\n- Mutual Authentication\n\n## References\n\n[FTC Authentication Guidance](http://www.ffiec.gov/pdf/authentication_guidance.pdf)",
    "weakness_title_read_only": "Single-factor Authentication",
    "weakness_id_read_only": "P205",
    "weakness": "a7e94b75-c246-4c06-89de-710f3f7d34aa",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "requirements",
    "created": "2010-10-20T13:46:49-04:00",
    "last_updated": "2023-05-17T10:51:51.155000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2",
    "universal_id": "27609aea-0802-4f68-9c75-89604cf0c867",
    "countermeasure_name": "Secure the password reset mechanism",
    "countermeasure_solution": "If the application has a password reset function, use the following sequence:\n\n1. The user must submit their username to a __password reset page__. \n    - This page must include an __anti-automation feature__, such as a CAPTCHA image with accessibility options for the hearing or visually impaired.\n    - If the application __creates a cookie__ when the user enters a username that does not exist, set the cookie to a value that is __similar in structure and length__ to the input. \n    - An attacker can determine if the username exists by comparing the cookie to various input.\n\n2. __Display a confirmation page__ when the form is submitted that confirms an email with further instructions is sent to the user.\n    - Send an email with a __password reset link__ to the user.\n    - The link leads to a security question page.\n    - The link will __expire__ after a predetermined period.\n\n3. A __security question page__ asks the user to answer questions they set up when they registered their username.\n    - The security questions do not contain __personal information that can be found online__.\n\n4. The application enforces an __account lockout__ if the user fails to answer the security questions correctly after a predetermined number of attempts.\n\n5. After a successful password reset, __provide users with the option__ to terminate all of their active sessions on all relevant devices.\n\n6. Send a __confirmation email__ to the user when their password has been changed.\n    - A user's password should __never be revealed__ in an email.\n\n**Note:** \n\nIf the organization has a policy not to send emails to end users:\n\n- Jump directly from step 1 to step 3 and __do not email the link__.\n- If the submitted username does not exist, display __fake security questions__ at random.\n- __Enforce a lockout policy__ as mentioned in step 4.",
    "weakness_title_read_only": "Weak Password Reset Mechanism for Forgotten Passwords",
    "weakness_id_read_only": "P526",
    "weakness": "ebec9158-f796-4e23-8452-3a588258e350",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "requirements",
    "created": "2010-10-20T13:46:50-04:00",
    "last_updated": "2023-03-07T10:24:22.576000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T3",
    "universal_id": "5df8b08c-509e-4118-92fc-758a1af9ce1c",
    "countermeasure_name": "Require old passwords when users change passwords",
    "countermeasure_solution": "To change a password securely without using __the forgotten password feature__ of an application, a user must first __enter their old password__ to prove their identity.",
    "weakness_title_read_only": "Unverified Password Change",
    "weakness_id_read_only": "P512",
    "weakness": "d67045fe-91aa-4767-8356-a901af2ed73c",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "requirements",
    "created": "2010-10-20T13:46:50-04:00",
    "last_updated": "2021-06-25T14:47:41.901000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T4",
    "universal_id": "ca0d7e2b-ab65-4c64-b9e0-c6cee6abd40f",
    "countermeasure_name": "Use configurable password policies",
    "countermeasure_solution": "Enable application administrators to __configure password requirements__, including:\n\n* Enforcing a minimum password length\n* Enforcing a minimum password complexity (e.g. requiring lowercase, uppercase, numerical characters in the password)\n* Enforcing a maximum password age\n* Restricting usage of recent old passwords\n* Enforcing an optional list of words that cannot be used as passwords\n* Exclusion of context-specific words (e.g. derivatives of the username)\n\nSee __Additional Requirements__ for more information about the minimum requirements of different regulations.",
    "weakness_title_read_only": "Password Requirements Are Weak",
    "weakness_id_read_only": "P408",
    "weakness": "e4138dde-9a0c-43d1-b721-ab4945beaaf6",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "requirements",
    "created": "2010-10-20T13:46:50-04:00",
    "last_updated": "2021-09-21T12:08:57.609000-04:00",
    "custom": "False",
    "rules": "583f20c1-76a3-48ee-924d-a45029a29531",
    "rules_read_only": "A19"
  },
  {
    "countermeasure_id": "T5",
    "universal_id": "c7006952-c86a-49d8-a1fd-437cc9686b71",
    "countermeasure_name": "Use minimum standards for passwords",
    "countermeasure_solution": "During user registration and password resets, ensure that __passwords meet the minimum standards__. These standards are generally outlined in an enterprise security policy.\n\nAdditionally, compliance regulations, such as PCI-DSS and PA-DSS, may require more specific password restrictions. The enterprise security policy must meet the minimum requirements of the relevant compliance drivers. See __Additional Requirements__ for more information about the minimum requirements of different regulations.\n\nIf your organization does not have a security policy about password requirements, refer to a standard such as the [SANS Password Policy](http://www.sans.org/security-resources/policies/Password_Policy.pdf) and the UK's Centre for the Protection of National Infrastructure (CPNI) guide on [simplifying password management](https://assets.publishing.service.gov.uk/government/uploads/system/uploads/attachment_data/file/458857/Password_guidance_-_simplifying_your_approach.pdf).\n\nThese standards generally include a combination of the following:\n\n- Requiring a minimum __length__ for passwords.\n    - User-selected passwords are usually more predictable than randomly-selected ones, so it's better to use more characters for them. NIST [specifies](https://pages.nist.gov/800-63-3/sp800-63b.html) that passwords should be at least 8 characters for user-selected values, and 6 characters for randomly-selected ones. There is no consensus on limiting the maximum password length to any specific number but it is plausible to target a number that is large enough to give the users the required flexibility for picking reasonably long and secure passphrases, and small enough to avoid exhausting system resources (or potentially facilitating DOS attacks). For example, ASVS [recommends](https://github.com/OWASP/ASVS/blob/v4.0.3/4.0/en/0x11-V2-Authentication.md) using a max password length of 128 characters.\n- Requiring a minimum password __complexity__.\n    - Enforce at least one numerical, one upper case, one lower case, and if required one special character.\n    - Highly complex passwords are unnecessary if other protections, such as secure storage and protective monitoring (account lockout, throttling, etc.), exist.\n\n- Enforcing password __expiration__.\n    - The user will be asked to pick a new password after a predetermined period.\n    - If there is no regulatory obligation for this requirement, some standards do not recommend it as it increases the burden on users and discourages them from selecting effective passwords.\n\n- Restricting the use of __previous passwords__.\n    - Compare the new password against 3 to 5 old (stored) passwords.\n    - If there is no regulatory obligation, some standards recommend a password change only if there is an indication or suspicion of compromise.\n\n- Restricting the use of __dictionary words__ for passwords.\n    - This includes words similar to dictionary words.\n\n- Checking passwords against __known common weak password databases__.\n    - These lists include passwords that meet the minimum length and character requirements, but are common and predictable, such as \"P@SSw0rd\".\n\n- Restricting the use of __context-specific words__ such as usernames or service names.\n\nFor more information, refer to [NIST 800-63-B](https://pages.nist.gov/800-63-3/sp800-63b.html#appA) and the UK's CPNI guide on [simplifying password management](https://assets.publishing.service.gov.uk/government/uploads/system/uploads/attachment_data/file/458857/Password_guidance_-_simplifying_your_approach.pdf).\n\nAll passwords must have 12 characters and have at least one capital letter.",
    "weakness_title_read_only": "Password Requirements Are Weak",
    "weakness_id_read_only": "P408",
    "weakness": "e4138dde-9a0c-43d1-b721-ab4945beaaf6",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "requirements",
    "created": "2010-10-20T13:46:51-04:00",
    "last_updated": "2023-07-12T09:59:08.899085-04:00",
    "custom": "False",
    "rules": "583f20c1-76a3-48ee-924d-a45029a29531 AND !d0d429b5-9b82-466a-af97-db8c40d0c246",
    "rules_read_only": "A19 AND !A713"
  },
  {
    "countermeasure_id": "T6",
    "universal_id": "5ae0f153-53eb-45e5-8946-3afbba9ab16f",
    "countermeasure_name": "Implement account lockout or authentication throttling",
    "countermeasure_solution": "To protect against brute-force authentication attacks, use a feature that enforces a __predetermined number of failed attempts__ by a user during a **predetermined period**.\n\nConsider using a feature that throttles multiple authentication attempts from, or originating from, the same user. This prevents locking out legitimate user accounts, while also reducing the likelihood of a brute-force attack.\n\nWhen the maximum number of unsuccessful attempts is exceeded, the **throttling mechanism** must automatically do one of the following:\n\n- Lock the account or node for a predetermined period.\n- Lock the account or node until it is released by an administrator.\n- Delay the next login attempt using a suitable algorithm. \n\nA **delay algorithm** will increase the time a user must wait between login attempts until it becomes impractical for a brute-force attack.\n\n __Note:__ \n\nThe authentication throttling feature must also prevent __denial of service (DoS)__ attacks. These attacks lock down legitimate user accounts through automated login attempts. Use a CAPTCHA image, or IP-based throttling to prevent these automated attacks.\n\n__Note:__\n\nMake sure __soft__ account lockout, which happens automatically by the application, is kept separate from __hard__ account lockout, which happens by administrators. These two statuses are not mutually exclusive. If an account is temporarily soft locked out due to a brute force attack, this should not reset the hard lock status applied by system admins.",
    "weakness_title_read_only": "Repeated Authentication Attempts Are Not Restricted",
    "weakness_id_read_only": "P204",
    "weakness": "d8ce3b46-0bb3-4720-97cb-b9a3acd54f03",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "requirements",
    "created": "2010-10-20T13:46:51-04:00",
    "last_updated": "2023-03-17T17:10:11.471000-04:00",
    "custom": "False",
    "rules": "0b07fc15-1e13-4c03-b097-c7e222fc019a;4fd90244-5770-4b68-88a7-9445cca26ec8;d0d429b5-9b82-466a-af97-db8c40d0c246",
    "rules_read_only": "A718;A1077;A713"
  },
  {
    "countermeasure_id": "T7",
    "universal_id": "7eb869f1-217e-438f-80f0-5b8d817c63c9",
    "countermeasure_name": "Salt and hash stored passwords",
    "countermeasure_solution": "To improve the security of hashed passwords, add a unique salt to each password and hash the result before storing it. A salt value is a set of random bytes added to original input before it is hashed.\n\n### Best practices\n\n__When generating or storing a salt__:\n\n- __High entropy__: Use a secure random generator to generate unpredictable values. At the very least, salt values should be the same length as the output of the hash function. Do not use a username for a salt value.\n- __Uniqueness__: Do not re-use salts between users or entries.\n- __Storage__: Salts can be stored in the same table or place as the hashed passwords. Salt values do not need to be confidential. However, based on ASVS 4 (2.4.5) and NIST 800-63b, as defence-in-depth, consider storing it separately (e.g on an HSM device) to make brute-force attacks on the hashed passwords impractical in case a breach happens.\n\n__When hashing passwords__:\n\n- __Secure hash__: Use a secure hashing algorithm to prevent identical hashes (collision). Recommended hash functions are Argon2, BCrypt and SHA-2. **Avoid** using SHA-0 and SHA-1.\n- __Slow hash__: Use slow hash algorithms because they take more time to calculate. This makes brute-force attacks more difficult to carry out. Make sure to hash values multiple times (iteratively), and hash a salted password at least a thousand times.\n\n__Note__:\nWithout adequate authentication throttling, slow hashing can lead to denial of service (DoS) attacks.\n\n__Implementation__: \n\n- Avoid integrating hashing functions into your code. Instead, use a field-tested library that performs the hashing and salting for you. __RFC2898__ introduces Password-Based Key Derivation Function 2 (PBKDF2), which is implemented by many libraries and vendors. We recommend using `PBKDF2-HMAC-SHA256`.\n\n### Benefits of a salt\nUsing a randomized salt before hashing has two major benefits:\n\n1. __Prevents rainbow attacks__: Rainbow attacks use a table of pre-calculated passwords and hashes to gain unauthorized entry. When a different salt is used for each user, rainbow attacks become more difficult and inefficient to use for an attacker. When unique salts are used to calculate a hash, identical passwords will not produce identical hashes.\n2. __Increases complexity__: Salting a value increases the complexity of its hash, either by increasing its length or by adding special characters. This makes dictionary attacks much more time-consuming.",
    "weakness_title_read_only": "One-Way Hashes Do Not Have Strong Salts",
    "weakness_id_read_only": "P601",
    "weakness": "0f0624c4-de44-4a6a-a243-a641afb19417",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "requirements",
    "created": "2010-10-20T13:46:51-04:00",
    "last_updated": "2021-06-25T14:47:44.383000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T8",
    "universal_id": "fc33b0f2-f84f-485d-b20d-4d7ab81fdf1e",
    "countermeasure_name": "Use Consistent Error Handling for All Authentication Failures",
    "countermeasure_solution": "User-enumeration can be prevented using the following methods:\n\n- Use a __general error message__ for failed authentication:\n    - The message should not reveal whether the username or password entered is invalid.\n- Make response time independent of existence, length, and correctness of any part of the credentials by adding a random delay or implementing a fixed response time (i.e., credentials validation time plus a filler delay always equals a constant time regardless of input). \n- If the __application must set a cookie__ before the user signs in, or when the user submits their credentials:\n    - Do not create cookies that are different for existing or non-existing users.\n    - Use a canned value with a similar structure and length to the cookie.\n\n- If the application displays a __personal phrase or image__ after a valid username is entered, or before a password is validated:\n    - Use an anti-automation challenge with accessibility options, such as CAPTCHA, to throttle username submissions.\n    - This feature exposes account information and cannot be completely protected.\n    - Consider removing this feature if it is not a key requirement for the application.",
    "weakness_title_read_only": "Response Discrepancy Information Exposure",
    "weakness_id_read_only": "P100",
    "weakness": "85a0f395-026f-4269-8454-64c5b4311261",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "requirements",
    "created": "2010-10-20T13:46:52-04:00",
    "last_updated": "2021-06-25T14:47:38.388000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T9",
    "universal_id": "e0241660-6edc-43bc-b1b7-dd00089ce4c9",
    "countermeasure_name": "Implement authorization and screening for highly sensitive transactions",
    "countermeasure_solution": "Use a feature that monitors __transactions and authorization__ for anomalies. This feature must be capable of __detecting and preventing suspicious transactions__:\n\n- Require users to re-enter their password to approve particularly high-value transactions, or use a one-time password that is sent out-of-band (such as SMS).\n    - For example, an online banking system may do this for funds transfers over a threshold of $1,000. Decide which applications are \"high value\" on an application-by-application basis.\n\n- Create a __revocation list__ or __black list__ for user accounts or card numbers that are stolen or compromised.\n\n- Use __Internet protocol (IP) information__ and __geo-IP data__ to detect suspicious transactions or purchases. \n    - For example, the location of purchases made on a credit card cannot change in a short period. Reject suspicious transactions, or request further verification and authorization for those transactions.\n\n- Use features that __detect suspicious transactions by cross-referencing other information__ available to the system.\n    - This includes transaction type, value, time, and location. For example, compare the type and value of a user's transaction with their everyday habits.\n\n- Use __malware detection__ applications to identify malicious scripts running on client machines.",
    "weakness_title_read_only": "Inadequate Transaction-Specific Authorization and Transaction Monitoring",
    "weakness_id_read_only": "P698",
    "weakness": "021dfcf0-1ccd-4c84-b3bc-12674760b29e",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "requirements",
    "created": "2010-10-20T13:46:52-04:00",
    "last_updated": "2023-03-07T10:48:49.074000-05:00",
    "custom": "False",
    "rules": "e484539f-f91c-46ad-81c0-2f03be462663;89a5e903-a2cd-4234-b0ea-714e3da7fee9",
    "rules_read_only": "A759;A1082"
  },
  {
    "countermeasure_id": "T10",
    "universal_id": "44c4521d-b225-4238-af31-a1ef4b306204",
    "countermeasure_name": "Use server-to-server authentication",
    "countermeasure_solution": "Use the following guidelines for server-to-server authentication:\n\n- The application must have a feature that authenticates servers.\n    - For example, a presentation-tier server may need to authenticate a middle-tier server and vice-versa. \n\n- This control reduces the risk of attackers connecting directly to a server from the internal network.\n\n- Server-to-server authentication is commonly done using __X509 certificate mutual authentication__.",
    "weakness_title_read_only": "Insufficient System-to-System Authentication",
    "weakness_id_read_only": "P703",
    "weakness": "94b9c092-1e56-48ba-979f-93f5d1fb348a",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "requirements",
    "created": "2010-10-20T13:46:52-04:00",
    "last_updated": "2021-06-25T14:47:42.697000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T11",
    "universal_id": "0c08cfac-e5ce-4e69-9320-a9dbe520e8a6",
    "countermeasure_name": "Disallow external redirects to unverified destinations",
    "countermeasure_solution": "External redirects should be avoided as much as possible, even though there are legitimate reasons for redirecting a user to an external site. For example, an online payment processor may redirect users back to the site that requested the payment.\n\n## Guidelines for secure external redirects (where possible)\n\n1. Do not use direct user input when calculating the destination. \n2. Do not construct a URL path from direct user input.\n3. Validate user input before using it to calculate a destination to an external site.\n4. Validate a URL's full path against a white list of trusted URLs.\n5. Create a mapping system to legitimate sites using validated user input.\n6. Make sure the user is authorized to provide input.  \n7. Ask the user for permission before redirecting them to an external site.",
    "weakness_title_read_only": "URL Redirects to Untrusted Site ('Open Redirect')",
    "weakness_id_read_only": "P493",
    "weakness": "26c48040-b403-4a80-a0da-bcd1cafb0919",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "development",
    "created": "2010-10-20T13:46:52-04:00",
    "last_updated": "2023-03-17T16:52:07.491000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T12",
    "universal_id": "b5d0db82-78e4-4621-ac13-ac008a4dfdc6",
    "countermeasure_name": "Mask User Passwords by Default",
    "countermeasure_solution": "Use the following guidelines for masking passwords:\n\n* Do not display passwords in clear text to end users. \n* Use masking features that hide passwords.\n* Mask passwords by default.\n    * Allow users the option of displaying a password if this feature is required.",
    "weakness_title_read_only": "No Password Field Masking",
    "weakness_id_read_only": "P438",
    "weakness": "8517629d-d51c-4053-b8db-a04e045ccf79",
    "tags": "",
    "countermeasure_priority": "2",
    "phase": "requirements",
    "created": "2010-10-20T13:46:53-04:00",
    "last_updated": "2021-06-25T14:47:38.051000-04:00",
    "custom": "False",
    "rules": "b310a679-c006-4abb-a02b-5f1608d05ace;5e40a9c3-a7fc-428b-bb70-36d1aeef0101",
    "rules_read_only": "A1080;A194"
  },
  {
    "countermeasure_id": "T13",
    "universal_id": "b19f5e71-ba54-4fac-bb62-f1f5c95d43ee",
    "countermeasure_name": "Change Automatically Generated Passwords",
    "countermeasure_solution": " - If the application automatically generates a temporary password for a user, they must change their password when they log in for the first time.\n- Any default information that automatically populates should be flagged and alert the user to change it.",
    "weakness_title_read_only": "Unchanged System-Generated Password",
    "weakness_id_read_only": "P706",
    "weakness": "4bf642f8-1cb1-4f31-a77b-7b1b3d4a5fd5",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "requirements",
    "created": "2010-10-20T13:46:53-04:00",
    "last_updated": "2022-09-11T23:50:57.116000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T14",
    "universal_id": "733cac0b-3d36-414b-b8f6-2f9f78707331",
    "countermeasure_name": "Enforce the principle of least privilege",
    "countermeasure_solution": "The principle of least privilege is the concept that all subjects of a computing environment are restricted from accessing resources that are not essential to their purpose. This includes application components, users, and processes. Following this principle, additional processes, roles, and accounts should only be created as necessary.\n\nTo enforce the fewest privileges on a subject, all privileges must be:\n\n- Restricted as much as possible.\n- Granted as late as possible.\n- Revoked as soon as possible.\n\nDefine an access control model (to support a consistent and uniform way of allocating access) that grants access to the users as follows:\n\n- Define appropriate access depending on each user's business and access needs.\n- Define access to system components and data resources that are based on users’ job classification and functions.\n- Enforce the fewest privileges (for example, user, administrator) to perform a job function.\n\nAccess is assigned to users, including privileged users, based on:\n\n- Job classification and function.\n- Least privileges necessary to perform job responsibilities.\n\nDefine, assign, and manage access privileges for application and system accounts as follows:\n\n- Based on the least privileges necessary for the operability of the system or application.\n- Access is limited to the systems, applications, or processes that specifically require their use.\n\n##### Note\nThe principle of least privilege can be applied in many different contexts. For example:\n\n- Create an account for the sole purpose of running a particular background process.\n    - Run Server/daemon processes under restricted user accounts.\n\n- Use accounts with access restricted to the required features and resources of a service.\n    - The code interacts with a service, such as a database, that supports user accounts and access controls.\n    - Multiple accounts may be required to use different parts of the code, and to work with different sets of data.",
    "weakness_title_read_only": "Running With Unnecessary Privileges",
    "weakness_id_read_only": "P150",
    "weakness": "07093262-3118-48ab-911f-86160f3ae8e2",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "architecture-design",
    "created": "2010-10-20T13:46:53-04:00",
    "last_updated": "2023-03-23T18:19:58.118000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T15",
    "universal_id": "4519ebb5-fbbf-417a-aa77-bd8a574983a1",
    "countermeasure_name": "Centralize authorization",
    "countermeasure_solution": "Use the following guidelines for centralizing authorization:\n\n- Centralize authorization into a __single module, layer, or location__.\n    - All views, application programming interfaces (APIs), and other interfaces should pass through the same security code to ensure authorization is consistent.\n\n- Avoid hard-coding authorization logic into the presentation layers, especially for web applications.\n    - This makes authorization maintenance more complex and inconsistent because it leads to a risk of duplicating authorization features.\n    - In certain conditions, attackers can exploit these inconsistencies and bypass authorization checks entirely.",
    "weakness_title_read_only": "Improper Access Control (Authorization)",
    "weakness_id_read_only": "P182",
    "weakness": "e488cdc5-3c91-4d2b-bcec-5c651b000d8b",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "architecture-design",
    "created": "2010-10-20T13:46:53-04:00",
    "last_updated": "2021-06-25T14:47:47.253000-04:00",
    "custom": "False",
    "rules": "0b07fc15-1e13-4c03-b097-c7e222fc019a;616b6ea4-5436-4bad-83f6-bc83781aa8f2;28183a47-70c3-4ffc-a2de-648d7c723502",
    "rules_read_only": "A718;A23;A1265"
  },
  {
    "countermeasure_id": "T16",
    "universal_id": "23ad7b70-cc03-4980-9822-07a00993f5d8",
    "countermeasure_name": "Authorize every non-public page",
    "countermeasure_solution": "Use an explicit authorization check on every non-public server page.\n\nTo ensure that only authorized users can access non-public pages, create a white-list of all public pages that do not require authorization, such as about pages, and help pages.\n\nAdditionally, include the authorization code or directives in all the other pages.\n\nMake sure there are no less secure or alternative access paths to those pages.",
    "weakness_title_read_only": "Direct Request ('Forced Browsing')",
    "weakness_id_read_only": "P317",
    "weakness": "c331d52e-0833-4d02-8b17-2399f8e0c8ca",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "development",
    "created": "2010-10-20T13:46:54-04:00",
    "last_updated": "2021-06-25T14:47:45.816000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T17",
    "universal_id": "bea01b1f-dc42-41fd-b055-92d60c31a8ae",
    "countermeasure_name": "Do not only rely on client-side authorization",
    "countermeasure_solution": "Do not only rely on client-side code to authorize users, such as a JavaScript library, because users can bypass client-side security controls.\n\nAuthorization checks on a user should be done on the server itself, or users can forcibly browse or guess the URL of a page that normally requires authorization.",
    "weakness_title_read_only": "Client-Side Enforcement of Server-Side Security",
    "weakness_id_read_only": "P494",
    "weakness": "e1abe966-a4e7-4a0c-9481-ed2b146b2099",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "development",
    "created": "2010-10-20T13:46:54-04:00",
    "last_updated": "2021-06-25T14:47:45.091000-04:00",
    "custom": "False",
    "rules": "b310a679-c006-4abb-a02b-5f1608d05ace AND 616b6ea4-5436-4bad-83f6-bc83781aa8f2",
    "rules_read_only": "A1080 AND A23"
  },
  {
    "countermeasure_id": "T18",
    "universal_id": "32926ce2-d996-4aab-b172-1e5ff5614f04",
    "countermeasure_name": "Make authorization decisions using full context",
    "countermeasure_solution": "Authorization decisions must be made using full security context:\n\n- Software architecture partitioned into separate layers or tiers must propagate enough contextual data so that the dependent layer can make a correct security decision.\n    - For example, a web application that decouples view logic from model logic may need to access the end user's permissions so that it can make authorization decisions.\n    - In this case, ensure that the model can access a user's permission data.\n\n- In a multi-tiered enterprise application, a web service on a separate server may need contextual data about the end user to make authorization decisions.",
    "weakness_title_read_only": "Insufficient Authorization Checks Due to Lack of Information",
    "weakness_id_read_only": "P692",
    "weakness": "32e6c45d-cb94-4727-a9ee-528e4e972c29",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "architecture-design",
    "created": "2010-10-20T13:46:54-04:00",
    "last_updated": "2021-06-25T14:47:47.969000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T19",
    "universal_id": "0989c235-4aba-4faf-a677-18f32fe8fc6c",
    "countermeasure_name": "Restrict Application's Access to Database",
    "countermeasure_solution": "Always restrict the application's access to its database. \n\nApplications tend to have a single service account with excessive privileges on their databases for performing important transactions. A malicious user could exploit a separate vulnerability, such as SQL injection, to gain access to these privileges. This situation can increase the attack surface of a software environment.\n\nConsider using the following minimum restrictions:\n\n* Restrict access to tables and schemas that are needed.\n* Restrict access to actions that are needed (such as select, update, and delete).\n* Remove access to stored procedures that the application does not need.\n* Work with a database administrator to implement proper access control.",
    "weakness_title_read_only": "Running With Unnecessary Privileges",
    "weakness_id_read_only": "P150",
    "weakness": "07093262-3118-48ab-911f-86160f3ae8e2",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "development",
    "created": "2010-10-20T13:46:54-04:00",
    "last_updated": "2021-06-25T14:47:45.485000-04:00",
    "custom": "False",
    "rules": "111336e7-ada4-498d-a54f-bf8c45c33c6f",
    "rules_read_only": "A1078"
  },
  {
    "countermeasure_id": "T20",
    "universal_id": "25fb60b9-c62c-4288-bce6-bf025167a5b5",
    "countermeasure_name": "Generate unique session IDs and reset old IDs after authentication",
    "countermeasure_solution": "Protect against session-fixation attacks by using the following guidelines:\n\n- Generate a unique and random session identifier for each session.\n- Recognize only system-generated session IDs.\n- Regenerate the session ID after a user is successfully authenticated.\n- Regenerate the session ID after any changes to user's privilege level.\n- Copy the server-side state of a user's old session to the new session after changing the session ID.",
    "weakness_title_read_only": "Session Fixation",
    "weakness_id_read_only": "P678",
    "weakness": "398df6bf-b079-4aa0-84ac-3f239664da06",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "requirements",
    "created": "2010-10-20T13:46:54-04:00",
    "last_updated": "2023-05-25T13:09:49.350000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T21",
    "universal_id": "c09ffbee-c987-415f-8399-7810666ee779",
    "countermeasure_name": "Ensure all data in transit is encrypted using a secure TLS channel",
    "countermeasure_solution": "All data must be sent over an encrypted channel to remain secure:\n\n- Use Transport Layer Security (TLS). TLS is generally referred to as Secure Socket Layer (SSL) because TLS is based on the SSL protocol.\n    \n- Refuse any plaintext login or authentication requests.\n\nSecure TLS/SSL communication offered by the application using these steps:\n\n1. Do not support SSLv1, SSLv2, and SSLv3 as they are considered insecure.\n2. Provide support for TLSv1.2 and TLSv1.3. TLSv1.3 provides faster speed and enhanced security compared to TLSv1.2.\n3. Refuse insecure ciphers. (See the \"Choice of cipher\" Additional Requirements below this countermeasure for more details about ciphers.)\n4. Prevent using ciphers that provide SSL/TLS compression to protect against [Crime Attack Vectors](/library/glossary/G10/) that use compression side channels to extract information from encrypted channels.\n5. Use the latest version of the SSL library and web servers:\n    - SSL v1.0, v2.0, and v3.0 are no longer considered secure.\n    - OpenSSL is an open-source, commercial-grade toolkit for TLS/SSL protocols, and a cryptography library. It includes default protocol level mitigation factors enabled against BEAST (Browser Exploit Against SSL/TLS) attacks.\n    - Apache 2.2.24 provides a directive for disabling SSL/TLS Compression.\n6. Ensure that the server side selects the most secure cipher from the list of ciphers common to both client and server by providing preference ordering of the ciphers.\n7. Where possible, disable HTTP compression for dynamic content where confidential information such as CSRF tokens might be included within the body of the HTTP response. This mitigates the HTTP compression side channel attack vector named BREACH (Browser Reconnaissance and Exfiltration via Adaptive Compression of Hypertext).\n8. Log backend TLS connection failures.\n\n__Note__: Enforce TLS/SSL on all parts of the application where possible. Read the amendment for this countermeasure for more information.",
    "weakness_title_read_only": "Clear Text and Unencrypted Transmission of Information",
    "weakness_id_read_only": "P216",
    "weakness": "b1d166d6-8ca7-415f-9cd9-8c2d745d3d01",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "requirements",
    "created": "2010-10-20T13:46:55-04:00",
    "last_updated": "2022-09-01T09:45:32.335000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T22",
    "universal_id": "5bb0b8a1-0c3b-446b-a891-cd46ff1cba84",
    "countermeasure_name": "Set secure flags on session cookies",
    "countermeasure_solution": "Set session cookie *secure* flags to true. This forces browsers to only send the cookie over an encrypted channel, such as secure socket layer (SSL).",
    "weakness_title_read_only": "HTTPS Sessions Use Cookies Without the Secure Attribute",
    "weakness_id_read_only": "P505",
    "weakness": "3d24d8cc-7044-423f-bc87-c377606a2712",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "requirements",
    "created": "2010-10-20T13:46:55-04:00",
    "last_updated": "2021-06-25T14:48:01.168000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T23",
    "universal_id": "d6a4ebb7-017d-4b24-adb2-3aef64d4c0b5",
    "countermeasure_name": "Set HttpOnly flag on session cookies",
    "countermeasure_solution": "On most modern browsers, add the `; HttpOnly` flag at the end of a cookie value to prevent JavaScript from accessing it. This prevents some types of session hijacking that use Cross-Site Scripting (XSS).",
    "weakness_title_read_only": "Session Cookie Missing 'HttpOnly' Attribute",
    "weakness_id_read_only": "P710",
    "weakness": "bd1b4969-defd-4d43-8f85-94843f87ec1b",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "requirements",
    "created": "2010-10-20T13:46:55-04:00",
    "last_updated": "2021-06-25T14:48:00.808000-04:00",
    "custom": "False",
    "rules": "!1fd7d4e6-d2c9-4b66-ae29-639df5dcf149",
    "rules_read_only": "!A66"
  },
  {
    "countermeasure_id": "T24",
    "universal_id": "3e92fbb0-f07c-4781-968a-5b95576ac8b5",
    "countermeasure_name": "Enforce idle session timeout",
    "countermeasure_solution": "Lock a user's session after it has idled for a predetermined period:\n\n- Choose a timeout period that corresponds to the users' needs, such as 15 to 30 minutes.\n    - Do not release the lock until the user re-authenticates using their account credentials.\n\n- Use idle session timeouts to decrease the window of opportunity for an attacker to steal or brute-force a session ID.\n    - Session timeouts also protect users who forget to log out of a shared computer or device.",
    "weakness_title_read_only": "Insufficient Session Expiration",
    "weakness_id_read_only": "P504",
    "weakness": "b2147ed2-f98b-4d4e-9639-5d9a9454625c",
    "tags": "",
    "countermeasure_priority": "3",
    "phase": "requirements",
    "created": "2010-10-20T13:46:55-04:00",
    "last_updated": "2021-06-25T14:48:01.258000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T25",
    "universal_id": "ec0083a3-4897-4c08-85cb-da3697c60f68",
    "countermeasure_name": "Enforce absolute session timeouts",
    "countermeasure_solution": "Use the following guidelines for absolute session timeouts:\n\n- Enforce an absolute timeout on user sessions.\n    - Session auto-expiry should be established, with the duration varying based on the application's importance and the data involved.\n    - The maximum session duration should be a week, but should be significantly shorter for more critical applications. A one-day default setting is recommended for medium-critical applications such as webmail, online stores, and social networks.\n    - Users should be able to adjust the session timeout based on their individual requirements.\n    - Most frameworks do not provide this configuration option, so developers need to implement this control themselves.\n    - For example, an absolute timeout of 10 hours will invalidate the session token 10 hours after it was created, regardless of activity.\n\n- Consider the trade-off between usability and security when using absolute session timeout values.\n    - Some applications may require sessions more than twenty-four hours long, such as stock quote systems for brokers.\n\n- Set the absolute value low enough to minimize the damage in the event of session hijacking, but high enough that legitimate users will not encounter it.\n\n- Notify the user with an appropriate warning in the event of an absolute session timeout.",
    "weakness_title_read_only": "No Absolute Session Timeout",
    "weakness_id_read_only": "P707",
    "weakness": "592784ff-d05c-4611-b68d-45831118af72",
    "tags": "",
    "countermeasure_priority": "3",
    "phase": "requirements",
    "created": "2010-10-20T13:46:56-04:00",
    "last_updated": "2023-04-18T12:57:33.930000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T26",
    "universal_id": "1df9a2e6-073a-4eb6-b326-66e834b56735",
    "countermeasure_name": "Expire sessions on logout",
    "countermeasure_solution": "Use the following guidelines for expiring sessions:\n\n- Expire a session when a user logs out to prevent old sessions from being accessed by others on shared machines or devices.\n\n- Additionally, terminate any process associated with the user's session unless it is designed to continue after the session is terminated.\n\n- If a user has not explicitly logged out previously to end a session (such as by using a logout button), provide them with a reminder to do so when they next log in.\n\n- If the user is unable to log out, or the logout function does not terminate the session completely, data may continue to be collected (such as tracking sites the user visits elsewhere).",
    "weakness_title_read_only": "Sessions Not Expired Upon Logout",
    "weakness_id_read_only": "P694",
    "weakness": "50803938-cdd7-44fd-b190-60a3c468c523",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "requirements",
    "created": "2010-10-20T13:46:56-04:00",
    "last_updated": "2023-04-24T13:27:42.078000-04:00",
    "custom": "False",
    "rules": "0b07fc15-1e13-4c03-b097-c7e222fc019a",
    "rules_read_only": "A718"
  },
  {
    "countermeasure_id": "T27",
    "universal_id": "c78d430c-190a-4f9c-99d2-65689ddafe42",
    "countermeasure_name": "Turn off session rewriting",
    "countermeasure_solution": "Do not allow session rewriting on the application.\n\nApplication servers might include session IDs in their URLs if the user's browser does not support session cookies. These URLs can cause the following weaknesses:\n\n- Leak session IDs to external sites through hyperlinks.\n- Lead to attacks such as session fixation.\n- Leave the session ID in logs, such as the user's browsing history.",
    "weakness_title_read_only": "Session IDs Leaked Through URLs",
    "weakness_id_read_only": "P702",
    "weakness": "cd501d25-92c3-4eb8-b4a2-468dc7402e83",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "requirements",
    "created": "2010-10-20T13:46:56-04:00",
    "last_updated": "2022-08-22T14:30:55.757000-04:00",
    "custom": "False",
    "rules": "!3146dbeb-d68f-4f09-ab39-45cedebe7816",
    "rules_read_only": "!A697"
  },
  {
    "countermeasure_id": "T28",
    "universal_id": "5767462b-463f-4cc8-9ed7-5c7dbf056ec3",
    "countermeasure_name": "Avoid 'Remember Me' features",
    "countermeasure_solution": "The following provides guidance on how to avoid, restrict, and reduce the risk of 'remember me' functionality:\n\n- Avoid 'remember me' features for applications with critical functionality. For example, a banking application's login page does not need to provide a 'remember me' feature. The login page can still remember some public data, such as the account number of the user, but should not automatically log the user in if the session is terminated. For example, a user should not be able to automatically log in to a banking web site after the browser is closed.\n    - __Note:__ 'Remember me' is a feature that allows applications to keep their users logged in for a period of time that extends past their live session, such as after they close the browser. This type of 'remember me' functionality differs from browser features that save usernames and passwords, or web applications that save partial information, such as account numbers and client preferences.\n\n- For non-critical applications, if 'remember me' features provide a better user experience, restrict them to the normal pages of the application. Additionally, require re-authentication if a user wants to perform critical actions, such as performing a transaction, changing profile content, changing passwords, or accessing personal data.\n\n- In many cases, 'remember me' features are handled by the framework. Check the framework's documentation and set the login token expiry time to a reasonable duration. For example, set the expiry for login cookies to 8 hours.\n       - __Make session management cookies non-persistent.__ In other words, do not set 'expires' attribute on the cookies. These non-persistent cookies will only last as long as the browser session does. When the cookie does not specify an expiry date, the cookie is removed as soon as the user quits his or her browser.\n\n- If you need to implement a 'remember me' feature, use a secure method and follow implementation guidelines such as those found in these resources:\n    - The example from the section called _\"Remember Me\" - Long-Term Persistent Authentication_ in this [article](https://paragonie.com/blog/2015/04/secure-authentication-php-with-long-term-persistence)\n    - The [LoginPersist](https://github.com/craigrodway/LoginPersist) GitHub project\n    - The [rememberme](https://github.com/gbirke/rememberme) GitHub project\n\n__Notes:__\n\nSession management for web applications is usually enabled using URL entries or cookies. Cookies are a better means to manage sessions. There are two types of cookies: temporary session cookies that are removed by the browser after closing, and persistent cookies that are stored on the client for a fixed duration of time specified when the cookie is created. \n\nAn application implements 'remember me' by utilizing those persistent cookies and setting them with a considerable lifetime. The risk here is that those cookies can be stolen using various methods, either locally or on the network. You can reduce the risks by restricting the use of those cookies, validating their consistency, and making sure they are continuously renewed.",
    "weakness_title_read_only": "Insufficient Session Expiration",
    "weakness_id_read_only": "P504",
    "weakness": "b2147ed2-f98b-4d4e-9639-5d9a9454625c",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "requirements",
    "created": "2010-10-20T13:46:57-04:00",
    "last_updated": "2021-06-25T14:48:01.151000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T29",
    "universal_id": "1054ade8-a551-4402-b9a1-3623b15a5551",
    "countermeasure_name": "Use anti-Cross-Site Request Forgery (CSRF) tokens",
    "countermeasure_solution": "Use the following guidelines for anti-CSRF tokens:\n\n- Use a library that creates anti-CSRF tokens.\n    - The code usually creates a token based on a secret parameter and a salt, then places parts of the information in cookies on the client.\n\n- Place the library-generated token in the request.\n    - For example, use the token as a hidden input in the form, or query string in a URL on the page or headers.\n\n- Use the verification function when you receive data, and check if the token is valid. \n    - The verification function verifies the token against the cookie values received with the request. \n    - Some libraries automatically perform verification for all pages and do not require calling the verification function.\n\n# About Anti-CSRF Tokens\n\nAn anti-CSRF token is a session- or transaction-specific string of random characters attached to important transactions, such as purchasing a stock on a brokerage site. In most cases, generating one CSRF token per session is enough, but the token should be independent of the session-id. When handling the client's request, the server ensures that the anti-CSRF token is the value expected for that session or transaction. If the token is not correct, then the application denies the transaction. This helps protect against CSRF because each request will have at least one unique parameter that an attacker cannot know ahead of time.\n\nFor more information about CSRF tokens, see the [OWASP CSRF Prevention Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html) or [OWASP CSRF page]( https://owasp.org/www-community/attacks/csrf).",
    "weakness_title_read_only": "Cross-Site Request Forgery (CSRF)",
    "weakness_id_read_only": "P677",
    "weakness": "ec20bc24-5e77-4cac-a8bb-be1d2517e2a0",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "development",
    "created": "2010-10-20T13:46:57-04:00",
    "last_updated": "2021-06-25T14:48:01.608000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T30",
    "universal_id": "5e4b22d3-e5b9-412d-ab4c-a664f49815c5",
    "countermeasure_name": "Protect forms authentication submissions",
    "countermeasure_solution": "Set the protection attribute on `system.web.authentication.forms` to `All` when using forms authentication. This is the default setting that tells the application to use both data validation and encryption to secure authentication cookies.",
    "weakness_title_read_only": "Credentials Are Not Protected",
    "weakness_id_read_only": "P409",
    "weakness": "19f185b7-a883-440f-933d-9270f0215b10",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "requirements",
    "created": "2010-10-20T13:46:57-04:00",
    "last_updated": "2021-06-25T14:47:37.336000-04:00",
    "custom": "False",
    "rules": "cbfe487c-1f16-4eea-aee5-f8458d60aba5",
    "rules_read_only": "A2"
  },
  {
    "countermeasure_id": "T31",
    "universal_id": "c035e987-fc99-470c-a702-a6d73a8690e1",
    "countermeasure_name": "Validate all forms of input",
    "countermeasure_solution": "While input validation cannot completely protect an application from attacks, such as Cross-Site Scripting and SQL Injection, it can decrease their risk.\n\nUse the following guidelines for input validation:\n\n- **Validate** all user input. External user input can be anything like:\n     - Command-line parameters.\n     - Form fields for Graphical User Interface (GUI) applications.\n     - Environment variables.\n     - Interprocess communication, such as shared memory, and named pipes.\n     - Content from a file that can be modified by end users or other programs.\n     - The output of another web app or web service\n\n- **Validate** all function input. \n    - Confirm that all strings are checked for text or data that can be erroneously or maliciously interpreted as a command (rejects such inputs or otherwise handles such inputs securely)\n    - Reject or otherwise securely handle any inputs that violate buffer size or other memory allocation thresholds, for functions that handle buffers and process data.\n\n- Use **allowlist validation** where possible.\n    - Allowlists limit input to a specific set of values and refuse all others.\n\n- Use **blocklist validation** when allowlists are not possible.\n    - Blocklists filter out values known to be dangerous.\n\n- Use **output encoding**.\n    - This converts the input to a safe format to reduce the risk of injection attacks.\n\n- Use **logging**.\n    - Log the input validation failures that result in request rejection.\n\nInput validation can happen on different levels. For example, we may have:\n\n- Character level validation:\n    - This removes potentially risky characters from the input. \n\n- Keyword level validation:\n    - This checks that the value of input keywords:\n        - Have a specific **data type**\n        - Fall within a **valid range**\n        - Are **consistent** with other existing or provided values\n        - Are **structured** properly\n        - And so on.",
    "weakness_title_read_only": "Improper Input Validation",
    "weakness_id_read_only": "P95",
    "weakness": "df80ca69-a2c0-4d7f-b3f7-d81bd6d685e9",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "development",
    "created": "2010-10-20T13:46:57-04:00",
    "last_updated": "2021-11-16T14:00:11.614000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T32",
    "universal_id": "48b7dc87-61ba-4cf7-97e1-2748a80c1fcc",
    "countermeasure_name": "Always perform input validation on a server",
    "countermeasure_solution": "Perform input validation on the server-side *in addition to* the client. Attackers can bypass input validation on the client, which is commonly seen in JavaScript validation.\n\nIn case of an input validation failure, log the following information:\n\n- Timestamp\n- Source IP\n- Description of event\n- Error codes (if applicable)\n\nUse a __general error message__ for failed checks that do not reveal any information about the system or the process of validation.",
    "weakness_title_read_only": "Improper Input Validation",
    "weakness_id_read_only": "P95",
    "weakness": "df80ca69-a2c0-4d7f-b3f7-d81bd6d685e9",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "architecture-design",
    "created": "2010-10-20T13:46:58-04:00",
    "last_updated": "2022-06-02T21:48:01.412000-04:00",
    "custom": "False",
    "rules": "2c7f7313-a68a-46ec-b1a2-4ae3316c2a0a;b310a679-c006-4abb-a02b-5f1608d05ace",
    "rules_read_only": "A5;A1080"
  },
  {
    "countermeasure_id": "T33",
    "universal_id": "456a36f7-97ef-43de-857a-4f2b558903c0",
    "countermeasure_name": "Verify integrity of client-supplied read-only data",
    "countermeasure_solution": "Use the following guidelines for handling client-supplied read-only data:\n\n- Assume that all data from the client application to the server is suspicious.\n    - This includes data sent in read-only or hidden fields.\n    \n-  Application logic should reside on the server and be based on the state stored on the server.\n    - For example, when calculating the total price of items in a shopping cart, it would be wrong to place the price of each item in hidden fields and send them in an order form to the server.\n    - Price information should be kept on the server, and the client should only provide identifiers of, or pointers to the items.\n\nIf you must rely on client-supplied data for business or design purposes, use a server-side tool that detects tampering. An example of this is Hashed Message Authentication Code (HMAC), which does the following:\n\n* Takes a hash of read-only fields before sending them to the client.\n* Encrypts the hash with a secret key stored on the server.\n* Adds the hashed and encrypted value to the form as an additional hidden field.\n* Rehashes and re-encrypts the read-only client-supplied parameters, and compares this with the client-supplied HMAC parameter.\n* Any difference between them indicates that one or more of the read-only parameters have been tampered with.",
    "weakness_title_read_only": "External Control of Assumed-Immutable Data",
    "weakness_id_read_only": "P361",
    "weakness": "88b506bb-1610-4838-8cbd-94476c3b36f9",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "development",
    "created": "2010-10-20T13:46:58-04:00",
    "last_updated": "2021-06-25T14:47:53.784000-04:00",
    "custom": "False",
    "rules": "b310a679-c006-4abb-a02b-5f1608d05ace",
    "rules_read_only": "A1080"
  },
  {
    "countermeasure_id": "T34",
    "universal_id": "4fa0499d-fe2c-4ee0-ab02-656ca86ba40f",
    "countermeasure_name": "Refuse overly-long, malformed, and non-printable characters unless required",
    "countermeasure_solution": "Overly long and malformed characters in variable-length encoding formats, such as UTF-8, can be used to bypass filters. These characters can be sanitized by a separate component or application.\n\nUse the following guidelines for refusing characters:\n\n- __Do not allow NUL characters__ in HTTP input.\n    - A NUL character is a common attack that can bypass checks and allow leaking private information, or running unknown code.\n    - For example, '%00' is a NUL character.\n\n- Only accept legal character sequences. The W3C provides a Perl regular expression to validate printable UTF-8 characters:\n\n    $field =~\n      m/\\A(\n         [\\x09\\x0A\\x0D\\x20-\\x7E]            # ASCII\n       | [\\xC2-\\xDF][\\x80-\\xBF]             # non-overlong 2-byte\n       |  \\xE0[\\xA0-\\xBF][\\x80-\\xBF]        # excluding overlongs\n       | [\\xE1-\\xEC\\xEE\\xEF][\\x80-\\xBF]{2}  # straight 3-byte\n       |  \\xED[\\x80-\\x9F][\\x80-\\xBF]        # excluding surrogates\n       |  \\xF0[\\x90-\\xBF][\\x80-\\xBF]{2}     # planes 1-3\n       | [\\xF1-\\xF3][\\x80-\\xBF]{3}          # planes 4-15\n       |  \\xF4[\\x80-\\x8F][\\x80-\\xBF]{2}     # plane 16\n      )*\\z/x;\n\nThis check will return true if $field is UTF-8, and false otherwise.",
    "weakness_title_read_only": "Improper Input Validation",
    "weakness_id_read_only": "P95",
    "weakness": "df80ca69-a2c0-4d7f-b3f7-d81bd6d685e9",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "development",
    "created": "2010-10-20T13:46:59-04:00",
    "last_updated": "2021-06-25T14:47:54.641000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T35",
    "universal_id": "af3e0251-cfaa-4d42-9c86-ee6b2726c454",
    "countermeasure_name": "Fine-tune HTTP server settings",
    "countermeasure_solution": "Set limits on incoming HTTP messages, and notify designated administrator roles of a violation.\n\n# HTTP request headers and bodies\n\nLimit the __number__ and __length__ of HTTP request __headers__ and __bodies__ accepted from the clients to a minimum. Set tighter endpoint-specific restrictions depending on their function to minimize the attack surface.\n\nLimit the following request attributes:\n\n- Request body size\n- Number of request header fields\n- Request header fields size\n- Request line size\n- XML request body size\n\n# Server timeout\n\nTune the connection __timeout__ settings of the server. A higher connection timeout gives the server more time to engage with the application. This increases the likelihood for various types of server attacks, such as [Slowloris](http://en.wikipedia.org/wiki/Slowloris_%28software%29).\n\n__Note:__ A small value may introduce issues with the legitimate users with slow connections. Set timeout values based on your normal connection statistics.\n\nTune the following timeout settings:\n\n- Request read timeout\n- Keep-alive timeout\n\n# Server connections and backlog capacity\n\nTune the maximum number of __simultaneous connections__, and increase the capacity of the backlog of pending connections where possible.\n\n__Note:__ The backlog prolongs a denial of service (DoS) attack because it holds incomplete requests (including malicious ones), but reduces the impact of small attacks.\n\nMost web and application servers provide a configuration option for each of these limits. See the server-specific documentation, and review your application needs when adjusting each of these settings.\n\n## Considerations\n\nThe meaning of \"reasonable\" varies according to a system's available resources and an application's features and needs. Consider the following:\n\n- A maximum URL size of 2000 characters is considered reasonable and supported by most browsers. \n    - Smaller values (256) might interfere with features such as single sign-on.\n\n- While a 1 MB limit on HTTP request sizes is reasonable for most applications, it might restrict file upload speeds where applicable.\n\n- Maximum number of concurrent connections:\n    - Carefully review the operational environment, hardware, and software resources, such as system memory available to the HTTP server.\n    - There is no common value that works for all environments.\n\n- Decreasing the keep-alive time-out might have a small performance impact. \n    - A value above 60 seconds is not recommended according to [Apache Performance Tuning](http://httpd.apache.org/docs/2.2/misc/perf-tuning.html).\n\nFor more information about web server security, see [Apache Security Tips](http://httpd.apache.org/docs/trunk/misc/security_tips.html).",
    "weakness_title_read_only": "Uncontrolled Resource Consumption (Resource Exhaustion)",
    "weakness_id_read_only": "P293",
    "weakness": "1bee9747-5d60-43f1-8e0f-e261388a5c25",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "requirements",
    "created": "2010-10-20T13:47:00-04:00",
    "last_updated": "2021-08-10T11:15:33.419000-04:00",
    "custom": "False",
    "rules": "ed4ba6aa-be7d-4c57-839c-d9c6c9e091c0",
    "rules_read_only": "A195"
  },
  {
    "countermeasure_id": "T36",
    "universal_id": "bde2dea7-816d-42c6-895f-ee5323e47cb4",
    "countermeasure_name": "Escape untrusted data in HTML, HTML attributes, CSS, and JavaScript",
    "countermeasure_solution": "Use the following guidelines to protect your application from XSS attacks:\n\n- **Escape** any untrusted data, especially user input or input from other sources (another web app or web service), before outputting it into any web page.\n    - For escaping, you MUST encode output data using the escape syntax suitable for the context. For example, we have different escape syntaxes for HTML entities, HTML attributes, CSS, and JavaScript.\n    - For escaping, use a security-focused encoding library to make sure escaping rules are properly implemented.\n    - Many web application frameworks provide automatic contextual escaping functionality; use these technologies when you can.\n    - **HTML error messages** are another example of untrusted data. Encode them as well before displaying them on a webpage if they might contain any user-controllable data.\n\nFor reference, review these encoding libraries:\n\n- [OWASP Enterprise Security API](https://www.owasp.org/index.php/Category:OWASP_Enterprise_Security_API) is a library that provides encoders for data in different forms, including HTML, HTML attributes, CSS, and JavaScript. \n- The [OWASP Java Encoder Project](https://www.owasp.org/index.php/OWASP_Java_Encoder_Project) provides a reference for encoding output in Java.\n- Microsoft provides an encoding library named [Microsoft Anti-Cross Site Scripting Library](http://wpl.codeplex.com/) for the .NET platform.\n- ASP.NET Framework has a built-in [ValidateRequest](https://msdn.microsoft.com/en-us/library/ms972969.aspx#securitybarriers_topic6) function that provides limited sanitization.",
    "weakness_title_read_only": "Improper Neutralization of Input During Web Page Generation (Cross-Site Scripting)",
    "weakness_id_read_only": "P632",
    "weakness": "67b0e738-a725-4462-be2a-52493b75f4ac",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "development",
    "created": "2010-10-20T13:47:00-04:00",
    "last_updated": "2023-03-07T10:17:56.117000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T37",
    "universal_id": "a08477a9-5fd4-4a43-985c-0525147d9d50",
    "countermeasure_name": "Avoid DOM-based Cross-Site Scripting (XSS)",
    "countermeasure_solution": "If your **browser-side JavaScript** takes **user-controlled DOM properties** (specifically *location* or *referrer*) as input to create dynamic HTML content:\n\n- Use dynamic build interfaces and safe rendering methods (i.e. methods that have command execution context) instead of unsafe rendering methods.\n    - Examples of **unsafe** rendering methods are:\n        \n             element.innerHTML = \"...\";\n             element.outerHTML = \"...\";\n             document.write(...);\n             document.writeln(...);\n\n    - Examples of **safe** dynamic build interfaces and methods are:\n\n            document.createElement(\"...\")\n            element.setAttributes(\"...\", \"value\")\n            element.appendChild(...)\n            element.textContent = \"...\";\n            element.innerText = \"...\";\n\n- Do not use `setAttribute(name_string,value_string)` to set executable HTML attributes with a user-controlled `value_string`. Examples of such executable attributes are **JavaScript event handlers** such as *onclick* and *onmouseover*.\n\n        // Vulnerable Code: Untrusted data executes even if it is properly JavaScript encoded.\n        element.setAttribute(\"onclick\", \"An executable value containing untrusted data.\");\n\n- URL encode untrusted data before passing it to the CSS `url()` method.\n\n        document.body.style.backgroundImage = \"url(\" + encodeURIComponent(untrustedData) + \")\";\n\n- URL encode and then JavaScript encode untrusted data before passing it to a URL attribute.\n\n        element.setAttribute(\"href\", encodeURIComponent(untrustedData));\n\t\n- Encode the output of user-controlled data before it can be implicitly passed to an `eval()` function.\n\n## DOM-base XSS Explanation\n\nSome of the DOM properties can be controlled by the user and might include unsafe values. \n\n- An example is `document.location`. If this property is used in your dynamic JavaScript code to create HTML content in an unsafe manner, such as being assigned to `element.innerHTML`, it can allow attackers to inject script by creating malicious links. This is essentially a cross-site scripting vulnerability.\n\nSome of the DOM properties that may be manipulated for XSS include:\n\n     document.URL\n     document.URLUnencoded\n     document.location (and many of its properties)\n     document.referrer\n     window.location (and many of its properties)\n     location (note that window.location can be access as just location)\n\n**Note:** These properties might have unsafe sub-attributes such as `location.hash`.\n\nFor more information, see the [OWASP DOM based XSS Prevention Cheat Sheet](https://www.owasp.org/index.php/DOM_based_XSS_Prevention_Cheat_Sheet).",
    "weakness_title_read_only": "Improper Neutralization of Input During Web Page Generation (Cross-Site Scripting)",
    "weakness_id_read_only": "P632",
    "weakness": "67b0e738-a725-4462-be2a-52493b75f4ac",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "development",
    "created": "2010-10-20T13:47:00-04:00",
    "last_updated": "2021-06-25T14:47:55.194000-04:00",
    "custom": "False",
    "rules": "f0c5d269-ade4-4873-8321-2f442d38ee29",
    "rules_read_only": "A3"
  },
  {
    "countermeasure_id": "T38",
    "universal_id": "f60a4f0a-0aa4-4576-bdae-4ef97731ecdb",
    "countermeasure_name": "Bind variables in SQL statements",
    "countermeasure_solution": "Use the following guidelines for binding variables in SQL statements:\n\n- Ensure that you always bind variables correctly and never dynamically concatenate SQL statements with untrusted data.\n    - Most persistence frameworks provide a feature to bind runtime variables with pre-generated SQL statements.\n    - Generally, these bind functions automatically escape special SQL characters and effectively mitigate SQL injection. \n\n- Investigate whether a new persistence framework, programming language, or Object-Relationship Manager (ORM) binds variables, and determine if they explicitly protect against SQL injection.\n    - In rare cases, researchers have found that persistence frameworks do not properly escape bound variables and may still be vulnerable to SQL injection. \n\n- Use database-stored procedures for binding variables.\n    - Many databases allow you to dynamically create and execute an SQL statement within the stored procedure.\n    - This approach may be vulnerable to SQL injection as well.\n\n__Note:__ Whenever binding variables is not possible, sanitize input to prevent SQL injection.",
    "weakness_title_read_only": "Improper Neutralization of Special Elements in SQL Commands (SQL Injection)",
    "weakness_id_read_only": "P664",
    "weakness": "6978fdd4-2db4-4d32-8c23-aeed2c6c7248",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "development",
    "created": "2010-10-20T13:47:00-04:00",
    "last_updated": "2022-07-08T00:01:09.608000-04:00",
    "custom": "False",
    "rules": "0b07fc15-1e13-4c03-b097-c7e222fc019a",
    "rules_read_only": "A718"
  },
  {
    "countermeasure_id": "T39",
    "universal_id": "c7a282b2-10d9-4a39-9128-7b51c9839dda",
    "countermeasure_name": "Refuse carriage returns and line feeds when adding data to HTTP response headers",
    "countermeasure_solution": "Allowing carriage returns or line feeds in the content of HTTP response headers may result in HTTP response-splitting without proper encoding.\n\nRefuse, or properly encode, carriage returns (`%0A`) or line feeds (`%0D`) when dynamically creating HTTP response headers, including the following:\n\n* URL HTTP redirects\n* Cookie names\n* Cookie values\n\n**Note**: When stripping a potentially malicious character, ensure the resulting string is also free from any dangerous characters. For example, stripping `%0A` from `%%0A0A` only once would still result in a URL-encoded newline character.",
    "weakness_title_read_only": "Improper Neutralization of CRLF Sequences (CRLF Injection)",
    "weakness_id_read_only": "P669",
    "weakness": "9513be29-eade-4b62-8e1a-5faa092507a1",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "development",
    "created": "2010-10-20T13:47:01-04:00",
    "last_updated": "2021-06-25T14:47:54.009000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T40",
    "universal_id": "ed4000a8-d7df-48b0-ba05-d44b8116e4de",
    "countermeasure_name": "Use XML encoding when interacting with XML data",
    "countermeasure_solution": "To mitigate the risk of injection, encode any untrusted data when dynamically creating XML. Perform explicit encoding for other XML formats, such as:\n\n*  XPath\n*  Document Type Definition (DTD)\n*  XML Stylesheets\n*  Preprocessing tags\n\nFind a secure XML encoder (see the How-tos of this countermeasure) and encode any untrusted input before placing them in XML. These encoders usually use a whitelist of characters, which are known to be safe, such as alphanumeric, and XML-encode all other characters. If this approach is not feasible, consider XML-encoding known special characters.",
    "weakness_title_read_only": "XML Injection (Blind Path Injection)",
    "weakness_id_read_only": "P667",
    "weakness": "ccb4adcb-9b32-42ea-9204-e328b6f1001d",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "development",
    "created": "2010-10-20T13:47:01-04:00",
    "last_updated": "2023-03-07T10:16:23.363000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T41",
    "universal_id": "df373005-fe5e-421c-9f52-73b9c058d5e3",
    "countermeasure_name": "Use LDAP encoding for LDAP data",
    "countermeasure_solution": "Use Lightweight Directory Access Protocol (LDAP) to encode untrusted data when dynamically creating LDAP statements to mitigate the risk of injection. Escape the data as follows:\n\n### Escape the LDAP Distinguished Name (DN) ###\n\nThe following characters must be escaped with the backslash character `\\` (ASCII 0x5c):\n\n* SPACE (ASCII 0x20 - only escape a space character when it is the first or last character) \n* `\"`  (ASCII 0x22 - quotation mark)\n* `#`  (ASCII 0x23 - number, pound, or hash sign)\n* `+`  (ASCII 0x2b - plus sign)\n* `,`  (ASCII 0x2c - comma)\n* `;`  (ASCII 0x3b - semicolon)\n* `<`  (ASCII 0x3c - left angle bracket)\n* `=`  (ASCII 0x3d - equal sign)\n* `>`  (ASCII 0x3e - right angle bracket)\n* `\\`  (ASCII 0x5c - backslash)\n\n### Escape the LDAP search filter ###\n\nThe following characters must be escaped with the backslash character `\\` (ASCII 0x5c):\n\n* `*`  (ASCII 0x2a - asterisk)\n* `(`  (ASCII 0x28 - left parenthesis)\n* `)`  (ASCII 0x29 - right parenthesis)\n* `\\`  (ASCII 0x5c - backslash)\n* NUL  (ASCII 0x00)",
    "weakness_title_read_only": "Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')",
    "weakness_id_read_only": "P666",
    "weakness": "4331d458-d851-4366-be39-29b2031d33c8",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "development",
    "created": "2010-10-20T13:47:01-04:00",
    "last_updated": "2023-03-07T10:17:16.417000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T42",
    "universal_id": "320e0ff2-0fc6-4f60-9618-67b8d0333ea4",
    "countermeasure_name": "Avoid relying on untrusted data for server-side selection",
    "countermeasure_solution": "Do not use untrusted data such as user-supplied settings for the selection of a page, view, or template on the server side.\n\nThese settings may allow the user to run code on the server side, or access server-side files. Validate all input using a strict whitelist that only allows certain input, such as alphanumeric characters.\n\n__Note:__ In addition to validating the format of input, check that the input value is within a valid range, or set of values. Very large input that happens to be valid may cause resource exhaustion denial of service (DoS). This is especially true if user input is used as a loop counter, or to allocate resources.",
    "weakness_title_read_only": "Improper Neutralization of SSI on a Web Page",
    "weakness_id_read_only": "P673",
    "weakness": "f8ba84c5-bb0c-4eef-b1e7-2bc2dbb2f0cc",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "development",
    "created": "2010-10-20T13:47:01-04:00",
    "last_updated": "2021-06-25T14:47:54.474000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T43",
    "universal_id": "676023fe-d8c0-44f9-b457-e5cb02357ce2",
    "countermeasure_name": "Avoid unsafe operating system interaction",
    "countermeasure_solution": "To protect against command injection, avoid interacting with an operating system (OS) dynamically.\n\nBefore processing the user's input, take these three important steps to validate it into consideration:\n\n- Sanitize early\n- Escape Late\n- Always Validate\n\nUser input can come from forms, HTTP headers, cookies, or URL parameters. In cases where this input is used to set parameters to OS-level commands, use the following guidelines for setting firewall rules, configuring service settings, or configuring network interfaces:\n\n- Determine what kind of user input is acceptable.\n- Limit acceptable characters strictly.\n\nFor example, if your application dynamically starts a user-specified process through shell interaction and it needs user-supplied parameters as dynamic input to the process:\n\nConsider an application that starts a shell interaction process by the user. If the process needs user-generated settings as dynamic input, use the following guidelines:\n\n- Only allow specific process names and reject all others character combinations.\n- Only allow the very limited required special characters for the input parameters.\n    - `A-Z`, `a-z`, `0-9`, `.`, and `@`.",
    "weakness_title_read_only": "Improper Neutralization of Special Elements used in a Command ('Command Injection')",
    "weakness_id_read_only": "P610",
    "weakness": "13c3474a-60d9-4769-b55b-1f7ba6b19a55",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "development",
    "created": "2010-10-20T13:47:03-04:00",
    "last_updated": "2022-06-02T21:50:46.712000-04:00",
    "custom": "False",
    "rules": "2755cb65-8e21-4b7c-9c1b-e084d2d31414",
    "rules_read_only": "A9"
  },
  {
    "countermeasure_id": "T44",
    "universal_id": "0c416e46-c9b2-4745-90d7-42dec72419a3",
    "countermeasure_name": "Specify standard encoding format for all HTML content",
    "countermeasure_solution": "Unless there is a specific reason to use a different format, specify a consistent character-encoding format to all HTTP response pages for HTML content from the application server, such as UTF-8.",
    "weakness_title_read_only": "Encoding Error",
    "weakness_id_read_only": "P70",
    "weakness": "6643b613-76c1-47a4-a7b5-64cb7390d8f2",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "requirements",
    "created": "2010-10-20T13:47:03-04:00",
    "last_updated": "2023-03-07T10:15:25.932000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T45",
    "universal_id": "159e2df0-21b7-4167-be74-cd58d7aa919a",
    "countermeasure_name": "Log potential critical security events",
    "countermeasure_solution": "Use the following guidelines for logging security events that may be critical:\n\n- Create a security-specific log to record **critical security events**.\n- Keep these logs **separate** from other non-security logs.\n- Log any errors or exceptions in the application that might help to detect intrusions, violations, and malicious activities.\n\nAlways log the following events:\n\n* **Input validation** failures, such as protocol violations, unacceptable encodings, or invalid parameter names and values.\n    * For example, log deserialization exceptions and failures, such as wrongly formatted string, unexpected incoming type, or nested arrays. These failures can be an indicator of a malicious data injection attack.\n* **Output validation** failures, such as database record set mismatch, or invalid data encoding.\n* **Backend TLS connection failures.**\n* **Authentication** successes and failures.\n* **Authorization**  successes and failures, especially for sensitive information.\n ***Permissions*** or access control changes, including updates to existing permissions.\n* **Session management** failures, such as cookie session ID value modification\n* **Application errors** and **system events**, such as syntax and runtime errors, connectivity problems, performance issues, third party service error messages, file system errors, file upload virus detection, and configuration changes.\n* **Start-up and shut-down** processes and **logging initialization** for applications and related systems, including all starting, stopping or pausing.\n* **Legal and other opt-ins**, such as permissions for mobile phone capabilities, terms of use, terms and conditions, personal data usage consent, and permission to receive marketing communications.\n* **High-risk feature** usage, including the following:\n    * Network connections.\n    * Addition or deletion of users.\n    * Changes to privileges.\n    * Assigning users to tokens.\n    * Adding or deleting tokens.\n    * Use of systems administrative privileges.\n    * Access by application administrators.\n    * All actions by users with administrative privileges.\n    * Access to payment cardholder data.\n    * Use of data encrypting keys.\n    * Key changes.\n    * Creation and deletion of system-level objects.\n    * Data import and export, including screen-based reports.\n    * Submission of user-generated content, especially file creation.\n\nLogging the following events is optional depending on your business requirements:\n\n* Sequencing failure.\n* Excessive use.\n* Data changes.\n* Fraud and other criminal activities.\n* Suspicious, unacceptable or unexpected behavior.\n* Modifications to configuration.\n* Application code file or memory changes.\n\nFor more information about logging events and attributes, see the [OWASP Logging Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Logging_Cheat_Sheet.html).\n\n__Note:__ If you log data based on user input, enforce an upper limit to the length of each log entry to make sure it is within an expected range. Otherwise, it is possible to cause a denial of service (DoS) condition by filling the target disks with log data.\n\nThe Guide to Computer Security Log Management (NIST SP 800-92) provides valuable information on how to design a suitable log and auditing system. The document describes the following types of useful logs:\n\n - Client requests and server responses.\n - Successful and failed authentication attempts, account changes and other account information.\n - Number of transactions in a certain period, or other usage information about an account.\n - Specific operational actions, such as application startup and shutdown, application failures, and major changes to application configurations.",
    "weakness_title_read_only": "Insufficient Logging or Insufficient Protection of Logs",
    "weakness_id_read_only": "P619",
    "weakness": "9a42301f-ed6c-42cb-a85d-a5134b76b701",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "development",
    "created": "2010-10-20T13:47:03-04:00",
    "last_updated": "2022-09-12T00:00:16.656000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T46",
    "universal_id": "d0d921ea-8392-49f2-bbfb-e153d9068c92",
    "countermeasure_name": "Do not log confidential data",
    "countermeasure_solution": "Use the following guidelines for logging confidential data:\n\n__Never log confidential data__\n\n- Instead, log a hash, or the last few digits of confidential numbers, such as with credit card numbers.\n    - Confidential data includes passwords, credit card numbers, social security, and social insurance numbers.\n    - Developers often log these items as part of the debugging process and may forget to remove them before deploying to production. \n\n__Never log passwords__\n\n* Consider logging the user ID as a means of user identification.\n* If absolutely necessary for debugging, create separate test code in development to log the test password that will not be deployed to production.\n\n__Never log personally identifiable information (PII)__\n\n* To log PII securely, anonymize it with hashing, or using auto-enumerated database IDs.\n    * PII includes email, address, date of birth, and health data. \n    * Once secured, if the related account is removed, its log data can no longer be associated with a specific person, and will not disclose any private data.",
    "weakness_title_read_only": "Information Leak Through Log Files",
    "weakness_id_read_only": "P420",
    "weakness": "60bad2d0-c4bf-4f4a-8d9b-c843e08fabe3",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "development",
    "created": "2010-10-20T13:47:04-04:00",
    "last_updated": "2021-06-25T14:47:38.229000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T49",
    "universal_id": "303633bc-b082-495b-bb1e-ed65fc4de625",
    "countermeasure_name": "Disable and remove debug capabilities and code/data, and prepare application for release",
    "countermeasure_solution": "Use the following guidelines to secure debug features and prepare an application for release:\n\n- Reduce the attack surface available to a potential attacker by removing or disabling any unused testing or debugging data or code before deployment. \n- Eliminate any system development or debugging backdoors that grant high-level user access without authorization.\n- Remove any other unnecessary files in the application folders.\n- Remove or disable debug features that are not needed after release or deployment.\n- Enable all security features and adequately document them to guide future releases.\n- Pay special attention to the annotations and metadata in the source code:\n    - Make sure that annotations do not reveal information about the code. \n    - Decide on an annotation retention policy that is suitable for those annotations.\n        - For example, annotations may be kept in the source code, compiled class, or may even be retrievable at runtime.\n\nFor platform-specific notes, see the How-to's and Additional Requirements for this countermeasure.",
    "weakness_title_read_only": "Active Debug Capabilities or Debug Code, or Unnecessary Files",
    "weakness_id_read_only": "P379",
    "weakness": "ac4c679c-0882-48c8-ade0-9d1126f2c241",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "requirements",
    "created": "2010-10-20T13:47:05-04:00",
    "last_updated": "2022-09-09T17:22:23.312000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T50",
    "universal_id": "e7951881-6eee-4f70-9c2b-4d63a0be6c91",
    "countermeasure_name": "Use indirect object reference maps if accessing files",
    "countermeasure_solution": "Always use indirect references for accessing a specific object, such as a database record or a file. This practice prevents IDOR (Insecure Direct Object Reference) attacks.\n\nDirect object references use a direct ID such as an actual file name like `\"file=statement1.pdf\"` in the URL parameters. Alternatively, indirect object references provide a separate identifier that the application later translates into an actual ID, such as `\"file=a\"`, where `'a'` is later translated to `'statement1.pdf'`.\n\nDirect object references introduce a weakness that allows attackers to change the URL and access objects that should be off limits, such as `\"file=../config.xml\"`. An indirect object reference makes this attack impossible because the application can only provide access to a certain set of objects, such as all files in a particular directory or a predefined list of individual database records.\n\nThis control applies specifically to resources that require access control. Publicly accessible static content that is normally stored on web servers does not necessarily need this protection.\n\nIf direct object references must be facilitated, such as a filename, restrict the path to a single directory and ensure that users cannot escape out of that directory. Use a combination of allowlist validation on the filename and operating system access controls to enforce this. For example, a user should not be able to access: `\"../../sensitive_folder/sensitive.file\"`.",
    "weakness_title_read_only": "Access Control Bypass Through User-Controlled Keys",
    "weakness_id_read_only": "P524",
    "weakness": "e233b5bf-9e2c-40a0-ab76-da229c6af9e1",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "requirements",
    "created": "2010-10-20T13:47:05-04:00",
    "last_updated": "2022-09-01T09:42:58.940000-04:00",
    "custom": "False",
    "rules": "0b07fc15-1e13-4c03-b097-c7e222fc019a",
    "rules_read_only": "A718"
  },
  {
    "countermeasure_id": "T53",
    "universal_id": "877f5cfc-f753-429a-9701-bef56b876264",
    "countermeasure_name": "Prevent the upload of malicious files and implement anti-malware solutions",
    "countermeasure_solution": "Anti-malware solutions may include a combination of network-based controls such as network firewalls, IDS/IPS, host-based controls such as host anti-virus and anti-spy tools, and endpoint security solutions. The techniques used by an anti-malware solution can be signature-based, behavioral-analysis-based, sandboxing, privilege escalation controls, and machine learning.\n\nFollow when selecting and deploying Anti-malware Solutions:    \n\n- Identify all systems that are at risk of malware.\n- Select anti-malware solutions that can detect all known types of malware and is able to remove, block, or contain all known types of malware.\n- Set anti-malware tools to scan the systems/networks periodically. \n- Enable automatic scanning for all situations in that a removable media is inserted, connected, or mounted.\n- Ensure no unauthorized user can disable or alter the malware. The cases that disabling or altering the anti-malware solution is permitted should be documented.\n- Enable automatic updates for anti-malware solutions that are in use.\n- Enable logs and set an appropriate length for log file retention.\n\nUse the following practices to minimize the risk of malicious file upload:\n\n- Disallow file uploads or implement a configurable security policy to control who can upload specified types of files.\n\n- If file uploads are necessary, virus scan all uploaded or transferred files using an inline virus scanner:\n     - Use an inline virus scanner on any files uploaded by a user or transferred from remote locations.\n     - Use a scanner such as Clam AV.\n\nThis helps prevent malicious users from uploading malware for other users to download. Alternatively, an attacker may attempt to upload malware and then use a different vulnerability to execute the file.",
    "weakness_title_read_only": "Unrestricted Upload of Unsafe File Types",
    "weakness_id_read_only": "P325",
    "weakness": "bcfd4030-b81a-4ba5-9140-1da1c4a43260",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "requirements",
    "created": "2010-10-20T13:47:06-04:00",
    "last_updated": "2023-03-23T18:26:02.038000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T54",
    "universal_id": "29ca1209-4ee5-4b8d-b2ac-c4e83e5c48f1",
    "countermeasure_name": "Validate file contents",
    "countermeasure_solution": "Use the following guidelines for validating file contents:\n\nUse tools to validate the type of file a user uploads, rather than relying on the file's extension. Attackers may try to upload malicious executable files with a valid file extension, such as .jpg, and then execute the file through various means, usually by exploiting a separate vulnerability.\n\nThe best approach against this is to use a tool that validates the entire contents of the file, because certain attacks take advantage of the fact that some file formats use headers at the beginning of the file, while other formats use headers anywhere in the file. Consider using a tool such as the ImageMagik library, which can help determine whether a file is a valid image.",
    "weakness_title_read_only": "Relying on Externally-Supplied File Names and Extensions",
    "weakness_id_read_only": "P532",
    "weakness": "42a88ec2-ec94-45f5-9deb-5eebc82d3bda",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "requirements",
    "created": "2010-10-20T13:47:06-04:00",
    "last_updated": "2021-06-25T14:47:53.802000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T55",
    "universal_id": "c9828204-de17-4b5f-bc10-fd64872748e6",
    "countermeasure_name": "Validate all XML input",
    "countermeasure_solution": "Validate all XML input when it is first received to reduce or eliminate many XML-based attacks. Tools and libraries that provide XML validation are readily available for most development platforms.\n\nUse the following guidelines for XML validation:\n\n- Use an __XML Schema__ when possible: \n    - XML Schema is a World Wide Web Consortium (W3C) standard.\n    - An instance of XML Schema is defined using Schema Definition Language (XSD).\n    - The application must make sure validating schemas cannot be controlled or manipulated by users.\n\n- __Sanitize__ data:\n    - Prevent XML fragment injection by sanitizing all data that constructs XML from user input.\n    - Attackers can inject new XML nodes into XML code if the application inserts their input into constructed XML.\n        - This is possible even if the attacker's input has been passed through an XML parser that uses an XML schema.\n    - Validate input using regular expressions (regex), or insert the input values inside `![CDATA[ ]]` tags.\n    - __Note:__ When using regex for input validation, make sure users cannot inject wildcard characters than can affect it.\n        - Malicious regex injection can cause denial-of-service (DoS).\n    \n- __Do not accept Document Type Definitions (DTDs)__ from users:\n    - DTDs are susceptible to several attacks, including arbitrary file browsing on the server and DoS.\n    - If DTDs are required, do not allow external users to provide them unless they pass a strong validation process, such as a whitelist.",
    "weakness_title_read_only": "Missing or Incorrect XML Validation",
    "weakness_id_read_only": "P12",
    "weakness": "f568ebe3-2bc5-4510-a840-cd30a159ed25",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "requirements",
    "created": "2010-10-20T13:47:06-04:00",
    "last_updated": "2021-06-25T14:47:54.297000-04:00",
    "custom": "False",
    "rules": "49c095c5-ee1d-49e0-9b8f-408b74bf172d",
    "rules_read_only": "A13"
  },
  {
    "countermeasure_id": "T56",
    "universal_id": "4d06ea71-a705-4e91-a5b7-6361247eb6e6",
    "countermeasure_name": "Restrict access to WSDL",
    "countermeasure_solution": "Web services frameworks sometimes generate a WSDL automatically and publish that Web Service Definition Language (WSDL) to a browseable URL. Attackers can use the WSDL to gain an understanding of the web services in order to craft their attacks.\n\nWhere possible, __disable automatic publication of WSDLs__ unless there is a legitimate business reason not to. Unfortunately, some frameworks do not provide a programmatic or declarative mechanism to suppress WSDL publishing. In those cases, use your web server's configuration to avoid serving .wsdl files\n\nIf business requirements dictate publishing WSDL, protect against disclosure to unauthorized users by ensuring that the file has appropriate authorization controls.",
    "weakness_title_read_only": "Information Exposure through WSDL Files",
    "weakness_id_read_only": "P538",
    "weakness": "bb5ed804-2245-4970-a058-5c0db0594613",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "requirements",
    "created": "2010-10-20T13:47:06-04:00",
    "last_updated": "2021-06-25T14:47:45.516000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T57",
    "universal_id": "a2dad0b1-e63e-40a5-bdd7-58428fc0c3f5",
    "countermeasure_name": "Do not accept user-supplied XSLTs",
    "countermeasure_solution": "XSLTs provided by the user should never be accepted. They can be used for malicious purposes, particularly if the XSLT processor provides extensions for enhanced functionality.",
    "weakness_title_read_only": "Unsafe Use of XSLTs",
    "weakness_id_read_only": "P696",
    "weakness": "5e146eb2-f7d8-4785-978c-73b8b7226230",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "requirements",
    "created": "2010-10-20T13:47:07-04:00",
    "last_updated": "2021-06-25T14:47:54.734000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T58",
    "universal_id": "452415b6-0aa0-4af2-a8ad-58776032092a",
    "countermeasure_name": "Do not process user-supplied XSLTs in XML digital signatures",
    "countermeasure_solution": "XML Digital Signatures, which are part of the WS-Security standard, allow user-supplied XSLTs by design. Default implementations of popular XSLT libraries can include potentially unsafe extensions. Extensions like these could allow access to the runtime environment.\n\nAvoid using XML Digital Signatures entirely, or turn off support for processing XSLTs if this is not possible.",
    "weakness_title_read_only": "Unsafe Use of XSLTs",
    "weakness_id_read_only": "P696",
    "weakness": "5e146eb2-f7d8-4785-978c-73b8b7226230",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "requirements",
    "created": "2010-10-20T13:47:07-04:00",
    "last_updated": "2021-06-25T14:47:54.888000-04:00",
    "custom": "False",
    "rules": "7cb05561-5aa2-423f-a49d-6e68674ec18e;770df1ac-bdf3-4c55-ac86-aa0b54f33d8c",
    "rules_read_only": "A102;A104"
  },
  {
    "countermeasure_id": "T59",
    "universal_id": "0bd6f7af-10d4-4c72-81ac-7dcd4a5daf3e",
    "countermeasure_name": "Use standard libraries for cryptography",
    "countermeasure_solution": "Never try to develop a homemade cryptographic algorithm or write a new implementation of a known algorithm. Only use tested implementations for encryption, digital signature generation and verification, and other cryptographic algorithms. \n\nCryptanalysis is the study of breaking cryptographic algorithms. Cryptanalysts are usually mathematicians who try to break the underlying mathematics or look for implementation faults. As a result, application security must always rely on known and secure algorithms. Real-world implementations often suffer from subtle errors, such as attackers being able to determine the size of a key based on how long the encryption process takes.",
    "weakness_title_read_only": "Use of weak cryptographic algorithms or unsecure algorithm practices",
    "weakness_id_read_only": "P224",
    "weakness": "043ee434-f7bc-48aa-b75e-d2ec73c2a0d2",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "requirements",
    "created": "2010-10-20T13:47:08-04:00",
    "last_updated": "2021-06-25T14:47:37.494000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T60",
    "universal_id": "bee4ea05-f31e-41a6-a033-f7cbd2826fcf",
    "countermeasure_name": "Use correct and approved cryptographic algorithms, parameters, and key lengths",
    "countermeasure_solution": "Use the following guidelines to ensure that your application uses algorithms, parameters, and key lengths that adhere to strict standards for encryption:\n\n- Always use well-tested and industry-accepted cryptographic algorithms.\n\n- In case an organization does not have approved cryptographic algorithms or key lengths, check the algorithm against the [FIPS 140-3 validation list](https://csrc.nist.gov/projects/cryptographic-module-validation-program). [Annex A Section 14](https://csrc.nist.gov/CSRC/media/Projects/cryptographic-module-validation-program/documents/fips%20140-3/Draft%20FIPS-140-3-CMVP%20Management%20Manual%2009-18-2020.pdf) provides a list of approved security algorithms applicable to FIPS 140-3.\n     - For example, Data Encryption Standard (DES) is not considered secure and an alternative such as Advanced Encryption Standard (AES) should be used for symmetric encryption.\n- Use any unapproved algorithms only in conjunction with approved algorithms and implement it in a manner that does not reduce the equivalent cryptographic key strength provided by the approved algorithms.\n\n- Do __not__ use __encoding and compression algorithms__ instead of encryption algorithms. For example, a common mistake is using a type of encoding to protect data, such as Base64 encoding. Base64 encoding is not an encryption algorithm and does not protect data. It can be reversed using Base64 decoding without the need for any additional shared knowledge (such as knowledge of a shared key). Techniques such as Base64, ROT13, GZip, LZW, Huffman coding, etc., should __not__ be used for protecting data in place of encryption algorithms.\n- Use a key management system that provides features for secure generation, distribution, storage, change, and retirement or revocation of cryptographic keys.\n- Always initialize the initialization vectors (IVs) used in the algorithms with secure random values. \n- Always use cryptographically secure random IVs when using a block cipher in cipher-block chaining (CBC) mode. \n    - A predictable IV can cause an affected system to be vulnerable to plaintext attacks. \n    - Use encryption in CBC mode instead of Electronic Codebook (ECB) mode.\n\n- Always incorporate an industry-accepted standard padding method, where padding is used prior to or during encryption.\n\n- Do not reuse the same cryptographic key for multiple purposes.\n- Use only approved, collision-resistant hash algorithms and methods with a salt value of appropriate strength that is generated using a secure random number generator.",
    "weakness_title_read_only": "Use of weak cryptographic algorithms or unsecure algorithm practices",
    "weakness_id_read_only": "P224",
    "weakness": "043ee434-f7bc-48aa-b75e-d2ec73c2a0d2",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "requirements",
    "created": "2010-10-20T13:47:08-04:00",
    "last_updated": "2023-03-17T16:59:15.547000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T61",
    "universal_id": "250fcc3c-3918-4f74-a604-5cb344da2d11",
    "countermeasure_name": "Disable default accounts or change all default passwords",
    "countermeasure_solution": "Use the following guidelines to disable or delete default accounts, or change all default passwords that are shipped with the product or created as part of the installation process:\n\n- Delete user accounts that are not needed as part of the installation process, after installation, after deployment, or manually.\n\n- Some application frameworks and other third-party packages contain databases and configuration files with default accounts and passwords. \n    - For user accounts that are needed for continuous administration or functioning of the application, ensure that all of the libraries have default passwords changed to strong alternatives.\n    - Administrators may miss changing some passwords prior to deployment because configuration files aren't covered in a typical hardening process.\n\n- The application must change, or remove, development and test accounts and passwords before they become active. \n    - Initiate a procedure through the installer that forces administrative users to change all default passwords for any accounts created and managed during or after installation.\n\n- Don't use default authentication credentials or keys for built-in accounts to protect the storage and transmission of sensitive data.\n\n- Implement mechanisms to prevent unauthorized access, exposure, or modification of critical assets, where limiting access is not possible. For example, due to the architecture of the solution or the execution environment in which the software is executed.",
    "weakness_title_read_only": "Use of Default Passwords and Accounts",
    "weakness_id_read_only": "P693",
    "weakness": "e19ebe87-c721-44e1-839d-8d409f907563",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "development",
    "created": "2010-10-20T13:47:08-04:00",
    "last_updated": "2023-03-17T16:54:51.540000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T62",
    "universal_id": "e719529f-4199-4f08-a753-9720ce308018",
    "countermeasure_name": "Protect passwords in property and configuration files",
    "countermeasure_solution": "Server applications often store plaintext system passwords and keys in configuration files. For example, several frameworks use plaintext configuration files for database connection strings, database encryption keys, Lightweight Directory Access Protocol (LDAP) connection strings, keystore passwords, and other values. Attackers who are able to exploit separate vulnerabilities may be able to view the contents of these files.\n\nAlways encrypt credentials in property files. In particular, __avoid specifying empty password strings__ in connection strings and in configuration files, such as LDAP or database connection parameters.\n\nUnfortunately, the weakness introduced by providing a password or key to decrypt encrypted credentials still exists. While no solution is perfect, use one of the following password and key storage options:\n\n- At the very least, **store a private key** unique to each machine as a binary file that can only be accessed by the application server. \n    - While this control succeeds in preventing attackers from viewing plaintext passwords in configuration files, it does not prevent attackers from first accessing the binary key and then the configuration file using the same exploit. \n- **Store the decryption key or password** in a file, similar to the first option. \n    - Use operating system controls to ensure that the file is only accessible by a separate launching process and not by the application server. \n    - The launching process can then pass the key and password as a command-line argument when launching the application server. \n    - This way, a user who exploits the application server may not necessarily have access to the decryption key itself.\n- **Support passphrases** from an environment variable or web form.\n    - This solution takes more work and may require manual intervention, but it also greatly reduces the risk of an attacker finding plaintext passwords in configuration files.",
    "weakness_title_read_only": "Password in configuration files",
    "weakness_id_read_only": "P158",
    "weakness": "791ce350-be3c-42c6-925d-059df5377c2f",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "requirements",
    "created": "2010-10-20T13:47:09-04:00",
    "last_updated": "2022-12-01T16:11:01.788000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T63",
    "universal_id": "2860ed19-e27f-4a0a-aa72-822b6e2c0eca",
    "countermeasure_name": "Disable auto-complete for confidential fields",
    "countermeasure_solution": "Disable the auto-complete feature on confidential form fields in browsers to prevent revealing confidential information on shared systems, such as usernames or credit card numbers.\n\n- **Note:** Browser autocomplete, and integration with password managers may be required in your application by design and a risk-based policy. In that case, follow your organization's internal security policy and instructions.\n\n- Otherwise, use `autocomplete=off` to do this on HTML forms:\n\n```\n<form method=\"POST\" action=\"authenticate\">\n    <input type=\"text\" id=\"val\" autocomplete=\"off\" />\n</form>\n```\n- Alternatively, `autocomplete=off` can be used in the `<form>` tag.\n    - All child `<input>` tags, will inherit this attribute:\n\n```\n<form method=\"POST\" action=\"authenticate\"  autocomplete=\"off\">\n    <input type=\"text\" id=\"val\" />\n</form>\n```",
    "weakness_title_read_only": "Information Leak Through Auto-Complete",
    "weakness_id_read_only": "P695",
    "weakness": "d4c60369-9b5f-4911-85eb-44421f54a08b",
    "tags": "",
    "countermeasure_priority": "3",
    "phase": "development",
    "created": "2010-10-20T13:47:09-04:00",
    "last_updated": "2021-06-25T14:47:50.770000-04:00",
    "custom": "False",
    "rules": "b310a679-c006-4abb-a02b-5f1608d05ace",
    "rules_read_only": "A1080"
  },
  {
    "countermeasure_id": "T64",
    "universal_id": "b4501925-d9da-4c83-9879-16b13acbd60f",
    "countermeasure_name": "Set no-cache for confidential web pages",
    "countermeasure_solution": "Use the following guidelines for setting \"no-cache\" and \"no-store\" on web pages:\n\n- Enable the \"no-cache\" and \"no-store\" settings for HTTP headers in all confidential pages.\n- This prevents browsers from caching confidential data, which another user on the same computer could view later.\n\nSet the following HTTP headers:\n\n    Pragma: no-cache\n    Cache-Control: no-cache, no-store, max-age=0, must-revalidate\n    Expires: -1\n\n**Note:** To protect against [Web Cache Deception attack](http://omergil.blogspot.com/2017/02/web-cache-deception-attack.html):\n\n- Make sure that the caching services you use obey the Cache-Control headers and do not cache unexpected resources.\n- Configure your website to reject requests with trailing pathname information that follows a non-existent file in an existing directory or an actual filename.\n    - For example, reject requests with a path similar to `https://www.sdelements.com/dashboard/style.css` if you are not serving the file at this path.\n\n## The misconception between no-store and no-cache\n\n- For HTTP 1.1, the cache-control directive \"no-store\" must be set. \n- \"No-cache\" on its own tells the browser that it should revalidate with the server before serving the page from the cache.\n    - As a result, if \"no-cache\" is set without \"no-store\", the browser can still store the page in its cache, but would only display it after revalidating it with the server.\n    - This would cause unwanted storage and leakage of confidential data.\n\n- Newer versions of Internet Explorer and Firefox have started treating the \"no-cache\" directive as if it instructs the browser to not even cache the page because of how frequently \"no-cache\" was misused.\n    - It is __strongly advised__ to set the \"no-store\" directive.",
    "weakness_title_read_only": "Information Leak Through Browser Caching",
    "weakness_id_read_only": "P412",
    "weakness": "313e62e1-ea48-46ec-b279-2e79be1ad0bf",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "development",
    "created": "2010-10-20T13:47:09-04:00",
    "last_updated": "2021-06-25T14:47:50.649000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T65",
    "universal_id": "24dd5bda-2dde-4fd6-86df-a796c7fc8921",
    "countermeasure_name": "Restrict accepted HTTP verbs",
    "countermeasure_solution": "Restrict the HTTP verbs that your application or web server accepts to the ones required, such as GET, POST, and HEAD.\n\nFor example, if an endpoint never requires processing a POST or DELETE request, configure your web server to reject such requests.\n\nThis verb restriction protects endpoints against DoS attacks that use specific HTTP verbs, by minimizing the attack surface.",
    "weakness_title_read_only": "HTTP Verb Tampering",
    "weakness_id_read_only": "P700",
    "weakness": "abef344f-a439-4d09-88c9-31f33980a3fb",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "requirements",
    "created": "2010-10-20T13:47:09-04:00",
    "last_updated": "2021-06-25T14:47:55.944000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T66",
    "universal_id": "128caa64-4f95-48c1-8bee-5e7dba059877",
    "countermeasure_name": "Prevent web pages from being loaded inside iFrame",
    "countermeasure_solution": "Do not allow your application to be loaded in an `iframe` unless you need that functionality. Different strategies can be applied to deny framing. \n\n1. Instruct the browser to prevent framing using HTTP response headers (`X-Frame-Options` and `Content Security Policy`). __This is a current best practice__.\n2. Use JavaScript code that detects unwanted framing and prevents abuse. This technique is also known as *frame busting*. It is considered deprecated. More information is available in the JavaScript How-to.\n\nBelow you will find different scenarios explaining how to configure the HTTP response headers. \n\n\n\n## Deny framing\n\nMost modern applications do not depend on the framing of their pages. If none of the pages need to be framed, framing can be turned off completely. To do so, the server should send the following two headers on every response with an HTML page that does not need to be framed.\n\n```\nX-Frame-Options: DENY\nContent-Security-Policy: frame-ancestors 'none'\n```\n\nThis configuration is supported by all major browsers.\n\n\n\n## Allow framing within your origin\n\nWhen framing is needed, it is often restricted to the application itself. When the page including a framed page is from the same origin, the server should send the following two headers on every response containing an HTML page that should be framed by your origin.\n\n```\nX-Frame-Options: SAMEORIGIN\nContent-Security-Policy: frame-ancestors 'self'\n```\n\nThis configuration is supported by all major browsers.\n\n\n## Allow third-party framing from one origin\n\nWhen a single origin needs to be able to frame an application page, it needs to be explicitly listed. The server should send the following two headers on every response containing an HTML page that should be framed by the third-party origin.\n\n```\nX-Frame-Options: ALLOW-FROM https://example.com\nContent-Security-Policy: frame-ancestors https://example.com\n```\n\nThis configuration allows `https://example.com` to frame the page in the response. \n\nThis configuration is supported by all major browsers.\n\n\n## Allow third-party framing from multiple origins\n\nWhen multiple origins need to be able to frame an application page, they all need to be explicitly listed. Unfortunately, the `X-Frame-Options` header only allows a single value to be listed. The more recent `Content-Security-Policy` supports multiple values, __but is not supported by Internet Explorer__. \n\nThe server should send the following header on every response containing an HTML page that should be framed by one of the third-party origins.\n\n```\nContent-Security-Policy: frame-ancestors https://one.example.com https://two.example.com\n```\n\nThis configuration allows `https://one.example.com` and `https://two.example.com` to frame the page in the response. \n\nThis configuration is supported by all major browsers, __except IE__. It is supported in Edge.\n\n\n### Preventing framing in Internet Explorer ###\n\nIf your application needs to support Internet Explorer and needs whitelisting from third-party origins, things get challenging. There are a few options you can follow.\n\n1. Implement a dynamic `X-Frame-Options` header using the `Referer` header to determine who is trying to frame you. This solution requires matching the `Referer` header against a list of approved origins, and sending back the right value in the header.\n2. Accept the risk of potential clickjacking attacks against users of Internet Explorer. To mitigate the risk, you can implement short session lifetimes, as well as re-authentication before performing sensitive operations.\n\nNote that JavaScript-based framebusting will not work, since JavaScript cannot read the URL of the parent frame across origins. \n\n\n\n## A Note on Cross-Domain Meta Policy\n\nThe content of your website can also be loaded in PDF and Adobe Flash documents. If you want to allow specific domains to embed your content in these documents, specify them correctly in `crossdomain.xml` files on your server. \n\nOtherwise, disable this feature:\n\n1. Remove all `crossdomain.xml` files from your server.\n2. Configure your server to send a ***X-Permitted-Cross-Domain-Policies*** response header with the value ***none*** with each response.\n\nFor more information read [this guide on cross domain policy files](https://code.tutsplus.com/tutorials/quick-tip-a-guide-to-cross-domain-policy-files--active-3832).",
    "weakness_title_read_only": "Clickjacking",
    "weakness_id_read_only": "P697",
    "weakness": "29957658-a3ce-4345-b7c8-8639ea3d1951",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "development",
    "created": "2010-10-20T13:47:09-04:00",
    "last_updated": "2021-06-25T14:47:55.031000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T67",
    "universal_id": "86cd63b4-c699-435f-ad8b-68fc708850f6",
    "countermeasure_name": "Protect page navigation flow",
    "countermeasure_solution": "Implement a process in your web application to check navigation history and drop any requests that are sent out of the sequence that is required by the business logic. Consider these points:\n\n - Do not use a client-maintained state, such as a cookie, to track this. Instead, use a server-side state to enforce navigation flow, such as a variable stored in the session.\n - For more critical applications, consider checking action times for various steps to make sure the process is being followed at a realistic pace for human and ignore too quickly submitted transactions.",
    "weakness_title_read_only": "Insufficient Restriction of Navigation",
    "weakness_id_read_only": "P705",
    "weakness": "b82c4503-6575-4332-a3bf-7550b346e127",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "development",
    "created": "2010-10-20T13:47:10-04:00",
    "last_updated": "2023-03-07T10:47:36.002000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T68",
    "universal_id": "595c4fd4-1a9b-40dc-b7cf-6cf10f33cc95",
    "countermeasure_name": "Encrypt Primary Account Number (PAN) in storage",
    "countermeasure_solution": "Ensure that Primary Account Numbers (PANs) cannot be read anywhere they are stored (such as portable digital media, backup media, and logs).\n\n Use any of the following approaches: \n\n- One-way hashes based on strong cryptography. Hashes used to render PANs unreadable are keyed cryptographic hashes of the entire PAN, along with key-management processes and procedures.\n- Truncation (hashing cannot be used to replace the truncated segment of PANs).\n- Index tokens and pads (pads must be securely stored).\n- Strong cryptography with associated key-management processes and procedures.",
    "weakness_title_read_only": "Plaintext Primary Account Number (PAN)",
    "weakness_id_read_only": "P686",
    "weakness": "0f0a155b-ace0-421c-b1a0-351921494adf",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "requirements",
    "created": "2010-11-08T10:26:39-05:00",
    "last_updated": "2023-03-23T18:31:31.005000-04:00",
    "custom": "False",
    "rules": "0b07fc15-1e13-4c03-b097-c7e222fc019a",
    "rules_read_only": "A718"
  },
  {
    "countermeasure_id": "T69",
    "universal_id": "31c82d25-7cb0-4a58-8626-9873f7a9513e",
    "countermeasure_name": "Strong password requirements for server-to-server system accounts",
    "countermeasure_solution": "Ensure that system accounts used in server-to-server authentication meet at least the same minimum password requirements as end-user accounts.",
    "weakness_title_read_only": "Insufficient System Account Password Requirements",
    "weakness_id_read_only": "P687",
    "weakness": "6f80f26a-296a-43dd-af6f-30df28dcab6f",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "requirements",
    "created": "2010-11-08T10:49:27-05:00",
    "last_updated": "2021-06-25T14:47:43.528000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T70",
    "universal_id": "17d9a0c0-7942-45d7-8320-902aef668cf5",
    "countermeasure_name": "Implement account lockout or authentication throttling for system accounts",
    "countermeasure_solution": "Use a feature to lock out users after a configurable number of failed authentication attempts. This protects against brute-forcing for system accounts. \n\nAlternatively, consider a mechanism to throttle multiple authentication attempts for the same user ID, or originating from the same user ID. This has the benefit of not locking out legitimate user accounts, while decreasing the likelihood of a brute-force attack.\n\nExponentially increase the amount of time a user has to wait between authentication attempts until it reaches a point that makes brute-forcing impractical. For example, increasing the wait period by 24 hours would discourage brute-force attacks.",
    "weakness_title_read_only": "Insufficient Account Lockout or Throttling for System Accounts",
    "weakness_id_read_only": "P688",
    "weakness": "490134b6-a86d-4e39-9356-406ee0e139d8",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "requirements",
    "created": "2010-11-08T10:58:19-05:00",
    "last_updated": "2021-06-25T14:47:43.224000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T71",
    "universal_id": "d44e9cf4-a160-4ce8-91a5-1ffaa5ea018e",
    "countermeasure_name": "Capture sufficient information for each transaction in audit logs",
    "countermeasure_solution": "Maintain logs for user transactions that need to be audited on the system at a later date. This is especially important for any transaction triggered by the end-user, such as changing stored data or configurations in the system. These transactions are subject to auditing at some point and must be logged. \n\nThe minimum requirements for log entries include the following:\n\n* User/Process/Device IDs\n* Timestamp - including milliseconds\n* Source IP\n* Description of event\n* Error codes (if applicable)\n\nAdditionally, consider capturing information about the following transactions:\n\n* Event descriptions\n* Success/Fail indications\n* Filenames involved\n* Access control or flow control rules invoked\n\nFinally, make the following considerations:\n\n- Make log fields from **trusted and untrusted sources** in log entries distinguishable.\n- Make sure that a **consistent time reference** is used among the logging module, database, application, and any other systems using or examining the logs. \n- Use **internal system clocks** to generate time stamps for audit records that can be mapped to Coordinated Universal Time (UTC) or Greenwich Mean Time (GMT) and meet granularity of time measurements. Make sure to use a synced time source.\n- **Enforce an upper limit** to the length of each log entry to make sure it is within an expected range if you log data based on user input.\n    - Otherwise, it is possible to cause a denial of service condition by filling the target disks with log data.\n- Consider the **types of auditing and audit processing requirements** before allocating audit record storage capacity.\n    - This reduces the likelihood of exceeding capacity and the potential loss or reduction of auditing capability.\n\n__Note:__ NIST SP 800-92 (the Guide to Computer Security Log Management) provides valuable information on how to design a suitable log and auditing system.",
    "weakness_title_read_only": "Insufficient Logging or Insufficient Protection of Logs",
    "weakness_id_read_only": "P619",
    "weakness": "9a42301f-ed6c-42cb-a85d-a5134b76b701",
    "tags": "",
    "countermeasure_priority": "3",
    "phase": "development",
    "created": "2010-11-08T11:05:26-05:00",
    "last_updated": "2022-09-09T17:26:59.291000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T72",
    "universal_id": "628a4e8b-be78-47bd-9108-f70bb60ccbf7",
    "countermeasure_name": "Use safe arithmetic to avoid integer overflow",
    "countermeasure_solution": "Arithmetic operations on numeric primitives such as integers, shorts, and longs may be vulnerable to overflow. For example, if you add two large positive integers the result may be negative. The inverse is true for negative numbers.\n\nOther operations such as subtraction, multiplication, division, and exponents can be vulnerable as well. This is of particular concern if you use at least one untrusted number in an operation, such as a user-supplied number.\n\nTo avoid overflow, you can cast one of the operands or the result to a primitive with more bits. For example, you can cast a **short to an int** or an **int to a long** in most languages. Alternatively, you can use logical checks to test for overflow. \n\nAssuming o1 is operand 1, o2 is operand 2, and r is the result, you use the following checks:  \n\n * For o1 * o2 = r, check that r / o2 = o1  \n * For o1 ^ o2 = r, check that log r base o2 = o1  \n * For o1 + o2 = r, check that r > 0  \n * For o1 + o2 = r:\n    - If o1 and o2 are both positive, then check that r > 0\n    - If o1 and o2 are both negative then check that r < 0",
    "weakness_title_read_only": "Integer Wraparound",
    "weakness_id_read_only": "P87",
    "weakness": "a3a38277-4c78-4a99-b5be-21cd598ab2e9",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "development",
    "created": "2010-11-15T12:23:11-05:00",
    "last_updated": "2021-06-25T14:47:58.790000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T73",
    "universal_id": "fdce3530-d129-4efa-a820-2c74ef31e72d",
    "countermeasure_name": "Use random delays in authentication failures",
    "countermeasure_solution": "Use random delays when authentication fails so that the period needed to generate an authentication failure message is randomized. Attackers can use the length of time it takes to generate an authentication error message to guess the reason it failed.",
    "weakness_title_read_only": "Timing Discrepancy Information Leak",
    "weakness_id_read_only": "P104",
    "weakness": "fa50aec1-085e-46f2-a504-5a0c9648e74e",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "requirements",
    "created": "2010-11-15T13:00:11-05:00",
    "last_updated": "2021-06-25T14:47:38.424000-04:00",
    "custom": "False",
    "rules": "0b07fc15-1e13-4c03-b097-c7e222fc019a",
    "rules_read_only": "A718"
  },
  {
    "countermeasure_id": "T74",
    "universal_id": "a3e8a5d9-fe84-4a70-9c1f-8e7aca7750eb",
    "countermeasure_name": "Avoid HTTP parameter pollution",
    "countermeasure_solution": "Separate technologies used to blacklist user-supplied input for security purposes, such as a web application firewall, can cause HTTP parameter pollution depending on the web application framework selected.\n\nIn these cases, ensure input validation accounts for the unique behavior of the application framework. For example, if the framework concatenates all values with name `param1`, account for the fact that the user may specify multiple `param1`'s and concatenate the values as part of validation testing. For example:\n\n` param1=<scr&param1=ipt>alert('xss')</scr&param1=ipt>` \n\nTranslates to: \n\n`param1=<script>alert('xss')</script>`.\n\n**Note:** Performing input validation within the application itself will automatically protect against these attacks.",
    "weakness_title_read_only": "HTTP Parameter Pollution",
    "weakness_id_read_only": "P689",
    "weakness": "6710523f-6a5b-400a-afa3-2450d67338af",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "development",
    "created": "2010-11-15T13:17:34-05:00",
    "last_updated": "2021-06-25T14:47:54.080000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T75",
    "universal_id": "9e8cb9fc-e51b-4bfe-a3e6-4c8e05fa28c2",
    "countermeasure_name": "Use regular expressions that are not vulnerable to Denial of Service",
    "countermeasure_solution": "Some regular expressions (regex) may be vulnerable to denial of service. If user input affects regex, an attacker can inject malicious patterns to force the server carry out CPU-intensive queries. This is often done by injecting wildcard characters.\n\nAvoid regex constructions that are:\n\n* Groupings with repetition.\n* Repeated groups with repetition.\n* Repeated groups with alternation and overlapping.\n\nExamples of unsafe regex patterns include:\n\n* (a+)+\n* ([a-zA-Z]+)*\n* (a|aa)+\n* (a|a?)+\n* (.*a){x} | for x > 10\n\nThese examples are reproduced from the OWASP article [Regular Expression Denial of Service - ReDoS](http://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS).",
    "weakness_title_read_only": "Regular Expression Denial of Service",
    "weakness_id_read_only": "P690",
    "weakness": "291ff1dc-a8af-44b0-934c-8038080e144a",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "development",
    "created": "2010-11-15T15:03:32-05:00",
    "last_updated": "2021-06-25T14:47:40.251000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T76",
    "universal_id": "dd316862-ca90-441f-8f9c-bef791984a05",
    "countermeasure_name": "Do not hardcode passwords",
    "countermeasure_solution": "Avoid hard-coding passwords, secret keys, or API tokens anywhere in the application. Use configuration files with encrypted passwords instead.",
    "weakness_title_read_only": "Use of Hard-coded Password",
    "weakness_id_read_only": "P156",
    "weakness": "5509aec4-3312-4d67-a4c3-823734d02bdd",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "development",
    "created": "2010-11-17T11:41:36-05:00",
    "last_updated": "2022-12-01T16:11:45.797000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T77",
    "universal_id": "aaebb761-1b9c-44c2-b3cb-19f7db6292ee",
    "countermeasure_name": "Test for single-factor authentication",
    "countermeasure_solution": "Use the following guidelines for testing single-factor authentication:\n\n- Attempt to log in to the application with only one factor of authentication, such as a username and password.\n    - This test __fails__ if the account has the ability to view or access information. \n\n- Use at least two different factors of authentication between knowledge, possession, and inherence factors.\n\n- If this test fails and the application only has one factor of authentication, additional credentials must be from a separate factor. \n    - For instance, if the application only uses a username and password for authentication from the knowledge factor, add a possession factor. \n    - These include X509 client-certificate authentication, smart cards, hardware tokens, and other tools that require physical possession rather than knowledge to perform authentication.",
    "weakness_title_read_only": "Single-factor Authentication",
    "weakness_id_read_only": "P205",
    "weakness": "a7e94b75-c246-4c06-89de-710f3f7d34aa",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2010-11-17T14:07:48-05:00",
    "last_updated": "2021-06-25T14:47:43.121000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T78",
    "universal_id": "f1c1ab1c-7931-4fdc-9155-c6fd91ae0ff9",
    "countermeasure_name": "Test strength of password reset mechanism",
    "countermeasure_solution": "Use the following guidelines for testing the forgotten password feature of a web application:\n\n__1. Try to enter an invalid username 10 times in a row.__\n\n- The test __fails__ if either of the following happens:\n    - No CAPTCHA or anti-automation techniques are used. \n    - Further attempts are not prevented. \n\n- This feature is vulnerable to __user enumeration__.\n\n__2. Try to request an email to reset your password.__\n\n- This test __fails__ if the email contains a plaintext password.\n    - Passwords transmitted in clear text are visible to anyone who can access the message.\n\n__3. Try to answer any forgotten password questions incorrectly 10 times.__ \n\n- The test __fails__ if either of the following happens:\n    - No CAPTCHA or anti-automation techniques are used.\n    - Further attempts are not prevented.\n\n- This feature is vulnerable to __brute-forcing__.\n\n__4. Try to answer security questions.__\n\n- The test __fails__ if either of the following happens:\n    - The questions are user-generated or easy to guess (\"What high school did you go to?\" or \"What was the color of your first car?\"). \n    - The security questions are accessible without following a link from an email.\n\n- This feature is vulnerable to __guess attacks__.\n\n__5. If the application uses cookies when submitting a username, try to submit a valid and an invalid username, then examine the returned cookies.__\n\n- This test __fails__ if the structure or length of the two cookies are different.\n\n- This feature is vulnerable because it __does not adequately protect account information__.",
    "weakness_title_read_only": "Weak Password Reset Mechanism for Forgotten Passwords",
    "weakness_id_read_only": "P526",
    "weakness": "ebec9158-f796-4e23-8452-3a588258e350",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2010-11-17T15:45:32-05:00",
    "last_updated": "2021-06-25T14:47:43.364000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T79",
    "universal_id": "1b704e7b-a5f7-4d92-95b5-837e0a52b922",
    "countermeasure_name": "Test password change functions",
    "countermeasure_solution": "Search each page of the application for password change features after authentication. For each page, attempt to reset a password.\n\nThis test __fails__ if:\n\n- The password can be reset without entering the old password first.\n- The password can be reset by entering a false old password.",
    "weakness_title_read_only": "Unverified Password Change",
    "weakness_id_read_only": "P512",
    "weakness": "d67045fe-91aa-4767-8356-a901af2ed73c",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2010-11-17T19:02:56-05:00",
    "last_updated": "2023-03-07T10:31:26.750000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T80",
    "universal_id": "6389f375-c517-46f5-8bb2-0c1bc7bc434d",
    "countermeasure_name": "Test password requirements",
    "countermeasure_solution": "Log in as an end-user and attempt to change your password so that it does not meet all of your organization's password requirements. The details of password requirements vary by organization, but they generally include:\n\n- Password length\n- Password strength\n    - Using lower and upper case, numerical and special characters, and avoiding dictionary words.\n- Preventing password reuse\n- Password expiry\n    - Passwords have a maximum age before they expire and need to be changed, such as after 90 days.\n\nThis test __fails__ if you can successfully change your password without meeting all of these requirements.\n\n## Review compliance requirements\n\nAdditionally, ensure that the minimum standards taken from the enterprise security policy meet the minimum requirements of the compliance drivers. \n\nFor each compliance requirement, see the corresponding How-To and compare those minimum standards with your policy's minimum standards.\n\nThis test __fails__ if you need stricter requirements. For example, to pass this test, see the How-To called _PA-DSS compliance requirement_ and make sure that your password security policies are more strict than what is outlined.\n\n\n## Password expiry test\n\nIf your organization's policy is to enforce a maximum age for passwords, test password expiry by verifying that the user is unable log in to their account with an expired password. Usually, an account is disabled if a user does not change their password before it expires.",
    "weakness_title_read_only": "Password Requirements Are Weak",
    "weakness_id_read_only": "P408",
    "weakness": "e4138dde-9a0c-43d1-b721-ab4945beaaf6",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2010-11-17T19:05:01-05:00",
    "last_updated": "2021-06-25T14:47:43.678000-04:00",
    "custom": "False",
    "rules": "583f20c1-76a3-48ee-924d-a45029a29531 AND !d0d429b5-9b82-466a-af97-db8c40d0c246",
    "rules_read_only": "A19 AND !A713"
  },
  {
    "countermeasure_id": "T81",
    "universal_id": "e847248c-c941-46ff-96fe-71e44e6bd08e",
    "countermeasure_name": "Test account lockout",
    "countermeasure_solution": "Attempt to log in with a valid username and an invalid password five times in a row.\n\nThis test __fails__ if you are not temporarily locked out, and you do not encounter any anti-automation controls.\n\nThe following are examples of anti-automation controls:\n\n- CAPTCHA images requiring an answer.\n- Temporary or permanent lockout errors.\n- Requests to answer security questions in addition to providing a password.",
    "weakness_title_read_only": "Repeated Authentication Attempts Are Not Restricted",
    "weakness_id_read_only": "P204",
    "weakness": "d8ce3b46-0bb3-4720-97cb-b9a3acd54f03",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2010-11-17T19:07:37-05:00",
    "last_updated": "2021-06-25T14:47:43.311000-04:00",
    "custom": "False",
    "rules": "0b07fc15-1e13-4c03-b097-c7e222fc019a;4fd90244-5770-4b68-88a7-9445cca26ec8;d0d429b5-9b82-466a-af97-db8c40d0c246",
    "rules_read_only": "A718;A1077;A713"
  },
  {
    "countermeasure_id": "T82",
    "universal_id": "ea02ff62-fef8-4a1d-8bdb-d9a20171a28a",
    "countermeasure_name": "Test authentication error consistency",
    "countermeasure_solution": "Test the security of your authentication for consistency by using the following steps:\n\n1. Attempt to log in with an invalid username. \n\n2. Inspect the response and cookies. \n\n3. Attempt to log in with a valid username, but invalid password.\n\n4. Inspect the response and returned cookies.\n\n    If the application displays a **personal phrase or image**:\n\n5. Attempt to submit 10 consecutive different usernames.\n\nThis test __fails__ if any of the following are true:\n\n- The two responses from steps 2 and 4 are different.\n- The structure or length of the cookies from steps 2 and 4 are different.\n- After step 5, you do not see an **anti-automation** feature, such as a CAPTCHA.",
    "weakness_title_read_only": "Response Discrepancy Information Exposure",
    "weakness_id_read_only": "P100",
    "weakness": "85a0f395-026f-4269-8454-64c5b4311261",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2010-11-17T19:09:24-05:00",
    "last_updated": "2021-06-25T14:47:38.593000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T83",
    "universal_id": "f7288c56-33c7-4b71-b53d-2a73f3717327",
    "countermeasure_name": "Verify transactional authorization and screening",
    "countermeasure_solution": "Use the following guidelines to verify that you are implementing strong transaction monitoring and authorization:\n\n1. Determine which transactions are considered \"__high-value__\" according to organizational values.\n\n    - This includes transactions concerning personal safety, monetary impact, and brand reputation.\n\n    - This test **fails** if a high value transaction does not prompt the user to:\n        - Re-enter a password.\n        - Use another form of authentication, such as a one-time password.\n    \n2. Test the __blacklists__ for user accounts, and credit cards if applicable.\n\n    - Work with developers to add some entries to the blacklist and test if the transactions can still be carried out.\n\n    - This test **fails** if blacklisted accounts or credit cards can carry out transactions.\n\n3. Design a comprehensive test plan, based on the input from system designers who monitor transactions.\n\n    - This test **fails** if the following are not rejected or sent for further authorization and monitoring:\n        - Transactions with rapid Geo-IP changes.\n        - Requests from atypical locations.\n        - Uncommon types of requests:\n            - Uncommon transaction types.\n            - Transactions with unusual values for a specific user.\n\n4. Work with system designers and developers to test the __malware and malicious script detection__ system for high-value transactions.",
    "weakness_title_read_only": "Inadequate Transaction-Specific Authorization and Transaction Monitoring",
    "weakness_id_read_only": "P698",
    "weakness": "021dfcf0-1ccd-4c84-b3bc-12674760b29e",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2010-11-17T19:11:29-05:00",
    "last_updated": "2022-03-22T11:30:43.904000-04:00",
    "custom": "False",
    "rules": "e484539f-f91c-46ad-81c0-2f03be462663;89a5e903-a2cd-4234-b0ea-714e3da7fee9",
    "rules_read_only": "A759;A1082"
  },
  {
    "countermeasure_id": "T84",
    "universal_id": "01687561-cc7e-4d78-90d8-89be7a2ac830",
    "countermeasure_name": "Test page-level authorization",
    "countermeasure_solution": "Attempt to browse each unique server page in the authenticated portion of the site **without prior authentication and authorization**. Delete any cookies for cookie-based authentication. \n\nThis test __fails__ if you can access any of those pages.\n\n Try alternative names and access paths for pages, if available. You must only be able to access and see pages that are public or listed in a white-list of authorization-free pages, such as about pages, and help pages.",
    "weakness_title_read_only": "Direct Request ('Forced Browsing')",
    "weakness_id_read_only": "P317",
    "weakness": "c331d52e-0833-4d02-8b17-2399f8e0c8ca",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2010-11-17T19:14:00-05:00",
    "last_updated": "2021-06-25T14:47:49.174000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T85",
    "universal_id": "39a54637-49b5-4135-9134-753d75a0dee8",
    "countermeasure_name": "Test server-side enforcement of authorization",
    "countermeasure_solution": "Use the following guidelines for testing authorization for any page or function that appears to enforce an authorization check:\n\n1. Attempt to browse to a page you do not have access to.\n\n2. Use an HTTP-proxy tool to modify the request sent to the unauthorized page.\n\nThis test __fails__ if you are able to successfully view the page.",
    "weakness_title_read_only": "Client-Side Enforcement of Server-Side Security",
    "weakness_id_read_only": "P494",
    "weakness": "e1abe966-a4e7-4a0c-9481-ed2b146b2099",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2010-11-17T19:16:17-05:00",
    "last_updated": "2023-03-07T10:50:11.738000-05:00",
    "custom": "False",
    "rules": "b310a679-c006-4abb-a02b-5f1608d05ace AND 616b6ea4-5436-4bad-83f6-bc83781aa8f2",
    "rules_read_only": "A1080 AND A23"
  },
  {
    "countermeasure_id": "T86",
    "universal_id": "dba3b3cb-cac6-4192-8897-98c8a10018a1",
    "countermeasure_name": "Test session ID uniqueness and rotation after authentication",
    "countermeasure_solution": "Use the following guidelines for testing the uniqueness and rotation of session IDs:\n\n### Verify the randomness of generated IDs\n\nThis test __fails__ if unique session IDs are not generated using a proper random string generator algorithm, such as an algorithm from approved libraries.\n\n### Test session ID rotation after authentication\n\n1. Browse to the login page.\n2. Take note of the current session ID using either an HTTP-proxy tool or a cookie viewer.\n3. Authenticate and inspect the session ID.\n\nThis test __fails__ if the session ID does not change.",
    "weakness_title_read_only": "Session Fixation",
    "weakness_id_read_only": "P678",
    "weakness": "398df6bf-b079-4aa0-84ac-3f239664da06",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2010-11-17T20:04:49-05:00",
    "last_updated": "2023-05-11T12:32:23.404000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T87",
    "universal_id": "8a2da817-10b9-4133-8751-1cfd54fddb1b",
    "countermeasure_name": "Verify that all data in transit is encrypted using a secure TLS channel",
    "countermeasure_solution": "Use a network monitoring tool to ensure that data in transit is sent over a secure TLS channel:\n\n- Use a tool such as Wireshark or Ethereal. Focus on testing the authentication and post-authenticated processes. This test __fails__ if any of the network traffic transmits clear text data.\n\nAttempt to connect to all SSL/TLS enabled interfaces (all available IP/Port). For each connection:\n\n- This test __fails__ if SSLv1, SSLv2, or SSLv3 are offered as negotiable protocols.\n\n- List all available ciphers:\n    - If any NULL, or EXT (Export) ciphers are available, then the test __fails__.\n    - The server must explicitly disallow EXPORT ciphers (which are weak ciphers) even if the client does not request it.\n\n- This test __fails__ if any DES ciphers are offered.\n\n- This test __fails__ if TLS Compression is enabled/offered.\n    - This is due to the CRIME side channel attack vulnerability (compression ratio info-leak made easy, see [CRIME Attack Vector](/library/glossary/G10/)).\n\n- Offer multiple ciphers to a server and check if it picks the more secure ciphers over less secure ones.\n    - Specifically, verify that the server uses __SHA384/SHA256 instead of SHA1__, and __SHA2 family of ciphers instead of MD5-based ciphers__.",
    "weakness_title_read_only": "Clear Text and Unencrypted Transmission of Information",
    "weakness_id_read_only": "P216",
    "weakness": "b1d166d6-8ca7-415f-9cd9-8c2d745d3d01",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2010-11-17T20:07:45-05:00",
    "last_updated": "2021-06-25T14:47:36.908000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T88",
    "universal_id": "5515be15-1b8e-4af1-a40b-7047f5826eb4",
    "countermeasure_name": "Test that secure flag is set on session cookie",
    "countermeasure_solution": "Use the following guidelines to test that session cookies have set the secure flag:\n\n1. Authenticate into the application, and use a cookie-editing tool to inspect the session ID.\n\n2. Determine the presence or absence of the `;secure` flag.\n\nThis test __fails__ if the flag is absent.",
    "weakness_title_read_only": "HTTPS Sessions Use Cookies Without the Secure Attribute",
    "weakness_id_read_only": "P505",
    "weakness": "3d24d8cc-7044-423f-bc87-c377606a2712",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2010-11-17T20:08:56-05:00",
    "last_updated": "2021-06-25T14:48:01-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T89",
    "universal_id": "2f32f286-8642-4813-954e-d18ea9243114",
    "countermeasure_name": "Test that site is not vulnerable to XSS",
    "countermeasure_solution": "Use the following guidelines for testing your site for a vulnerability to XSS:\n\n1. Attempt to send a set of known XSS meta-characters for each of the following items:\n    - HTTP parameter name\n    - HTTP parameter value\n    - HTTP header name\n    - HTTP header value\n    - Cookie name\n    - Cookie value\n\n2. Inspect the results. \n\n3. If the results appear to have the same meta-characters without any encoding in the resulting web page, JavaScript file, or Cascading Style Sheet (CSS) file, attempt to include a full script attack, such as: \n    - `<script>alert('xss')</script>`, \n    - `' onmouseover=alert(/XSS/)`, or\n    - `javascript:alert('xss')`. \n\nFor more potential vectors, see the [XSS Filter Evasion Cheat Sheet](https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet). \n\nThis test __fails__ if you are able to create an on-screen pop-up box.\n\n**Note:** There may be cases where your browser is immune to XSS, but other browsers are vulnerable. Where possible, attempt these attacks with all supported browsers.",
    "weakness_title_read_only": "Improper Neutralization of Input During Web Page Generation (Cross-Site Scripting)",
    "weakness_id_read_only": "P632",
    "weakness": "67b0e738-a725-4462-be2a-52493b75f4ac",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2010-11-17T20:17:47-05:00",
    "last_updated": "2021-06-25T14:47:55.114000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T90",
    "universal_id": "d8f93d74-2b5a-4c26-938a-0835f96336a1",
    "countermeasure_name": "Test idle session timeout",
    "countermeasure_solution": "Use the following guidelines to test whether an idle session timeout feature is implemented properly:\n\n1. Authenticate into the application or device.\n2. Do not use this session for the stipulated number of minutes (such as 30 minutes).\n3. Use the same session to go to an access-controlled data or function.\n\nThis test __fails__ if you can access the data or function without being logged out automatically.\n\n**Note:** You may need to clear your cache before testing this.",
    "weakness_title_read_only": "Insufficient Session Expiration",
    "weakness_id_read_only": "P504",
    "weakness": "b2147ed2-f98b-4d4e-9639-5d9a9454625c",
    "tags": "",
    "countermeasure_priority": "3",
    "phase": "testing",
    "created": "2010-11-17T20:19:07-05:00",
    "last_updated": "2021-06-25T14:48:01.031000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T91",
    "universal_id": "ec69bb6d-a253-42d8-856a-b3f1644aca0c",
    "countermeasure_name": "Test that HttpOnly flag is set on session cookie",
    "countermeasure_solution": "Use the following guidelines for testing whether the session cookie has the HttpOnly flag set:\n\n1. Authenticate into the application and use a cookie-editing tool to inspect the session ID.\n\n2. Determine the presence or absence of the `;HttpOnly` flag. \n\nThis test __fails__ if the flag is not present.",
    "weakness_title_read_only": "Session Cookie Missing 'HttpOnly' Attribute",
    "weakness_id_read_only": "P710",
    "weakness": "bd1b4969-defd-4d43-8f85-94843f87ec1b",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2010-11-17T20:20:10-05:00",
    "last_updated": "2021-06-25T14:48:00.875000-04:00",
    "custom": "False",
    "rules": "!1fd7d4e6-d2c9-4b66-ae29-639df5dcf149",
    "rules_read_only": "!A66"
  },
  {
    "countermeasure_id": "T92",
    "universal_id": "368c6bc8-6da6-4607-a7d5-1ae6806183e5",
    "countermeasure_name": "Test absolute session timeout",
    "countermeasure_solution": "Use the following guidelines to test the absolute session timeout:\n\n1. Authenticate into the application and attempt to browse to an access-controlled page.\n\n2. Write a simple script to access the page regularly for the stipulated time period (such as 24 hours).\n\nThis test __fails__ if you are able to access the same page successfully without being automatically logged out.",
    "weakness_title_read_only": "No Absolute Session Timeout",
    "weakness_id_read_only": "P707",
    "weakness": "592784ff-d05c-4611-b68d-45831118af72",
    "tags": "",
    "countermeasure_priority": "3",
    "phase": "testing",
    "created": "2010-11-17T20:21:18-05:00",
    "last_updated": "2021-06-25T14:48:01.057000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T93",
    "universal_id": "cd937419-433f-4d46-b40a-8f9ac7441fb9",
    "countermeasure_name": "Test that sessions expire upon logout",
    "countermeasure_solution": "Follow these steps to make sure a browser's user session expires after they log out:\n\n1. Authenticate into the application in your browser.\n2. Navigate to pages where you can view non-public information.\n3. Log out.\n4. Click the back button or use the address bar to attempt to revisit the non-public pages.\n\nThis test __fails__ if you can access the page successfully or see any non-public information.\n\nFollow these steps to make sure that there is a server-side mechanism that keeps track of the status of the sessions:\n\n1. Authenticate into the application in your browser.\n2. Visit a non-public page and use a web inspector tool to capture the server response.\n3. Store all session cookies.\n4. Log out.\n5. Use the web inspector, or a cookie editor tool, to craft an HTTP request to access a non-public page and include all stored session cookies captured in step 3.\n\nThis test __fails__ if the server responds without error, or reveals any private information.",
    "weakness_title_read_only": "Sessions Not Expired Upon Logout",
    "weakness_id_read_only": "P694",
    "weakness": "50803938-cdd7-44fd-b190-60a3c468c523",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2010-11-17T20:24:06-05:00",
    "last_updated": "2021-06-25T14:48:01.241000-04:00",
    "custom": "False",
    "rules": "0b07fc15-1e13-4c03-b097-c7e222fc019a",
    "rules_read_only": "A718"
  },
  {
    "countermeasure_id": "T94",
    "universal_id": "5e69c5ce-7dd5-48d7-b772-1f6a6c77c067",
    "countermeasure_name": "Test that session IDs are not leaked through URLs",
    "countermeasure_solution": "Use the following guidelines to test for session IDs leaking through URLs:\n\n1. This test __fails__ if you notice the session ID in the URL at any point in the application.\n\n2. Using a cookie editor, take note of the session ID.\n    - Using a different browser or computer, attempt to navigate to an authenticated page with the session ID in the URL. \n    - For example: `http://www.example.com/page;jsessionid=12345678914?param1=val`. \n    \n    This test __fails__ if you are able to access the page successfully.",
    "weakness_title_read_only": "Session IDs Leaked Through URLs",
    "weakness_id_read_only": "P702",
    "weakness": "cd501d25-92c3-4eb8-b4a2-468dc7402e83",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2010-11-17T20:25:27-05:00",
    "last_updated": "2021-06-25T14:48:01.271000-04:00",
    "custom": "False",
    "rules": "!3146dbeb-d68f-4f09-ab39-45cedebe7816",
    "rules_read_only": "!A697"
  },
  {
    "countermeasure_id": "T95",
    "universal_id": "23567543-1f0f-4d74-960d-993be4ddd51a",
    "countermeasure_name": "Test for the absence of 'Remember Me' features",
    "countermeasure_solution": "Use the following guidelines to test for persistent sessions:\n\n1. Inspect the login page for any \"remember me\" feature.\n\n    ![image of remember me]({{ USE_CONTENT_URL }}screenshots/exampleRememberMe.jpg)  \n*Example of a remember me functionality*  \n\n2. Determine if this feature causes a user to stay logged in for a long time. This test __fails__ if the \"remember me\" feature causes a user to not be logged out of a session after a long time, or after closing the browser.\n\n3. If remember me feature is needed, try to visit critical parts of the application such as pages for the change of passwords, change of profile, or pages for viewing personal data. If the application does not require re-authentication for performing those actions, this test fails.",
    "weakness_title_read_only": "Insufficient Session Expiration",
    "weakness_id_read_only": "P504",
    "weakness": "b2147ed2-f98b-4d4e-9639-5d9a9454625c",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2010-11-17T20:28:31-05:00",
    "last_updated": "2021-06-25T14:48:01.107000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T96",
    "universal_id": "0270ff8d-da4d-4abd-9eab-4bffeec5e08f",
    "countermeasure_name": "Test if your site is vulnerable to CSRF",
    "countermeasure_solution": "Use either of the following methods to test your site for a CSRF vulnerability:\n\n## Method One\n\n1. Log into the application.\n\n2. Determine which transactions are considered \"high-value\" according to your business.\n    - For example, transactions with personal safety, monetary, or brand reputation impact. \n\n3. Choose one transaction.\n    - Repeat the rest of the test for all those transactions, or make sure the entire application uses the same safeguards for CSRF.\n\n4. Determine how the transaction is requested.\n    - For example, it may use a request form with input values, which is submitted to a destination page to process the request. This is called a POST method.\n    - Alternatively, the transaction may be enabled by a single hyperlink. This is possible through a GET method with a query string containing parameters.   \n\n5. Use an HTTP proxy or HTML inspecting tool to save the content of the HTTP request sent to the target page that processes the transaction. \n    - You can use a tool such as Burp Suite, Chrome Developers Tools, or Firefox FireBug/TamperData.\n\n6. Record the entire request including headers.\n\n7. Delete the browser's history, and log in again as the same user.\n\n8. Go to the same page again, but intercept the request before sending it to the target.\n    - Replace the unpredictable parts of this request with some random values with a tool such as TamperData or Burp Suite. \n        - Parts that cannot be predicted include random tokens you see in the request.\n    - Do not replace cookies.\n\nThis test __fails__ if you can perform the transaction successfully.\n\n## Method Two\n\n1. Find the transaction that you would like to test.\n\n2. Create an HTML page to initiate the request.\n    - For GET requests, the transaction could be initiated simply with a hyperlink with parameters.\n    - For a POST method, create a form with all the values that the request page sends including the hidden inputs.\n        - Replace the unpredictable values with some random values or values that an attacker can guess. \n\n3. Clear your browsing history and log into the application.\n\n4. Use the page in step 2 to send the request.\n\nThis test __fails__ if you can perform the transaction successfully.",
    "weakness_title_read_only": "Cross-Site Request Forgery (CSRF)",
    "weakness_id_read_only": "P677",
    "weakness": "ec20bc24-5e77-4cac-a8bb-be1d2517e2a0",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2010-11-17T20:29:45-05:00",
    "last_updated": "2021-06-25T14:48:01.589000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T98",
    "universal_id": "add97e4b-347c-4604-b3d9-e539a5ebc755",
    "countermeasure_name": "Test for input validation on a server",
    "countermeasure_solution": "Use the following guidelines to test input validation on your server:\n\n1. Find HTTP parameters and cookies that appear to be validated correctly. \n\n2. For each input, enter a valid value. \n\n3. Using an HTTP-proxy tool, convert the value to invalid. \n\nThis test __fails__ if the input is no longer validated.",
    "weakness_title_read_only": "Improper Input Validation",
    "weakness_id_read_only": "P95",
    "weakness": "df80ca69-a2c0-4d7f-b3f7-d81bd6d685e9",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2010-11-17T20:32:58-05:00",
    "last_updated": "2021-06-25T14:47:54.247000-04:00",
    "custom": "False",
    "rules": "b310a679-c006-4abb-a02b-5f1608d05ace;2c7f7313-a68a-46ec-b1a2-4ae3316c2a0a",
    "rules_read_only": "A1080;A5"
  },
  {
    "countermeasure_id": "T99",
    "universal_id": "9a588bc2-52f9-4049-8e50-b5d8a5c6bf0c",
    "countermeasure_name": "Test that clients cannot manipulate read-only data",
    "countermeasure_solution": "Use the following guidelines to test read-only data being manipulated by clients:\n\n- Search the web application for input that must never be modified by an end-user, such as hidden form fields or cookie values.\n\n- The client should not hold or send anything but pointers to, or IDs of, the data stored on the server.\n    - Examples of valid entries include session-IDs, or item-IDs.\n    - Attempt to modify the input using an HTTP proxy tool.\n\nThis test __fails__ if you can successfully modify the input and see the results.\n\n**Note:** It is poor design for applications to store server-side information in hidden fields on the client. For example, storing the price of each item in a shopping cart on a client page opens the application to vulnerability.",
    "weakness_title_read_only": "External Control of Assumed-Immutable Data",
    "weakness_id_read_only": "P361",
    "weakness": "88b506bb-1610-4838-8cbd-94476c3b36f9",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2010-11-17T20:34:42-05:00",
    "last_updated": "2021-06-25T14:47:54.716000-04:00",
    "custom": "False",
    "rules": "b310a679-c006-4abb-a02b-5f1608d05ace",
    "rules_read_only": "A1080"
  },
  {
    "countermeasure_id": "T101",
    "universal_id": "e985226a-6978-4b0a-8e07-a174545d5197",
    "countermeasure_name": "Test that application is not vulnerable to SQL injection",
    "countermeasure_solution": "SQL injection is difficult to assess through runtime testing without an actual exploit. The following test will help you to identify potential SQL injection vectors: \n\n1. For all forms of input, attempt to send malicious SQL injection characters and inspect the response.\n\n    This test __fails__ if the response renders a database error.\n\n2. If this test doesn't return an error, try comparing regular input with malicious SQL injection characters. \n    - For example, try `parameter=1`, and then `parameter=1'`. \n\n    This test __fails__ if the results differ and there is no error message.",
    "weakness_title_read_only": "Improper Neutralization of Special Elements in SQL Commands (SQL Injection)",
    "weakness_id_read_only": "P664",
    "weakness": "6978fdd4-2db4-4d32-8c23-aeed2c6c7248",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "testing",
    "created": "2010-11-17T20:37:01-05:00",
    "last_updated": "2021-06-25T14:47:55.275000-04:00",
    "custom": "False",
    "rules": "0b07fc15-1e13-4c03-b097-c7e222fc019a",
    "rules_read_only": "A718"
  },
  {
    "countermeasure_id": "T105",
    "universal_id": "82b49ac8-5b64-4537-9734-acde6a008a06",
    "countermeasure_name": "Verify that your application does not have unnecessary debug capability or leftover test/debug code",
    "countermeasure_solution": "Use the following guidelines for verifying that your application does not have leftover debugging and testing code:\n\n_The details of this test may vary based on the type of your application._\n\n1. Install the application (made for release) and test that debug tools do not return any debug information from the application.\n\n2. Check the application's directories and verify that there is no leftover test or debug code.\n    - Look for test data, script, or code in directories and configuration files that will be included in the deployment package.\n\n3. Work with developers to verify the 'annotations' (if applicable) and meta-data in the source code.\n    - Verify that the annotations/meta-data do not disclose any unintended information.",
    "weakness_title_read_only": "Active Debug Capabilities or Debug Code, or Unnecessary Files",
    "weakness_id_read_only": "P379",
    "weakness": "ac4c679c-0882-48c8-ade0-9d1126f2c241",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2010-11-17T20:41:07-05:00",
    "last_updated": "2021-06-25T14:47:55.926000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T106",
    "universal_id": "a5e923b8-9908-42bf-bd23-9578b04e32ca",
    "countermeasure_name": "Test that site is not vulnerable to direct object access attacks",
    "countermeasure_solution": "Use the following guidelines to test whether your site is vulnerable to direct object access attacks:\n\n1. Look for all parts of the web application that provide access to files on the application or on other servers, excluding static files normally served by a web server.\n    - This includes HTML, JavaScript, and Cascading Style Sheets.\n\n2. For each part of the application, inspect the mechanism that specifies the file name. \n    - For example, the file name is specified as an HTTP parameter. \n\n3. Once you've identified the mechanism, use an HTTP-proxy tool to try to change the values to files that you are not allowed to have access to.\n    - For example, change `account158.pdf` to `account186.pdf`, or `../../../WEB-INF/web.xml`. \n\nThis test __fails__ if you can access a file that you are not authorized to.",
    "weakness_title_read_only": "Access Control Bypass Through User-Controlled Keys",
    "weakness_id_read_only": "P524",
    "weakness": "e233b5bf-9e2c-40a0-ab76-da229c6af9e1",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2010-11-17T20:42:04-05:00",
    "last_updated": "2021-06-25T14:47:37.846000-04:00",
    "custom": "False",
    "rules": "0b07fc15-1e13-4c03-b097-c7e222fc019a",
    "rules_read_only": "A718"
  },
  {
    "countermeasure_id": "T107",
    "universal_id": "f04f3c0f-465a-4c94-8ceb-82f028f62cb8",
    "countermeasure_name": "Test that application forbids uploading or transferring malware",
    "countermeasure_solution": "Use the following guidelines to test that your application does not allow the upload or transfer of malware:\n\n1. For any file-upload features, attempt to upload the EICAR test file.\n    - This is a benign file that is designed to trigger a virus alert. \n    - You can retrieve the file from the [Eicar website](http://www.eicar.org/anti_virus_test_file.htm). \n\n    This test __fails__ if the file uploads successfully.\n\n2. If the system enables file transfer from remote locations, try to transfer the same file. \n\n    This test __fails__ if the file is transferred successfully.",
    "weakness_title_read_only": "Unrestricted Upload of Unsafe File Types",
    "weakness_id_read_only": "P325",
    "weakness": "bcfd4030-b81a-4ba5-9140-1da1c4a43260",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2010-11-17T20:43:03-05:00",
    "last_updated": "2021-06-25T14:47:54.937000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T108",
    "universal_id": "c5109ed5-ff77-4a66-b1cd-a95fa77e468d",
    "countermeasure_name": "Test that site restricts access to WSDL file",
    "countermeasure_solution": "Use the following guidelines to test that your site restricts WSDL file access:\n\n1. For each web service endpoint, attempt to browse to the endpoint without a valid session.\n\n2. Append \"?WSDL\" to the URL. \n\nThis test __fails__ if you are able to access a WSDL.",
    "weakness_title_read_only": "Information Exposure through WSDL Files",
    "weakness_id_read_only": "P538",
    "weakness": "bb5ed804-2245-4970-a058-5c0db0594613",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2010-11-17T20:44:07-05:00",
    "last_updated": "2021-06-25T14:47:48.701000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T109",
    "universal_id": "aef79e20-dce1-46fe-9c77-b9ae345fe885",
    "countermeasure_name": "Test that users cannot supply XML Stylesheet Language Transforms (XSLTs)",
    "countermeasure_solution": "Use the following guidelines to test whether users can provide XSLTs:\n\nInspect a site for any input areas or XML interfaces that accept an XSLT from the end-user.\n\nThis test __fails__ if XSLTs can be accepted by a user.",
    "weakness_title_read_only": "Unsafe Use of XSLTs",
    "weakness_id_read_only": "P696",
    "weakness": "5e146eb2-f7d8-4785-978c-73b8b7226230",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2010-11-17T20:46:04-05:00",
    "last_updated": "2021-06-25T14:47:53.567000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T110",
    "universal_id": "b6139e43-346a-4ee1-bfb0-3506d34c2504",
    "countermeasure_name": "Test that users cannot supply XSLTs in XML digital signatures",
    "countermeasure_solution": "Use the following guidelines to test whether users can provide XSLTs in XML digital signatures:\n\n1. Ensure you have access to a machine to which the attack target can send an Internet Control Message Protocol message.\n2. Make note of your IP address, and use it in the following payload in place of the text \"INSERT_IP_ADDRESS_HERE.\" \n3. This is an example of an XML digital signature that exploits a Java security vulnerability, which you can append to the WS-Security envelope. \n4. If there is already an XML digital signature, then you need to modify the format accordingly:\n\nEnsure you have access to a machine to which the attack target can send an ICMP message. Make note of your IP address, and use it in the following payload in place of the text \"INSERT_IP_ADDRESS_HERE.\"\n\nThis is an example of an XML digital signature that exploits a Java security vulnerability, which you can append to the WS-Security envelope. If there is already an XML digital signature, then you need to modify the format accordingly:\n\n    <!-- XSLT command execution wit>hout digital signature change the ping command to something that makes sense for your test in order to detect the attack -->\n    <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    <Envelope xmlns=\"urn:envelope\">\n        <Signature xmlns=\"http://www.w3.org/2000/09/xmldsig#\">\n            <SignedInfo>\n                <CanonicalizationMethod Algorithm=\"http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComnts\"/>\n                <SignatureMethod Algorithm=\"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\"/>\n                <Reference URI=\"\">\n                    <Transforms>\n                        <Transform Algorithm=\"http://www.w3.org/2000/09/xmldsig#enveloped-signature\"/>\n                        <Transform Algorithm=\"http://www.w3.org/TR/1999/REC-xslt-19991116\">\n                            <xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" 4 xmlns:rt=\"http://xml.apache.org/xalan/java/java.lang.Runtime\" xmlns:ob=\"http://xml.apache.org/xalan/java/java.lang.Object\" exclude-result-prefixes= \"rt,ob\">\n                                <xsl:template match=\"/\">\n                                    <xsl:variable name=\"runtimeObject\" select=\"rt:getRuntime()\"/>\n                                    <xsl:variable name=\"command\" select=\"rt:exec($runtimeObject,'ping INSERT_IP_ADDRESS_HERE')\"/>\n                                    <xsl:variable name=\"commandAsString\" select=\"ob:toString($command)\"/>\n                                    <xsl:value-of select=\"$commandAsString\"/>\n                                </xsl:template>\n                            </xsl:stylesheet>\n                        </Transform>\n                    </Transforms>\n                    <DigestMethod Algorithm=\"http://www.w3.org/2000/09/xmldsig#sha1\"/>\n                    <DigestValue>uooqbWYa5VCqcJCbuymBKqm17vY=</DigestValue>\n                </Reference>\n            </SignedInfo>\n            <SignatureValue>hYlWlHBy+nwft0pcr64IdS3Hobd+RhAF6kZa1ZwA6EW3gavRXGnxIkBJo2Bish951xd0woMrMbr4EtvUY+KaDr2qvylPjVbFhh7Mr4By+DU7x/AFODhjE7DrAcszscmLDUPX24+0mdshbbzsUbbapMLDexGm+1F6Id0mpjqdHxQ=</SignatureValue>\n            <KeyInfo>\n                <X509Data>\n                    <X509Certificate>MIICMzCCAZygAwIBAgIEB1vNFTANBgkqhkiG9w0BAQUFADBdMR0wGwYDVQQKExREb2N0b3IgRXZpbCBOZXR3b3JrczEvMC0GA1UECxMmTWFuSW5UaGVNaWRkbGUgQ2VdGlmaWNhdGlvbiBBdXRob3JpdHkxCzAJBgNVBAYTAlVTMB4XDTA1MDYyNjAwNDMxMloXDTA3MDYxNjAwNDMwOVowDjEMMAoGA1UEAxMDZm9vMIGfMA0GCSqGSIb3DQEAQUAA4GNADCBiQKBgQCQtSkEzUfVcVS0pQ/9EGVp4VzAKAXEh/LnhziJMflbQ+l2ZP9f43AhtF8F7crEDiO8roDM5hHl+pRsIKts8/JFGFVFhoEnqmJ1YgmWCXzojbl02MwtpoU4Qt3jDQu5A7CAcwjZHBFpHkKpfW6EDNRiPkLwDZehU3kUGg5TuN0BqwIDAQABo08wTTAdBgNVHQ4EFgQUT1kDd5c4i9PV8jHcPjq9C+Z6EowHwYDVR0jBBgwFoAUcaZ8Le2eELaUj56dgeeGfu1pnoowCwYDVR0PBAQDAgSQMA0GCSqGSIb3DQEBBQUAA4GBAJJLlUiXACfCfqF6uAEr2GjZOx07PWOgmRiX9y+cVSpqlKu8rCz1x0+jd5F72tj3seVuUT0uXgSTZLItwbBWNPIscnHcv+wh95JzEOLkhT4wEEdu0p6zdG9DMj7I4s/j69zOzX95B+FLwAGfjyL5MoK+BHKOMr/tZ8TJEXUsmz5</X509Certificate>\n                </X509Data>\n            </KeyInfo>\n        </Signature>\n    </Envelope>",
    "weakness_title_read_only": "Unsafe Use of XSLTs",
    "weakness_id_read_only": "P696",
    "weakness": "5e146eb2-f7d8-4785-978c-73b8b7226230",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2010-11-17T20:48:48-05:00",
    "last_updated": "2021-06-25T14:47:54.444000-04:00",
    "custom": "False",
    "rules": "7cb05561-5aa2-423f-a49d-6e68674ec18e;770df1ac-bdf3-4c55-ac86-aa0b54f33d8c",
    "rules_read_only": "A102;A104"
  },
  {
    "countermeasure_id": "T111",
    "universal_id": "3e8ca0ce-e255-47c7-ad2b-778eb49c9fb1",
    "countermeasure_name": "Test that your application turns off auto-complete for confidential data fields",
    "countermeasure_solution": "Use the following guidelines for testing whether your application disables auto-complete for confidential fields:\n\n- For any field that requires confidential data in an HTML form-input tag, inspect the HTML for the presence of the `autocomplete=off` attribute. This includes the following fields:\n    - User ID\n    - Password\n    - Credit card number\n    - Social insurance number\n    - Social security number\n\n- If the `autocomplete` attribute is set in the parent `form` tag, it will be inherited by all children `input` tags.\n\n    This test __fails__ if the `autocomplete` attribute is missing.\n\nAlternatively, you can try testing for auto-complete features:\n\n1. Enter data into a field that requires confidential data, such as a password, date of birth, or credit card number.\n\n2. Submit the form.\n\n3. Browse back to the same page and start typing the same data one character at a time.\n\n    This test __fails__ if the auto-complete feature suggests the rest of the data.",
    "weakness_title_read_only": "Information Leak Through Auto-Complete",
    "weakness_id_read_only": "P695",
    "weakness": "d4c60369-9b5f-4911-85eb-44421f54a08b",
    "tags": "",
    "countermeasure_priority": "3",
    "phase": "testing",
    "created": "2010-11-17T20:50:25-05:00",
    "last_updated": "2021-06-25T14:47:50.631000-04:00",
    "custom": "False",
    "rules": "b310a679-c006-4abb-a02b-5f1608d05ace",
    "rules_read_only": "A1080"
  },
  {
    "countermeasure_id": "T112",
    "universal_id": "947c0399-9806-4c87-9137-5e61fc151c44",
    "countermeasure_name": "Test that site does not cache confidential pages",
    "countermeasure_solution": "For pages containing confidential data, such as credit card numbers, inspect the page in an HTTP-proxy tool. If the request uses HTTP 1.0, then look for either of the following headers:\n\n * Pragma=no-cache\n * Date - Expires=-1\n\nIf the request uses HTTP 1.1 then look for this header:\n\n    Cache-Control=no-store, no-cache, must-revalidate\n\nThis test __fails__ if the appropriate header is missing.\n\n### No-store vs No-cache directives\n\nFor HTTP 1.1, the important keyword is \"no-store\" because the \"no-cache\" directive is commonly misused.\n    \nAccording to the RFC, \"no-cache\" tells the browser that it should revalidate with the server before serving the page from the cache. This means that if the \"no-cache\" directive is used without \"no-store\", a browser can still store the page in its cache. At this point, the browser can display the page after revalidating with the server. As a result, confidential data can be stored and leaked.\n\nNewer versions of Internet Explorer and Firefox have started treating the \"no-cache\" directive as if it instructs the browser to not even cache the page because of how frequently \"no-cache\" is misused. It is __strongly advised__ to set the \"no-store\" directive.",
    "weakness_title_read_only": "Information Leak Through Browser Caching",
    "weakness_id_read_only": "P412",
    "weakness": "313e62e1-ea48-46ec-b279-2e79be1ad0bf",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2010-11-17T20:51:30-05:00",
    "last_updated": "2021-06-25T14:47:50.731000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T113",
    "universal_id": "9d0df1f2-15bc-4d01-811c-af47ca9ca07d",
    "countermeasure_name": "Test that site is not vulnerable to HTTP verb tampering",
    "countermeasure_solution": "Use the following guidelines to test that your site is not vulnerable to HTTP verb tampering:\n\n1. Using an HTTP-proxy tool, attempt to browse to an authenticated web page without a valid session.\n\n2. Modify the HTTP verb from \"GET\" or \"POST\" to a random set of characters, such as \"PWRLWA.\" \n\n    This test __fails__ if you can view the page with the random verb, but are unable to view the page with a valid HTTP verb.\n\n3. You can also try using the \"HEAD\" request instead of \"GET.\" \n    - You are unlikely to receive a response. \n    - Try to ascertain if the request was processed successfully, by viewing the transaction history for example.\n\n    This test __fails__ if the \"HEAD\" request works, but the \"GET\" request does not.",
    "weakness_title_read_only": "HTTP Verb Tampering",
    "weakness_id_read_only": "P700",
    "weakness": "abef344f-a439-4d09-88c9-31f33980a3fb",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2010-11-17T20:52:13-05:00",
    "last_updated": "2021-06-25T14:47:55.626000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T114",
    "universal_id": "4e0f48f0-e194-4604-abab-a26ee92eceac",
    "countermeasure_name": "Test system-to-system authentication lockout or throttling",
    "countermeasure_solution": "Use the following guidelines to test for system-to-system authentication lockout and throttling:\n\n1. Obtain the user ID of a system account.\n\n2. Attempt to authenticate with a valid user ID and incorrect password. \n\n3. Repeat this 5 times.\n\nThis test __fails__ if both of the following are true:\n\n- You are able to log in with the correct password on the 6th try without having to wait (throttling).\n- You do not face any other restriction that prevents you from authenticating (lockout).",
    "weakness_title_read_only": "Insufficient Account Lockout or Throttling for System Accounts",
    "weakness_id_read_only": "P688",
    "weakness": "490134b6-a86d-4e39-9356-406ee0e139d8",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2010-11-21T20:47:04-05:00",
    "last_updated": "2021-06-25T14:47:43.165000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T116",
    "universal_id": "68218bab-9034-4021-896d-0caed130adea",
    "countermeasure_name": "Test for regular expression denial of service",
    "countermeasure_solution": "Use the following guidelines to test for regex DoS:\n\nSend input that contains several consecutive valid characters followed by one invalid character. For example, for alpha-numeric input, you can try: `aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa!` \n\nThis test __fails__ if the server hangs or crashes as a result of this input.",
    "weakness_title_read_only": "Regular Expression Denial of Service",
    "weakness_id_read_only": "P690",
    "weakness": "291ff1dc-a8af-44b0-934c-8038080e144a",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2010-11-21T20:49:08-05:00",
    "last_updated": "2021-06-25T14:47:40.037000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T119",
    "universal_id": "f777a961-8379-41a4-8135-8e1331646c77",
    "countermeasure_name": "Test for clickjacking",
    "countermeasure_solution": "Before you start, determine your supported browsers and test domains (pages with important functions that are enabled by clicking and therefore need to be tested).\n\nTwo types of tests are suggested here:\n\n- **Type One** is based on the verification of headers that may only work for browsers that support those headers.\n    - Older browsers may be vulnerable despite passing the test.\n\n- **Type Two** needs more resourceful testers and looks at the behavior of the application. \n\nYou can choose to perform the Type One test or both.\n\n## Type One: Verification of Headers\n\n- Verify that all the web pages with important actions are set to one of the following:\n    - X-Frame-Options: DENY\n    - X-Frame-Options: SAMEORIGIN\n    ___or___\n    - X-Frame-Options: ALLOW-FROM https://yoursite.com/\n\n- Verify that the pages include at least one of the three Content Security Policy (CSP) settings:\n\n    - Content-Security-Policy: frame-ancestors 'none'\n    - Content-Security-Policy: frame-ancestors 'self'\n      ___or___\n    - Content-Security-Policy: frame-ancestorshttps://yoursite.com/\n\nTo validate these in Chrome: \n\n1. Go to View > Developer > Developer Tools.\n2. Select the __Network tab__ in the tools header. \n3. Navigate to the page you want to test. \n4. Under __Name__ in Developer Tools, select the base web page (and optionally, Type of Document). \n5. Select the __Headers__ tab\n6. Find the the Content Security Policy and X-Frame-Options settings in the Response Headers. \n\nConfirm how the headers are set with your developers. If they are set by the web server for every page, then validate them on a few pages at random. If they are being set through the web application's software, then you will need to confirm that they are being set on every page.\n\n## Type Two: Testing JavaScript Frame-busting\n\nThree How-tos are provided for this test. Use the three types of templates and replace \"target.html\" with the address of the page you are testing. \n\nFor each page and for each browser that is supported, follow these steps:\n\n1. Test that the frame-busting technique used by the page is robust and cannot be bypassed by __JavaScript__ code.\n    - Use the template provided in the How-to for this countermeasure and replace the `target.html` in the templates with the address of the page that you are testing.\n    - Try to open the HTML test template. \n\n    This test __fails__ if the page that you are testing loads inside the iFrame.\n\n2. Check that your page is not vulnerable to __double framing attacks__.\n    - Use the provided template.\n\n    This test __fails__ if the page loads inside an iFrame.\n\n3. Check that the __anti-XSS capabilities__ of the browser cannot be used to disable frame-busting techniques.\n    - Use the provided template.\n\n    This test __fails__ if the page loads inside an iFrame.\n\n\nThis test __only passes__ if all three tests pass for each combination of page and browser.",
    "weakness_title_read_only": "Clickjacking",
    "weakness_id_read_only": "P697",
    "weakness": "29957658-a3ce-4345-b7c8-8639ea3d1951",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2010-11-21T20:51:55-05:00",
    "last_updated": "2022-09-01T09:50:01.915000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T122",
    "universal_id": "e7eba50e-60e7-4125-b304-8fee1d933ef4",
    "countermeasure_name": "Test for remote file include",
    "countermeasure_solution": "Major web servers such as IIS, Apache, Nginx, and Lighttpd evaluate Server Side Includes (SSI) directives while serving the page.\n\nUse the following test to determine whether injecting SSI into web pages is possible: \n\n1. Identify the page that you want to test for SSI directives injection.\n    - The page must take user input in the form of cookie content, text input field, query string, or HTTP headers and respond accordingly.\n\n2. Create an SSI directive in the form of `<!--#directive parameter=value parameter=value -->`.\n    - For example: \n        `<!--#include virtual=\"/link/to/myfile.txt\" -->` includes the content of `myfile.txt` in a served HTML file.\n\n3. Put `myfile.txt` on a location that is accessible by your server. Get a link or path to the file.\n4. Navigate to the pages that you identified in step 1.\n5. Choose a set of parameters or input fields to test.\n6. For each parameter or input field from step 5, submit the crafted SSI directive from step 2.\n\nThis test __fails__ if the page renders content from `myfile.txt` in step 2.\n\nTry other SSI directives that are supported by your server. For instance, if `#exec` or `#echo` are supported, test if they are adequately neutralized.",
    "weakness_title_read_only": "Improper Neutralization of SSI on a Web Page",
    "weakness_id_read_only": "P673",
    "weakness": "f8ba84c5-bb0c-4eef-b1e7-2bc2dbb2f0cc",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "testing",
    "created": "2010-11-21T20:56:34-05:00",
    "last_updated": "2021-06-25T14:47:54.339000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T123",
    "universal_id": "67a312a6-858b-4daf-b371-0751768afe82",
    "countermeasure_name": "Test for integer overflow",
    "countermeasure_solution": "Use the following guidelines to test for integer overflow:\n\n1. Identify sections of the site that perform integer arithmetic with user-supplied values.\n\n2. Provide large negative and positive values and inspect the result. \n\nThis test __fails__ if the result is negative when it should be positive, or vice-versa.\n\nHere are some values to try:\n\n- -1\n- 0\n- 0x100\n- 0x1000\n- 0x3fffffff\n- 0x7ffffffe\n- 0x7fffffff\n- 0x80000000\n- 0xfffffffe\n- 0xffffffff\n- 0x10000\n- 0x100000",
    "weakness_title_read_only": "Integer Wraparound",
    "weakness_id_read_only": "P87",
    "weakness": "a3a38277-4c78-4a99-b5be-21cd598ab2e9",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2010-11-21T20:57:20-05:00",
    "last_updated": "2021-06-25T14:47:59.012000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T124",
    "universal_id": "dd870403-c7cc-4bb4-a3b9-55656a9c2460",
    "countermeasure_name": "Test for authentication timing vulnerability",
    "countermeasure_solution": "Use the following guidelines to test for authentication timing:\n\n1. Collect five valid usernames and five invalid usernames.\n\n2. Write a script that attempts authentication with each username.\n\n3. Time the latency in response for all 10 usernames. \n\nThis test __fails__ if there is a clear difference in the time it takes for invalid and valid usernames to go through authentication.\n\n**Note:** This test looks for whether your application adds random latency delays to failed login attempts. It does not assess whether your application is vulnerable to exploitation.",
    "weakness_title_read_only": "Timing Discrepancy Information Leak",
    "weakness_id_read_only": "P104",
    "weakness": "fa50aec1-085e-46f2-a504-5a0c9648e74e",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2010-11-21T21:00:16-05:00",
    "last_updated": "2021-06-25T14:47:38.566000-04:00",
    "custom": "False",
    "rules": "0b07fc15-1e13-4c03-b097-c7e222fc019a",
    "rules_read_only": "A718"
  },
  {
    "countermeasure_id": "T125",
    "universal_id": "1ab90ff0-5af6-42e0-9479-903f6fcc5058",
    "countermeasure_name": "Test for open redirect",
    "countermeasure_solution": "Use the following guidelines to test for open redirect:\n\n- Look for input values with a redirect used by the application. For example, many sites follow a pattern similar to one of the following (the parameter's name may vary):\n\n    http://www.example.org/login?url=startPage \n    http://www.example.org/login?next=startPage \n    http://www.example.org/login?ref=/startPage\n    ... \n\nWhere after successful authentication, you are automatically redirected to `www.example.org/startPage`.\n\n- Attempt to specify an external site such as `http://www.google.com`.\n\nThis test __fails__ if you are redirected to the external site after logging in successfully.\n\nIn some cases, there may be a legitimate reason to allow redirects to specific sites. Create a list of successful external redirects and consult developers to determine if redirecting to those destinations is allowed.",
    "weakness_title_read_only": "URL Redirects to Untrusted Site ('Open Redirect')",
    "weakness_id_read_only": "P493",
    "weakness": "26c48040-b403-4a80-a0da-bcd1cafb0919",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2010-11-21T21:01:29-05:00",
    "last_updated": "2021-06-25T14:47:45.441000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T126",
    "universal_id": "b669edfc-6c29-47e3-b3f8-9eb11e14860b",
    "countermeasure_name": "Test for XML external entity disclosure",
    "countermeasure_solution": "Use the following guidelines to test for XML external entity disclosure:\n\n1. For input whose output is inside an XML document, attempt to add a payload that introduces a new DTD.\n\n2. This DTD references an external file on the system, such as `c:\\boot.ini` for Windows, or `/etc/passwd` for Unix. \n\n3. Attempt to reference that entity later in the document. \n\nThis test __fails__ if the contents of the file are returned back to you.\n\nExample payload:\n\n    <!DOCTYPE foo [\n    <!ELEMENT foo ANY>\n    <!ENTITY xxe SYSTEM \"file:///c:/boot.ini\">\n    ]>\n    <foo>&xxe;</foo>\n\nor\n\n    <!DOCTYPE foo [\n    <!ELEMENT foo ANY>\n    <!ENTITY xxe SYSTEM \"file:///etc/shadow\">\n    ]>\n    <foo>&xxe;</foo>",
    "weakness_title_read_only": "Unauthorized access to data through XML External Entity (XXE) references",
    "weakness_id_read_only": "P742",
    "weakness": "d3ceed2f-0038-488b-99c8-99bedad35d9c",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2010-11-21T21:02:37-05:00",
    "last_updated": "2021-06-25T14:47:53.828000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T127",
    "universal_id": "5b01485c-1ada-40f0-850a-62f0b1a3997d",
    "countermeasure_name": "Test for null byte injection",
    "countermeasure_solution": "Use the following guidelines to test for byte injection:\n\n1. Determine which direct input the operating system uses.\n    - Specifically, look for input that may be used for opening a file, such as a file-name parameter. \n\n2. Attempt to circumvent protections, such as restrictions on file types, by appending a null character.\n    - `%00` in URL encoding, and `\\0` in other forms of input.\n    - For example, `../../web.xml%00abcdef.pdf` may appear to be a legitimate PDF file, but it will actually open the file `web.xml` in the operating system.\n\nThis test __fails__ if you are able to circumvent a security control with the null byte.",
    "weakness_title_read_only": "Improper Input Validation",
    "weakness_id_read_only": "P95",
    "weakness": "df80ca69-a2c0-4d7f-b3f7-d81bd6d685e9",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2010-11-21T21:03:26-05:00",
    "last_updated": "2021-06-25T14:47:53.376000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T128",
    "universal_id": "40b0dcf0-92a8-4a8b-b5c3-311b54bc0bda",
    "countermeasure_name": "Test for access control bypass through user-controlled keys",
    "countermeasure_solution": "Follow these guidelines to test for access control bypass through user-provided keys:\n\n- Inspect the application for areas where user-specific information is accessed based on input from that user.\n    - For example, when account balances can be accessed by an HTTP-post parameter.\n\n- Change the key and check if the data objects are accessible.\n    - For web applications, you can use an HTTP-proxy tool to modify the input, and then attempt to access another user's data.\n\nThis test __fails__ if you are able to view a different user's data where normally you wouldn't be able to due to the lack of sufficient permissions.",
    "weakness_title_read_only": "Access Control Bypass Through User-Controlled Keys",
    "weakness_id_read_only": "P524",
    "weakness": "e233b5bf-9e2c-40a0-ab76-da229c6af9e1",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2010-11-21T21:04:25-05:00",
    "last_updated": "2021-06-25T14:47:48.141000-04:00",
    "custom": "False",
    "rules": "46594035-13ca-43ce-9db9-4570bb2a65c3;89a5e903-a2cd-4234-b0ea-714e3da7fee9;2ef3b940-05af-4cb9-bfc6-ed2fee4c8d42;2058e370-15ea-438f-9dfe-33bbba20751d;a0c61b9c-b4f4-4652-b8f3-0f80f1e1e172",
    "rules_read_only": "A37;A1082;A728;A45;A731"
  },
  {
    "countermeasure_id": "T129",
    "universal_id": "265ce34f-c5bb-41b0-a4bd-2f8196f4c26e",
    "countermeasure_name": "Test for reliance on file name or extension of externally-supplied file",
    "countermeasure_solution": "Use the following guidelines to test if your application's upload feature relies on the name or extension of files acquired from external sources:\n\n1. Inspect the application for file-upload functionality.\n\n2. For every part of the site that provides file upload, determine if there are restrictions on the file type. \n\n    If there are restrictions:\n\n3. Save a file of one type with the extension of another type that can be uploaded to the application.\n    - For example, if the application only allows users to upload JPEG images:\n        - Create a new text file, but save the extension as \".jpg\" rather than \".txt\".\n        \n4. Upload the renamed file.\n\nThis test __fails__ if the application does not restrict the upload.",
    "weakness_title_read_only": "Relying on Externally-Supplied File Names and Extensions",
    "weakness_id_read_only": "P532",
    "weakness": "42a88ec2-ec94-45f5-9deb-5eebc82d3bda",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2010-11-21T21:05:16-05:00",
    "last_updated": "2021-06-25T14:47:54.035000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T131",
    "universal_id": "cf13664d-9b9a-49a1-9262-d3913d156464",
    "countermeasure_name": "Test for forced password change upon login",
    "countermeasure_solution": "Use the following guidelines to test for a mandatory password change after receiving a system-generated password:\n\n1. Either register as a new user, or ask an administrator to give you a new password.\n\n2. Log in to the application.\n\nThis test __fails__ if the application does not immediately ask you to change your password.",
    "weakness_title_read_only": "Unchanged System-Generated Password",
    "weakness_id_read_only": "P706",
    "weakness": "4bf642f8-1cb1-4f31-a77b-7b1b3d4a5fd5",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2011-03-20T20:26:00-04:00",
    "last_updated": "2021-06-25T14:47:41.388000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T132",
    "universal_id": "739463ff-e48c-44d9-b880-822ed86c5240",
    "countermeasure_name": "Test for standard encoding format for all HTML content",
    "countermeasure_solution": "Use the following guidelines to test HTML content for a standard encoding format:\n\n1. Find a sample of pages from the application to test.\n\n2. For each page, use a proxy tool to check if the HTTP response specifies a character set, such as \"Content-Type: text/html; charset=UTF-8\".\n\n3. If the character set is not specified then check the HTML page for the \"meta\" tag and see if the content=attribute is set, such as \"content=\"text/html\". \n\nThis test __fails__ if either of the following are true:\n\n- Neither the HTTP header nor the HTML specify a character set for any of the pages.\n- The selection of pages specify different character sets.",
    "weakness_title_read_only": "Encoding Error",
    "weakness_id_read_only": "P70",
    "weakness": "6643b613-76c1-47a4-a7b5-64cb7390d8f2",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2011-03-20T20:41:12-04:00",
    "last_updated": "2023-03-07T10:18:52.559000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T133",
    "universal_id": "238c6017-c95e-48d2-8954-f162666b3bf1",
    "countermeasure_name": "Mask Primary Account Number (PAN) when displayed",
    "countermeasure_solution": "Ensure that Personal Account Numbers (PANs) are masked when they are displayed. \n\n- Only the BIN (first 6 or 4 digits of a PAN) and the last four digits can be cleartext when displayed.\n- Do not allow PANs to be copied or relocated when using remote-access technologies. This applies to all roles unless there is a documented business need to do so.",
    "weakness_title_read_only": "Plaintext Primary Account Number (PAN)",
    "weakness_id_read_only": "P686",
    "weakness": "0f0a155b-ace0-421c-b1a0-351921494adf",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "development",
    "created": "2011-04-07T15:41:25-04:00",
    "last_updated": "2023-03-23T18:29:33.194000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T134",
    "universal_id": "0a3acc92-f616-4ce0-96e7-984bcccb46a1",
    "countermeasure_name": "Do not send unprotected PANs in emails or text messages",
    "countermeasure_solution": "Do not send plaintext PANs in emails or instant messages. \n\nEncrypt PANs using strong encryption algorithms if you need to transmit them, or use other methods that render the PAN unreadable.",
    "weakness_title_read_only": "Plaintext Primary Account Number (PAN)",
    "weakness_id_read_only": "P686",
    "weakness": "0f0a155b-ace0-421c-b1a0-351921494adf",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "requirements",
    "created": "2011-04-07T20:28:13-04:00",
    "last_updated": "2021-06-25T14:47:37.728000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T135",
    "universal_id": "58fad616-6b06-4337-b1ae-6f13970b01fc",
    "countermeasure_name": "Assign each person using the system a unique user ID",
    "countermeasure_solution": "Assign every person accessing the system a unique user or access ID, and prevent multiple users from sharing the same account or access ID.\n\nIn addition, do not share administrative IDs such as admin accounts. Create a separate user for each administrator.\n\nThis is a strict compliance requirement for any user involved in payment processing, health related systems, and with access to cardholder or health data.\n\nThis countermeasure is generally derived from compliance requirements, such as the Payment Card Industry Data Security Standards (PCI DSS), or the Health Insurance Portability and Accountability Act (HIPAA).",
    "weakness_title_read_only": "Opportunity for disclaimer and lack of means to achieve non-repudiation",
    "weakness_id_read_only": "P749",
    "weakness": "eed86774-267d-44a2-b6e4-8213b5ba40e7",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "requirements",
    "created": "2011-04-07T20:31:06-04:00",
    "last_updated": "2022-08-23T09:39:57.822000-04:00",
    "custom": "False",
    "rules": "2ef3b940-05af-4cb9-bfc6-ed2fee4c8d42",
    "rules_read_only": "A728"
  },
  {
    "countermeasure_id": "T136",
    "universal_id": "3fd7dec4-cb7b-40f1-b3ff-08d9d7d279be",
    "countermeasure_name": "Do not store sensitive credit card data",
    "countermeasure_solution": "Sensitive credit card data must never be stored.\n\n__Note:__ Based on Security requirements of credit card, if the data is __encrypted__ the following items can be stored:\n\n- PAN (Primary Account Number)\n\n- Card holder’s name\n\n- Expiration date\n\n- Service code\n\nBut the following data is __Never__ stored even if the data is encrypted:\n\n- Sensitive Authentication Data (Full Magnetic stripe information)\n\n- PIN\n\n- PIN Block( Encrypted PIN)\n\n- Card Verification Value (CVV)\n\nFor more information please see PCI-DSS requirements for credit cards.",
    "weakness_title_read_only": "Storage of Confidential Credit Card Fields",
    "weakness_id_read_only": "P708",
    "weakness": "6d622a64-6be8-4255-b735-62c8249c68bb",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "requirements",
    "created": "2011-04-07T20:44:34-04:00",
    "last_updated": "2023-03-17T16:56:47.464000-04:00",
    "custom": "False",
    "rules": "0b07fc15-1e13-4c03-b097-c7e222fc019a",
    "rules_read_only": "A718"
  },
  {
    "countermeasure_id": "T137",
    "universal_id": "662620fb-e6e4-4853-86f6-61e96c7dcb4f",
    "countermeasure_name": "Encrypt protected health information in storage",
    "countermeasure_solution": "Encrypt protected health information when it is stored, such as in a database.\n\nOnly decrypt protected health information when necessary.",
    "weakness_title_read_only": "Plaintext Protected Health Information",
    "weakness_id_read_only": "P709",
    "weakness": "b863a7e9-9fd8-4061-9843-85c086567884",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "requirements",
    "created": "2011-04-24T16:22:47-04:00",
    "last_updated": "2023-05-25T13:09:49.084000-04:00",
    "custom": "False",
    "rules": "0b07fc15-1e13-4c03-b097-c7e222fc019a",
    "rules_read_only": "A718"
  },
  {
    "countermeasure_id": "T139",
    "universal_id": "082d9968-c871-442c-94b9-c84f6aa06d4a",
    "countermeasure_name": "Use secure channels to transmit protected health information on the Internet",
    "countermeasure_solution": "Use TLS to secure encrypted channels that transmit protected health information across the Internet.",
    "weakness_title_read_only": "Plaintext Protected Health Information",
    "weakness_id_read_only": "P709",
    "weakness": "b863a7e9-9fd8-4061-9843-85c086567884",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "development",
    "created": "2011-04-24T16:52:30-04:00",
    "last_updated": "2023-05-25T13:09:49.123000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T141",
    "universal_id": "99b56d37-53f7-4402-aeaf-2b7f06ef854d",
    "countermeasure_name": "Test that application masks credit card numbers when displayed",
    "countermeasure_solution": "Ensure credit card numbers are never fully displayed.\n\nWhen credit card numbers are displayed, ensure they are truncated and that no more than the first 6 and last 4 digits are displayed.",
    "weakness_title_read_only": "Plaintext Primary Account Number (PAN)",
    "weakness_id_read_only": "P686",
    "weakness": "0f0a155b-ace0-421c-b1a0-351921494adf",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2011-04-24T20:29:57-04:00",
    "last_updated": "2021-06-25T14:47:38.153000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T142",
    "universal_id": "61c9df6e-f27c-43f7-a1fa-ae5f8fa00d96",
    "countermeasure_name": "Test that the application's navigation flow is protected",
    "countermeasure_solution": "Test that the application only allows processing of the requests in the intended logical flow and in the right sequential order. Test this by:\n\n- Sending requests in steps that are out of order, for example for a form-based page navigation workflow, move from page 1 to page 4 without filling the information in page 2 and 3\n- Entering the URL of the pages out of sequence (rather than using the buttons to navigate between pages)\n- Sending requests using an automated system in non-realistic human time (This part is only necessary for critical systems)\n\nIf the application does not reject these types of behavior and requests, this test fails.",
    "weakness_title_read_only": "Insufficient Restriction of Navigation",
    "weakness_id_read_only": "P705",
    "weakness": "b82c4503-6575-4332-a3bf-7550b346e127",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2011-05-08T20:44:28-04:00",
    "last_updated": "2021-06-25T14:47:47.479000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T143",
    "universal_id": "d5eb79de-cb02-416b-ba04-53cf0b0c646e",
    "countermeasure_name": "Apply minimum password standards for mobile environments",
    "countermeasure_solution": "For new user registration and password resets, ensure that passwords meet minimum standards. These standards are generally outlined in an enterprise security policy. If your organization does not have such a policy, consider referring to a standard such as [the SANS Password Policy](http://www.sans.org/security-resources/policies/Password_Policy.pdf).\n\nIn mobile environments with limited keyboard capability, passwords that require punctuation might negatively impact usability. If the security policy you are following does not address mobile devices, you can achieve the same password strength by requiring longer passwords.\n\nThe following table might help compare the strength of various password requirements:\n\n Desired password entropy | Digits | Case insensitive Latin alphabet | Case insensitive alphanumeric | Case sensitive Latin alphabet | Case sensitive alphanumeric | All ASCII printable characters \n -------------------------|--------|---------------------------------|-------------------------------|-------------------------------|-----------------------------|-------------------------------\n 32 bits                  | 10     | 7                               | 7                             | 6                             | 6                           | 5 \n 40 bits                  | 13     | 9                               | 8                             | 8                             | 7                           | 7 \n 64 bits                  | 20     | 14                              | 13                            | 12                            | 11                          | 10 \n\n\nFor example, a policy that requires an upper case letter, a lower case letter, a number, and a minimum character length of six has almost the same strength as password with 8 characters and no number.",
    "weakness_title_read_only": "Password Requirements Are Weak",
    "weakness_id_read_only": "P408",
    "weakness": "e4138dde-9a0c-43d1-b721-ab4945beaaf6",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "requirements",
    "created": "2011-08-25T16:24:42.993000-04:00",
    "last_updated": "2021-06-25T14:47:43.651000-04:00",
    "custom": "False",
    "rules": "583f20c1-76a3-48ee-924d-a45029a29531 AND d0d429b5-9b82-466a-af97-db8c40d0c246",
    "rules_read_only": "A19 AND A713"
  },
  {
    "countermeasure_id": "T144",
    "universal_id": "0bb5941f-9a77-4af3-8c0e-470f42ea6061",
    "countermeasure_name": "Do not rely on client for account lockout or authentication throttling",
    "countermeasure_solution": "To protect against brute-forcing, implement a feature that locks users out after a predetermined number of failed authentication attempts. \n\nAlways implement the core mechanism for lockout and throttling on the server side because attackers can bypass client-enforced controls.",
    "weakness_title_read_only": "Repeated Authentication Attempts Are Not Restricted",
    "weakness_id_read_only": "P204",
    "weakness": "d8ce3b46-0bb3-4720-97cb-b9a3acd54f03",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "architecture-design",
    "created": "2011-08-26T18:36:38.864000-04:00",
    "last_updated": "2021-06-25T14:47:43.192000-04:00",
    "custom": "False",
    "rules": "088e2318-7522-439a-a136-d43260a729da",
    "rules_read_only": "A717"
  },
  {
    "countermeasure_id": "T145",
    "universal_id": "2cf8d5ea-1e8a-4117-86d2-753ca9cfb6a1",
    "countermeasure_name": "Avoid client-side authorization for mobile clients",
    "countermeasure_solution": "Never rely on client-side code to authorize users, and always check whether a user is allowed to perform an action on the server itself. Users can often bypass client-side security controls.\n\nUsers may be able to de-compile the client code, change the values of variables, or change states of the running program. This can be used to gain access to states of the program that are not otherwise accessible.",
    "weakness_title_read_only": "Client-Side Enforcement of Server-Side Security",
    "weakness_id_read_only": "P494",
    "weakness": "e1abe966-a4e7-4a0c-9481-ed2b146b2099",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "development",
    "created": "2011-08-29T12:33:25.176000-04:00",
    "last_updated": "2021-06-25T14:47:44.872000-04:00",
    "custom": "False",
    "rules": "d0d429b5-9b82-466a-af97-db8c40d0c246",
    "rules_read_only": "A713"
  },
  {
    "countermeasure_id": "T146",
    "universal_id": "3dd6bf0b-c705-41ea-8881-f1d29a5821b7",
    "countermeasure_name": "Use encryption for network communications in mobile environments",
    "countermeasure_solution": "Follow these instructions to prevent the leaking of sensitive information during data transmission:\n\n- Use encryption for network communications in mobile environments.\n- Use environment-specific developer tools to detect and log accidental insecure network accesses.\n    - Such as StrictMode for cleartext network traffic detection in Android.\n\nMobile devices switch between networks frequently and might connect to several different **untrusted WiFi or cellular networks** while in use. Make sure to communicate over an encrypted channel, such as an SSL-based connection/protocol.\n\nEven less sensitive data, such as public content, might be gathered and traced by untrusted networks. This could lead to the leakage of information such as **usage patterns**. To address this, use SSL (or other acceptable encryption methods) on all communications *even if the application's data itself is not confidential*.\n\n**Note:** Static content and media that do not contain any user information are an exception. They can be communicated over non-secure channels as long as they do not carry any code, scripts, or links that would be rendered on the device. Further, non-secure channels can be used if the received content is strongly validated.",
    "weakness_title_read_only": "Clear Text and Unencrypted Transmission of Information",
    "weakness_id_read_only": "P216",
    "weakness": "b1d166d6-8ca7-415f-9cd9-8c2d745d3d01",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "development",
    "created": "2011-08-29T15:50:24.784000-04:00",
    "last_updated": "2021-06-25T14:47:37.367000-04:00",
    "custom": "False",
    "rules": "d0d429b5-9b82-466a-af97-db8c40d0c246",
    "rules_read_only": "A713"
  },
  {
    "countermeasure_id": "T148",
    "universal_id": "6b6abf9c-954f-4841-9290-2cb02f362516",
    "countermeasure_name": "Avoid caching confidential data on client",
    "countermeasure_solution": "Use the following guidelines about confidential data cached in persistent memory:\n\n- Avoid storing confidential cached data before using that data, especially on external storage or flash memory.\n    - Find alternative ways to handle or transmit cached data instead of storing the data in a file before handling it.\n\n- If you must cache confidential content for display or other purposes:\n    - Clear the cached content directly after using it, using a secure wiping mechanism.\n    - Provide an expiry time for all cached confidential content, and securely delete it after the expiry has passed.\n    - For expiration and timeout, use a secure clock mechanism that cannot be overridden by changing the system time.",
    "weakness_title_read_only": "Information leak through client-side caching",
    "weakness_id_read_only": "P411",
    "weakness": "662c3860-00e9-4608-a926-aa393ed01dd2",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "development",
    "created": "2011-08-29T17:17:58.328000-04:00",
    "last_updated": "2021-06-25T14:47:50.935000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T150",
    "universal_id": "2955452e-e8c2-484e-8db4-3d69f426e819",
    "countermeasure_name": "Validate data received from server before handling",
    "countermeasure_solution": "Explicitly validate the structure of data that is received from a server before using it or passing it to other libraries, such as for displaying.\n\nUse the following guidelines:\n\n * Do not use internally formatted serialized data structures. \n    - Many libraries rely on certain assumptions about the serialized data and might lead to unexpected behaviors when faced with malicious serialized objects.\n\n * Validate data from the server in case an attacker manipulates or corrupts it.\n\n * Do not pass data received from the server to local operating system libraries without explicit data validation.\n\n * Validate the origin of data using certificates or other forms.\n    - This is especially important if the data format and content cannot be validated.\n\n * Consider signing data on the server.\n    - Validate the signatures against a trusted certificate or key on the client.",
    "weakness_title_read_only": "Insufficient validation of data received from the server",
    "weakness_id_read_only": "P714",
    "weakness": "c0a2a01c-9d60-460b-abf4-31998a55ca6a",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "development",
    "created": "2011-09-06T14:49:37.533000-04:00",
    "last_updated": "2021-06-25T14:47:53.664000-04:00",
    "custom": "False",
    "rules": "088e2318-7522-439a-a136-d43260a729da",
    "rules_read_only": "A717"
  },
  {
    "countermeasure_id": "T151",
    "universal_id": "bf1d4221-da25-4382-b050-f74b8dc6ff30",
    "countermeasure_name": "Use cryptographically secure random numbers",
    "countermeasure_solution": "Only use cryptographically secure random numbers for security purposes. For example, session ID numbers must be random numbers or strings that cannot be guessed by attackers.\n\nMost programming languages come with simple random number tools, such as rand() in C, which don't have enough entropy. In many cases, these Pseudo Random Number Generators (PRNGs) use a predictable value to seed a predictable sequence of random numbers, such as the system time. \n\nUse methods for the generation of cryptographic keys and other material (such as IVs, `k` values for digital signatures, etc.), which have entropy that meets the minimum effective strength requirements of the cryptographic primitives and keys\n\nProvide sufficient entropy in related processes, where cryptographic keys are generated through processes that require direct user interaction, such as through the entry of a passphrase or the use of `random` user interaction with the software. Specifically:\n    - Enforce an input domain that is able to provide sufficient entropy for any methods used for generating keys directly from a password/passphrase , so that the total possible inputs are at least equal to that of the equivalent bit strength of the key being generated (e.g., a 32-hex-digit input field for an AES128 key).\n    - Make sure that a work factor of at least 10,000 is applied where the passphrase is passed through an industry-standard key-derivation function, such as PBKDF2 or bcrypt, which extends the work factor for any attempt to brute-force the passphrase value. \n\nMost programming languages also provide cryptographically secure random number generators, which have passed security tests for pseudo-randomness. For example, the SecureRandom class in Java or Microsoft CryptoAPI. Use these libraries instead.\n\nA typical case of using cryptographically secure random number generators could be generating v4 GUIDs. Details are mentioned in the additional requirement **ASVS Requirements - GUID v4 algorithm.** \n\n**Note**: The SHA1PRNG algorithm that is widely used for random number generation is no longer considered cryptographically strong and should be avoided in critical applications.",
    "weakness_title_read_only": "Use of Insufficiently Random Values",
    "weakness_id_read_only": "P228",
    "weakness": "5dcf2b67-f1e0-4f95-9469-c0a23b0acc7c",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "requirements",
    "created": "2011-09-06T16:12:11.801000-04:00",
    "last_updated": "2023-03-13T13:05:10.965000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T152",
    "universal_id": "73b68836-7a2b-47c7-8ee3-9e9b8797dd94",
    "countermeasure_name": "Avoid asking for and using excessive permissions",
    "countermeasure_solution": "Use the following guidelines for avoiding the use of excessive permissions:\n\n- Only require the minimum set of permissions needed to run the application.\n    - Reduce the privileges required where possible.\n    - This will limit the impact of a client-side compromise.\n\n- Review the permissions that your application asks for during installation.\n    - Decide whether each permission or privilege is necessary.\n\n- Eliminate any leftover permissions that were used for features or functions that have been removed from the final application.\n\n- If possible, check if the client is being executed with excessive permissions.\n    - For example, root and admin privileges.\n    - Either provide a warning, refuse to continue the execution, or demote it to a non-privileged state.",
    "weakness_title_read_only": "Client applications require excessive permissions",
    "weakness_id_read_only": "P715",
    "weakness": "4b37c79c-824e-434a-b6eb-6965bb6fd70f",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "requirements",
    "created": "2011-09-07T15:32:57.856000-04:00",
    "last_updated": "2021-06-25T14:47:51.423000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T153",
    "universal_id": "0755ddda-2dc0-4c39-a71d-82aa27de68ed",
    "countermeasure_name": "Scrub buffers holding sensitive information when releasing/deleting",
    "countermeasure_solution": "Releasing or deleting variables, specifically variables allocated on the heap, might not remove the content of its data from memory. Sensitive information might still remain in the heap after release and might be retrieved by an attacker that can successfully compromise a client.\n\nUse scrubbing techniques, such as overwriting buffers and variables with zeros, before releasing memory containing confidential data.\n\nAlways scrub at least the following kinds of data:\n\n * Passwords and other authentication tokens.\n\n * PINs.\n \n * Confidential credit card data, such as CVV and PAN numbers.",
    "weakness_title_read_only": "Sensitive information uncleared before release",
    "weakness_id_read_only": "P123",
    "weakness": "2002c126-9f98-416e-ba84-3648bad801e6",
    "tags": "",
    "countermeasure_priority": "3",
    "phase": "development",
    "created": "2011-09-16T14:11:05.778000-04:00",
    "last_updated": "2021-06-25T14:47:56.284000-04:00",
    "custom": "False",
    "rules": "12b2ed2d-5b35-4d29-8996-7eefbc6b10aa",
    "rules_read_only": "A708"
  },
  {
    "countermeasure_id": "T154",
    "universal_id": "5450e339-5cbd-41fa-9403-4ceb79e657b8",
    "countermeasure_name": "Do not store or cache credit card information on client",
    "countermeasure_solution": "Credit card information must not be stored or cached on the client application. The client's responsibility must be limited to gathering the data from the user and passing it to the server. The client must then securely remove all instances of data from its cache.\n\nThe sensitive data fields pertaining to credit cards are as follows:\n\n1. CVV\n2. PIN\n3. PAN\n4. Full Name\n5. Issue and Expiry Dates\n\nFor more details about clearing data from cache, refer to [T139: Clear browser data on user logout](/library/tasks/T1539/).",
    "weakness_title_read_only": "Storage of Confidential Credit Card Fields",
    "weakness_id_read_only": "P708",
    "weakness": "6d622a64-6be8-4255-b735-62c8249c68bb",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "requirements",
    "created": "2011-09-19T14:55:03.650000-04:00",
    "last_updated": "2022-03-01T11:40:33.310000-05:00",
    "custom": "False",
    "rules": "088e2318-7522-439a-a136-d43260a729da",
    "rules_read_only": "A717"
  },
  {
    "countermeasure_id": "T155",
    "universal_id": "903740ef-ac30-43d9-af7f-8e4eef637f47",
    "countermeasure_name": "Avoid storing sensitive logs on the client",
    "countermeasure_solution": "Store all logs that contain user information on the server component. Clear all logs from the client when the user logs out to avoid information leakage.\n\nLogs stored on the client can be accessed by unauthorized parties in many situations and are considered unsecure. Circumstances that might lead to information leaks by logs stored on the client side include:\n\n- Change of user (the current user logs out and another user logs in).\n- Stolen hardware or devices.\n- Out of commissioned hardware or devices.\n- Compromised operating system (possibly through other applications).\n\n**Note**: Clearing logs is a measure of defense, but is not in itself a secure solution. This is because a client might be compromised prior to a logout, or the application might miss an explicit logout event.",
    "weakness_title_read_only": "Information Leak Through Log Files",
    "weakness_id_read_only": "P420",
    "weakness": "60bad2d0-c4bf-4f4a-8d9b-c843e08fabe3",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "requirements",
    "created": "2011-09-21T03:18:14.519000-04:00",
    "last_updated": "2021-06-25T14:47:38.180000-04:00",
    "custom": "False",
    "rules": "088e2318-7522-439a-a136-d43260a729da",
    "rules_read_only": "A717"
  },
  {
    "countermeasure_id": "T156",
    "universal_id": "55a8d017-64a8-479a-babb-05bb7ff2ba74",
    "countermeasure_name": "Validate certificate and its chain of trust properly",
    "countermeasure_solution": "Validate all certificates and their chains of trust, such as X509 certificates. Any application using __SSL__ or __public key infrastructure (PKI)__ based authentication must do the following at the very least:\n\n * Follow the chain of trust for certificate validation.\n    * Verify that each node in the chain has a valid certificate by itself and has the authority to sign the child certificate.\n\n * Validate host specific data of certificates to make sure it matches the expected destination.\n    * For instance, make sure the Common Name matches the expected value.\n\n * Validate the expiry date of the certificate.\n\n * Check certificate revocation.\n    * Use certificate revocation lists (CRLs) or online certificate status protocol (OCSP).\n \n * Re-check certificate revocation periodically after the initial revocation check. \n    * You can do this by either:\n        * Re-checking the revocation list for every connection (avoid caching).\n        * Setting the cache to expire after a period of time (one week, or 24 hours in more security-sensitive environments).\n \n * Do not accept or initiate SSL connections for which the certificate misses one or more of the validation steps above.\n\n__Note__: Authentication/SSL systems should be designed and implemented in a way that certificate validation, revocation status verification, and user authentication do not impose impeding latency on the system.\n\nLibraries like OpenSSL or operating system interfaces might automatically perform certificate validation.\n\n * Ensure you review the specifications of the specific SSL library/interface and make sure that proper settings/parameters are used to activate all the checks listed above.\n\n * Handle all potential warnings and errors that might arise from any of these checks failing.\n\n * Use the latest versions of your library and check for vulnerabilities in the specific version of the library/interface that you are using that might be used to bypass the validation process.\n\nAs the number of certificate authorities grows, there is more and more risk associated with certificates. Forging valid certificates by compromised signing authorities and social engineering for impersonation during the certificate issuing process are becoming increasingly common. To reduce the risk associated with certificate-based trusting you may wish to include the following additional measures:\n\n * Only use reputable signing authorities for your own certificates.\n\n * Ensure that clients validate the specific signing authority your organization uses.\n    * For example, by hard-coding and checking the fingerprint of the signing authorities.\n \n * Only use Extended Validation (EV) certificates and limit accepted certificates to EV certificates on the client side.",
    "weakness_title_read_only": "Certificate Validation Issues",
    "weakness_id_read_only": "P716",
    "weakness": "47e93cf5-c45c-457d-831d-c531b243544e",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "requirements",
    "created": "2011-09-22T20:00:12.235000-04:00",
    "last_updated": "2021-06-25T14:47:44.679000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T157",
    "universal_id": "28e3bf1f-6bad-4460-9aa9-45d4adbac738",
    "countermeasure_name": "Temporary files must be cleaned up after the resource is used",
    "countermeasure_solution": "Use a process, such as the one described below, to remove all temporary files that may contain confidential or integral data after use:\n\n* Group session files, or user specific files together.\n    * Put user specific files in a folder whose name contains the session ID, or username/userID if session IDs are not being used. \n    * For example, `tmp/<appname>/sess_<session_id>/\\*`.\n \n* When a user logs out, remove the files grouped for that session/user.\n    * Initiate the removal process immediately.\n    * Do not rely on a server to respond to the logout request.\n\n* Prepare a policy/convention that assigns an expiry period to each type of temporary file. \n    * One approach is to use the name and path to determine the expiry time.\n    * For example, all files in `tmp/<appname>/sess_\\*/\\*` have a 10 minute expiry period, and files in `tmp/<appname>/media_cache/*` have a 12 hour expiry period.\n\n* Provide an explicit check to ensure that the application is actually removing temporary files according to policy.\n    * For example, implement a temporary file watchdog thread that iterates all temporary files and checks them every 10 minutes.\n    * The file watchdog will then remove files whose last access timestamp has expired according to the expiration policy.",
    "weakness_title_read_only": "Incomplete Cleanup",
    "weakness_id_read_only": "P348",
    "weakness": "6ac9bf26-6f17-401f-a8f8-75847e5b5c63",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "requirements",
    "created": "2011-09-24T17:22:33.176000-04:00",
    "last_updated": "2021-06-25T14:47:56.202000-04:00",
    "custom": "False",
    "rules": "c942552c-0d31-41c5-bba7-795ba0e8d88d;647890fa-d25d-4852-86fe-a97a0d04cf54",
    "rules_read_only": "A736;A735"
  },
  {
    "countermeasure_id": "T158",
    "universal_id": "c981909b-2f3d-457f-a666-cc78608065af",
    "countermeasure_name": "Verify integrity of client-supplied read-only data from rich clients",
    "countermeasure_solution": "Use the following guidelines for verifying the integrity of read-only data from clients:\n\n- Assume that users are capable of modifying any data transmitted from a rich client to a server.\n- Avoid relying on any read-only data supplied by clients.\n    - For example, clients must not be able to modify the price (or other properties of an item) in a shopping cart.\n- If you rely on client-supplied data for business or architectural reasons, use a server-side mechanism that detects tampering. \n\nOne example of this is to use a Hashed Message Authentication Code (HMAC), which does the following:\n\n * Takes a hash of read-only fields in a form prior to sending them to the client.\n * Encrypts that hash with a secret key stored on the server.\n * Adds the hashed and encrypted value as an additional piece of data sent to the client.\n * When the client submits data to the server, the read-only client-supplied parameters are re-encrypted and re-hashed before being compared to the hash with the client-supplied HMAC data.\n    * Any difference between them indicates that one or more of the read-only parameters were tampered with.",
    "weakness_title_read_only": "External Control of Assumed-Immutable Parameter in Rich Client",
    "weakness_id_read_only": "P717",
    "weakness": "ba5eca05-d92a-431b-b4b7-21286415d455",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "development",
    "created": "2011-10-13T20:35:28.493000-04:00",
    "last_updated": "2021-06-25T14:47:54.137000-04:00",
    "custom": "False",
    "rules": "28183a47-70c3-4ffc-a2de-648d7c723502",
    "rules_read_only": "A1265"
  },
  {
    "countermeasure_id": "T159",
    "universal_id": "a746ba02-b170-4e57-afe4-2e7ab342f86a",
    "countermeasure_name": "Follow best practices for secure error and exception handling",
    "countermeasure_solution": "Follow these guidelines to create secure system or user error messages that reveal the __minimum necessary amount of information__ about the cause of an error, and the internal status of a system:\n\n- Use a __global error handler__ to catch errors or exceptions not explicitly handled by the application.\n\n- Analyze the return values of the functions when they contain information about the outcome of the operation. Do not ignore such values. For example a file creation object may return the status code of the operation and indicate the success or failure.\n\n- Always provide remote systems/users with a __generic error message__ that does not reveal internal system details, such as a stack trace, working directory, or core dump.\n\n- __Centralize__ the process of __error message generation__.\n    - A class or property-file can contain the text of all returned error messages with various parameters.\n\n- Set application and server configurations to provide __minimum details in error messages__.\n    - Especially when an unhandled exception or error occurs that is not explicitly caught by the application.\n    - For example, when an application server handles part of the messages before reaching your application.\n\n- In some cases, the server may provide a facility to catch all errors before forwarding to the remote system.\n    - In other cases, the application will need to explicitly develop a handler that catches any errors before redirecting them to the remote system.\n        - The advantage here is that the application can log the error with a unique ID, create a generic message to the remote system, and include the unique ID in the response.\n        - This allows application support personnel to troubleshoot an issue without revealing system details to remote systems.\n\n- Do not explicitly specify the __underlying reason for an error__ when a number of reasons could have caused it.\n    - This is especially important when that information could be used for more directed attacks.\n    - A typical example is returning different errors for wrong usernames or wrong passwords, which allows for __user enumeration__ attacks.\n\n- Do not include any __sensitive data__ in error messages.\n    - This is especially important when error messages are logged.\n\n- __Sign and encrypt__ detailed error messages when they are required by a specific remote system.\n    - Use a set of mutual keys to encrypt the information.\n    - The receiving system can also request a signature and verify the signature to verify the authenticity of the errors.",
    "weakness_title_read_only": "Information Exposure through an Error Message",
    "weakness_id_read_only": "P105",
    "weakness": "44473a31-0885-4e21-bc89-25ccc7dc73e1",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "development",
    "created": "2011-10-13T20:47:12.542000-04:00",
    "last_updated": "2021-06-25T14:47:38.748000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T160",
    "universal_id": "e16f0da7-94ee-468a-ad86-c565f3df7e80",
    "countermeasure_name": "Avoid relying on jailbreak or root detection as a strong security measure",
    "countermeasure_solution": "Avoid relying on jailbreak (iOS) or root (Android) detection as a strong security measure, or as a parameter in security logic of the application. Always assume the application might be running on a jailbroken/rooted device and design the security measures around that.\n\nWhile you can perform root and jailbreak detection when a critical operation is performed (to stop performing critical operations on a rooted device), only use this as an additional security measure, and do not solely rely on this.\n\nJailbreak detection might be used for business, policy, or other purposes. For example, an organization might decide for some business/marketing purpose to implement measures that detect and prevent installation on jailbroken/rooted devices. Assume that the application can be installed on jailbroken/rooted devices and provide security measures around that.",
    "weakness_title_read_only": "Jailbreak or root detection can be circumvented",
    "weakness_id_read_only": "P718",
    "weakness": "024ddaae-e003-4818-a333-a41f2b165f0e",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "requirements",
    "created": "2011-10-14T16:42:38.448000-04:00",
    "last_updated": "2021-06-25T14:47:39.417000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T161",
    "universal_id": "018b89a0-f87a-4373-be32-57f513e33813",
    "countermeasure_name": "Treat unique device IDs as personal information",
    "countermeasure_solution": "Use the following guidelines for unique device identifiers (UDIDs).\n \n- Treat these UDIDs as personal information:\n\n    - Serial numbers \n    - International Mobile Equipment Identity (IMEI) \n    - Integrated Circuit Card ID (ICCID) \n \nThe following requirements apply to UDIDs, whether they are called UDID for a specific device or are any of the UDID variants above. \n \n- Determine if you actually need to use device identifiers. \n    - Avoid using UDIDs and other device IDs in the application unless absolutely necessary. \n    - If you need to trace installations, use an application-specific universally unique identifier (UUID). \n \n- Never use UDIDs for generating values such as URLs, usernames, addresses, or other information that might be disclosed to others in some way. \n \n- If you must use UDIDs, consider the following: \n    - Advise end users of the UDIDs and explain why the data is being used as well as how the data will be treated. \n    - Avoid transmitting any UDID outside of the device. If you must transmit the UDID, treat it as a password. For example, hash the UDID with a secure method that uses a salt so that the plaintext value cannot be retrieved. \n    - Always use secure communication channels such as SSL when handling UDIDs.\n\nReference: [GDPR personal data](https://www.gdpreu.org/the-regulation/key-concepts/personal-data/)",
    "weakness_title_read_only": "Privacy Violation",
    "weakness_id_read_only": "P257",
    "weakness": "b0418f1b-bf92-45ba-845f-abfb9735f1cf",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "requirements",
    "created": "2011-10-14T19:10:14.933000-04:00",
    "last_updated": "2022-11-02T12:45:40.584000-04:00",
    "custom": "False",
    "rules": "2d6dc5e3-0ccb-4911-86d2-1f4aaac107b3 AND d0d429b5-9b82-466a-af97-db8c40d0c246;c942552c-0d31-41c5-bba7-795ba0e8d88d AND d0d429b5-9b82-466a-af97-db8c40d0c246",
    "rules_read_only": "A742 AND A713;A736 AND A713"
  },
  {
    "countermeasure_id": "T162",
    "universal_id": "5c86d54b-d7c8-4cbd-9656-f85d3be39089",
    "countermeasure_name": "Validate pathname before retrieving local resources",
    "countermeasure_solution": "When attempting to retrieve a local resource based on a user input, validate the pathname to ensure that the resulting resource is within the intended workspace.\n\nThis validation is most commonly essential when the application receives a remote message/request that can contain references to a local resource, such as a local file or image that will be shown to the user. A remote attacker might be able to control the resource location and cause the application to retrieve and/or execute potentially unsafe resources from outside the user's authorized territory.\n\nA recommended approach is to wrap all access points to local resources in the application with a security control function that calculates the final location of the resource by resolving all the relative paths. Then validate that the final location of the resource falls within the approved white-listed locations within the workspace of the program. See the How-to's section for more details.\n\n__Note:__\n\nThe temporary directory of the system might be shared between several programs. Due to easy and unrestricted access by other applications, access to this directory must be prohibited, or the workspace must be restricted to a hardened sub-directory that limits access permissions to just your application.",
    "weakness_title_read_only": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
    "weakness_id_read_only": "P116",
    "weakness": "6a8e70fc-4f24-47bd-9fe4-c61376fd87e6",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "development",
    "created": "2011-10-17T13:00:13.749000-04:00",
    "last_updated": "2021-06-25T14:47:54.783000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T163",
    "universal_id": "4d73830c-e66c-40a1-bf15-1205762a6c13",
    "countermeasure_name": "Handle health data securely",
    "countermeasure_solution": "Where possible, avoid storing protected health data on the client.\n\nIf you must store protected health data on the client:\n\n * Use a user-provided key to safely encrypt stored health data in a client-side database, or as an encrypted file.\n * The key must not be stored anywhere on the client.\n * Decrypt protected health information only when necessary.\n * When displaying/using the data, safely remove unencrypted cached versions directly after using it.\n\nOtherwise:\n\n * Remove cached protected health data after transmitting it.\n * Use an encrypted secure channel such as SSL for transit.",
    "weakness_title_read_only": "Plaintext Protected Health Information",
    "weakness_id_read_only": "P709",
    "weakness": "b863a7e9-9fd8-4061-9843-85c086567884",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "requirements",
    "created": "2011-10-18T15:32:18.411000-04:00",
    "last_updated": "2023-05-25T13:09:49-04:00",
    "custom": "False",
    "rules": "088e2318-7522-439a-a136-d43260a729da",
    "rules_read_only": "A717"
  },
  {
    "countermeasure_id": "T164",
    "universal_id": "026288a2-cd5c-4760-afbb-a676e1ee04e1",
    "countermeasure_name": "Clear session information from client upon logout",
    "countermeasure_solution": "In the client, remove any session ID/handler, and all the temporary/cached data pertaining to the session upon logout. This will prevent information leakage on shared devices.\n\nCommon events that trigger a session clean up include:\n\n * The explicit logout by the user.\n * A server returning a session error or session invalid message.\n * The expiry of a session based on a timeout returned by the server.",
    "weakness_title_read_only": "Sessions Not Expired Upon Logout",
    "weakness_id_read_only": "P694",
    "weakness": "50803938-cdd7-44fd-b190-60a3c468c523",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "requirements",
    "created": "2011-10-19T10:54:56.431000-04:00",
    "last_updated": "2021-06-25T14:48:00.969000-04:00",
    "custom": "False",
    "rules": "088e2318-7522-439a-a136-d43260a729da",
    "rules_read_only": "A717"
  },
  {
    "countermeasure_id": "T165",
    "universal_id": "7a236f57-1ff1-4ffa-b7a2-16a1a3b66420",
    "countermeasure_name": "Do not rely on Unique Device ID values in security controls",
    "countermeasure_solution": "Use the following guidelines for Unique Device ID (UDID) values:\n\n- UDIDs, such as Serial Numbers, IMEI, and ICCID might be modified by an attacker. \n    - Do not rely on their values in security controls such as authentication, authorization, or any other technical control that considers them immutable.\n\n- A UDID as a factor of authentication provides no additional security.\n    - While it does not weaken the other factors, privacy factors, as well as least access principles suggest that the UDIDs should not to be used for authentication/authorization purposes.\n\n**Note**: There are acceptable uses for UDIDs when it comes to business needs, such as using it as a hint that a user has changed their device. These uses can be considered as long as they are not relied on for security, and the privacy risks or impacts are justified.",
    "weakness_title_read_only": "Authentication Bypass by Assumed-Immutable Data",
    "weakness_id_read_only": "P199",
    "weakness": "eb387ab7-491d-460f-b5bc-8b062a9354af",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "requirements",
    "created": "2011-10-19T11:05:31.931000-04:00",
    "last_updated": "2021-06-25T14:47:42.736000-04:00",
    "custom": "False",
    "rules": "3657f540-0b47-49b3-9a4d-69412ec692d6 AND d0d429b5-9b82-466a-af97-db8c40d0c246;64e2a4e5-efe8-4a19-8b5f-b835d963a40c AND d0d429b5-9b82-466a-af97-db8c40d0c246",
    "rules_read_only": "A714 AND A713;A715 AND A713"
  },
  {
    "countermeasure_id": "T166",
    "universal_id": "14f7fe7f-ae1d-44af-94cf-d006c22fcd79",
    "countermeasure_name": "Protect against JSON hijacking",
    "countermeasure_solution": "Use the following guidelines to reduce the risk of JSON hijacking attacks, especially when dealing with older web browsers:\n\n* Make the URLs in the system used to retrieve JSON objects unpredictable and unique for each user session.\n* On the server side, use a hard to guess random nonce that is unique to the user's session to differentiate between legitimate requests and forged requests similar to protection against Cross-Site Request Forgey (CSRF).\n    * Each request from the client to the server should contain this nonce and the server should reject all other requests.\n* Use the **application/json** MIME type for all returned JSON responses.\n    * Avoid using text/html.\n* Do not use arrays as the highest level JSON structure. Use objects (dictionaries) instead.\n    * For example, if you need to return `[1,2,3]`, return `{ \"result\": [1,2,3] }` instead.\n* To avoid client-side browser bugs, make it difficult to get access to the JSON object content via the \"Script\" tag by surrounding the returned JSON message with comment tags. For example, a JSON string like `[1,2,3]` should be commented out like `/* [1,2,3] */` before being sent to the client. If your client-side library allows it (Dojo for example), use Comment Filtered JSON format and \"**text/json-comment-filtered**\" MIME type and the client would automatically strip the comment tags.\n* You may also add other types of surrounding tags or prefixes/postfixes that suit your application to the returned JSON message to make the syntax non-valid for JavaScript. As a result of this, the browser would raise an error if the client-side code tries to load the JSON using the \"Acript\" tag. You should remove the surrounding tags in your client-side code manually before parsing the JSON message.",
    "weakness_title_read_only": "JSON Hijacking",
    "weakness_id_read_only": "P719",
    "weakness": "ea1b95e0-709a-4aa0-9212-51261433b797",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "development",
    "created": "2011-10-25T17:16:41.218000-04:00",
    "last_updated": "2021-06-25T14:47:46.992000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T167",
    "universal_id": "64ab1c58-ba7b-4454-a425-a328667958ee",
    "countermeasure_name": "Test that the application is not vulnerable to JSON Hijacking",
    "countermeasure_solution": "Use an HTTP-proxy/inspection tool to ensure that the returned JSON format for AJAX endpoints uses the correct MIME-type, **application/json**, AND conforms to at least one of these secure formats:\n\n * Use JSON objects (dictionary) as the highest level construct.\n * Use Comment Filtered JSON format.\n\nYou can use any inspection suite, such as Burpsuite, Fiddler, Firebug, or IE Developer Tools, to view the AJAX messages. Check the first few characters of each JSON message. \n\n * Set the filter to XHR (XMLHttpRequest) to capture only AJAX messages, if your tool allows that.\n\n * Inspect AJAX responses.\n    * If the first non-white-space character is `[` (an array constructor), then the AJAX endpoint is vulnerable to JSON hijacking.\n    * Otherwise, if it starts with `/*` (comment), or `{` (object constructor), then it is not vulnerable.\n\n * Check the MIME type. \n    * The correct MIME-type is `application/json` or `text/json-comment-filtered`.",
    "weakness_title_read_only": "JSON Hijacking",
    "weakness_id_read_only": "P719",
    "weakness": "ea1b95e0-709a-4aa0-9212-51261433b797",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2011-10-26T14:51:12.455000-04:00",
    "last_updated": "2021-06-25T14:47:48.855000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T168",
    "universal_id": "2017e07e-bd8e-477a-970b-6dcee29f7ecb",
    "countermeasure_name": "Prevent auto-snapshot from saving sensitive data (iOS)",
    "countermeasure_solution": "An application cannot stop the iOS auto-snapshot feature. To prevent the disclosure of sensitive data, interject and capture an event as it becomes inactive before the snapshot is taken.\n\nImplement either of these methods:\n\n- **Hide** confidential fields when the application is about to become inactive.\n    - Unhide the fields once the app is active.\n\n- **Mask** the current view with a blank or static image that contains no sensitive information.\n    - Once the app is active, remove the image to show the correct screen to the user.\n\n**Note:** This change would affect the user experience since it interrupts an iOS global feature. Your app may *look* slow when reloading. Consider consulting your UX team.",
    "weakness_title_read_only": "Information disclosure in iOS via system snapshots",
    "weakness_id_read_only": "P720",
    "weakness": "0fcdc81f-4e33-4c93-a5d3-a29d25c41e4d",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "requirements",
    "created": "2011-10-28T16:18:25.763000-04:00",
    "last_updated": "2021-06-25T14:47:50.917000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T169",
    "universal_id": "1d3558dd-abd0-4692-bd40-938cce71f5da",
    "countermeasure_name": "Test that the site is not vulnerable to DOM-based XSS",
    "countermeasure_solution": "To test for DOM-based XSS, inspect all the JavaScript content, either inside .js files, or embedded inside HTML files (script tags, event handlers, and so on). Look for and identify user-controlled values (also known as \"Sources\"), and look for places that can render the values/functions (also known as \"Sinks\").\n \nThe most commonly known Sources are:\n \n    document.URL\n    document.URLUnencoded\n    document.location (and many of its properties)\n    document.referrer\n    window.location (and many of its properties)\n    location (window.location can be accessed as just location)\n \nThe commonly used Sinks are:\n \n    element.innerHTML = \"...\";\n    element.outerHTML = \"...\";\n    document.write(...);\n    document.writeln(...);\n \nIf the value of a Source variable is directly used for output generation using a Sink method without explicit validation/sanitation of the content, then this test __fails__ and the web site is vulnerable to DOM-based XSS. \n\nFor example, the following code would fail:\n \n    document.writeln(document.referrer)\n \n**Note**: We recommend performing this test by inspecting the JavaScript source, which is always available, rather than executing runtime tests. Inspecting the source is more reliable.",
    "weakness_title_read_only": "Improper Neutralization of Input During Web Page Generation (Cross-Site Scripting)",
    "weakness_id_read_only": "P632",
    "weakness": "67b0e738-a725-4462-be2a-52493b75f4ac",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2011-10-31T14:34:02.231000-04:00",
    "last_updated": "2021-06-25T14:47:55.163000-04:00",
    "custom": "False",
    "rules": "f0c5d269-ade4-4873-8321-2f442d38ee29",
    "rules_read_only": "A3"
  },
  {
    "countermeasure_id": "T170",
    "universal_id": "8a268117-c8ed-44d9-b088-39a723244ae9",
    "countermeasure_name": "Secure IPC endpoints used in clients",
    "countermeasure_solution": "Client applications use inter-process communication to:\n\n* Provide service for other components in the system. \n    * For example, a messaging application that handles `email://` URLs to allow other applications to send email through it.\n* Allow bi-directional communication with other components/clients in the system.\n    * For example, an application that needs to receive geo-location updates from a mobile device map service and uses an IPC endpoint to receive callbacks.\n\nTo secure IPC endpoints, you must:\n\n1. Identify the exposed endpoints.\n\n2. Identify the security controls that can be used.\n    * For example, an operating system provides permissions information about other processes.\n\n3. Identify and validate insecure input using strict/whitelist validation filters.\n    * Treat the other party to the inter-process communication as potentially hostile.\n\n**Note**: You will need to identify which controls are secure as specified by the platform, and which are not. For example, if the sender's application identifier is provided by the sender, then it means that it can be forged and cannot be used in a security control.",
    "weakness_title_read_only": "Insecure IPC Handling",
    "weakness_id_read_only": "P721",
    "weakness": "9e5815fc-1b24-4f07-8f60-204f32d61ad0",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "development",
    "created": "2011-11-11T12:53:17.143000-05:00",
    "last_updated": "2021-06-25T14:47:53.966000-04:00",
    "custom": "False",
    "rules": "088e2318-7522-439a-a136-d43260a729da AND !3657f540-0b47-49b3-9a4d-69412ec692d6 AND !64e2a4e5-efe8-4a19-8b5f-b835d963a40c",
    "rules_read_only": "A717 AND !A714 AND !A715"
  },
  {
    "countermeasure_id": "T171",
    "universal_id": "92a561d0-24dd-4046-84fa-87c0e4658138",
    "countermeasure_name": "Follow spam-free guidelines for sending solicitation emails",
    "countermeasure_solution": "Use the following guidelines for solicitation emails such as advertisements and promotions: \n \n1. Provide an opt-out mechanism using an unsubscribe link that is active for at least 60 days. \n \n    - If the design or business policy prevents using unsubscribe links, provide a detailed description of how to unsubscribe.\n\n2. Include a valid physical address of the business at the bottom of the message. \n3. Use a description and relevant title. \n4. Include the full name of the business/organization in the email. \n5. Inform the user why they are receiving this communication. \n6. Avoid customer tracking codes, such as tracker images, unless that is explicitly stated in the privacy policy. \n \nAlso, make sure that you frequently review the status of each entry in the contact list and that you are sure for each entry you have either [express or implied consent](https://www.crtc.gc.ca/pubs/CASL_Infograph3_Eng.pdf).  \n \n## Important Note \n \nIf you send commercial electronic messages (CEMs) to Canadian individuals or companies, even if your company is outside Canada, you should follow Canada's Anti-Spam Legislation (CASL) mandates. If the CEM is only routed through Canada, CASL does not apply. Make sure you read and follow the guidance provided in the CASL Additional Requirement for this countermeasure.",
    "weakness_title_read_only": "Spam Emails",
    "weakness_id_read_only": "P722",
    "weakness": "b7165939-ccd9-47c9-a827-a23cd7203071",
    "tags": "",
    "countermeasure_priority": "2",
    "phase": "requirements",
    "created": "2012-02-08T03:08:35.787000-05:00",
    "last_updated": "2022-09-01T09:53:18.802000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T173",
    "universal_id": "7f875457-aedf-4207-b1ad-61c76998f501",
    "countermeasure_name": "Test that user data is transmitted over secure channel in mobile environment",
    "countermeasure_solution": "Use the following guidelines to test that mobile data from users is transferred using a secure channel:\n\n## Structural testing and code analysis\n\nTo audit the source code:\n\n1. Review all statically embedded URLs in the application.\n\n2. For each `http://` URL, verify that no user data is being sent or received via the specified URL. A commonly allowed exception where non-SSL usage is permitted is the retrieval of static content, such as images and other media.\n\n3. Review all network socket creations. If SSL is not enabled on the socket, verify that no user data is being sent or received through the network endpoints.\n\n**Note**: Static code analysis might not be able to conclusively validate this test. In some cases, the protocol being used is retrieved from messages received by the client instead of being explicitly specified in the code (HTTP vs HTTPS). By reviewing the code, we may not be able to figure out whether the HTTP or HTTPS protocol is used.\n\n\n## Black-box testing\n\nUse the following guidelines for black-box testing:\n\n1. Set up a proxy or network traffic sniffing tool.\n    - The proxy or traffic sniffing tools being used must be capable of inspecting the non-SSL content.\n\n2. If a proxy is being used, make sure that the SSL traffic is not modified when passing through it (do not enable SSL inspection).\n\n3. Point the device to use the proxy or network access point that you have set up and start using the application.\n\n4. Go through all possible operations that the application performs.\n\n5. Inspect the non-encrypted traffic.\n    - This test __fails__ if any user data is observed.",
    "weakness_title_read_only": "Clear Text and Unencrypted Transmission of Information",
    "weakness_id_read_only": "P216",
    "weakness": "b1d166d6-8ca7-415f-9cd9-8c2d745d3d01",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2012-02-09T13:44:26.860000-05:00",
    "last_updated": "2021-06-25T14:47:37.104000-04:00",
    "custom": "False",
    "rules": "d0d429b5-9b82-466a-af97-db8c40d0c246",
    "rules_read_only": "A713"
  },
  {
    "countermeasure_id": "T174",
    "universal_id": "acc4253e-e486-40d8-a4a2-569e832053ea",
    "countermeasure_name": "Test that the client application is not asking for excessive permissions",
    "countermeasure_solution": "Normally, the client application asks for permissions when being installed. \n\nUse the following guidelines to test for excessive permissions:\n\n1. Start installing the application on a fresh system.\n    - A fresh installation ensures that the permissions are not already granted.\n\n2. Proceed to the installation step that asks the user for permissions.\n\n3. For each privilege that the application is asking for permission, review if the privilege is needed.\n    - Consider whether the privilege is relevant to the operations that the application will be performing.\n\n4. For permissions that do not have a clear purpose, or do not seem logical:\n    - Check if the permission's reason and usage is explained in the installation process.\n    - Check if that explanation makes sense.\n    - This test __fails__ if the permissions are not necessary for their purpose, or do not make sense.\n\n5. If there are optional components during installation, you might need to repeat this test for each option.",
    "weakness_title_read_only": "Client applications require excessive permissions",
    "weakness_id_read_only": "P715",
    "weakness": "4b37c79c-824e-434a-b6eb-6965bb6fd70f",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2012-02-10T14:01:44.580000-05:00",
    "last_updated": "2021-06-25T14:47:51.743000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T175",
    "universal_id": "50520f60-a8f6-4722-8174-742707f41d05",
    "countermeasure_name": "Test that the client validates digital certificates",
    "countermeasure_solution": "Use the following test to determine whether a server properly performs certificate validation (verification of the chain of trust), revocation-status verification, and subject authentication:\n\n- Create an X509 certificate, such as an OpenSSL package, that is self-signed and not signed by a recognized certificate authority without defining the root as trusted on the server.\n\n- Create a certificate with an expired date.\n\n- Create a certificate with a key pair that its public key is not configured on the server.\n\n- Create a certificate and include it in the certificate revocation list on the server.\n    - Or use another method by which the server checks the certificate revocation status such as OCSP.\n\n- Create a certificate with a subject that is not defined as a valid user on the server.\n\nUse the above certificates (as client certificates) and attempt to connect to the server and authenticate.\n    \n    - This test __fails__ if authentication is successful in any of the cases above.\n\nIn addition, create a valid certificate and try to log into the system.\n\nThis test __fails__ if the latency introduced by the authentication unit is not tolerable for the system.\n\n## Black-box testing\n\nIn black-box testing, you will need to use a proxy to replace the destination's TLS/SSL certificate.\n\n1. Set up a proxy that can intercept TLS/SSL traffic by decoding the TLS/SSL. \n    - For example, the Burp Suite or Charles proxies.\n\n2. Set the proxy to listen in on the access point, and enable TLS/SSL decoding using self-signed certificate replacement.\n\n3. Set the client to use the proxy by choosing the access point and the port to be used.\n\n4. If the client does not support proxies:\n    - You can use a proxifier to redirect traffic through the setup proxy.\n    - Or you set up transparent proxy mode and force network traffic by setting the proxy on the routing gateway of the network.\n\n5. This test fails if the application continues to operate without giving errors and all functions continue working. \n\n6. Check the TLS/SSL connections logged in the proxy.\n    - This test __fails__ if the connections are fully established, and data is being sent.\n    - Otherwise, this test passes.\n\n## Resources\n\n- [Burp Suite](https://portswigger.net/burp/)\n- [Charles](https://www.charlesproxy.com/documentation/)",
    "weakness_title_read_only": "Certificate Validation Issues",
    "weakness_id_read_only": "P716",
    "weakness": "47e93cf5-c45c-457d-831d-c531b243544e",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2012-02-13T12:46:03.314000-05:00",
    "last_updated": "2022-03-25T11:36:25.024000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T176",
    "universal_id": "4c94f1d9-ea13-4e43-a377-7720d8b0d95b",
    "countermeasure_name": "Apply principles of privacy when handling personal information",
    "countermeasure_solution": "Applicable legislation and fair information principles ([https://www.priv.gc.ca/leg_c/p_principle_e.asp](https://www.priv.gc.ca/leg_c/p_principle_e.asp)) impose organizational responsibilities. At the project level for your software or process, these are design-related action items that you can undertake to support the higher-level principles. These action items are not comprehensive, but are intended to suggest practical ways in which the principles can be implemented at the project level. \n \n### Principle 1 - Accountability \n\nAn organization is responsible for personal information under its control, and shall designate an individual or individuals who are accountable for the organization's compliance with the principles.\n\nBased on the accountability principle, perform the following:\n\n- Ensure appropriate sign-off or approval from persona having authority over the project.\n- Conduct a privacy and security risk assessment and obtain sign-off.\n\n\n \n### Principle 2 - Identifying purposes \n\nIdentify the purposes for which personal information is collected at or before the time that the information is collected.\n\nBased on the identifying purposes principle, perform the following:\n\n- Provide a privacy notice and link to it in the application. The notice should cover the purposes for which personal information is collected.\n- Utilize _Just in time_ notification when any sensitive information is collected or information is shared with third parties that might be considered unusual or unexpected.\n\n\n \n### Principle 3 - Consent \n\nThe knowledge and consent of the individual are required for the collection, use, or disclosure of personal information, except where such knowledge and consent is inappropriate.\n\nBased on the consent principle, perform the following:\n\n- Obtain consent to collect personal information either through opt in (EU, Canada, and so on) or by providing an opt out mechanism (US).\n- Ensure that the consent mechanism is consistent with organizational policies or approved through the Privacy/Legal office. \n\n\n \n### Principle 4 - Limiting collection \n\nCollect personal information only by fair and lawful means.\n\nBased on the limiting collection principle, perform the following:\n\n- Limit data collection to those elements required to fulfill the business purpose of the application. \nObtain optional or additional data only with user consent.\n \n### Principle 5 - Limiting use, disclosure, and retention \n\nDo not use or disclose personal information for purposes other than those for which it was collected, except with the consent of the individual or as required by law. Retain personal information only for as long as is necessary for the fulfillment of those purposes.\n\nBased on the limiting use, disclosure, and retention principle, perform the following:\n\n- Implement role-based access controls and __need to know__ mechanisms to ensure that only authorized individuals can access or use personal information.\n- Consider data flow and how constraints on the uses of data are communicated downstream.\n- Implement retention rules to limit how long personal information is retained (for example by following records management schedule requirements or for as long as is required to maintain services to an individual). \n\n \n### Principle 6 - Accuracy \n\nPersonal information shall be as accurate, complete, and up to date as is necessary for the purposes for which it is to be used.\n\nBased on the accuracy principle, perform the following:\n\n- Implement data quality and validation checks on elements containing personal information.\n- Implement a mechanism that allows individuals to correct or update personal information where appropriate.\n- Implement a procedure to update the user’s personal data by obtaining inputs from them after a certain time period.\n-The user should approve data if he or she is triggering a “critical” action.\n- Provide a form to enable users to update their data.\n- In case of an update make sure to forward the information to any third parties/subsystems that received the user’s data before (if there are any).\n- Consistency checks help against typographical and copy and paste errors.\n \n### Principle 7 - Safeguards \n\nProtect personal information with security safeguards appropriate to the sensitivity of the information.\n\nBased on the safeguards principle, perform the following:\n\n- Implement security appropriate to the sensitivity of data (with encryption, tokenization, masking, and so on), encrypt data at rest and in transit, and monitor and log the access and usage of data.\n \n### Principle 8 - Openness \n\nMake readily available to individuals specific information about organizational policies and practices related to the management of personal information.\n\nBased on the openness principle, perform the following:\n\n- Provide links to organizational privacy policies and practices.\n \n### Principle 9 - Individual access \n\nUpon request, inform an individual of the existence, use, and disclosure of their personal information, and provide them with access to that information. An individual can challenge the accuracy and completeness of the information and have it amended as appropriate.\n\nBased on the individual access principle, perform the following:\n\n- Implement self-service mechanisms that allow individuals to ascertain what personal information is held about them, to download it, or to delete it.\n- Provide links to the Privacy office website to permit inquiries or complaints.\n\n \n### Principle 10 - Challenging compliance \n\nAn individual shall be able to address to the designated individual or individuals accountable for the organization's compliance a challenge concerning compliance with the above principles.\n\nBased on the challenging compliance principle, perform the following:\n\n- Provide links to the Privacy office website to permit inquiries or complaints.",
    "weakness_title_read_only": "Privacy Violation",
    "weakness_id_read_only": "P257",
    "weakness": "b0418f1b-bf92-45ba-845f-abfb9735f1cf",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "architecture-design",
    "created": "2012-02-28T15:06:32.225000-05:00",
    "last_updated": "2023-05-25T13:09:48.959000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T177",
    "universal_id": "7be1a940-0f2c-4cd2-8a74-9c9bc35d4dfd",
    "countermeasure_name": "Allow users to review and update their personal information",
    "countermeasure_solution": "[Controllers](/library/glossary/G33) have the primary responsibility to respond to users.  If they delegate this responsibility to their [processors](/library/glossary/G34), they must provide them with written instructions. Processors who are assigned such a responsibility must ensure that each user's ability to review and update their personal information is in compliance with the controller's written instructions.\n\nPrivacy rules state that users must be able to do the following:\n\n- Review their personal information stored in a system.\n- Have a means to correct any mistakes, or provide changes to keep the information up-to-date.\n- Be securely authenticated before being able to access or update the personal information. \n\n## How to comply with the required rules\n\n1. Implement a profile or account information page where users can review all of their personal information. Alternatively, customer support representatives should be able to support correction requests. \n    - For a list of personal information, see below.\n\n2. Authenticate the user before allowing access to the profile information.\n    - Treat viewing and editing personal profiles as a high risk action. \n    - This means you need to re-authenticate if sessions are allowed to live longer than 5 minutes to confirm identity, or require the password to be provided when updating the profile.\n\n3. Allow users to edit/update their information. Users must be able to edit all fields that contain personal information.\n    - This includes fields that are derived from personal information.\n        - For example, if the username on a system is derived from a social security number, then that username must be editable as well.\n        - To avoid these issues, __do not__ use personal information to generate IDs that are not changeable in the system.\n    - There may be exemptions by law.\n        - For example, tax revenue agencies own the social insurance numbers, and their web site is not required to let users change it.\n   - Require additional levels of authentication (e.g., email confirmation, one-time code) when users update their [personal/sensitive information](/library/glossary/G8).",
    "weakness_title_read_only": "Lack of features that allow access and modification of personal data",
    "weakness_id_read_only": "P815",
    "weakness": "29803852-9820-4cbb-9363-406b6cb24fa7",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "requirements",
    "created": "2012-02-29T12:18:35.665000-05:00",
    "last_updated": "2022-08-15T13:45:55.667000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T178",
    "universal_id": "6fbf9931-024a-4e96-afb7-10c46dcb3937",
    "countermeasure_name": "Obtain consent from users prior to collecting personal information",
    "countermeasure_solution": "Consent may be relied upon as having been obtained from the [controller](/library/glossary/G33/) unless delegated to the [processor](/library/glossary/G34/) on the controller's behalf.\n\nFollow these instructions whenever your application needs to collect, use, or share personal information and requires user consent: \n \n- Review the [Privacy Impact Assessment (PIA)](/library/glossary/G60/) document and consult with your privacy officer to confirm that the information you are collecting requires consent. Do not obtain consent if there is another legal basis for processing personal data that can be relied upon. Once confirmed, update the PIA for future reference. \n\n- Obtain consent with a form that is separate from *User Agreements* or *Terms and Conditions* forms. \n\n- Ensure that *User Agreements* or *Terms and Conditions* are:\n    - Easy to understand for non-lawyers and not too long.\n    - Adapted for visual aid (e.g. using pictograms).\n    - Designed to include a concise summary alongside a detailed version.\n    - Tracked over time in a way the change history is reflected in release notes.\n \n- If you collect the information via a form that the user fills out: \n    - Indicate mandatory and optional fields. \n    - For each field, provide information about why collecting that data is necessary, such as by using tooltips. \n \n- Use the host's features and APIs, or a dialog box to provide the user with information about why collecting each piece of data is necessary. \n \n- Provide the user with a clear and transparent written consent statement, separate from the *Terms and Conditions*, that includes: \n    - The purposes or activities for which each piece of data is collected. \n    - The categories of personal information. \n    - The duration and conditions of maintaining the information. \n    - How users can withdraw their consent later. \n    - With whom the application shares the collected information. Name all third parties and the purpose for which the application needs to share the information.  \n    - Clear reasons why you need to collect optional information. For example, it may help your application to improve a certain process and provide a certain service faster, such as gathering a Social Security Number (SSN) to speed up the background check process. However, simply saying that you need a piece of information \"to improve your products and services\" is not acceptable because it does not specify a clear purpose.   \n\n- Show the fields and statements before any action buttons (such as Accept and Decline) or checkboxes (if any). \n \n- If you are providing the user with a list of consent items to choose from (such as via checkboxes or slide buttons), do not select any items by default. The user must take action to opt in independently. Do not rely on silence, inactivity, default settings, pre-ticked boxes, or general terms and conditions. \n \n- Implement visible Accept and Decline buttons at the very bottom after information collection. Prompt users for confirmation once they click either. \n \n- Do not store user information before a user has agreed to its collection or if the user has declined to consent. \n \n- Once a user accepts a consent form, store the following items:  \n    - The items a user consents to have collected. \n    - The user's language preference and the version number of the Privacy Notice. \n    - The proof of the user's identity and authentication. \n    - The date and time of consent. \n \n- If you need to use personal information for a new purpose or use case that was previously collected based on user consent: \n    - Follow the same steps to obtain consent before using the information for the new purpose. \n   \n__Note:__ Whenever you obtain consent, provide an option to withdraw consent. Please refer to [Countermeasure 604](/library/tasks/T604/) for more information about creating a consent withdrawal feature.",
    "weakness_title_read_only": "Privacy Violation",
    "weakness_id_read_only": "P257",
    "weakness": "b0418f1b-bf92-45ba-845f-abfb9735f1cf",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "requirements",
    "created": "2012-03-01T14:38:27.158000-05:00",
    "last_updated": "2023-05-25T13:56:34.901000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T179",
    "universal_id": "3f383698-8df3-4344-861d-67fc29ec8ba3",
    "countermeasure_name": "Allow access for users to remove their personal information from the system",
    "countermeasure_solution": "Provide a procedure or mechanism for users to remove their personal information from the system. In different jurisdictions, this is referred to as the right of deletion, removal or the right to be forgotten.   Applications can meet this requirement by providing a remove account process.\n\n__Note:__ [Controllers](/library/glossary/G33) have the primary responsibility to respond to users. If they delegate this responsibility to their [processors](/library/glossary/G34), they must provide them with written instructions. Processors who are assigned such a responsibility must ensure that each user's ability to remove their personal information is in compliance with the controller's written instructions.\n\nConsider the following guidelines for removing accounts:\n\n- The remove account process must validate the authenticity of the user who requests it.\n    - To do this, perform at least one of the following before removing the account:\n        - Require the password to be entered again.\n        - Confirm the removal request by email.\n        - Ask for a security question confirmation.\n\n- If certain information is required for the service to work:\n    - Explain to the user that the service will not work without this information\n    - Guide the user to the account removal option by providing a link or pointing out how it can be initiated.\n    - Unless required by law, provide a way to remove a user's account, and provide a link or description in the profile, account, or settings menu for this option.\n\n- Remove all traces of user information from databases upon account removal. \n    - If you need to keep any information, anonymize it by removing personal information associated with it.\n        - For example, remove name, email, phone number, and any other information that might link a removed account with a person.\n    - However, non-identifiable information, such as auto-enumerated user IDs, can be kept in logs and other places as long as they are no longer associated in any way with personal information.\n\n- Do not store personal information in logs because most logs cannot be removed.\n\n_Most organizations are subject to positive record retention requirements, that which require records to be maintained for specific periods of time. Personal datainformation is subject to these retention periods as well; requests to remove or delete datainformation are subject to these requirements._",
    "weakness_title_read_only": "Lack of features that allow access and modification of personal data",
    "weakness_id_read_only": "P815",
    "weakness": "29803852-9820-4cbb-9363-406b6cb24fa7",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "requirements",
    "created": "2012-03-01T20:20:26.400000-05:00",
    "last_updated": "2022-02-25T16:21:03.132000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T181",
    "universal_id": "b6691427-bae5-4539-840d-98c0ba971b72",
    "countermeasure_name": "Validate models explicitly for fields the user is allowed to update",
    "countermeasure_solution": "In MVC platforms, explicitly validate which model attributes the user is authorized to add/update. Prevent users from adding/updating other fields. In most MVC frameworks, controllers are responsible for this kind of validation.\n\nLimiting form fields in web pages is not sufficient to protect against this kind of attack, as the MVC controller may automatically bind user parameters to corresponding model attributes.\n\nEither check that only expected attributes are bound in the controller or, explicitly prevent automatic variable binding where possible.",
    "weakness_title_read_only": "Mass Assignment Weakness for MVC Frameworks",
    "weakness_id_read_only": "P724",
    "weakness": "6739cac4-7ed5-429e-b15d-5baecfc01e43",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "development",
    "created": "2012-03-30T13:21:57.375000-04:00",
    "last_updated": "2021-06-25T14:47:53.948000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T182",
    "universal_id": "2b86b602-75b4-49e2-a7e2-12e4c8471233",
    "countermeasure_name": "Turn off nested expression language evaluation",
    "countermeasure_solution": "Many languages provide dynamic expression execution. Expression languages such as JSP's EL, and the 'eval()' function are common examples of this functionality.\n\nAvoid or disable dynamic expression execution features where possible. Always validate user-supplied or unverified input using a white-list of known accepted characters before using it in a dynamic expression evaluation.\n\n**Note**: Not all dynamic expression evaluation is vulnerable to injection.",
    "weakness_title_read_only": "Expression Language Injection",
    "weakness_id_read_only": "P725",
    "weakness": "dd766960-6aa3-4f89-8e4f-8d978d4b9ffa",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "requirements",
    "created": "2012-04-18T16:49:15.630000-04:00",
    "last_updated": "2021-06-25T14:47:54.487000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T184",
    "universal_id": "c385ba3d-25c1-48c3-a706-0af1e8d773c7",
    "countermeasure_name": "Perform authorization checks on RESTful web services",
    "countermeasure_solution": "Consider the following points when performing authorization checks on RESTful web services:\n\n- Ensure that the user accessing the web service has sufficient permissions to access the URL and uses the HTTP verb.\n    - For example, a user may have access to GET a resource, but may not have permission to DELETE or PUT the same resource.\n\n- Authorize clients for accessing the method in question and provide enough privileges for accessing the requested resources.\n\n- Limit access to administrative and management functions to web service administrators only.\n\n- Use a secure authentication mechanism for authenticating the third parties that access the web services.",
    "weakness_title_read_only": "Insufficient authorization for RESTful web service end points",
    "weakness_id_read_only": "P726",
    "weakness": "870f6244-66d5-4753-9327-2d75ccfeb8a2",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "development",
    "created": "2012-05-18T10:30:02.888000-04:00",
    "last_updated": "2023-03-07T10:51:10.534000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T185",
    "universal_id": "d34062b8-75a1-4117-9a8b-8c9e2a000eee",
    "countermeasure_name": "Follow best practices to secure SAML implementations",
    "countermeasure_solution": "Follow these requirements in your SAML implementation to ensure that the federated authentication using SAML does not result in a weakness or vulnerability in your authentication schema:\n\n1. Use secure channels for exchanging metadata and X509 certificates. Specifically, when they are provided through a URL, use TLS/HTTPS and validate the TLS certificate to ensure authenticity:\n    - Reject any attempt to retrieve metadata through non-HTTPS URLs.\n    - Ensure that the certificate chain is fully validated when using HTTPS URLs.\n\n    Alternatively, metadata and X509 certificates can be exchanged out-of-band (manually).\n\n2. Validate the metadata and X509 certificates received in the previous step.\n    - Ensure that you validate the full chain of the certificate.\n\n3. Reject any attempt to use unencrypted channels for SAML communication.\n    - Restrict SAML communication/bindings to SSL-enabled channels of communication, such as HTTPS, for confidentiality reasons.\n\n4. Do not skip any of the protocol-specified verifications, and avoid simplifying the protocol's specifications.\n\n5. Ensure that you validate the signature provided in the SAML assertion against the certificate/key you have received in the metadata, and not against the key provided in the SAML assertion itself.\n\n6. Use HTTP Post binding in favor of HTTP Redirect binding to avoid data being cached/observed on proxy nodes along the way.\n\n7. Log failed validation events.",
    "weakness_title_read_only": "Weakness in SSO or federated authentication",
    "weakness_id_read_only": "P727",
    "weakness": "b51a0a4e-0812-4030-90fc-ab706278661d",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "requirements",
    "created": "2012-05-31T15:25:31.958000-04:00",
    "last_updated": "2021-06-25T14:48:01.492000-04:00",
    "custom": "False",
    "rules": "1ea67369-e5fb-4a5e-b251-d877f8a180db",
    "rules_read_only": "A762"
  },
  {
    "countermeasure_id": "T186",
    "universal_id": "671e6425-be59-4d09-8ea4-7693d5e58ad1",
    "countermeasure_name": "Use recommended settings and the latest patches for third party libraries and software",
    "countermeasure_solution": "Regularly reviewing and addressing the security vulnerabilities reported for third party software will decrease the risk of a compromise. For any third party libraries or software being used in the system: \n\n- Upgrade to the latest version, or apply the latest security patches.\n- Look for documentation on their security weaknesses and configure them with their most secure settings.\n- Modify any of the defaults that need to be changed.\n- Avoid using components with known vulnerabilities.\n\nIt is essential to review all How-tos for this countermeasure, as each one applies to a different platform or library being used.\n\nMost third party library and framework vendors publish security bulletins for their products directly using their website. Additionally, the following sources can be used to locate security advisories and details about required patch levels for most commonly available products and libraries:\n\n- [Security Focus Vulnerability Database](http://www.securityfocus.com/vulnerabilities)\n    - Advisories are categorized by Vendor > Product > Version.\n- [National Vulnerability Database (NVD)](http://web.nvd.nist.gov/view/vuln/search)\n- [Common Vulnerability Enumerator (by MITRE Foundation)](http://cve.mitre.org/cve/)",
    "weakness_title_read_only": "Insufficient patching or use of insecure third party software/libraries",
    "weakness_id_read_only": "P728",
    "weakness": "659effab-aba7-464d-8760-f30eed4d032c",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "development",
    "created": "2012-06-05T12:52:43.965000-04:00",
    "last_updated": "2023-03-13T12:39:33.480000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T187",
    "universal_id": "a783915c-b070-45a0-af6f-f1c9fd7988d4",
    "countermeasure_name": "Test if the app prevents sensitive data leaks through the auto-snapshot feature of iOS",
    "countermeasure_solution": "Follow these steps to prevent data leaks:\n\n1. Run the app.\n2. Open a View containing sensitive information.\n3. Use the **Home** button on the device to take the app to the background.\n4. Access the `/var/mobile/Library/Caches/Snapshots` directory on the jailbroken device.\n\nThis test __fails__ if a snapshot containing the sensitive data is stored in the directory.\n\nThis test __passes__ if the snapshot does not exist, or the data does not appear on the snapshot, such as if the snapshot contains a blank screen or just a logo.",
    "weakness_title_read_only": "Information disclosure in iOS via system snapshots",
    "weakness_id_read_only": "P720",
    "weakness": "0fcdc81f-4e33-4c93-a5d3-a29d25c41e4d",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2012-06-08T02:06:13.460000-04:00",
    "last_updated": "2021-06-25T14:47:50.833000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T189",
    "universal_id": "c8108c3a-7ff6-4a3d-8439-c3d6576a821a",
    "countermeasure_name": "Minimize the use of unmanaged (native) code",
    "countermeasure_solution": "Use the following guidelines when using *unmanaged code*:\n\nUnmanaged code, sometimes referred to as *native code*, is the code that executes outside of a managed runtime system.\n\n* Whenever possible, replace the functionality of unmanaged code with a managed equivalent.\n* Use a managed wrapper function that exposes underlying unmanaged code.\n    * Sanity-check and scrub all data sent to / from the unmanaged code.\n* Ensure the latest security updates have been applied to the unmanaged code.\n* Ensure in unmanaged code, memory is securely allocated, freed and used.\n\nThere are two important reasons why *unmanaged code* must be avoided:\n\n* Contrary to applications that run within a managed environment, such as those written using Java and .NET, *unmanaged code* is not protected from serious vulnerabilities that include buffer overflows and memory corruption.\n    * Attackers can leverage these vulnerabilities to inject and execute arbitrary code on a target system.\n* *Unmanaged code* may execute within a different threading model than the managed code.\n    * In this situation, the performance of such an application will degrade and be much more susceptible to denial of service attacks.",
    "weakness_title_read_only": "Direct Use of Unsafe Unmanaged Code",
    "weakness_id_read_only": "P730",
    "weakness": "d320a266-07f8-4d63-9bfa-31db424fef25",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "development",
    "created": "2012-07-11T16:56:42.876000-04:00",
    "last_updated": "2021-06-25T14:47:57.322000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T191",
    "universal_id": "14bf1d91-c48f-4e55-ae8f-398d9298d4a3",
    "countermeasure_name": "Follow best practices when handling primitive data types",
    "countermeasure_solution": "Review application code for all implicit or explicit type casting and conversions, and validate that each operation results in an expected value.\n\nUnchecked casting/conversion from one type to another can lead to a loss of information. Unexpected results, such as a breach of availability and data integrity, can subsequently occur. In more serious cases a code execution vulnerability may result.\n\nWhen converting between types, an application must follow the steps below:\n\n* __Anticipate information loss__ when converting between two different types and __code defensively__.\n    * Explicitly review the range of values. \n    * Put comments in the code on why the type conversion is safe for each instance it is used.\n\n    * Validate before casting.\n        * Before converting/casting, check that the value can be expressed by the target type.\n        * For example, when converting an unsigned integer X to a signed integer, first check that X is not larger than the largest possible signed integer. \n        * Alternatively, check that a signed integer is not negative before converting it to an unsigned integer.\n\n    * Detect and handle runtime errors that could occur upon conversion.\n        * In a concurrent environment, values may change between the time that its value is validated and when it undergoes conversion.\n        * Always detect invalid type conversions by using exceptions or post-validation code, where applicable.\n\n* __Review the data types used__ in a supporting library or development environment, and ensure the application __performs type conversions properly__, where applicable.\n    * Values often undergo conversion when they are passed between different environments: networked systems and development environments (managed and unmanaged). \n    * Validate that each environment interprets and converts values correctly.",
    "weakness_title_read_only": "Incorrect Conversion between Numeric Types",
    "weakness_id_read_only": "P562",
    "weakness": "800621d3-fe90-4a6c-8519-bc98d84c74b1",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "development",
    "created": "2012-07-20T13:44:15.664000-04:00",
    "last_updated": "2021-06-25T14:47:59.183000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T193",
    "universal_id": "1a1bfbbc-572e-445f-89be-8c7aaede620c",
    "countermeasure_name": "Review non-categorized/miscellaneous findings from automated analysis",
    "countermeasure_solution": "When you run a tool such as SAST to analyze code, use the following steps:\n\n- Go through the report and examine the findings generated from the tool.\n- Properly review and understand all reported flaws before you categorize them and before you dismiss any false-positive findings.\n- Prioritize the flaw based on impact for each finding.\n- Commit to removing or fixing the affected code based on the priority of a finding.\n  \nFor more information, see this article by Oracle Cloud Security on [SAST Result Analysis](https://blogs.oracle.com/cloudsecurity/post/sast-scan-results-analysis-methodology).",
    "weakness_title_read_only": "Potential security defects reported by automated scanners are missed or overlooked",
    "weakness_id_read_only": "P733",
    "weakness": "7344f06c-e618-4d6c-868c-2fb5755bd729",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "development",
    "created": "2012-07-20T16:26:54.568000-04:00",
    "last_updated": "2022-06-21T11:44:38.978000-04:00",
    "custom": "False",
    "rules": "312e31b6-8a5e-4e5f-be56-c12a8bc7f84c",
    "rules_read_only": "A777"
  },
  {
    "countermeasure_id": "T194",
    "universal_id": "2dc836dc-75bc-46ef-b20d-3871bb523426",
    "countermeasure_name": "Obtain user consent for tracking cookies",
    "countermeasure_solution": "The EU E-Privacy Directive requires informed consent by users for cookies and any other mechanism used to track user activity. The Directive has also clarified certain exemptions. The rules apply to any other mechanism used for tracking, such as JavaScript tracking codes. These are referred to as _Tracking Mechanisms_.\n\n__Note:__ The [processor](/library/glossary/G34) must obtain instructions for data collection from the [controller](/library/glossary/G33).\n\n## Details\n\nIn practical terms, you can set tracking mechanisms without explicitly notifying users solely for the purpose of allowing the web application to function as intended. Tracking mechanisms used for analytics, marketing, or profiling require at least implied consent from users prior to being set. \n\nAn example of obtaining consent for cookies is a pop-up, or landing page, notifying users that cookies are used on the site, including a link to manage their cookie preferences (if available), and a link to a statement that explains the use of the tracking mechanisms. Users then have the option of not using the site or managing their preferences prior to the tracking mechanisms being set. Simply having a privacy policy available on the website is insufficient.\n\n__Note__: Some countries have stricter interpretations than the details below. In those cases, you will see a How-To attached to this countermeasure with more information.\n\n## Exemption details\n\nThe EU Directive exempts tracking mechanisms used for either of the following criteria:\n\n* Criterion A: a tracking mechanism used __\"for the sole purpose of carrying out the transmission of a communication over an electronic communications network\"__. This is rarely the case for web application tracking mechanisms, with the exception of load balancing session cookies, such as cookies used to keep track of which web server a user will be directed to in a load balanced architecture.\n\n* Criterion B: the tracking mechanism is __\"strictly necessary in order for the provider of an information society service explicitly requested by the subscriber or user to provide the service\"__. This includes several kinds of tracking mechanisms, including the following types explicitly listed by the EU:\n    * \"__User input__\" tracking mechanisms - Session ID tracking mechanisms in non-authenticated pages used solely for the purpose of maintaining states between HTTP requests.\n    * __Authentication__ tracking mechanisms - Session ID or other tracking mechanisms used solely for the purpose of maintaining an authenticated session.\n    * __User-centric__ security tracking mechanisms - Tracking mechanisms used solely for protecting user security, such as persistent authentication cookies to detect if a user is logging in from a new device.\n    * __Multimedia content player session__ tracking mechanisms - Used solely for the purpose of rendering multimedia, such as videos or Flash content.\n    * __UI customization__ tracking mechanisms - Used solely for improving the UI for the user (such as language preferences or results display preferences).\n    * __3rd party social plug-in content sharing__ tracking mechanisms - Used solely to allow authenticated users of social networks to explicitly share content with other users of the social network. Social plugin-tracking tracking mechanisms, which monitor behavior, are not included in this exemption.\n\nAny other kind of cookie or tracking mechanism requires consent from the user. In particular, analytics tracking mechanisms, including Google Analytics and advertising cookies, are not exempt. \n\n## Other concerns\n\n### Do Not Track header\nWhile the EU has shown interest in the Do Not Track (DNT) HTTP Request header, it's not clear that implementing support for this header will satisfy the requirements. Specifically, do not consider the absence of this header as consenting to tracking mechanisms.\n\n### Global Privacy Control\n\nThe Global Privacy Control (GCP) signal was introduced in 2020 as a successor to the DNT HTTP header. GCP can be used to indicate users' opting out of their information being sold or tracked, and meets the CCPA and GDPR definition of \"user-enables global privacy controls\". The GCP header has been implemented by the following browsers: DuckDuckGo, Brave, and Mozilla.\n\n### Applicability of law\nEU member countries are responsible for implementing this directive. The laws differ in their interpretation, although they are all required to eventually be at least as strict as the standard listed above. If your application is subject to laws that are stricter than the above, you will see more detail in the Country-Specific How-to attached to this countermeasure.\n\n__Note__: SD Elements provides context-relevant guidance on building privacy into applications. This is not a substitute for qualified legal advice on privacy matters.\n\n### References\n\n* [EU Privacy Directive 2002/58/EC](http://eur-lex.europa.eu/LexUriServ/LexUriServ.do?uri=CELEX:32002L0058:en:HTML) Article 5.3 lays out the basic framework for data privacy\n* [Directive 2009/136/EC](http://eur-lex.europa.eu/LexUriServ/LexUriServ.do?uri=OJ:L:2009:337:0011:0036:en:PDF) is an amendment to the EU Privacy Directive\n* [Opinion 04/2012](http://ec.europa.eu/justice/data-protection/article-29/documentation/opinion-recommendation/files/2012/wp194_en.pdf) clarifies certain exemptions for cookies\n* [Do Not Track header](http://donottrack.us/)\n* [Global Privacy Control](https://globalprivacycontrol.org/)",
    "weakness_title_read_only": "Insufficient consent for user tracking",
    "weakness_id_read_only": "P732",
    "weakness": "f4b8e089-29b2-450e-b619-3b279d903891",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "requirements",
    "created": "2012-07-24T10:02:19.256000-04:00",
    "last_updated": "2023-05-25T13:09:49.193000-04:00",
    "custom": "False",
    "rules": "3181120b-0d72-446f-a395-b31e8aace711",
    "rules_read_only": "A129"
  },
  {
    "countermeasure_id": "T195",
    "universal_id": "48dd35d8-adbd-426a-acf0-be4cf9c5837a",
    "countermeasure_name": "Design lawful procedures to obtain consent for processing personal information and to withdraw it when requested",
    "countermeasure_solution": "If your data processing grounds are based on consent, obtain the consent of a [data subject](/library/glossary/G50) before processing their personal information. \n\n[Processors](/library/glossary/G34) typically rely on the performance of a contract as the basis for processing data on instruction from their [controllers](/library/glossary/G33).\n \n- Have procedures in your application to obtain [consent](/library/glossary/G37) from data subjects and withdraw it when they request that you do so. \n \n- Provide a free process to obtain consent that establishes a specific, informed, and unambiguous indication of a data subject's agreement to the processing of their personal information by written, electronic, or oral means. \n\n    - For example, by ticking a box or changing a setting that clearly indicates confirmation. \n    - Silence, pre-ticked boxes, or inactivity are not considered valid methods for acquiring consent. \n \n- Obtain separate and distinct consent from a data subject when their personal information will be processed for multiple purposes. \n \n- Ensure the request is clear and concise and does not unnecessarily interrupt the use of the service provided if a data subject's consent is given by electronic means. \n \n__Note__: Personal data can be processed without consent for reasons of public interest in the areas of public health. \n \nPlease refer to [Countermeasure 178](/library/tasks/T178/) for the requirements of the consent acquisition and withdrawal feature.",
    "weakness_title_read_only": "Privacy Violation",
    "weakness_id_read_only": "P257",
    "weakness": "b0418f1b-bf92-45ba-845f-abfb9735f1cf",
    "tags": "",
    "countermeasure_priority": "2",
    "phase": "architecture-design",
    "created": "2012-07-24T11:18:14.371000-04:00",
    "last_updated": "2022-09-01T10:02:21.908000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T196",
    "universal_id": "e40dcd30-2548-4fba-afd8-44d6994350cd",
    "countermeasure_name": "Avoid unsafe functions",
    "countermeasure_solution": "Use recommended and secure alternatives for unsafe functions. For potentially unsafe functions, either use safer alternatives or perform strict validation of the parameters before using them.\n\nCertain functions are inherently dangerous because there is no safe way to execute them. Systems are routinely made vulnerable by a developer's use of these functions. These functions must be completely avoided and banned within development teams.\n\nSome functions are potentially unsafe, as they have certain assumptions on the input parameters without enforcing or validating these assumptions. \n\nMany unsafe functions are leftover from the legacy platform or libraries before security became a concern. In most cases, there are safe alternatives/variations available that achieve identical functionality to these insecure functions.\n\n## Types of unsafe functions\n\nThe following is a non-exhaustive list of categories for unsafe and potentially unsafe functions:\n\n- String manipulation\n- String formatting\n- Buffer operations\n- I/O operations\n- Operating system calls\n\n**Note**: The severity and impact of a successful attack against unsafe functions varies significantly based on the attacker's malicious input and the affected application's environment.",
    "weakness_title_read_only": "Use of Inherently Dangerous Function",
    "weakness_id_read_only": "P141",
    "weakness": "739092ac-efc4-467f-8897-98996db9dfbb",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "development",
    "created": "2012-07-26T11:16:25.215000-04:00",
    "last_updated": "2021-06-25T14:47:59.025000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T197",
    "universal_id": "8c3de8dd-9fe0-48a1-91ee-88d568b5be76",
    "countermeasure_name": "Validate the signature of all remote code/updates to verify their origin and integrity (client side)",
    "countermeasure_solution": "For any remote code exchange, object serialization/deserialization, remote procedure calls, or any software update, the following should be performed on the client side:\n \n1. Check and limit the size of the code/update to be received to avoid denial of service due to long malicious content.\n2. Authenticate the server using the provided digital signature or any other available authentication mechanism in your system. Authentication helps to make sure the remote code/update is coming from a trusted origin.\n3. Check the hash provided in the digital signature to verify the integrity of the remote code/update.\n4. Decrypt and deserialize code, objects, or software updates only after verifying all the above.\n\nRefer to the \"Signing data and verifying digital signatures\" in the How-tos section for more details.\n\n* In this countermeasure, the data `D` provided by the server is the remote code `R`, which itself is encrypted using a shared key. \n* In other words, `D = Enc(R, S)`. Although the hash `H` provided by the server is related to the encrypted remote code, the hash itself should be encrypted separately, as mentioned in the How-to.\n* The client should first check the signature `SIG`, and if it is valid, which implies that `D` is legitimate, then it can decrypt the remote code `R = Dec(D, S)` and use it.\n\nIf any of the verification steps mentioned above fails, then the remote code should be discarded.\n\n__Note__: Be careful about serialization and RPC libraries that you use, and make sure they all adhere to these requirements.",
    "weakness_title_read_only": "Download of code/updates without checking its origin and/or integrity",
    "weakness_id_read_only": "P384",
    "weakness": "20806dd6-ac6a-43a2-a6ba-6aa515a7dd7e",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "requirements",
    "created": "2012-07-26T11:47:06.614000-04:00",
    "last_updated": "2023-03-27T12:38:47.682000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T200",
    "universal_id": "3111e133-2516-4f97-98c9-c4eff9496263",
    "countermeasure_name": "Test for validation on all untrusted XML input",
    "countermeasure_solution": "Use the following guidelines to test for XML input validation:\n\n1. Modify a validated XML document and add an illegal XML node, such as `<illegal_node/>`.\n    - It is important that the modified XML document remain well-formed.\n\n2. Submit the crafted XML document to the application.\n\nThis test __fails__ if the invalid input does not result in an error message or prompt.\n\nRefer to the [XML standard](http://www.w3.org/TR/xml/) documentation for the definition of *well-formed*.",
    "weakness_title_read_only": "Missing or Incorrect XML Validation",
    "weakness_id_read_only": "P12",
    "weakness": "f568ebe3-2bc5-4510-a840-cd30a159ed25",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2012-07-31T13:52:27.618000-04:00",
    "last_updated": "2021-06-25T14:47:53.580000-04:00",
    "custom": "False",
    "rules": "49c095c5-ee1d-49e0-9b8f-408b74bf172d",
    "rules_read_only": "A13"
  },
  {
    "countermeasure_id": "T202",
    "universal_id": "9af35750-09d6-4b3b-bcd8-cdc85185c085",
    "countermeasure_name": "Prevent buffer overflow/underflow",
    "countermeasure_solution": "Prevent situations where buffer manipulation operations might lead to memory corruption. Follow these guidelines when handling untrusted input:\n\n- __Perform strict input validation__ \n    - Validate that an input's size and its related sizing fields fall within the expected ranges. \n    - Verify that the data is of the expected size - this is especially important with complex data structures. \n    - Where applicable, check for a null terminator and validate it is within the allowed range.\n\n- __Handle null pointers and zero input size cases explicitly.__\n\n- __Avoid redundant size information__\n    - Having more than one size indicator can lead to inconsistencies in handling input.\n    - Avoid having more than one size indicator can lead to easily exploitable vulnerabilities. \n    - If redundant size indicators cannot be avoided, make sure that strict validation is performed against all size indicators to prevent inconsistencies.\n    - See the note below for more information.\n\n- __Calculate buffer size correctly__\n    - A wrong buffer size will lead to failure of other checks that would normally prevent buffer overflows. \n    - Prevent integer wraparounds that can occur in overly large length indicators and size calculations.\n\n- __Use consistent string and buffer types__\n    - Avoid mixing different types of strings in the same operation. \n    - For example, convert a single-byte string to a multi-byte string first, then verify its length before using it in an operation with a multi-byte string.\n\n- __Avoid mixing buffer operations and string operations__\n    - If this is not possible and a string is the expected result: check for null bytes in the source data and, upon completion, validate its length using the appropriate method (null termination or length indicator).\n\n- __Always check and act upon return values__\n    - If a memory operation is not successful, respond defensively and fail appropriately.\n\n- __If a call to an allocation or initialization function fails, do not evaluate the resulting data__\n    - The resulting data might be stale.\n\n- __Zero-fill all buffers before use__\n    - A buffer that contains only zeros cannot contain stale sensitive information.\n\n- __Assign all unused buffer pointers to null__\n\n__Note__: \n\nThe threat of redundant data sizes can be best explained using an example: \n\nConsider a network communication protocol, or file structure, that requires both null-terminators and a size field for strings. Within the code that processes this data, the buffer allocation code might rely on one size indicator, while the buffer copy might rely on the other size indicator. Without sufficient size validation by the code, an attacker can craft malicious data, containing mismatched size values, that results in the exploitation of a buffer overflow vulnerability.",
    "weakness_title_read_only": "Buffer Copy without Checking the Bounds",
    "weakness_id_read_only": "P21",
    "weakness": "162b0723-2710-4397-98a4-4da915a7ea2a",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "development",
    "created": "2012-08-14T15:28:05.900000-04:00",
    "last_updated": "2021-06-25T14:47:59.114000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T203",
    "universal_id": "02f23131-784d-4f77-b289-6b29da82233b",
    "countermeasure_name": "Avoid uncontrolled format strings",
    "countermeasure_solution": "Format strings are normally template arguments passed to `printf` or `scanf` style functions. Prevent security issues by __avoiding the use of untrusted input in the format string.__ Common mistakes include:\n\n1. Incorrectly using input as the string in a format operation:\n\n        printf(input_string) // Incorrect code example\n\n    Instead of the correct usage:\n\n        printf(\"%s\", input_string)\n\n2. Using dynamically generated format strings that rely on uncontrolled input.\n\nThe problem with the above example is that, the C compiler would treat `input_string` as format string. In all cases, if the format string contains format specifiers such as `%s`, it might cause memory corruption or can lead to a code injection and execution. Attackers can use more dangerous format specifiers, such as `%x`, which allows for direct read or write from arbitrary memory locations.\n\nIf you cannot avoid user controlled data in format string operations, create a strict white-list for expected values. Restrict or encode the format specifiers in the user specified strings before using them.",
    "weakness_title_read_only": "Uncontrolled Format String",
    "weakness_id_read_only": "P35",
    "weakness": "de576701-9278-4cbf-a67a-bde2886f77bc",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "development",
    "created": "2012-08-16T14:45:47.947000-04:00",
    "last_updated": "2021-06-25T14:47:59.087000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T204",
    "universal_id": "d125ac2d-9605-48a1-a794-d85e651dab14",
    "countermeasure_name": "Follow security best practices when dealing with pointers",
    "countermeasure_solution": "Mishandling pointers or unsafe operations on them is the root cause of most memory corruption vulnerabilities.\n\nUse the following guidelines for handling pointers in your code:\n\n1. __Handle allocation errors__:\n    - Check the result of memory allocation and explicitly handle all errors.\n\n1. __Do not access freed memory__: \n    - Avoid accessing memory after it is released by explicitly setting the pointers stored in variables to null, and checking against null when in doubt.\n    - Be careful of race conditions when freeing memory and setting the related pointer to null asynchronously.\n\n1. __Avoid null pointer de-reference errors__: \n    - Prevent null pointers from being looked up by explicitly validating the pointers against null before using them.\n\n1. __Avoid double free__: \n    - Free each buffer only once and avoid freeing buffers that have already been freed. \n    - This can be achieved by explicitly invalidating pointers to the buffers that have been freed, such as by setting all the referring pointers to null.\n\n1. __Do not take the size of a pointer to determine the size of the object it points to__:\n    - Such a mistake may go unnoticed in certain conditions when the outcome is the same on certain architectures, and is problematic when the code is moved to another environment.",
    "weakness_title_read_only": "Memory Access Error",
    "weakness_id_read_only": "P26",
    "weakness": "e2bd216d-75e5-487c-9619-cac2323866f3",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "development",
    "created": "2012-08-28T14:04:18.034000-04:00",
    "last_updated": "2021-06-25T14:47:58.846000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T205",
    "universal_id": "5809b57e-513a-4eac-9834-b9e2bdc614a5",
    "countermeasure_name": "Avoid inter-process race conditions",
    "countermeasure_solution": "Avoid race conditions from occurring between concurrent execution threads by following these steps:\n\n1. Identify potential areas of your program that might execute in concurrent threads, and the variables or resources that may be accessed concurrently.\n2. For each identified area, implement corresponding mitigating techniques and best practices to prevent a race condition.\n3. Review for possible deadlocks and follow best practices to avoid them.\n\nThe following are best practices to avoid race conditions within your application:\n\n- __Avoid using global variables__ unless absolutely necessary.\n    - You can eliminate the need for some global variables by passing them explicitly among functions.\n\n- __Use immutable (final) global variables__ if you absolutely cannot avoid them altogether.\n\n- __Avoid storing data in singleton classes/objects__ unless necessary.\n\n- __Review all the places where global variables and singleton objects are accessed__, and determine if there is a possibility that different threads pass through the same code.\n    - For example, determine if threads other than the main thread pass through the same code.\n    - If so, the singleton objects need to be __thread safe__.\n\n- __Make objects thread safe__ by wrapping access code inside a lock.\n\n- __Use error and exception handlers__ to make sure all paths from a locked function release the lock to avoid deadlocks.\n\n- Use the framework's recommended thread safe objects as __core data structures__.\n    - For example, many frameworks provide a thread safe queue or list object.\n    - Their basic operations are done in an atomic way, such as add/remove/pop.\n\n- Be careful __not to break the thread-safe property__ of a primitive or base object when customizing using inheritance.\n\n- __Review and understand how threads of operations__ are handled by your development environment. \n    - This might depend on deployment configurations as well.\n    - Adhere to all recommendations regarding thread safety.\n\n- When working with a file, __check if it is free__ before opening it.",
    "weakness_title_read_only": "Race Condition",
    "weakness_id_read_only": "P260",
    "weakness": "158629c6-5ab4-4761-945b-e66f736f3f8d",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "development",
    "created": "2012-09-07T18:34:18.994000-04:00",
    "last_updated": "2023-03-07T10:42:14.012000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T206",
    "universal_id": "d30c308a-39dd-453e-9000-dc4edfacc06e",
    "countermeasure_name": "Avoid TOCTOU race conditions against external resources",
    "countermeasure_solution": "The following is a non-inclusive list of common TOCTOU race conditions:\n\n- Symlink replacement between validation and use.\n- File permission change between validation and use.\n- Changing ownership of files (and temporary files) between creation and setting permissions.\n- Change of permissions on pipes and temporary files between creation and usage.\n\nTo prevent TOCTOU race conditions, the following best practices are recommended:\n\n- Lock a resource before security checks are performed (such as the file on filesystem):\n    - Release it only after the resource is no longer needed.\n    - Always sanity check the return code or status after obtaining a lock on a shared resource.\n    - Do not rely on security checks of an unlocked resource.\n\n- Identify and manually review potential portions of your code susceptible to TOCTOU attacks.\n\n- Avoid relying on run time tests to detect TOCTOU race conditions.\n    - Small timing gaps can be missed during run time observations.\n\n- Use exceptions wherever possible to handle resource access errors.\n    - In a concurrent application, checking a resource for a certain condition before using it is prone to incorrect and unexpected results.\n\n- Access resources by their reference instead of by their name. \n    - For example, when dealing with files, use file handlers instead of file names.\n\nAs a general development best practice, validate the status of all operations as well as the data from untrusted sources.",
    "weakness_title_read_only": "Time-of-check Time-of-use (TOCTOU) Race Condition",
    "weakness_id_read_only": "P265",
    "weakness": "5a9074b3-e322-40d4-b373-13af0277daf3",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "development",
    "created": "2012-09-14T12:48:06.098000-04:00",
    "last_updated": "2021-06-25T14:48:01.134000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T207",
    "universal_id": "de5e223b-ac85-4f4d-ade7-ceb3b9dd944d",
    "countermeasure_name": "Provide special data protection for children's personal information",
    "countermeasure_solution": "Your application must comply with regulations that protect children and their personal information. \n  \n 1. Determine which regulations you must comply with based on your jurisdiction. \n 2. Determine the jurisdiction of your users who do not meet the age requirements to provide their own consent. \n 3. Determine what is considered personal information.\n 4. Determine valid forms of consent you need in order to comply with the regulation.\n  \n You should be aware that some jurisdictions have outlined specific guidelines for protecting children and acquiring consent: \n  \n - The Children's Online Privacy Protect Act (COPPA) in the United States.\n - The UK General Data Protection Regulation (GDPR) in the United Kingdom. \n - The General Data Protection Regulation (GDPR) in the European Economic Area (EEA), leaves it to individual member states to determine the age for which they can provide consent. \n  \nRefer to Additional Requirements of this countermeasure for more information about GDPR and COPPA requirements.",
    "weakness_title_read_only": "Privacy Violation",
    "weakness_id_read_only": "P257",
    "weakness": "b0418f1b-bf92-45ba-845f-abfb9735f1cf",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "architecture-design",
    "created": "2012-11-14T12:34:51.480000-05:00",
    "last_updated": "2023-05-25T13:09:48.920000-04:00",
    "custom": "False",
    "rules": "76af4e5f-79a8-46e1-bc5d-fbc03577c47d",
    "rules_read_only": "A780"
  },
  {
    "countermeasure_id": "T210",
    "universal_id": "9415d1fa-8db6-4b08-8544-725c9baefe91",
    "countermeasure_name": "Encrypt sensitive data during transmission for rich clients",
    "countermeasure_solution": "Use the following guidelines for encrypting sensitive data in transit for rich clients:\n\n- Where possible, use protocol-level encryption to ensure that data remains confidential during transmission, such as TLS.\n\n- If protocol-level encryption is not available, use a shared secret key or Public Key Infrastructure (PKI) to encrypt confidential data sent between the client and server.",
    "weakness_title_read_only": "Clear Text and Unencrypted Transmission of Information",
    "weakness_id_read_only": "P216",
    "weakness": "b1d166d6-8ca7-415f-9cd9-8c2d745d3d01",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "development",
    "created": "2012-11-14T19:38:43.911000-05:00",
    "last_updated": "2021-06-25T14:47:37.403000-04:00",
    "custom": "False",
    "rules": "5e40a9c3-a7fc-428b-bb70-36d1aeef0101",
    "rules_read_only": "A194"
  },
  {
    "countermeasure_id": "T214",
    "universal_id": "916e2eef-1bc1-4b85-ac6b-b7abd86b165b",
    "countermeasure_name": "Protect confidential files on operating system or server",
    "countermeasure_solution": "Use the following guidelines for protecting confidential files on operating systems and servers:\n\n- Use operating system (or server) controls to enforce minimum access rights on any confidential files used by the application.\n    - Restricting access reduces the risk of a rogue application or malicious user accessing the data.\n    - For example, by using a file containing Personally Identifiable Information (PII) or directory listings.\n\n- For confidential files passed to the program as input, enforce this by validating that the file has minimum access as expected before using the content.\n\n- If the access is too wide, such as by allowing public read access, return an error to the user to correct the issue, or apply the correct access rights if the file is to be managed by the application.\n\n- Store files obtained from untrusted sources outside the `webroot`, with limited permissions, and with strong validation.",
    "weakness_title_read_only": "File and directory information exposure",
    "weakness_id_read_only": "P426",
    "weakness": "fdf587c4-0809-4177-8bc7-018e6e750e92",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "requirements",
    "created": "2012-11-14T19:43:17.448000-05:00",
    "last_updated": "2023-05-25T13:09:49.314000-04:00",
    "custom": "False",
    "rules": "5e40a9c3-a7fc-428b-bb70-36d1aeef0101;0b07fc15-1e13-4c03-b097-c7e222fc019a",
    "rules_read_only": "A194;A718"
  },
  {
    "countermeasure_id": "T217",
    "universal_id": "6b2a5d6d-9615-479d-ae0f-fd7badb1d9c2",
    "countermeasure_name": "Use compiler settings to mitigate buffer overflows",
    "countermeasure_solution": "Certain compilers and runtime environments offer additional controls to reduce the risk of buffer overflows. For example, Microsoft Visual C++ offers the `/GS` compile flag to reduce the risk of stack-based buffer overflows (Similarly `/SDL` enables a superset of security checks that include `/GS` checks, and using it is recommended). Turn on these flags during compilation.\n\nWhile these controls reduce the risk and impact, they are not a replacement for proper validation and must not be used as a replacement for fixing known cases of buffer overflow.",
    "weakness_title_read_only": "Buffer Copy without Checking the Bounds",
    "weakness_id_read_only": "P21",
    "weakness": "162b0723-2710-4397-98a4-4da915a7ea2a",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "requirements",
    "created": "2012-11-16T08:57:49.235000-05:00",
    "last_updated": "2021-06-25T14:47:59.074000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T219",
    "universal_id": "6077c823-9c20-42af-a301-2c13ebaf6986",
    "countermeasure_name": "Avoid transmitting confidential data through URL parameters",
    "countermeasure_solution": "Use the following guidelines for transmitting confidential data in HTTP-based applications:\n\n- Do not transmit confidential data as URL parameters, such as passwords and credit card numbers.\n- Avoid including unnecessary parameters in a request, such as hidden fields, Ajax variables, cookies and header values.\n\n- Avoid GET requests when this data is being passed to the server, because GET-style parameter passing puts the information in the URL parameters and can get cached in browser history, proxies, logs, and many other places. \n\n- Use the POST method to ensure that parameters are stored in the data section of the HTTP request.\n    - POST calls can also include parameters in the URL, and avoid using any confidential information to construct the POST URLs.\n\n- Enforce the correct client behavior using server side implementations.\n    - To do that, avoid accepting fields that might carry confidential data through URL parameters.\n    - Server side enforcement guarantees that the clients and web pages follow the best practice, or they would not function.",
    "weakness_title_read_only": "Information Leak Through Query Strings in GET Request",
    "weakness_id_read_only": "P489",
    "weakness": "f8c4c8a7-76ac-4919-bb8a-3f82de2081ff",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "development",
    "created": "2012-11-16T10:04:53.007000-05:00",
    "last_updated": "2021-06-25T14:47:38.096000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T220",
    "universal_id": "485639c8-183b-4e02-95e1-7603d041c16d",
    "countermeasure_name": "Verify that user password is salted and hashed",
    "countermeasure_solution": "Complete the following steps for verifying that passwords are salted and hashed:\n\n1. Review the source code for where authentication occurs.\n\n2. Ensure that the code appends a salt to the user-supplied password and hashes prior to comparing it with the stored password.\n    - If the code hashes but does not append a salt, or the code does not hash, then this test __fails__.\n\n3. Ensure that the salts are unique for each user and has enough entropy:\n    - This test __fails__ if the same salt is used for multiple users.\n    - This test __fails__ if the generated salt is predictable, such as being derived from other fields like username. \n    - This test __fails__ if the salt is too short (shorter than 8 bytes).\n\n4. This test __fails__ if the password is hashed with a weak algorithm, such as MD5.",
    "weakness_title_read_only": "One-Way Hashes Do Not Have Strong Salts",
    "weakness_id_read_only": "P601",
    "weakness": "0f0624c4-de44-4a6a-a243-a641afb19417",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2012-11-16T16:30:30.215000-05:00",
    "last_updated": "2021-06-25T14:47:44.365000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T222",
    "universal_id": "b32ec859-9331-4b92-a953-e173d417fe74",
    "countermeasure_name": "Verify server-to-server authentication",
    "countermeasure_solution": "Use the following guidelines for verifying server-to-server authentication:\n\n1. Obtain a list of all servers in-scope for this application along with IP addresses.\n    - For example, a web server, a presentation tier / application server, a middle tier server, or database server.\n\n2. For each pair of servers that communicate with each other, verify that the servers require some form of password, certificate, or other authentication credential to communicate.\n    - Alternatively, try to connect directly to the server from a different machine on the same network to determine if the authentication is done by IP.\n\n3. If any machine on the network can connect to a server and access or modify application data without authentication credentials, then this test __fails__.",
    "weakness_title_read_only": "Insufficient System-to-System Authentication",
    "weakness_id_read_only": "P703",
    "weakness": "94b9c092-1e56-48ba-979f-93f5d1fb348a",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2012-11-22T14:28:59.427000-05:00",
    "last_updated": "2021-06-25T14:47:42.595000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T225",
    "universal_id": "a573b049-0602-4d06-8f45-1b88497b459b",
    "countermeasure_name": "Test that password fields are masked by default",
    "countermeasure_solution": "Ensure that passwords are not displayed to end users by default:\n\n1. Find all areas of the application where users can enter passwords.\n2. Attempt to enter a password. \n\nThis test __fails__ if the password is displayed by default without selecting an option such as \"_display password_\".",
    "weakness_title_read_only": "No Password Field Masking",
    "weakness_id_read_only": "P438",
    "weakness": "8517629d-d51c-4053-b8db-a04e045ccf79",
    "tags": "",
    "countermeasure_priority": "2",
    "phase": "testing",
    "created": "2012-11-22T16:15:08.855000-05:00",
    "last_updated": "2021-06-25T14:47:37.797000-04:00",
    "custom": "False",
    "rules": "b310a679-c006-4abb-a02b-5f1608d05ace;5e40a9c3-a7fc-428b-bb70-36d1aeef0101",
    "rules_read_only": "A1080;A194"
  },
  {
    "countermeasure_id": "T226",
    "universal_id": "46f335bf-fc19-4cc6-9b0b-5af7b354d50e",
    "countermeasure_name": "Verify that authorization is centralized",
    "countermeasure_solution": "Use the following guidelines to determine whether authorization is centralized:\n\n1. Review the source code for a sample of areas where authorization decisions are made.\n    - For example, when a user accesses an account balances page in a banking web application, and the application determines whether that user is allowed to access the bank balance.\n\n2. Review how the authorization check is made.\n\n\nThis test __passes__ if the authorization check calls a central module, such as `app.checkAuthorization(user, function)`  or `app.userHasPermission(user, permission)`.\n\nThis test __passes__ if the authorization uses a central Access Management system.\n\nThis test __fails__ if the authorization check is not centralized, such as `if (user.name == 'Bob') then do_privileged_function`.\n\n__Note__: These verification countermeasures require familiarity with source code structure and the manual review of a significant portion of the presentation layer source code.",
    "weakness_title_read_only": "Improper Access Control (Authorization)",
    "weakness_id_read_only": "P182",
    "weakness": "e488cdc5-3c91-4d2b-bcec-5c651b000d8b",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2012-11-22T16:17:13.755000-05:00",
    "last_updated": "2022-08-22T17:00:10.178000-04:00",
    "custom": "False",
    "rules": "616b6ea4-5436-4bad-83f6-bc83781aa8f2;0b07fc15-1e13-4c03-b097-c7e222fc019a;28183a47-70c3-4ffc-a2de-648d7c723502",
    "rules_read_only": "A23;A718;A1265"
  },
  {
    "countermeasure_id": "T227",
    "universal_id": "685f9f17-fa2f-41b4-a66f-b6ba8001d633",
    "countermeasure_name": "Verify that application's access to database is restricted",
    "countermeasure_solution": "Use the following guidelines to verify that an application's access to the database is restricted:\n\n1. Review source code to determine the account that the application uses to connect to its database at runtime. \n    - For example, the application has an id 'bank_app' that it uses to connect to the database.\n\n    This test __fails__ if the application uses a database super-user account, such as 'sa' (System Administrator).\n\n2. Review the database permissions for the user identified in step 1.\n\n    This test __fails__ if the user has more permissions than it requires.\n        - Common examples of excessive permissions include the ability to drop tables, alter the database schema, or execute unnecessary prepared statements.\n\n__Note__: This verification countermeasure requires access to source code and a fair understanding of the source code structure.",
    "weakness_title_read_only": "Running With Unnecessary Privileges",
    "weakness_id_read_only": "P150",
    "weakness": "07093262-3118-48ab-911f-86160f3ae8e2",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2012-11-22T16:19:11.166000-05:00",
    "last_updated": "2022-08-22T17:01:45.325000-04:00",
    "custom": "False",
    "rules": "111336e7-ada4-498d-a54f-bf8c45c33c6f",
    "rules_read_only": "A1078"
  },
  {
    "countermeasure_id": "T228",
    "universal_id": "704ae5bc-277c-4cd7-a47f-66dfd7b5b653",
    "countermeasure_name": "Test that application restricts HTTP message size",
    "countermeasure_solution": "Consider the following parameters for HTTP message size restrictions:\n\n1. The maximum number and length of request headers and bodies:\n\n    - Request body size.\n    - Number of request header fields.\n    - Request header fields size.\n    - Request line size.\n    - XML request body size.\n\n2. The maximum timeout values:\n\n    - Request read timeout.\n    - Keep-alive timeout.\n\n3. The maximum number of concurrent connections and connections backlog capacity.\n\nFor each of these items, complete the following steps:\n\n1. Ask developers and review documentation, or server settings, for the maximum value for the attribute.\n    - If you are unable to obtain this information, assume it is an excessively large, but reasonable value as the upper bound.\n\n2. Attempt to send an HTTP request (or a set of concurrent requests) with the attribute slightly larger than the maximum value determined in step 1.\n    - You can use [Burp Suite](http://portswigger.net/burp/) or [Postman](http://www.getpostman.com/) to create and send arbitrary HTTP requests.\n    - [Apache JMeter](http://jmeter.apache.org/) is a useful tool for establishing concurrent connections to the server.\n\n    This test __fails__ if the server accepts the request and sends back a regular HTTP 200 response.\n\n3. Make sure that the request sent in step 2 did not fail due to an unrelated reason, such as an invalid session.\n    - If in doubt, review server logs to determine the cause of failure. \n    \n    This test __fails__ if the invalid message reaches the application layer or fails for other reasons.",
    "weakness_title_read_only": "Uncontrolled Resource Consumption (Resource Exhaustion)",
    "weakness_id_read_only": "P293",
    "weakness": "1bee9747-5d60-43f1-8e0f-e261388a5c25",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2012-11-22T16:21:45.889000-05:00",
    "last_updated": "2021-06-25T14:47:40.864000-04:00",
    "custom": "False",
    "rules": "ed4ba6aa-be7d-4c57-839c-d9c6c9e091c0",
    "rules_read_only": "A195"
  },
  {
    "countermeasure_id": "T229",
    "universal_id": "fad59f82-1c4f-44ea-aebe-a2f73e115d25",
    "countermeasure_name": "Verify that logs do not contain confidential data",
    "countermeasure_solution": "Use the following guidelines for finding confidential data in logs:\n\n1. Obtain a production application log file.\n\n2. Determine the kinds of confidential data that the application uses.\n    - For example, passwords, credit cards, social insurance / social security numbers, and protected health information.\n\n    This test __fails__ if you see any instances of confidential data in log files.\n\n    __Note__: You may want to work with an application developer to better understand the data in an application log file.\n\n3. Alternatively, examine source code for where the application handles confidential data specified in step two.\n    - Look at the log statements in these areas of source code and determine if the application is explicitly logging confidential data.\n\n__Note__:\n\nDevelopers may define severity levels for logging differently (DEBUG vs. ERROR). As a result, they may have certain levels of logging enabled in development and disabled in production.\n\n- Do not fail the test if there is a logging statement for confidential data that is disabled in production.\n    - In these cases, verify that the production server log level is consistent with the developer's claims.\n    - For example, the level is set to \"ERROR\" or higher, and \"DEBUG\" is not logged.",
    "weakness_title_read_only": "Information Leak Through Log Files",
    "weakness_id_read_only": "P420",
    "weakness": "60bad2d0-c4bf-4f4a-8d9b-c843e08fabe3",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2012-11-22T16:22:35.634000-05:00",
    "last_updated": "2021-06-25T14:47:38.255000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T230",
    "universal_id": "29297bcb-9ba4-4df3-a9f1-12c1879e5068",
    "countermeasure_name": "Test that sever-to-server system accounts meet minimum password requirements",
    "countermeasure_solution": "Use the following guidelines to test the minimum password requirements for server-to-server system accounts:\n\nAttempt to create a new server account with a simple password that does not meet minimum password standards. For example, less than 5 characters, uses dictionary words, and so on.\n\nThis test __fails__ if you are able to successfully create this account with a weak password.\n\n__Note__: The same test can be done by attempting to change the password for an existing account. However, using an existing system account might result in the interruption of service of the production environment and must be avoided.",
    "weakness_title_read_only": "Insufficient System Account Password Requirements",
    "weakness_id_read_only": "P687",
    "weakness": "6f80f26a-296a-43dd-af6f-30df28dcab6f",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2012-11-22T16:24:05.401000-05:00",
    "last_updated": "2021-06-25T14:47:43.664000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T232",
    "universal_id": "9ff4ea35-58c6-4181-a27e-3d33bce6ea5d",
    "countermeasure_name": "Verify that end-user transaction logs capture sufficient information",
    "countermeasure_solution": "Complete the following steps to verify that end-user transaction audit logs capture sufficient information:\n\n1. Obtain a production end-user transaction audit log.\n    - For example, in an order entry application this might be a log file or database report that shows all transaction information about orders received from users. \n\n    This __test__ fails if no such audit log exists.\n\n2. Verify that the audit log contains all of the following:\n    * User ID or another unique identifier for the end user who performed the transaction.\n    * Timestamp indicating when the transaction was performed.\n        * Timestamps should be generated using internal system clocks, capable of being mapped to Coordinated Universal Time (UTC) or Greenwich Mean Time (GMT), and meet granularity requirements for time measurement.\n    * Source IP address or another unique network identifier.\n    * Description of the event/transaction.\n    * Any error code, if it applies.\n\nIf the information is not captured within the audit log, then ask development or operations to show how they could produce all of the above data for a given transaction.\n\nThis test __fails__ if the information cannot be captured.",
    "weakness_title_read_only": "Insufficient Logging or Insufficient Protection of Logs",
    "weakness_id_read_only": "P619",
    "weakness": "9a42301f-ed6c-42cb-a85d-a5134b76b701",
    "tags": "",
    "countermeasure_priority": "3",
    "phase": "testing",
    "created": "2012-11-22T16:25:53.908000-05:00",
    "last_updated": "2021-06-25T14:47:58.383000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T233",
    "universal_id": "aeb170c7-243d-4e07-af6a-e6c3f668a534",
    "countermeasure_name": "Verify that each person using the system is assigned a unique user ID",
    "countermeasure_solution": "Use the following guidelines to ensure that each user has a unique user ID:\n\n1. Obtain a complete list of people that have access to the application along with the user ID they use to access the application.\n\n2. Review the list.\n\nThis test __fails__ if two or more people share the same User ID.",
    "weakness_title_read_only": "Opportunity for disclaimer and lack of means to achieve non-repudiation",
    "weakness_id_read_only": "P749",
    "weakness": "eed86774-267d-44a2-b6e4-8213b5ba40e7",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2012-11-22T16:27:25.802000-05:00",
    "last_updated": "2021-06-25T14:47:41.715000-04:00",
    "custom": "False",
    "rules": "2ef3b940-05af-4cb9-bfc6-ed2fee4c8d42",
    "rules_read_only": "A728"
  },
  {
    "countermeasure_id": "T234",
    "universal_id": "451a4c44-2247-47fc-8ebc-5dfa911d006f",
    "countermeasure_name": "Verify sensitive credit card data is not stored",
    "countermeasure_solution": "Use the following guidelines to see whether sensitive credit card data is stored:\n\n1. Review the source code for credit card data input:\n    - For example, a screen where users enter credit card data, or a module which connects with a physical reader.\n\n2. Attempt to find where the application reads track data from a card, the CVV number, PIN, or encrypted PIN block.\n\n    __Note__: All of this data may be stored together and may not be distinctly labeled in code.\n\n3. Follow every code path for the data identified in step 2.\n     \n    This test __fails__ if the data is persisted to a file, database, or any other storage after authorization.\n\n    This test also __fails__ if the data is logged in a production log file. \n\n__Note__: Enumerating all possible data flows for a particular variable can be complex in large-scale applications. Consider building a custom rule for a static analysis tool to perform this analysis automatically.",
    "weakness_title_read_only": "Storage of Confidential Credit Card Fields",
    "weakness_id_read_only": "P708",
    "weakness": "6d622a64-6be8-4255-b735-62c8249c68bb",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2012-11-22T16:29:19.503000-05:00",
    "last_updated": "2021-06-25T14:47:35.932000-04:00",
    "custom": "False",
    "rules": "0b07fc15-1e13-4c03-b097-c7e222fc019a",
    "rules_read_only": "A718"
  },
  {
    "countermeasure_id": "T235",
    "universal_id": "4bb7e680-db53-4614-83a6-1bd6c4f95227",
    "countermeasure_name": "Verify that application does not store protected health information insecurely",
    "countermeasure_solution": "Use the following guidelines to determine how health information is stored:\n\n1. Review source code for protected health data input.\n    - For example, a screen where users enter potentially protected health information, or a module which collects information from a physical device.\n\n2. Attempt to find where the application reads the protected health data.\n\n3. Follow every code path for the data identified in step 2.\n\n    This test __fails__ if the data is persisted to a file, database, or any other storage without encryption.\n\n    This test also __fails__ if the data is logged in a production log file.\n\n__Note__: Enumerating all possible data flows for a particular variable can be complex in large-scale applications. Consider building a custom rule for a static analysis tool to perform this analysis automatically.",
    "weakness_title_read_only": "Plaintext Protected Health Information",
    "weakness_id_read_only": "P709",
    "weakness": "b863a7e9-9fd8-4061-9843-85c086567884",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "testing",
    "created": "2012-11-22T16:31:01.149000-05:00",
    "last_updated": "2023-05-11T12:32:29.604000-04:00",
    "custom": "False",
    "rules": "0b07fc15-1e13-4c03-b097-c7e222fc019a",
    "rules_read_only": "A718"
  },
  {
    "countermeasure_id": "T236",
    "universal_id": "bee8e121-8a7b-4be5-bd74-8ed2c1fa4dab",
    "countermeasure_name": "Test that the application encrypts protected health information on the Internet",
    "countermeasure_solution": "Use an HTTP-proxy tool to ensure that protected health information is sent over HTTPS, not HTTP.\n\nThis test __fails__ if protected health information is sent over HTTP.",
    "weakness_title_read_only": "Plaintext Protected Health Information",
    "weakness_id_read_only": "P709",
    "weakness": "b863a7e9-9fd8-4061-9843-85c086567884",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "testing",
    "created": "2012-11-22T16:32:30.048000-05:00",
    "last_updated": "2023-05-11T12:32:32.106000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T237",
    "universal_id": "7a594c66-3da8-43a8-b1ec-3607e8c5a597",
    "countermeasure_name": "Test that solicitation emails follow spam-free guidelines",
    "countermeasure_solution": "Complete the following steps to test the chances of solicitation emails being marked as spam: \n \n1. Use a test email address and sign up for solicitation emails. \n \n2. Trigger the system to send all the marketing emails or review all available template emails. \n \n3. Review all solicitation and marketing emails. Verify that each of them has the following: \n    * An unsubscribe link (Test if it is valid for 60 days). \n    * A physical business address at the bottom of the message. \n    * A relevant email title. \n    * The full name of the organization. \n    * A reason why the user is receiving this communication. \n \n    This test __fails__ if any of these are not present. \n \n4. If the email contains an image or other mechanisms to track whether or not users have opened or forwarded the email, ensure that this fact is mentioned in the application/website's privacy policy. \n\n \n    This test __fails__ if this information is missing. \n \n   Also, verify that you review the status of each entry in the contact list and you are sure for each entry you have either [express or implied consent](https://www.crtc.gc.ca/pubs/CASL_Infograph3_Eng.pdf). \n \n   __Note__: You might need to inspect the source of the email to identify all embedded images and tracking codes. \n \n \n## Important Note \n \nIf you send commercial electronic messages (CEMs) to Canadian individuals or companies, follow the extended verification amendment for this test.",
    "weakness_title_read_only": "Spam Emails",
    "weakness_id_read_only": "P722",
    "weakness": "b7165939-ccd9-47c9-a827-a23cd7203071",
    "tags": "",
    "countermeasure_priority": "2",
    "phase": "testing",
    "created": "2012-11-22T16:34:14.252000-05:00",
    "last_updated": "2022-01-18T08:09:11.557000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T238",
    "universal_id": "b0753489-dd16-41be-931e-94eb5ba46375",
    "countermeasure_name": "Test that users can review and update their personal information",
    "countermeasure_solution": "Complete the following steps to test whether personal information can be updated: \n \n1. Ensure that any user can access a page or function where they can review all of their personal information \n   - Such as name, address, and email address. \n \n   This test __fails__ if such a page or function does not exist. \n \n2. Attempt to edit each type of personal data. \n    \n   This test __fails__ if any type of personal information is not editable. \n \n   __Note__: Any data derived from personal information must be editable as well. For example, if a user ID is derived from a social security number, then the user ID must be editable. \n \n3. Log out and then try to access the personal information. \n \n   This test __fails__ if you can access the personal information without having to log in again.",
    "weakness_title_read_only": "Lack of features that allow access and modification of personal data",
    "weakness_id_read_only": "P815",
    "weakness": "29803852-9820-4cbb-9363-406b6cb24fa7",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2012-11-22T16:38:33.620000-05:00",
    "last_updated": "2023-05-11T11:08:25.932000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T239",
    "universal_id": "a7c3e875-0b5a-44a8-8110-5eb828615589",
    "countermeasure_name": "Test that users provide consent prior to the collection of personal information",
    "countermeasure_solution": "Use the following guidelines to test whether users have provided consent: \n \n1. As a new user, look for where the application collects personal information, such as name and address. \n \n2. Ensure that there is a link to a privacy policy, or a clear description of how personal information will be used *prior* to the application collecting this information. \n \n   This test __fails__ if no privacy policy link or description is available. \n \n3. Ensure the application provides an option to opt out of or consent to collecting personal information. \n\n \n   - For example, a check box indicating \"I have read, understood, and agree to the Terms of Usage and Data Use Policy of Organization XYZ\". \n   - Attempt to opt out or not provide consent to the application. \n \n   This test __fails__ if you do not find an option to opt out. \n \n4. Verify that users can consent or opt out prior to having their personal information collected. \n \n   This test __fails__ if the option only appears *after* the information is collected.",
    "weakness_title_read_only": "Privacy Violation",
    "weakness_id_read_only": "P257",
    "weakness": "b0418f1b-bf92-45ba-845f-abfb9735f1cf",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "testing",
    "created": "2012-11-22T16:41:13.015000-05:00",
    "last_updated": "2023-05-25T13:57:50.278000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T240",
    "universal_id": "9de96c20-f234-4483-bdf0-c47a9076c0b7",
    "countermeasure_name": "Test whether users can remove their data from the system",
    "countermeasure_solution": "Complete the following steps to test for data removal functionality:\n\n1. Look for a page or a function in the application that allows users to either remove their personal information or completely remove their account.\n\n    __Note__: There may only be an option to remove the account completely if the account requires personal information to function properly.\n\n    This test __fails__ if no such removal page or function is available.\n\n2. If the only option available is to remove an account completely, ensure that users must do at least one of the following prior to removing their account:\n    \n    - Enter their password again (re-authenticate).\n    - Validate through email.\n    - Answer security questions.\n\n    This test __fails__ if users can remove their account without their identity being validated by at least one of these measures.\n\n3. Check for evidence that this countermeasure has been implemented, such as certificates of destruction, retention schedules, etc. \n\n    This test __fails__ if no such evidence exists.",
    "weakness_title_read_only": "Lack of features that allow access and modification of personal data",
    "weakness_id_read_only": "P815",
    "weakness": "29803852-9820-4cbb-9363-406b6cb24fa7",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2012-11-22T16:43:22.699000-05:00",
    "last_updated": "2022-08-22T17:03:48.176000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T241",
    "universal_id": "c0357e63-bc36-4b1a-aad3-c5cd56b254fa",
    "countermeasure_name": "Verify that third party libraries use secure settings and the latest patches",
    "countermeasure_solution": "Complete the following steps to ensure that there are no outstanding security patches for third party libraries, and that the libraries and tools are configured for the most secure settings:\n\n1. Obtain a list of all third party libraries used by the application, including version numbers.\n    - If you are not familiar with the code structure, you might need to ask a developer to compile this list for you.\n\n2. Research vendor pages for the third party libraries to see if there are any outstanding security vulnerabilities.\n\n    This test __fails__ if there are outstanding security vulnerabilities without any workarounds.\n\n3.  Research vendor pages for the most secure settings of the libraries, or any weaknesses reported caused by misconfiguration of the tools/software.\n    - Check the system settings.\n\n    This test __fails__ if they are different from recommended settings.\n\n__Note__: If vulnerability information is unavailable from the vendor, consider using a third party service such as the Common Vulnerability Exposures (CVE) database to research if there are known vulnerabilities for the third party libraries. The following sources can be used to locate security advisories and details about required patch levels for most commonly available products/libraries:\n\n- [Security Focus Vulnerability Database](http://www.securityfocus.com/vulnerabilities) (where advisories are categorized by vendor > Product > Version)\n- [National Vulnerability Database (NVD)](http://web.nvd.nist.gov/view/vuln/search).\n- [Common Vulnerability Enumerator (by MITRE Foundation)](http://cve.mitre.org/cve/).",
    "weakness_title_read_only": "Insufficient patching or use of insecure third party software/libraries",
    "weakness_id_read_only": "P728",
    "weakness": "659effab-aba7-464d-8760-f30eed4d032c",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "testing",
    "created": "2012-11-22T16:44:18.819000-05:00",
    "last_updated": "2021-06-25T14:47:57.199000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T243",
    "universal_id": "c628d3a0-3cbb-4398-ad06-8544a8c7f0f4",
    "countermeasure_name": "Check the authenticity and integrity of received SOAP messages",
    "countermeasure_solution": "Ensure authenticity and integrity of SOAP messages at the message or transport level:\n\n- Use timestamps and signatures in the SOAP message\n- Use HTTPS (SSL/TLS) and validate Certificates.\n\n## Message level - SOAP Message Signing\n\nCertain frameworks provide a capability to sign inbound or outbound SOAP messages to guarantee message integrity. They may also provide a capability to include a timestamp and nonce (unique value that can only be used once), or a timestamp expiration, which reduces the risk of a replay attack.\n\nUse these controls to ensure that an attacker cannot modify the SOAP messages during transit and to mitigate the risk of a replay attack. This is a more pertinent issue for Internet facing web services, as well as SOAP messages transmitted over plain text connections. Where possible, sign the time stamp.\n\n## Transport level - SSL/TLS with verified certificates\nSSL/TLS (HTTPS specifically), when coupled with proper certificate validation can be used as an alternative mechanism to guarantee integrity and authenticity of SOAP messages.\n\nFor a list of options, see pages 2-16 in the [NIST-SP 800-95](http://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-95.pdf).",
    "weakness_title_read_only": "Insufficient Verification of Data Authenticity",
    "weakness_id_read_only": "P244",
    "weakness": "b804db70-a48e-4d47-8c34-d8ee26babd77",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "requirements",
    "created": "2012-12-05T15:44:01.124000-05:00",
    "last_updated": "2021-06-25T14:48:01.307000-04:00",
    "custom": "False",
    "rules": "16baf492-81ad-438e-b3fd-1f618e1ff17e",
    "rules_read_only": "A730"
  },
  {
    "countermeasure_id": "T244",
    "universal_id": "c3b4c356-9ff5-4a61-a588-a51b3cd03563",
    "countermeasure_name": "Securely delete any unprotected sensitive data before a resource is released or shared",
    "countermeasure_solution": "Delete unprotected sensitive data securely in accordance with industry and government-accepted standards for secure deletion. \n\nIf you are a [controller](/library/glossary/G33/) delegating this job to your [processors](/library/glossary/G34/), provide them with written deletion instructions. If you are a processor assigned to this job on behalf of the controller, ensure that the deletion is in compliance with the controller's written instructions.\n\nSee the cases described below for circumstances that might require secure deletion.\n\n- Make sure you scrub and purge all confidential or authorization-protected information every time you return a resource to a pool of resources that is shared with other services and users. This includes:\n    - Encrypted representations of information produced by the actions of previous users/roles\n    - Actions of processes acting on behalf of those users/roles.\n\nThe following circumstances may require you to purge or delete confidential data:\n\n1. A previous, less secure, version of an application is upgraded.\n\n2. Certain unprotected data is re-classified higher as being sensitive.\n    - All instances of this data must be securely deleted.\n\n3. A storage device contains sensitive data and the device/resource is released or decommissioned.\n    -  For example, registers, RAM, parts of the hard-drive, and cloud storage.",
    "weakness_title_read_only": "Sensitive information uncleared before release",
    "weakness_id_read_only": "P123",
    "weakness": "2002c126-9f98-416e-ba84-3648bad801e6",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "requirements",
    "created": "2013-06-05T12:11:29.606000-04:00",
    "last_updated": "2022-02-25T14:49:56.129000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T245",
    "universal_id": "d16e4e4e-79d8-4066-b216-e7f8441b88d1",
    "countermeasure_name": "Verify that sensitive unprotected data is securely deleted",
    "countermeasure_solution": "Complete the following steps to verify that sensitive unprotected data is deleted securely before releasing any resources:\n\n1. Work with developers to find out when the system/application resources are released to a pool of resources, or shared with other services and users.\n    - For example, RAM, parts of the hard-drive, and cloud storage.\n\n2. Identify unprotected sensitive data that must be deleted in those cases.\n\n3. Verify that the application contains a tool or procedure that securely wipes stored sensitive information from its data.\n\n    This test __fails__ if no such tool or procedure exists.\n\n4. Verify that the secure wipe tool or procedure securely removes the sensitive data, in accordance with industry/government-accepted standards for secure data deletion.\n\n    This test __fails__ if the sensitive data is still available after using forensic tools or methods.",
    "weakness_title_read_only": "Sensitive information uncleared before release",
    "weakness_id_read_only": "P123",
    "weakness": "2002c126-9f98-416e-ba84-3648bad801e6",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2013-06-05T12:50:47.166000-04:00",
    "last_updated": "2021-06-25T14:47:56.019000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T246",
    "universal_id": "987b147f-da5b-401c-9506-ceebdf937f4f",
    "countermeasure_name": "Control access to encrypted volumes independent of native operating system",
    "countermeasure_solution": "Disk-level encryption encrypts the entire disk/partition on a computer and automatically decrypts the information when an authorized user requests it. Many disk encryption solutions intercept operating system read/write operations, and can carry out the appropriate cryptographic functions without needing any special action by the user, other than supplying a password during system startup, or at the beginning of a session.\n\nHowever, this is not adequate to comply with many regulations, such as PCI-DSS and PA-DSS. To be compliant with these regulations based on the characteristics of disk-level encryption above, make sure your disk/partition encryption software does __not__:\n\n1. Use the same user account authenticator (such as passwords) as the operating system.\n\n2. Use a decryption key that is associated with or derived from the system's local user account database, or general network login credentials.",
    "weakness_title_read_only": "Insufficient Compartmentalization",
    "weakness_id_read_only": "P540",
    "weakness": "90e5da29-378c-4620-adb4-f227791d35fe",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "requirements",
    "created": "2013-06-07T16:20:21.573000-04:00",
    "last_updated": "2023-03-17T17:38:33.236000-04:00",
    "custom": "False",
    "rules": "2d936828-5a6a-473b-bd53-e6215b49fb63;b27b3da4-7706-4b3c-9fdb-c82cc61b37b6",
    "rules_read_only": "A132;A784"
  },
  {
    "countermeasure_id": "T247",
    "universal_id": "f83594ba-41d3-49e3-a523-ed8733cf0482",
    "countermeasure_name": "Verify logical access to encrypted volumes are managed independently of native operating system",
    "countermeasure_solution": "Use the following guidelines to determine how access to encrypted storage is used:\n\n1. Verify that access to any encrypted storage is controlled by a mechanism that does not rely on the native OS.\n    - You may need to consult the development team for this information.\n\n2. Verify that cryptographic keys are securely stored.\n    - If keys are stored on removable media, they must be sufficiently protected with strong access controls.\n\n3. Verify that any sensitive data stored on removable media is encrypted.",
    "weakness_title_read_only": "Insufficient Compartmentalization",
    "weakness_id_read_only": "P540",
    "weakness": "90e5da29-378c-4620-adb4-f227791d35fe",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2013-06-11T14:55:02.155000-04:00",
    "last_updated": "2023-05-11T11:11:01.683000-04:00",
    "custom": "False",
    "rules": "2d936828-5a6a-473b-bd53-e6215b49fb63;b27b3da4-7706-4b3c-9fdb-c82cc61b37b6",
    "rules_read_only": "A132;A784"
  },
  {
    "countermeasure_id": "T248",
    "universal_id": "baebe08b-d075-42b1-ab80-2d863c882e96",
    "countermeasure_name": "Protect secret keys and passwords in the application",
    "countermeasure_solution": "Keys used in the application must be secured, and access to them must be controlled and made available to the fewest possible users. These keys must also be stored separately from their key-encrypting key.\n\nThe following locations are recommended for storing a key-encrypting key:\n\n1. On a removable drive\n2. On a different system, where access to the key is controlled using secured authentication, authorized mechanisms and transmitted securely (such as with TLS)\n\nAll hardcoded passwords or secret keys can be retrieved from a client. Unless a secure key management system is used, a skilled attacker can bypass simple client-side techniques to obfuscate key/passwords. Avoid storing hardcoded secret keys or passwords on a client at all times.\n\nWhen you need to store an application secret:\n\n- Where possible, use alternative APIs that do not need that secret.\n    - For instance, use the user's Facebook session.\n\n- When an alternative method is not available, store the secret on a server and proxy the requests through it.\n    - The server needs to perform all the required validations, including the whitelisting of actions that are allowed, and validating that a registered user is logged into the app on the mobile device (validating the session).\n\n- Use a secure keystore / keychain with a master password that is derived from a salt and a password that is entered by the user or retrieved from a safe location as described in the How-to for this countermeasure.\n\n__Note__: The key-encrypting key must be at least as strong as the data-encrypting key that it secures.",
    "weakness_title_read_only": "Use of hard-coded or insecurely stored passwords and secret keys",
    "weakness_id_read_only": "P218",
    "weakness": "f03301f2-2f5b-4ee6-bb51-581286168040",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "requirements",
    "created": "2013-06-11T22:48:54.129000-04:00",
    "last_updated": "2023-03-17T16:58:22.477000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T249",
    "universal_id": "88e3ea70-edb5-45e9-898e-6e58fef3cf6a",
    "countermeasure_name": "Verify that keys and passwords are protected in the application",
    "countermeasure_solution": "Complete the following steps to determine whether keys and passwords are protected:\n\n1. Ask the design and development teams about how the application protects keys and passwords.\n\n    This test __fails__ if no controls are in place.\n\n2. Identify the data-encrypting keys used in system configuration.\n    - Verify that these keys are both encrypted and stored separate from the key-encrypting keys.\n\n    This test __fails__ if the key-encrypting keys are stored on the same storage volume as a data-encrypting key.\n\n3. Verify that access to keys is limited to the fewest possible number of users.\n    - For application vendors, check production documentation to ensure that this requirement is communicated to users.\n    - Where an application is installed, check access lists and ensure that the least number of users have access to keys.\n\n4. Verify that keys are stored securely in the fewest number of places and forms.\n\n    This test __fails__ under the following conditions:\n\n    - If a key is found to be stored in multiple files in a single system without sufficient reason.\n\n    - If a key is stored in more than one manner, such as both in the Windows registry and in a file.\n\n5. Check that the keys and passwords are not hardcoded. There are generally three ways to check if secret keys or passwords are hardcoded into the client:\n\n    1. __Decompile binary__\n        - Use a decompiler to analyze the client binaries.\n        - Look for the static strings section of the decompiled binaries.\n        - If the variable names can be decompiled, look for those that would suggest a secretive or password-type name.\n            - For instance, if the binary contains debug symbols, look for passwords within them.\n        - Otherwise, look for the content of the strings.\n            - If a string looks suspicious try to follow its usage in the decompiled code to see if it is used for signing or encrypted messages, such as an HMAC key.\n            - If these conditions are met, then the string is a strong candidate for a hardcoded secret or password.\n\n    2. __Look at static strings in binary files__\n        - Use a tool such as the Unix `strings` command that extracts static strings from binary files.\n        - This will generate a list of static strings embedded in the code.\n            - You will need to run the tool against decompressed binaries if the binaries are packaged.\n        - Then review the extracted strings manually, discard the user shown messages (such as error messages) and look for similarities to secrets or passwords.\n            - For example, look for keywords that look like a plain password, or hex digests that some systems use.\n\n    3. __Analyze the communication flow/protocols__\n        - If the protocols and messages communicated are well analyzed and understood, it is possible to derive an educated guess that the client contains a static secret or password.\n        - For example, if the client signs messages to be sent to a third party without the intervention of its server counterpart, and the third party expects a signature using the app's secret code, then it is very likely that the app's secret key for the third party service is hardcoded into the app's code.\n        - The last method would only provide clues and would not reveal or firmly prove the existence of a hardcoded secret key or password.",
    "weakness_title_read_only": "Use of hard-coded or insecurely stored passwords and secret keys",
    "weakness_id_read_only": "P218",
    "weakness": "f03301f2-2f5b-4ee6-bb51-581286168040",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2013-06-11T23:42:24.321000-04:00",
    "last_updated": "2021-06-25T14:47:44.144000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T251",
    "universal_id": "a612b5cb-fc2d-4190-ac3a-0212bfe5b85e",
    "countermeasure_name": "Test that unprotected PAN numbers are not sent in emails or text messages",
    "countermeasure_solution": "Complete the following steps to see whether PANs are sent in messages:\n\n1. Find out from the product team which end-user messaging systems are used with the application.\n    - For example, email, instant messaging, or SMS.\n\n2. For each identified messaging system:\n\n    This test __fails__ if PANs are known to be sent in messages and no solution is provided to render it unreadable.\n\n    - Where possible, test each product use case that triggers the sending of a message.\n    - Examine each message as a receiver.\n\n    This test __fails__ if a PAN is disclosed and readable.",
    "weakness_title_read_only": "Plaintext Primary Account Number (PAN)",
    "weakness_id_read_only": "P686",
    "weakness": "0f0a155b-ace0-421c-b1a0-351921494adf",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2013-06-28T16:29:41.152000-04:00",
    "last_updated": "2021-06-25T14:47:38.083000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T252",
    "universal_id": "42e81757-7e62-476b-b8db-4fa392536b3c",
    "countermeasure_name": "Configure XML parsers for secure processing",
    "countermeasure_solution": "Ensure that XML parsers handle XML from untrusted sources securely, such as user input:\n\n1. __Choose a secure XML parser__\n    - Certain XML parsers are not designed with security in mind because they were never intended for use against untrusted and potentially malicious XML content.\n        - For example, XML parsers used to read private configuration data.\n    - Avoid using these XML to handle untrusted input.\n\n2. __Configure the XML parser securely__\n    - Certain XML parsing options need to be configured properly to avoid XML vulnerabilities when handling XML from untrusted sources of input.\n    - See below for more detail regarding specific configurations.\n\n## Configure XML parsers securely\n\nBy default, most common XML parsers are vulnerable to denial of service attacks, arbitrary file inclusion, and unauthorized access. Before parsing or validating XML, configure the parser for secure processing:\n\n1. Use a SAX parser when opening potentially large data.\n2. Limit parse depth.\n3. Limit total input size.\n4. Limit parse time.\n5. Do not allow DTDs.\n6. Do not expand entities.\n7. Disable the resolving of external XML schema locations and external entities.",
    "weakness_title_read_only": "Unrestricted Recursive Entity References in DTDs ('XML Bomb')",
    "weakness_id_read_only": "P617",
    "weakness": "0e4bb66b-07d5-4675-bcf3-cca127da7b73",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "development",
    "created": "2013-07-24T16:57:18.585000-04:00",
    "last_updated": "2021-06-25T14:47:54.924000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T255",
    "universal_id": "70379c37-15c4-478d-9c84-0c3b6d3dddec",
    "countermeasure_name": "Test that XML parsers are not vulnerable to denial of service",
    "countermeasure_solution": "Test that the application is not vulnerable to denial of service attacks:\n\nFor any input that accepts XML, use the provided code below instead of normal test samples.\n\nThis test __fails__ if the application takes an overly long time to process the XML, or CPU/memory usage on the target system is very high.\n\n## Code\n    <?xml version=\"1.0\"?>\n    <!DOCTYPE lolz [\n      <!ENTITY lol \"lol\">\n      <!ENTITY lol2 \"&lol;&lol;&lol;&lol;&lol;&lol;&lol;&lol;&lol;&lol;\">\n      <!ENTITY lol3 \"&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;\">\n      <!ENTITY lol4 \"&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;\">\n      <!ENTITY lol5 \"&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;\">\n      <!ENTITY lol6 \"&lol5;&lol5;&lol5;&lol5;&lol5;&lol5;&lol5;&lol5;&lol5;&lol5;\">\n      <!ENTITY lol7 \"&lol6;&lol6;&lol6;&lol6;&lol6;&lol6;&lol6;&lol6;&lol6;&lol6;\">\n      <!ENTITY lol8 \"&lol7;&lol7;&lol7;&lol7;&lol7;&lol7;&lol7;&lol7;&lol7;&lol7;\">\n      <!ENTITY lol9 \"&lol8;&lol8;&lol8;&lol8;&lol8;&lol8;&lol8;&lol8;&lol8;&lol8;\">\n    ]>\n    <lolz>&lol9;</lolz>",
    "weakness_title_read_only": "Unrestricted Recursive Entity References in DTDs ('XML Bomb')",
    "weakness_id_read_only": "P617",
    "weakness": "0e4bb66b-07d5-4675-bcf3-cca127da7b73",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2013-08-19T12:39:50.767000-04:00",
    "last_updated": "2021-06-25T14:47:53.815000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T256",
    "universal_id": "fa79eb9d-aee7-4922-aae0-5ef1eef17e20",
    "countermeasure_name": "Test that compiler settings are set to mitigate buffer overflows",
    "countermeasure_solution": "Verify that all application components that run in an unmanaged environment are compiled with security-hardening settings.\n\nIt is not always possible to verify with certainty that certain compiler settings have been used to produce a binary. Some tools include the compilation settings in the resulting binary, but for various valid reasons this feature is not always turned on/available. Some environment-specific tools do exist that can inspect certain binaries to verify specific settings have been used. At a __minimum__:\n\n- Confirm with the development team that security hardening options were used to compile the unmanaged binaries.\n    - Verify that stack buffer overflow mitigation options were used.\n    - Some tools turn this option on by default, and developers may be unaware that such protection is in place.\n    - In these cases, consult the compiler documentation to check that this buffer overflow protection is enabled by default.\n\nThis test __fails__ if the development team cannot confirm that security hardening options were used to compile the binaries.\n\nIf the binaries target Unix/Linux systems and are ELF (Extensible Linking Format):\n\n- Use `hardening-check` to verify that security-hardening settings have been used to mitigate, at a minimum, stack buffer overflows.",
    "weakness_title_read_only": "Buffer Copy without Checking the Bounds",
    "weakness_id_read_only": "P21",
    "weakness": "162b0723-2710-4397-98a4-4da915a7ea2a",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2013-11-29T12:01:33.814000-05:00",
    "last_updated": "2021-06-25T14:47:58.816000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T257",
    "universal_id": "70749a92-1da2-44ea-8ecd-4694844582ec",
    "countermeasure_name": "Secure cross origin resource sharing (CORS)",
    "countermeasure_solution": "Use the following guidelines for securing CORS:\n\n- __Do not__ rely on the `Origin:` header for access control.\n    - Enforce a normal authentication/authorization process.\n        - Same-origin requests and non-browser requests are not subject to a CORS policy\n        - See the related How-to for this countermeasure on CORS and access control.\n    - Perform authentication/authorization for all request types such as GET and POST, except OPTIONS.\n    - Make sure no part of the functionality that is not public is exposed without authentication.\n\n- Use standard procedures to block cross-site request forgery (CSRF).\n    - See the related How-to for this countermeasure.\n\n- Use the following guidelines to develop a secure CORS policy, using a whitelist for trusted origins.\n    - Do not send CORS response headers on private resources that are not intended to be used across origins\n    - Send the wildcard value (`Access-Control-Allow-Origin: *`) in a response containing publicly accessible resources\n        - It is recommended to enable this for all public resources, including JavaScript files, stylesheets, and images. Doing so enables features such as [Subresource Integrity](https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity) and [HTML5 canvas exports](https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image).\n        - As a precaution, the wildcard cannot be used with credentials (cookies, client certificates).\n    - For shareable resources, check the exact value of the incoming `Origin: ` header against a whitelist, along with the HTTP method and headers used. If a match is found, return appropriate `Access-Control-Allow-...` headers.\n        - Do not use partial whitelist matching (e.g., `contains()`, `startsWith()`, `endsWith()`) to avoid bypass attacks\n\nAdditionally, take the following considerations into account.\n\n- Use the response header `Access-Control-Max-Age:` to enforce a time limit on the caching of the CORS policy in the browser (in seconds).\n- Send the `Access-Control-Allow-Credentials: true` header on all requests that require credentials (e.g., cookies, client certificates). \n- If the request is sent from the browser over a plain HTTP channel, but the origin shows an HTTPS prefix, do **not** process the message or return an error.\n- If you are building an isolated application, consider moving frontend and API into the same origin to benefit from same-origin requests.\n\nIn all cases, fail securely, and return a minimum amount of information.",
    "weakness_title_read_only": "Cross-Site Request Forgery (CSRF)",
    "weakness_id_read_only": "P677",
    "weakness": "ec20bc24-5e77-4cac-a8bb-be1d2517e2a0",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "development",
    "created": "2014-02-10T00:22:17.948000-05:00",
    "last_updated": "2022-09-01T10:10:23.226000-04:00",
    "custom": "False",
    "rules": "8f04f73a-f12b-48b8-a25c-191016f7153b",
    "rules_read_only": "A1192"
  },
  {
    "countermeasure_id": "T258",
    "universal_id": "5870c23c-cd64-4614-bb04-e93dde64f1f9",
    "countermeasure_name": "Secure web (cross domain) messaging in HTML5",
    "countermeasure_solution": "Web Messaging, or cross domain messaging, provides a means of communication between documents from different origins.\n \nIf your application does not need to receive messages from other sites, do not enable web messaging. Simply do not add any event listeners for \"message\" events.\n\nIf you use web messaging: \n\n##As the sender\n\n- When posting a message, explicitly state the expected origin (of the target) as the second argument to `postMessage()` rather than `*` to prevent sending the message to an unknown origin after a redirect, or some other means of changing the location of the target window.\n      - For example use: `newWindow.postMessage(\"Hello World!\",\"https://trusted_site.com\")\n      - Note that the second argument of `postMessage()` specifies the origin of the target window. If the hostname or port of the target window is different from the one provided at the time the messages is being sent the event will not be dispatched.\n\n\n##As the receiver\nIf web messages are accepted in the client side code by adding an event listener for \"message\", then follow these guidelines:\n\n- Check the `origin` attribute of the sent event to verify that the message is coming from the expected location.\n    - When validating `origin`, validate the full domain and avoid using loose substring matching.\n    - For example, looking for \"example.com\" as the attacker might use a domain like \"example.com.evil.com\".\n\n- Perform input validation on the `data` attribute of the event to ensure that it's in the desired format.\n    - This is especially important if you are calculating a target address from the input.\n\n- Do not use origin checks as the only security measure. \n    - In general, the message is not guaranteed to be sent by the origin that it purports.\n        - The data received through web messaging is always suspicious because the origin can easily be modified in a compromised hacker's browser. \n    - Use other methods for checking the authenticity of a message, or for authentication purposes in addition to origin.\n        - For example, signatures can be used to check authenticity.\n\n- Avoid passing data received in messages to `eval()` or adding them to DOM (by `innerHTML`, for example), as that would create a DOM-based XSS vulnerability.\n    - The only exception is when the data is strictly validated using a whitelist.\n\n__Note__:\n\nWeb messaging provides an effective InterProcess Communication (IPC) gateway for JavaScript code running in the browser. Since DOM elements are not shared between two documents and exposed to one another, this type of communication is normally safer than cross domain requests (through XMLHttpRequest). However, during web messaging, no message is sent to the server when the event happens. When the message is sent, and when it is received by the target page that has defined an event handler for \"message\", everything is managed within the browser and locally. \n\nAlways consider the fact that a hacker can create a fake message that forges an origin.",
    "weakness_title_read_only": "Improper Neutralization of Input During Web Page Generation (Cross-Site Scripting)",
    "weakness_id_read_only": "P632",
    "weakness": "67b0e738-a725-4462-be2a-52493b75f4ac",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "requirements",
    "created": "2014-02-11T12:23:52.752000-05:00",
    "last_updated": "2021-06-25T14:47:53.362000-04:00",
    "custom": "False",
    "rules": "a71d1d86-8d40-417b-9883-05b81e282cee AND f0c5d269-ade4-4873-8321-2f442d38ee29",
    "rules_read_only": "A792 AND A3"
  },
  {
    "countermeasure_id": "T259",
    "universal_id": "14818e5b-ed89-4cc9-be8c-abb5bc089bc8",
    "countermeasure_name": "Follow best practices when storing data in Local or Session Storage",
    "countermeasure_solution": "Use the following guidelines when using a browser's Local or Session Storage:\n\n- Do not store unencrypted sensitive information in Local/Session/IndexDB Storage.\n    - While the specifications describe the APIs, the underlying mechanism used by browser for storing data locally is unknown.\n    - Therefore, if the security of the operating system is compromised the data will be obtained by a hacker or anyone with a privileged access.\n\n- Use `sessionStorage` instead of `localStorage` and `IndexDBStorage`.\n    - Data stored using the `sessionStorage` object is available only to that window/tab until the window is closed.\n    - On the contrary, `localStorage` and `IndexDBStorage` do not set any expiration date for data, and it will remain in the browser after it is closed.\n\n- Perform strict input validation on data retrieved from Local/Session/IndexDB Storage before using it.\n    - A Cross-Site Scripting (XSS) flaw can inject malicious values into the locally stored data.\n    - Avoid using `eval()` on the stored data without strict white-listed validation. \n\n- Avoid placing data from Local/Session/IndexDB Storage into the page's body without proper validation (using `innerHTML` of an element, for example).\n    - If the content is manipulated through XSS, this will pose a high risk for unexpected and malicious activities.\n\n- Avoid storing session identifiers in the storage as the data is accessible by JavaScript.\n    - Cookies can use the `httpOnly` flag to prevent JavaScript access.\n\n- Avoid hosting multiple applications on the same domain.\n    - Use different subdomains instead.\n    - Local/Session/IndexDB Storage is shared between all pages of the same origin domain.\n    - Therefore, there is no way to restrict the visibility of an object to a specific path like with the attribute path of HTTP Cookies.\n\n__Note__:\n\n- Local/IndexDB Storage allows developers to use JavaScript to store data on the client and in the browser-provided storage.\n    - This is also called Web Storage, Offline Storage, or HTML5 Storage.\n\n- Session Storage keeps data until the session ends. \n    -  Both Local and Session Storage store data on the client.\n- A session is defined by the top-level browsing context (such as a tab or window) introduced in HTML5.\n- Each session lasts as long as its tab/window is open with content coming from the same origin.\n- The data will be available only to the pages from that origin.\n\nGiven that it can store a much larger amount of data compared to cookies, there is a need for greater care. See [Countermeasure T1468](/library/tasks/T1468/) for more details.",
    "weakness_title_read_only": "Storage of sensitive data in client side local storage",
    "weakness_id_read_only": "P734",
    "weakness": "5c6732c4-ff55-403a-b2e0-920c1dd09cb3",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "development",
    "created": "2014-02-12T02:16:22.417000-05:00",
    "last_updated": "2022-08-22T17:23:21.770000-04:00",
    "custom": "False",
    "rules": "8c9f2863-d4e9-4c79-860f-314d9c996c0f",
    "rules_read_only": "A1191"
  },
  {
    "countermeasure_id": "T260",
    "universal_id": "2b4b8d6d-fceb-4caa-90b3-4a21b9037f88",
    "countermeasure_name": "Secure usage of WebSockets",
    "countermeasure_solution": "Follow these guidelines when using WebSockets:\n\n- Use servers, implementations and frameworks that are based on [The WebSocket Protocol, RFC 6455](http://tools.ietf.org/html/rfc6455).\n    - Do not use WebSocket protocols below and including version Hixie-76.\n\n- Use `wss://` (WebSockets over SSL/TLS) whenever the application needs a secure channel.\n    - Use `wss://` instead of `ws://`, whenever other security requirements mandate a secure channel, such as when transferring personal information such as credit card data.\n\n- Check the `Origin:` header on the server.\n    - The origin header is __not__ designed to protect the application against attacks by a malicious software or browser that has been tampered with.\n    - A hacker can always spoof the headers and claim that the script comes from a trusted origin. \n    - The header is helpful for protecting the server against a malicious javascript, coming from an untrusted site, running on a secure browser (of a normal user). \n    - For more information, see [RFC 6455, Security Considerations](http://tools.ietf.org/html/rfc6455#section-10).\n\n- Use application layer controls for authentication and authorization, such as through cookies.\n    - WebSocket does not handle authorization or authentication.\n    - It is the combination of access control and verification of `Origin:` that can protect the application.\n\n- Complete normal anti-CSRF procedures:\n    - Include anti-CSRF tokens in the client's request page, and verify the server for WebSocket connections.\n\n- Treat messages received by the Web Socket as data.\n    - Avoid passing the received values to `eval()` or adding them to DOM.\n    - For JSON formatted data, use the secure `JSON.parse()` functionality instead of evaluating the data.\n\n- Always validate data coming through a WebSocket connection (on the server).\n    - The remote clients for WebSocket can be easily spoofed.\n    - As a result, input validation is needed for all received messages and data.\n\n- Always validate data coming through a WebSocket connection (as a client).\n    - A Web Socket client in a browser is accessible through JavaScript calls.\n    - Therefore all WebSocket communication can be spoofed or hijacked through XSS.\n\n##A Note on TCP Tunneling\n\nThe WebSocket protocol provides simple ways to create tunnels to other TCP services. For example, a database connection could be established from the browser. A malicious JavaScript can then find a direct connection to those services. For example, malicious JavaScript can come through a trusted website using cross-site scripting, and directly connect to a database.\n\nAdditionally, if those services do not have adequate access control, a standalone malicious software client can also create a similar tunnel using the WebSocket by faking the origin. While these notes do not indicate new tasks, they ask for extra caution in enforcing authentication/authorization for those services, as well as avoiding using tunnels when the page is vulnerable to cross-site scripting. This is a concern for pages that allow input from users.",
    "weakness_title_read_only": "WebSocket Hijacking",
    "weakness_id_read_only": "P743",
    "weakness": "07ed119f-9297-4fef-976a-dc685b7b8f16",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "requirements",
    "created": "2014-02-14T12:31:09.861000-05:00",
    "last_updated": "2021-06-25T14:48:01.398000-04:00",
    "custom": "False",
    "rules": "b814b6b6-aa92-47ff-8d8b-ab1e72a9858d",
    "rules_read_only": "A793"
  },
  {
    "countermeasure_id": "T261",
    "universal_id": "1656c80d-b4dc-4a4d-a6a1-f9f81bd3f600",
    "countermeasure_name": "Manage iOS Pasteboards that are used with sensitive data",
    "countermeasure_solution": "A Pasteboard is a mechanism that stores data within an app and shares it with other applications. Treat a Pasteboard as **untrusted storage** and follow the guidelines below:\n\n- Do not store sensitive data on **public and system Pasteboards**.\n- When putting sensitive data in a pasteboard cannot be avoided, **encrypt** sensitive data that must not be accessed by a different application.\n- **Expire** sensitive content and mark them as ***org.nspasteboard.ConcealedType***.\n- **Clear** all application Pasteboards when users log out.\n\n__Note__: Applications running in iOS prior to version 7 can access a Pasteboard of another application if its name is known. However, starting in iOS 7, Pasteboards are only shareable among applications belonging to the same Team ID.\n\n__Note__: After iOS 12, Pasteboards no longer apply and can no longer be persistent. They will always have a unique name.",
    "weakness_title_read_only": "Plaintext Storage in Memory",
    "weakness_id_read_only": "P213",
    "weakness": "c4de01f2-1157-4ed3-a1ba-e74dbabc46b4",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "development",
    "created": "2014-03-17T15:08:28.131000-04:00",
    "last_updated": "2021-06-25T14:47:37.983000-04:00",
    "custom": "False",
    "rules": "3657f540-0b47-49b3-9a4d-69412ec692d6 AND c942552c-0d31-41c5-bba7-795ba0e8d88d;3657f540-0b47-49b3-9a4d-69412ec692d6 AND 9566b573-048b-4cc5-bd40-de4b4bf32f96",
    "rules_read_only": "A714 AND A736;A714 AND A738"
  },
  {
    "countermeasure_id": "T262",
    "universal_id": "9d4ea997-2ff0-489d-919b-105fe9e98300",
    "countermeasure_name": "Mask passwords by default on mobiles but consider usability options",
    "countermeasure_solution": "Do not display passwords to end-users by default. Use masking features to hide the passwords. \n\n## Usability in mobile environment\n\nTyping passwords correctly and without typos can be difficult on smaller devices when the password is masked. There are a few countermeasures to this weakness that can be implemented without compromising security:\n\n- Show the last typed character for a few seconds before masking it to allow for corrections.\n- Provide an option to show the password being typed (remove masking).\n    - __Important__: Set the default behavior to hiding the password.",
    "weakness_title_read_only": "No Password Field Masking",
    "weakness_id_read_only": "P438",
    "weakness": "8517629d-d51c-4053-b8db-a04e045ccf79",
    "tags": "",
    "countermeasure_priority": "3",
    "phase": "requirements",
    "created": "2014-05-05T17:17:56.384000-04:00",
    "last_updated": "2022-08-22T14:24:56.493000-04:00",
    "custom": "False",
    "rules": "d0d429b5-9b82-466a-af97-db8c40d0c246",
    "rules_read_only": "A713"
  },
  {
    "countermeasure_id": "T263",
    "universal_id": "776ddb93-5707-4837-89c7-aeec4a0a71e0",
    "countermeasure_name": "Test that password fields are masked by default on mobiles and usability improvement options are implemented",
    "countermeasure_solution": "Ensure that passwords are not displayed to end users by default while accounting for usability options in a mobile environment.\n\n1. Find all areas of the application where users can enter passwords.\n\n2. Attempt to enter a password.\n\n    This test __fails__ if the password is displayed in its entirety by default, without selecting an option such as \"_display password_\". \n\n3. Test if more than one or two most recent typed characters of the password are displayed after typing on mobiles.\n\n    This test __fails__ if these characters are displayed.",
    "weakness_title_read_only": "No Password Field Masking",
    "weakness_id_read_only": "P438",
    "weakness": "8517629d-d51c-4053-b8db-a04e045ccf79",
    "tags": "",
    "countermeasure_priority": "3",
    "phase": "testing",
    "created": "2014-05-05T17:48:39.344000-04:00",
    "last_updated": "2021-06-25T14:47:38.109000-04:00",
    "custom": "False",
    "rules": "d0d429b5-9b82-466a-af97-db8c40d0c246",
    "rules_read_only": "A713"
  },
  {
    "countermeasure_id": "T264",
    "universal_id": "c7e922c2-04f4-4277-ac7d-8dc87995408f",
    "countermeasure_name": "Do not use method swizzling in Objective-C",
    "countermeasure_solution": "Method swizzling is a feature of Objective-C that enables the creation of a new mapping between selectors (method names) and implementations (actual code) at run-time. Using method swizzling, developers can change the functionality of methods even if they don't have access to the implementation of those methods. \n\n1. ___Do not use method swizzling___:\n      - Method swizzling should be avoided altogether.\n      - Avoid third-party libraries that use method swizzling to prevent attacks against an application or its users. \n      - Get formal approval to use method swizzling if it is unavoidable:\n        - See below for more information.\n\n2. Use the following guidelines when using method swizzling is unavoidable:\n\n     - Swizzling is non-atomic and can cause concurrency issues (race conditions): \n        - To avoid timing problems, perform swizzling in the `+(void)load` method instead of the `+(void)initialize` method, for example.\n\n     - Each Objective-C class has access to two hidden fields that specify the receiving object (`self`) and the selector of the message being sent (`_cmd`):\n        - If the original method uses this data, make sure these two arguments are passed correctly:\n            - Note that the original method is being called from another place.\n        - For method swizzling, use the Objective-C Runtime method named `method_setImplementation()` instead of `method_exchangeImplementations()`.\n\n     - Make sure to call the original method and delegate initial checks to it when possible:\n        - Otherwise, security requirements and checks implemented in the original function may be lost due to being forgotten, unknown, or misunderstood.\n\n    - Document the code well, along with intentions:\n        - Using method swizzling can lead to complications.\n        - Details about the purpose and intentions of the method swizzle will make complications easier to control.\n\n    - The swizzled method may change in the future:\n        - Plan a code review when a newer version of the swizzled method becomes available.\n        - Continuously monitor the changes in new versions of the original method to make sure the swizzled method still works properly.",
    "weakness_title_read_only": "Race Condition",
    "weakness_id_read_only": "P260",
    "weakness": "158629c6-5ab4-4761-945b-e66f736f3f8d",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "development",
    "created": "2014-05-09T12:57:37.825000-04:00",
    "last_updated": "2021-06-25T14:47:56.678000-04:00",
    "custom": "False",
    "rules": "cac96606-18f1-40b5-b598-04cb3b6a6e19",
    "rules_read_only": "A716"
  },
  {
    "countermeasure_id": "T265",
    "universal_id": "0034d572-5a33-4d7c-93a0-01dfc50856d5",
    "countermeasure_name": "Handle requests made through iOS URL schemes or Universal Links securely",
    "countermeasure_solution": "If you allow the use of 'custom URL schemes' or 'Universal Links' to facilitate communication with your application:\n\n- Be aware that your application could be **launched directly from the Internet** through a link or redirect, **without user intention or awareness**.\n    - Safari executes iFrames automatically, so malicious HTML code inside a web page or email could run your application via custom URL schemes.\n        - For example: `<iframe src=\"yourapp://\">`.\n    - **Note:** If you are using Universal Links, restrict the accepted URLs to the minimum variations that are needed, and avoid using wildcards (such as `*`) as much as possible.\n\n- **Notify** and **authorize** users each time you receive requests as URL schemes or Universal Links.\n    - It is not enough to rely on previous authentication and authorization of the user.\n\n- **Validate incoming data**\n    - Especially if you are receiving input through URL parameters (and it is inevitable).\n    - Make sure that you reject any input that does not conform to your intended format.\n    - **Note**: If you accept input through **URL parameters**, you are vulnerable to all types of injection.\n    - Your app does not know whether the URL scheme call is from a user or a malicious app.\n        - Therefore, **no input is trusted**.\n\n- **Consider user experience issues**\n    - Know that unintended invocation of your application can create an unpleasant experience for users because they are pulled out of browser and control is transferred to your application.\n    - This may be blamed on your application rather than the malicious link.\n\n**Note**:\n\nIt is recommended to use ***Universal Links*** instead of custom URL schemes with standard HTTP or HTTPS links since iOS 9. Unlike custom URL schemes, Universal Links allow developers to whitelist URLs that the app receives.\n\nThis whitelisting is enabled by a configuration file on the app's website. iOS checks the configuration file on the app's website and verifies that the rules specified there qualify the app for opening that specific URL. Therefore, the whitelisting occurs even before the request reaches the app.",
    "weakness_title_read_only": "Improper verification of source and content of URL schemes",
    "weakness_id_read_only": "P760",
    "weakness": "6743c7d1-e3d0-4b14-8fb4-c8ce3134a4b4",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "development",
    "created": "2014-05-14T11:43:52.763000-04:00",
    "last_updated": "2021-06-25T14:47:46.611000-04:00",
    "custom": "False",
    "rules": "3657f540-0b47-49b3-9a4d-69412ec692d6",
    "rules_read_only": "A714"
  },
  {
    "countermeasure_id": "T270",
    "universal_id": "26b26fe1-9da5-4f7b-8f4a-8e9758e3620f",
    "countermeasure_name": "Follow best practices for storing application data on Android devices",
    "countermeasure_solution": "Follow these guidelines to store data securely on an Android device:\n\n- When writing files, never use MODE_WORLD_READABLE, or MODE_WORLD_WRITEABLE (deprecated from API level 17).\n    - Never use external storage for storing sensitive data that you don't want to be accessible to other processes.\n    - Never modify or relax access permissions for the app's private directories using `File` or `FileProvider`.\n\n- Use `EncryptedSharedPreferences` to store key-value pairs in encrypted format. \n\n- When using external storage, always check its availability before making an attempt to read or write content.\n    - Use `getExternalStorageState()` of the Environment class to check external storage availability.\n\n- If you need a large amount of space for storing an application's sensitive data, encrypt the data before writing it to external storage.\n\n- Encrypt sensitive data stored on internal storage.\n    - Keeping sensitive data on the client is not recommended.\n\n- Encrypt sensitive data before writing to the SQLite database.\n    - This data could be accessible on rooted devices.\n\n- After a user uninstalls the application, do not store app files that belong to the user in the application's directory (for example, photos or purchased media files in internal storage).\n    - Follow the guidance above regarding securing any sensitive information and storing them in shared folders on external storage.\n\n- When it is necessary to save user or application secrets on the client, use a secure key storage mechanism for storing keys, certificates, and passwords. For example, with a browser that saves user passwords locally, or an offline password management solution, store keys securely using Java keystores.\n\n- Do not store serialized objects with sensitive data in an unencrypted format when using Java serialization and deserialization.\n    - Data in serialized objects are easy to extract and read.\n    - Treat these serialized objects as confidential data and follow the rules of handling and storing confidential data.\n\n__Note__: From Android 7.0 [`DownloadManager` cannot share _privately stored_ files by filename](https://developer.android.com/about/versions/nougat/android-7.0-changes.html#perm) ( `COLUMN_LOCAL_FILENAME`).",
    "weakness_title_read_only": "Cleartext Storage of Sensitive Information without Access Control Mechanisms",
    "weakness_id_read_only": "P209",
    "weakness": "a9791a66-ddfd-4094-a953-31af2064161d",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "development",
    "created": "2014-06-10T14:42:56.793000-04:00",
    "last_updated": "2022-11-02T13:01:33.997000-04:00",
    "custom": "False",
    "rules": "64e2a4e5-efe8-4a19-8b5f-b835d963a40c",
    "rules_read_only": "A715"
  },
  {
    "countermeasure_id": "T271",
    "universal_id": "3802fe87-c607-4224-976e-c77123f1b5e9",
    "countermeasure_name": "Prevent access to Android components if they do not need external communication",
    "countermeasure_solution": "Android allows components to receive requests from other components. This includes components such as activity, service, content provider, and broadcast receiver.\n\n- If the component does not need to be launched by external callers, or does not need external communication by means of Intents, set the `android:exported` property for the component to `false` in Android manifest file.\n    - See the details in the note below for specific components.\n    - Go through all <activity>, <activity-alias>, <service>, <provider> and <receiver> nodes in the Android manifest file and set `android:exported` to `false`.\n\n- Remove **intent filters** if the component is not exported.\n    - In Android 11 and earlier, having intent filters makes the component exported by default if `android:exported` is not specified.\n    - If your app targets Android 12 and later and contains activities, services, or broadcast receivers that use intent filters, you must explicitly declare the `android:exported` attribute for these app components, othewise your app can't be installed on a device that runs Android 12.\n\n- __Pay special attention to the content providers and make sure they are not exported if not needed.__\n\n\n__Note__: \n\nSee the Android API guide [App Manifest](http://developer.android.com/guide/topics/manifest/manifest-intro.html), or the links below.\n\n[activity](http://developer.android.com/guide/topics/manifest/activity-element.html): Whether or not the activity can be launched by components of other applications : \"true\" if it can be, and \"false\" if not.\n\n- If \"false\", the activity can be launched only by components of the same application or applications with the same user ID (UID).\n\n[service](http://developer.android.com/guide/topics/manifest/service-element.html): Whether or not components of other applications can invoke the service or interact with it : \"true\" if they can, and \"false\" if not.\n\n- If \"false\", only components of the same application or applications with the same user ID can start the service or bind to it.\n\n[receiver](http://developer.android.com/guide/topics/manifest/receiver-element.html): Whether or not the broadcast receiver can receive messages from sources outside its application : \"true\" if it can, and \"false\" if not.\n    \n- If \"false\", the only messages the broadcast receiver can receive are those sent by components of the same application or applications with the same UID.\n\n[provider](http://developer.android.com/guide/topics/manifest/provider-element.html): Whether the content provider is available for other applications to use:\n    \n- true: The provider is available to other applications. Any application can use the provider's content URI to access it, subject to the permissions specified for the provider.\n- false: The provider is not available to other applications. Set `android:exported=\"false\"` to limit access to the provider to your applications. Only applications that have the same UID as the provider will have access to it.",
    "weakness_title_read_only": "Improper authorization of source of an Android Intent",
    "weakness_id_read_only": "P759",
    "weakness": "8ed844e5-e027-49cf-a6c0-69a114d7945e",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "requirements",
    "created": "2014-06-11T11:53:41.852000-04:00",
    "last_updated": "2021-06-25T14:47:45.614000-04:00",
    "custom": "False",
    "rules": "64e2a4e5-efe8-4a19-8b5f-b835d963a40c AND 9566b573-048b-4cc5-bd40-de4b4bf32f96;64e2a4e5-efe8-4a19-8b5f-b835d963a40c AND c942552c-0d31-41c5-bba7-795ba0e8d88d",
    "rules_read_only": "A715 AND A738;A715 AND A736"
  },
  {
    "countermeasure_id": "T272",
    "universal_id": "618bf427-6c12-44bf-9306-e6f9d4f1ea43",
    "countermeasure_name": "Restrict access to the application's exported components (Android)",
    "countermeasure_solution": "If an application component enables communication with external components, restrict and manage access to that external component. Follow these guidelines to reduce the risk of unauthorized access:\n\n- **Add a category to `<intent-filter>`** to reduce the component's exposure to implicit Intents.\n    - Note, however, that `<intent-filter>` does not protect the component against external access, and explicit `Intent` objects can always reach the component.\n    - Since Android 13 (API Level 33), intents will only reach an exported application component if the intent matches an application's `<intent-filter>`. If the intent does not match the filter, it will be automatically blocked even if the component is exported.\n\n- **Define permissions** for the component so that only components with the right permissions can talk to your component.\n    - Your services, activities, content providers and broadcast receivers need to have permission if they perform non-trivial actions.\n    - You can also check a caller's permissions in your code using the `Context` object's methods.\n    - See the _Using Permissions for Access Control_ How-to for assistance with defining permissions for various components.\n\n- __Pay special attention to `ContentProvider` objects__.\n    - Define permissions for your `ContentProvider` objects. Otherwise, exporting them will make them world-readable and world-writable.\n\n- **Define custom permissions** that have a protection level set to \"signature\" if you communicate between your own applications.\n    - In this case, only your applications can define and use those permissions (see the How-to for this Countermeasure).\n    - This is a good practice for a content provider if your goal is to use it to provide data for your own applications.\n    - Make custom permission names unique by appending them to the full package name of your app\n    - See the How-to for this Countermeasure for more information about changes in Android 5, Lollipop.\n\n- You can **check the source of Intents** for activities to see if you would like to respond to the `Intent`.\n    - This is only possible when the caller asks for a response.",
    "weakness_title_read_only": "Improper authorization of source of an Android Intent",
    "weakness_id_read_only": "P759",
    "weakness": "8ed844e5-e027-49cf-a6c0-69a114d7945e",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "development",
    "created": "2014-06-11T17:23:59.294000-04:00",
    "last_updated": "2022-11-02T13:26:51.799000-04:00",
    "custom": "False",
    "rules": "64e2a4e5-efe8-4a19-8b5f-b835d963a40c AND 9566b573-048b-4cc5-bd40-de4b4bf32f96;64e2a4e5-efe8-4a19-8b5f-b835d963a40c AND c942552c-0d31-41c5-bba7-795ba0e8d88d",
    "rules_read_only": "A715 AND A738;A715 AND A736"
  },
  {
    "countermeasure_id": "T273",
    "universal_id": "137f75bd-e2f3-4525-a22a-d7072672e3cf",
    "countermeasure_name": "Avoid permission re-delegation by considering caller's permissions when handling external requests",
    "countermeasure_solution": "Whenever you act upon an Intent from a caller (whether you send any response back or just do an action) or provide data for an external component through a content provider, make sure that you are not facilitating an improper permission redelegation. That is, ensure that you are not doing something for the caller that it doesn't have permission for.\n\n- List all the permissions that your application/component has acquired (defined in Android manifest file).\n\n- Identify all the permission-protected actions you perform and resources that you access when handling an Intent or responding through content provider.\n    - For example, when using contact-list, camera, or bluetooth.\n    - This is especially important for your content-providers if you deliver data to other applications.\n\n- Check that the caller has permission to access those resources either by requiring those permissions in the Android manifest file (intent-filter) for your exported component (for example your content-provider) or dynamically in your application's code.\n\n- If your application provides a callback functionality, accept `PendingIntent` but not `Intent` from the caller.\n    -  For example, if you are offering a notification-like area for applications to post links to their activities.\n    - `PendingIntents` are sent as the process that created them rather than as the process sending them, so they do not enable permission re-delegation.",
    "weakness_title_read_only": "Improper permission re-delegation",
    "weakness_id_read_only": "P736",
    "weakness": "5c283a05-2fb6-45a6-8843-d5b24aa812a5",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "development",
    "created": "2014-06-13T09:55:17.619000-04:00",
    "last_updated": "2021-06-25T14:47:48.385000-04:00",
    "custom": "False",
    "rules": "64e2a4e5-efe8-4a19-8b5f-b835d963a40c",
    "rules_read_only": "A715"
  },
  {
    "countermeasure_id": "T274",
    "universal_id": "fd075338-59bb-425c-97fb-24abbc7a70ec",
    "countermeasure_name": "Handle requests made through Android URL schemes securely",
    "countermeasure_solution": "Android allows handling URL requests through the definition of intent filters in an application's Android manifest file. If you are allowing the use of custom URL schemes to facilitate communication with your application:\n\n- Be aware that your application could be launched directly from the Internet through a link or redirect without user intention or awareness, such as in the Chrome browser.\n\n- Notify and authorize the user each time you receive requests as URL schemes.\n    - It is not enough to rely on previous authentication and authorization of the user.\n\n- If you are receiving input through URL parameters, and it is inevitable, validate incoming data.\n    - __If you are accepting input through URL parameters, you are vulnerable to all types of injection__.\n    - Make sure that you reject any input that does not conform to your intended format.\n\n- Consider user experience issues: know that unintended invocation of your application can create an unpleasant experience for users because they are pulled out of the browser and control is transferred to your application.\n    - This may be blamed on your application rather than the malicious link.",
    "weakness_title_read_only": "Improper verification of source and content of URL schemes",
    "weakness_id_read_only": "P760",
    "weakness": "6743c7d1-e3d0-4b14-8fb4-c8ce3134a4b4",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "development",
    "created": "2014-06-13T11:16:47.928000-04:00",
    "last_updated": "2021-06-25T14:47:47.811000-04:00",
    "custom": "False",
    "rules": "64e2a4e5-efe8-4a19-8b5f-b835d963a40c",
    "rules_read_only": "A715"
  },
  {
    "countermeasure_id": "T275",
    "universal_id": "2d36b31a-ba67-4770-bceb-7d5771a71da4",
    "countermeasure_name": "Avoid sending sensitive data using implicit Intents or Broadcasts",
    "countermeasure_solution": "Implicit Intents and broadcasts could be received by an audience that you are not aware of. Use the following guidelines to avoid sending sensitive data using implicit Intents or Broadcasts:\n\n- Use explicit Intents that are based on the receiver's specification of class or component to communicate sensitive information.\n\n- Never send sensitive information in broadcasts.\n    - Do not use sticky broadcasts because it is not possible to protect them by permissions.\n\n- If you need to broadcast between your own applications:\n    - Protect broadcasts by using permissions.\n    - Set the protection level of permissions to signature so that it is only available to your own applications.",
    "weakness_title_read_only": "Insufficient Restriction of Intent Receivers in Android",
    "weakness_id_read_only": "P738",
    "weakness": "191a468e-3cfa-4bfc-b51e-92f3679301a4",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "development",
    "created": "2014-06-13T15:47:27.482000-04:00",
    "last_updated": "2021-06-25T14:47:38.001000-04:00",
    "custom": "False",
    "rules": "c942552c-0d31-41c5-bba7-795ba0e8d88d;9566b573-048b-4cc5-bd40-de4b4bf32f96",
    "rules_read_only": "A736;A738"
  },
  {
    "countermeasure_id": "T276",
    "universal_id": "b48348e9-638b-4685-8826-9e3f9fe8fef1",
    "countermeasure_name": "Validate the content of received Intents",
    "countermeasure_solution": "When an Intent filter is defined in your application to receive a specific type of Intent any component can send explicit Intents to your application. For example, this can happen for a system broadcast, such as low battery.\n\nTherefore, the application must validate the type and content of received Intents in the following way:\n\n- Check the Intent's action to see if it conforms to the action specified by your Intent filter.\n    - For example, if you are waiting for a shut-down Intent, check if the Intent's action matches shut-down.\n    - Arbitrary components cannot set Intent action to one of the system actions.\n\n- Check the content and data received by the Intent.\n    - Never use the data before a sanity check and input validation.\n\n- Explicitly validate paths when receiving input through Intents, and when using them to access files on storage.",
    "weakness_title_read_only": "Improper validation of content of an Android Intent",
    "weakness_id_read_only": "P758",
    "weakness": "40f8c884-8e72-4bb9-9f30-cd5ba0458bdf",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "requirements",
    "created": "2014-06-16T11:31:32.722000-04:00",
    "last_updated": "2021-06-25T14:47:54.174000-04:00",
    "custom": "False",
    "rules": "64e2a4e5-efe8-4a19-8b5f-b835d963a40c AND c942552c-0d31-41c5-bba7-795ba0e8d88d;64e2a4e5-efe8-4a19-8b5f-b835d963a40c AND 9566b573-048b-4cc5-bd40-de4b4bf32f96",
    "rules_read_only": "A715 AND A736;A715 AND A738"
  },
  {
    "countermeasure_id": "T278",
    "universal_id": "e13d871b-78a9-41dd-9333-9345207f1177",
    "countermeasure_name": "Follow best security practices when using WebView (Android)",
    "countermeasure_solution": "Follow these guidelines for securing WebView usage:\n\n- Do not enable **JavaScript** (`setJavaScriptEnabled()`) in your WebView component if you do not need it.\n    - JavaScript is disabled by default for WebView.\n\n- **Clear the cache** whenever you deal with sensitive data.\n    - __Note__: Clearing the cache deletes the WebView cache for all of its components, __not only the one that calls the method__.\n\n- **Disable access to local files** when it is not absolutely needed.\n    - To disable access to local files explicitly, set these methods to `false`:\n        - This includes access to content from other file scheme URLs, and/or access using JavaScript.\n\n    - `setAllowUniversalAccessFromFileURLs` (JavaScript)\n    - `setAllowFileAccessFromFileURLs` (JavaScript)\n    - `setAllowFileAccess`\n        - **Note:** This setting does not affect file access using `file:///android_asset` and `file:///android_res`, such as with an HTML image.\n        - Make sure that the files in those locations do not disclose confidential data or make it easier to perform malicious actions.\n        - Refer to [WebSettings Documents ](https://developer.android.com/reference/android/webkit/WebSettings.html) for more details about each method.\n\n- Use the URI class to create a white-list of approved targets that WebView is allowed to access.\n- You can also override `shouldOverrideUrlLoading()` and `shouldInterceptRequest()` to intercept and investigate the requests made by WebView.\n\n- **Avoid creating JavaScript interfaces** for your local objects whenever possible.\n    - You can create interfaces for your local objects to operate them using JavaScript code loaded in WebView (`addJavascriptInterface()`).\n    - This allows JavaScript code, that may come from unknown sources, to manipulate your local objects.\n    - Try to limit this use to JavaScript that comes from within your own APK.\n    - Avoid creating interfaces for objects that access sensitive information or perform sensitive actions if the WebView object accepts external inputs.\n\n- Enable **third party cookies** only if those cookies are needed.\n    - In Android 5 (LOLLIPOP) or later, WebView default does not allow third party cookies.\n    - When needed, explicitly enable the use of third party cookies (`setAcceptThirdPartyCookies()`).\n\n- Set **mixed-content treatment policy** to `MIXED_CONTENT_NEVER_ALLOW` using `setMixedContentMode()`.\n    - Prior to Android 5, WebView allowed a secure origin (HTTPS) to load content from any other origin, such as HTTP.\n    - In Android 5 (Lollipop) or later, the default of WebView is `MIXED_CONTENT_NEVER_ALLOW`.\n\n- Configure WebView to only allow a minimum set of protocol handlers required and ensure potentially dangerous handlers, such as file, tel and app-id, are disabled.\n\n- Clear cache, storage and loaded resources before the WebView is destroyed.",
    "weakness_title_read_only": "Use of WebView without sufficient protection",
    "weakness_id_read_only": "P761",
    "weakness": "6d3d31da-287e-4843-930e-700106ab552f",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "development",
    "created": "2014-06-16T18:44:22.528000-04:00",
    "last_updated": "2021-06-25T14:47:49.974000-04:00",
    "custom": "False",
    "rules": "64e2a4e5-efe8-4a19-8b5f-b835d963a40c",
    "rules_read_only": "A715"
  },
  {
    "countermeasure_id": "T279",
    "universal_id": "73214e03-38c3-4ed8-a18b-4a34905a393c",
    "countermeasure_name": "Avoid dynamically loading any code without proper security considerations",
    "countermeasure_solution": "While dynamic loading of code is possible in some programming languages and frameworks like Java and Android, it is recommended that you avoid this capability as it increases the code complexity and makes your application dependent on an external resource. However, If you have to load any module dynamically, consider the following recommendations:\n\n- Avoid loading modules from shared locations, such as from an external storage.\n\n- Avoid loading modules through unencrypted networks. Otherwise, files in transit would be at risk of manipulation.\n\n- If you have to load a class from an external location, generate a signature of the class (binary) and check the signature before loading the class to verify that the integrity of the class is maintained.",
    "weakness_title_read_only": "Unsecure Use of Dynamic Code/Class Loading",
    "weakness_id_read_only": "P434",
    "weakness": "2a5455a1-f66c-4691-886c-1f16ea5db0eb",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "development",
    "created": "2014-06-17T12:44:03.668000-04:00",
    "last_updated": "2021-06-25T14:47:39.049000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T281",
    "universal_id": "119208f7-d666-4af3-a773-6e52b41e21ab",
    "countermeasure_name": "Follow best practices when handling access tokens (API tokens)",
    "countermeasure_solution": "Use the following guidelines for authenticating/authorizing an application's services through access/API tokens:\n\n- Avoid allowing and requiring users to provide API tokens in query parameters because they are cached.\n    - Receive the tokens in the headers or body of a message, and over secure protocols, such as TLS.\n\n- Log all access and activity using access tokens and allow users to review those logs.\n\n- Do not include access token values in the logs.\n    - Mask, sanitize, hash, or encrypt the value as suggested in the [OWASP logging instructions](https://www.owasp.org/index.php/Logging_Cheat_Sheet).\n\n- Display messages to educate users about, and make them aware of:\n    - Displaying access tokens.\n    - Sending email notifications about the security of access tokens.",
    "weakness_title_read_only": "Insufficient protection of access tokens (API tokens)",
    "weakness_id_read_only": "P740",
    "weakness": "8d52e5a5-3b01-4fa9-be9a-99abb69dbf6f",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "development",
    "created": "2014-07-21T12:05:50.487000-04:00",
    "last_updated": "2021-06-25T14:47:44.583000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T282",
    "universal_id": "66c4b650-7d41-4a9a-88f4-d6ac6e70825d",
    "countermeasure_name": "Bind variables in SQL statements for client applications",
    "countermeasure_solution": "Most persistence frameworks provide a feature to bind runtime variables with pre-generated SQL statements. Generally, these bind functions automatically escape SQL special characters and effectively mitigate SQL injection. __Ensure that you always bind variables correctly and never dynamically concatenate SQL statements with untrusted data__.\n\nIn rare cases, researchers have found that persistence frameworks do not properly escape bound variables and may still be vulnerable to SQL injection. When using any new persistence framework, programming language, or Object-Relationship Manager (ORM), __investigate how it binds variables and whether it explicitly protects against SQL injection__.\n\nYou may also __accomplish proper binding by using database-stored procedures__. Many databases allow you to dynamically create and execute an SQL statement within the stored procedure. However, this approach may be vulnerable to SQL injection as well.",
    "weakness_title_read_only": "Improper Neutralization of Special Elements in SQL Commands (SQL Injection)",
    "weakness_id_read_only": "P664",
    "weakness": "6978fdd4-2db4-4d32-8c23-aeed2c6c7248",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "development",
    "created": "2014-07-21T18:06:05.776000-04:00",
    "last_updated": "2021-06-25T14:47:55.319000-04:00",
    "custom": "False",
    "rules": "088e2318-7522-439a-a136-d43260a729da",
    "rules_read_only": "A717"
  },
  {
    "countermeasure_id": "T283",
    "universal_id": "568946e7-4226-4246-b554-7034adf81cff",
    "countermeasure_name": "Test that application is not vulnerable to SQL injection for client applications",
    "countermeasure_solution": "SQL injection is difficult to confirm through runtime testing without an actual exploit. This test will simply help you identify potential SQL injection vectors:\n\n- For all forms of input, attempt to send malicious SQL injection characters and inspect the response.\n- If the response renders a database error, then this test __likely fails__.\n- If this test doesn't return an error, try comparing input with malicious SQL injection characters against regular input.\n    - For example, try `parameter=1` and then `parameter=1`.\n    - If the results differ without an error message, then this test likely fails.",
    "weakness_title_read_only": "Improper Neutralization of Special Elements in SQL Commands (SQL Injection)",
    "weakness_id_read_only": "P664",
    "weakness": "6978fdd4-2db4-4d32-8c23-aeed2c6c7248",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2014-07-22T11:54:26.274000-04:00",
    "last_updated": "2021-06-25T14:47:55.226000-04:00",
    "custom": "False",
    "rules": "088e2318-7522-439a-a136-d43260a729da",
    "rules_read_only": "A717"
  },
  {
    "countermeasure_id": "T284",
    "universal_id": "1c97da25-ec0e-4146-85ba-9d222a39e5e8",
    "countermeasure_name": "Generate secure access tokens (API tokens)",
    "countermeasure_solution": "Follow these guidelines for generating access/API tokens: \n\n- Generate an access token that is long enough to reduce the chances of brute force attacks.\n    - The minimum length is 128 bit, which is 32 characters in base 16, or 22 characters in base 64.\n\n- Use a secure random generator for making access tokens to reduce the predictability of the tokens.\n\n- Define an expiry date for tokens if they are used to protect sensitive services.\n\n- Implement a way to revoke access tokens.\n\n- When an account gets a new access token, send an email to inform the user.\n\n- Alternatively, only display the access token at the time it is generated\n    - Afterwards, mask the access token, such as by hiding the token's values except for the last few digits.\n    - Allow users to regenerate the token if they need to, such as in the case they won't remember it.",
    "weakness_title_read_only": "Insufficient protection of access tokens (API tokens)",
    "weakness_id_read_only": "P740",
    "weakness": "8d52e5a5-3b01-4fa9-be9a-99abb69dbf6f",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "development",
    "created": "2014-07-22T16:42:39.035000-04:00",
    "last_updated": "2021-06-25T14:47:44.457000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T285",
    "universal_id": "c33c910a-25c4-4839-9b69-894a6fbaa320",
    "countermeasure_name": "Restrict use of access tokens (API tokens)",
    "countermeasure_solution": "If the application has services that must authenticate or authorize access using tokens, or API tokens, follow these guidelines:\n\n- __Use access tokens for services that are used most frequently__\n\n    - Use access tokens instead of username and passwords.\n    - Access tokens have advantages that include convenience and rotation. \n    - Access tokens do not disclose any private information about the user, and only need moderate protection.\n\n\n- __Do not use access tokens for critical functions__\n\n    - Do not use access tokens for enabling anything beyond their own security level.\n    - Do not use access tokens for changing passwords, or information related to password-reset (such as email addresses and security questions). \n    - Do not assign default access tokens to services unless the user explicitly requests them, such as by clicking a button.\n    - Do not use access tokens to change data fields related to a user's identity: \n\n        - username\n        - phone number\n        - date of birth\n        - mailing address \n        - security questions",
    "weakness_title_read_only": "Insufficient protection of access tokens (API tokens)",
    "weakness_id_read_only": "P740",
    "weakness": "8d52e5a5-3b01-4fa9-be9a-99abb69dbf6f",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "requirements",
    "created": "2014-07-22T16:46:15.973000-04:00",
    "last_updated": "2021-06-25T14:47:44.496000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T286",
    "universal_id": "36e634c4-4fd5-47bc-b956-c9474b91302c",
    "countermeasure_name": "Make sure username rules are consistent among the registration system, authentication system, and application",
    "countermeasure_solution": "Make sure that the user registration system, authentication system, and the application share the same rules and procedures for handling usernames. The goal is to prevent a situation in which a user registers as \"John  \", and logs into a system, but the system trims the username to \"John\" and all other subsystems give access-rights that \"John\" has to this user.\n\nUse the following guidelines for rules and procedures that handle usernames: \n\n- Write down username rules adopted by the registration system, the authentication system, and the application and __make sure that those rules are consistent__. For example, usernames should consist of letters and numbers and should not have spaces or special characters at the end.\n\n- If you are implementing an application's registration/authentication system instead of using another system, __make sure the rules above are implemented__. When registering users, validate the provided username to make sure that it conforms to the predefined rules. For example, make sure that both 'admin ' (note the space) and 'admin' cannot be registered if you do not allow spaces at the end.\n\n- Write down __any changes that should be made to the username__ by the authentication/registration system to make it comply with the rules above. For example, identify if the authentication system would remove special characters or scrub usernames before or after authentication. __Make sure that two valid usernames in the application will not map into one single username__ after those changes.",
    "weakness_title_read_only": "Inconsistent handling of principal's name by authentication system and application",
    "weakness_id_read_only": "P741",
    "weakness": "7ec0acd6-ae93-4eee-9b38-320d835e96d1",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "development",
    "created": "2014-07-23T12:33:56.851000-04:00",
    "last_updated": "2021-06-25T14:47:41.577000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T287",
    "universal_id": "33f338db-7e1f-4688-8c5b-bce1e6fcd9d5",
    "countermeasure_name": "Test that usernames are handled consistently by registration system, authentication system and application",
    "countermeasure_solution": " - Try to register two slightly different usernames that are different in having special characters or spaces at the ends (You can use Firefox Tamper Data plugin to modify the username and add spaces to its end). For example, try to register 'Joe<space>' and 'Joe'. Continue to the next step.\n\n    (Note that based on the application's username policy this could also be a failure point for this test. If the policy does not allow slightly different usernames and you have been able to create two similar usernames this test fails. For example, if you can register Joe@something.com and Joe<space>@something.com as two valid user-IDs although the requirements of the application do not allow such cases, this test fails).\n\n- Try to log into the system using both usernames. If after authentication you have been assigned the same username in both cases this test fails.",
    "weakness_title_read_only": "Inconsistent handling of principal's name by authentication system and application",
    "weakness_id_read_only": "P741",
    "weakness": "7ec0acd6-ae93-4eee-9b38-320d835e96d1",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2014-07-23T12:55:49.965000-04:00",
    "last_updated": "2021-06-25T14:47:41.463000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T288",
    "universal_id": "b7ea5486-4012-4e41-a043-b7cc673bd121",
    "countermeasure_name": "Prevent unauthorized access to information through XML external references",
    "countermeasure_solution": "Follow these instructions to prevent XML external references from unauthorized access:\n\n1. Choose a secure XML parser.\n    - Certain XML parsers are not designed with security in mind because they were never intended for use against untrusted and potentially malicious XML content.\n\n2. Disallow DOCTYPE declarations in XML by configuring XML parsers to reject the DOCTYPE definition.\n    - Do this when defining document types are not needed in the input XML, which is usually the case.\n\n3. Configure the XML parser so that it does not resolve references to XML external entities (XXE).\n    - This will remove the risk of access to local resources and information.\n\n4. Configure the XML parser so that it does not resolve references to external XML schema locations.",
    "weakness_title_read_only": "Unauthorized access to data through XML External Entity (XXE) references",
    "weakness_id_read_only": "P742",
    "weakness": "d3ceed2f-0038-488b-99c8-99bedad35d9c",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "requirements",
    "created": "2014-07-23T17:22:37.556000-04:00",
    "last_updated": "2021-06-25T14:47:53.504000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T289",
    "universal_id": "e56e459c-7e66-4ae5-86af-21cac4829460",
    "countermeasure_name": "Verify that access to Android components is properly restricted",
    "countermeasure_solution": "Use the following guidelines for verifying the restriction of access to Android components:\n\n- Open the AndroidManifest.xml file.\n\n- Repeat these steps for each of these nodes:\n    - `<activity>` representing activity\n    - `<activity-alias>` representing activity alias\n    - `<service>` representing service\n    - `<provider>` representing content provider\n    - `<receiver>` representing broadcast receiver\n\n- If the component under review does not need to have external communication with other applications and components, check if it defines any intent filters.\n    - If it has some intent filters and `android:exported` is not set to `false`, this test __fails__.\n    - It is recommended that you set `android:exported` explicitly to `false` even if no intent filter is defined.\n\n- If the component needs to communicate with other applications and defines some intent filters, check if its `android:exported` attribute is set to `true`.\n    - If it is set to `false`, this test __fails__.\n    - This attribute is not mandatory if you target Android 11 or earlier.\n        - In Android 11 and earlier, If the component has an intent filter, it is exported by default.\n        - It is recommended to explicitly set `android:exported` to `true`.\n\n- If a component is exported:\n    - Work with developers to create a list of permissions required to communicate with the component.\n    - Check if the component asks for the right permissions, including the `android:permission` attribute.\n\n- If two of your own applications communicate with each other:\n    - Check if one application defines a custom permission, `<permission>`, that has a protection level set to `signature`.\n    - Check if the other application uses the permission from the first.",
    "weakness_title_read_only": "Improper authorization of source of an Android Intent",
    "weakness_id_read_only": "P759",
    "weakness": "8ed844e5-e027-49cf-a6c0-69a114d7945e",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2014-07-24T11:56:33.180000-04:00",
    "last_updated": "2021-06-25T14:47:48.205000-04:00",
    "custom": "False",
    "rules": "64e2a4e5-efe8-4a19-8b5f-b835d963a40c AND c942552c-0d31-41c5-bba7-795ba0e8d88d;64e2a4e5-efe8-4a19-8b5f-b835d963a40c AND 9566b573-048b-4cc5-bd40-de4b4bf32f96",
    "rules_read_only": "A715 AND A736;A715 AND A738"
  },
  {
    "countermeasure_id": "T290",
    "universal_id": "fb1b4496-792c-4cad-a453-6e973471377b",
    "countermeasure_name": "Verify that Android permissions are properly checked",
    "countermeasure_solution": "Use the following guidelines to verify that Android permissions are properly checked:\n\n- Open the _AndroidManifest.xml_ file.\n\n- Repeat these steps for each of these nodes:\n    - `<activity>` representing activity\n    - `<activity-alias>` representing activity alias\n    - `<service>` representing service\n    - `<provider>` representing content provider\n    - `<receiver>` representing broadcast receiver\n\n    If the component is exported, it has its intent filter or `android:exported` set to `true`, and represents the nodes as indicated above. \n\n- If the intention is to allow communication between your own applications, check if the application defines a custom permission (`<permission>`).\n    - For example, if you provide a service to another application you have developed, look for custom permissions.\n    - Check if the custom permission has a protection level set to ___'signature'___, and that the component requires the permission (`android:permission` attribute).\n\n    This test __fails__ if the permission is not required.\n\n- Work with developers to create __a list of permissions__ required to communicate with the component.\n    - This depends on the actions the component performs.\n    - For example if the component uses the camera, ask for the relevant permission.\n    - Check if the component requires those permissions (`android:permission` attribute).\n    \n    This test __fails__ if the requirement for those permissions is not declared in the Android manifest file (and they are not verified in code by developers).\n\n- Alternatively, for the last step, you can create another application with one activity and a button on it.\n    - Do not ask for the required permissions in this application (do not declare `<uses-permission>`).\n    - When the button is pressed, create an Intent, set the target component and send the Intent (explicit Intent).\n    - Run the application.\n    - Press the button.\n    \n    This test __fails__ if the Intent is received by the component under review and the corresponding action is performed.\n\n- If your app defines a permission, make sure __its name is unique__ to your app by appending the permission name to the full package name of your app.\n    - Otherwise, the permission may collide with other permissions defined by other applications preventing your app from being installed on Android 5 and later.",
    "weakness_title_read_only": "Improper permission re-delegation",
    "weakness_id_read_only": "P736",
    "weakness": "5c283a05-2fb6-45a6-8843-d5b24aa812a5",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2014-07-24T13:02:24.014000-04:00",
    "last_updated": "2021-06-25T14:47:49.135000-04:00",
    "custom": "False",
    "rules": "64e2a4e5-efe8-4a19-8b5f-b835d963a40c",
    "rules_read_only": "A715"
  },
  {
    "countermeasure_id": "T291",
    "universal_id": "c4fcda48-e261-44f9-9a4a-9ab3fbc1db9d",
    "countermeasure_name": "Verify that content of received Intent is checked properly",
    "countermeasure_solution": "Use the following guidelines to verify that the content of an Intent that is received is checked properly:\n\n- Open the _AndroidManifest.xml_ file.\n\n- Repeat these steps for each of these nodes:\n    - `<activity>` representing activity\n    - `<activity-alias>` representing activity alias\n    - `<service>` representing service\n    - `<provider>` representing content provider\n    - `<receiver>` representing broadcast receiver\n\n    If the component is exported, it has its intent filter or `android:exported` set to `true`, and represents the nodes as indicated above. \n\n-  Work with developers to verify that an Intent's action is checked when it is received.\n    - For example if the component is waiting for a shut-down Intent (broadcast), make sure it is checked if the Intent's action matches shut-down.\n    - Alternatively, you can create another application with one activity and a button on it.\n    - When the button is pressed, create an Intent, set the target component (explicit Intent) and send the Intent to the component under review.\n    - If the component under review is a broadcast receiver, use `sendBroadcast` to send the Intent.\n    - Run the application.\n    - Press the button.\n    \n    This test __fails__ if the Intent is received by the component under review and the corresponding action is performed.\n\n- While it is impossible to mention exhaustive tests for input validation, this step provides some guidelines:\n    - Work with developers to create unacceptable input based on the input required by your component.\n    - Create an Intent containing that unacceptable data.\n    - Send the Intent using a test application as described in the previous step.\n    \n    This test __fails__ if the Intent is received by the component under review and the corresponding action is performed.",
    "weakness_title_read_only": "Improper validation of content of an Android Intent",
    "weakness_id_read_only": "P758",
    "weakness": "40f8c884-8e72-4bb9-9f30-cd5ba0458bdf",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2014-07-24T16:00:44.669000-04:00",
    "last_updated": "2021-06-25T14:47:53.904000-04:00",
    "custom": "False",
    "rules": "64e2a4e5-efe8-4a19-8b5f-b835d963a40c AND c942552c-0d31-41c5-bba7-795ba0e8d88d;64e2a4e5-efe8-4a19-8b5f-b835d963a40c AND 9566b573-048b-4cc5-bd40-de4b4bf32f96",
    "rules_read_only": "A715 AND A736;A715 AND A738"
  },
  {
    "countermeasure_id": "T292",
    "universal_id": "b8b3ed11-07b8-408a-956a-ee23db6b1608",
    "countermeasure_name": "Verify that iOS URL schemes are handled securely",
    "countermeasure_solution": "Follow these instructions to verify that iOS URL schemes are handled securely:\n\n1. In this verification, the application is registered in `Info.plist`, so it can be launched by URL scheme requests in this form: `myapp://`.\n\n2. If the application, *myapp*, for example, requires authentication, then log into the application and stay logged in.\n\n3. Create an HTML file with this content and open it in Safari: `<iframe src=\"myapp://\">`.\n    - You can enter `myapp://` into the Safari address bar instead.\n\n4. This test __fails__ if the application performs an **important action** after opening without **notifying the user** and asking for permission.\n    - Examples of important actions are those that require authentication, such as making phone calls, sending messages, and changing contacts.\n\n5. If the application is not acting on any data received with the URL, then this test is now complete.\n\n6. If the application is receiving input through **URL parameters**, such as `myapp://somedata?someactions`, then work with developers to verify that data validation is performed on data. This part of the test is application dependent and depends on the format of expected data.\n    - Create a link with data in an unintended format.\n\n    This test __fails__ if the input is not rejected or ignored.",
    "weakness_title_read_only": "Improper verification of source and content of URL schemes",
    "weakness_id_read_only": "P760",
    "weakness": "6743c7d1-e3d0-4b14-8fb4-c8ce3134a4b4",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2014-07-25T17:00:13.216000-04:00",
    "last_updated": "2021-06-25T14:47:45.566000-04:00",
    "custom": "False",
    "rules": "3657f540-0b47-49b3-9a4d-69412ec692d6",
    "rules_read_only": "A714"
  },
  {
    "countermeasure_id": "T293",
    "universal_id": "1d449d97-281b-4cec-b060-6eb138973e99",
    "countermeasure_name": "Verify that requests made through Android URL schemes are securely handled",
    "countermeasure_solution": "Use the following guidelines to verify that requests are handled securely when made through Android URL schemes:\n\n1. In this verification, the application is declaring a URL scheme in the form `myapp://` within its Android manifest file for handling URL requests.\n\n2. If the application, *myapp*, for example, requires authentication, then log into the application and stay logged in.\n\n3. Create an HTML file with this content, open it in the Chrome browser, and click on the link: `<a href='myapp://'>LINK!</a>`\n    - Alternatively, you can set `window.location` in Javascript when the page is loaded.\n\n4. This test __fails__ if the application performs an important action after opening without notifying the user and asking for permission.\n    - Examples of important actions are making phone calls, sending SMS, and changing contacts.\n\n5. This test completes if the application is not acting on any data received with the URL. \n\n6. If it is receiving input through URL parameters, such as `myapp://somedata?someactions`, work with developers to verify that data validation is performed on data. This part of the test is application dependent and depends on the expected data.\n    - Create a link with data in an unintended format.\n\n    This test __fails__ if the input is not rejected (or ignored).",
    "weakness_title_read_only": "Improper verification of source and content of URL schemes",
    "weakness_id_read_only": "P760",
    "weakness": "6743c7d1-e3d0-4b14-8fb4-c8ce3134a4b4",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2014-07-25T18:02:06.144000-04:00",
    "last_updated": "2021-06-25T14:47:46.280000-04:00",
    "custom": "False",
    "rules": "64e2a4e5-efe8-4a19-8b5f-b835d963a40c",
    "rules_read_only": "A715"
  },
  {
    "countermeasure_id": "T295",
    "universal_id": "dcebaf70-c18a-45ac-b540-a0d4cd58ff91",
    "countermeasure_name": "Avoid storing unencrypted confidential data without access control mechanisms",
    "countermeasure_solution": "Consider the following guidelines for saving confidential data on mobile/client devices or in shared locations on the server:\n\n- Generally there are two types of confidential data that you may identify:\n    1. Application's secrets such as keys, proprietary data and other information that belongs to you (usually shared among all instances of the application)\n    2. User-specific sensitive data\n\n- Encrypt all these sensitive data before writing them into files on storage. Never use shared storage for storing unencrypted sensitive data that you don't want to be accessible by other processes.\n    - You can implement wrappers for data storage and retrieval functions in order to make the encryption and decryption transparent. The major benefit of these wrappers is their ability to transparently encrypt/decrypt data. For example, your application can read or write a normal stream without knowing about the underlying cryptography. This can be most helpful when adding encryption into an existing application, as it would not require changes beyond wrapping the stream functions.\n\n- Encrypt these sensitive data before writing storing them in the local databases.\n    - For mobile devices, these platform databases could be accessible on rooted or jail-broken ROMs. Therefore your application's secrets may be accessed by a hacker that owns the device.\n\n- Use a secure key storage mechanism (such as keystores or keychains) for storing keys, certificates, and/or passwords.\n\nExamples of applications that need to store sensitive information are a browser that saves user passwords locally, or an offline password management solution.",
    "weakness_title_read_only": "Cleartext Storage of Sensitive Information without Access Control Mechanisms",
    "weakness_id_read_only": "P209",
    "weakness": "a9791a66-ddfd-4094-a953-31af2064161d",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "requirements",
    "created": "2014-07-30T14:30:42.368000-04:00",
    "last_updated": "2023-03-17T16:51:01.099000-04:00",
    "custom": "False",
    "rules": "088e2318-7522-439a-a136-d43260a729da;0b07fc15-1e13-4c03-b097-c7e222fc019a",
    "rules_read_only": "A717;A718"
  },
  {
    "countermeasure_id": "T296",
    "universal_id": "acb7ac7c-b990-4a3b-b035-125aaa232ace",
    "countermeasure_name": "Test that unencrypted confidential data is not stored without access control mechanisms",
    "countermeasure_solution": "Use the following guidelines for testing that confidential data is not stored on a client, or in shared locations on a server, in an unencrypted format:\n\n## For client applications:\n\n- Install the application on a client, such as a mobile device.\n    - If the device is protected, root or jailbreak the device, or use an emulator that simulates this.\n\n- Locate the data-files and local databases, and then copy them.\n    - It is usually possible to do so on rooted mobile devices through a USB cable.\n    - For mobile devices, check the data storage folders belonging to the application on the shared storage as well.\n\n- Inspect the contents of the files and the databases.\n\n    This test __fails__ if sensitive data such as application secrets or sensitive user data is stored without encryption.\n\n## For server applications:\n\n- Browse and analyze the directory structure on the server.\n\n- Inspect the contents of the files and the databases.\n    \n    This test __fails__ if sensitive data such as application secrets or sensitive user data is stored without encryption.",
    "weakness_title_read_only": "Cleartext Storage of Sensitive Information without Access Control Mechanisms",
    "weakness_id_read_only": "P209",
    "weakness": "a9791a66-ddfd-4094-a953-31af2064161d",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2014-07-30T14:57:34.502000-04:00",
    "last_updated": "2021-06-25T14:47:46.197000-04:00",
    "custom": "False",
    "rules": "088e2318-7522-439a-a136-d43260a729da;0b07fc15-1e13-4c03-b097-c7e222fc019a",
    "rules_read_only": "A717;A718"
  },
  {
    "countermeasure_id": "T297",
    "universal_id": "a28427a6-3fc2-4d02-95c8-d44969a5d373",
    "countermeasure_name": "Verify that target pathname is validated before retrieving local resources",
    "countermeasure_solution": "Use the following guidelines to verify that a target pathname is validated before retrieving any local resources:\n\n- Work with developers to locate places in the application where you calculate the address of local resources, such as images or local files, and return or display those resources.\n\n- For each of those cases, try to build a reference to a file outside the application's workspace, or in a shared location, such as a mass storage:\n    - Use `/..` (`../folder/file`) or absolute paths (`/folder/file`) to build the references.\n    - For example, if your application is supposed to only allow access to the files in a folder such as `/public`, test these file paths:\n\n         - Test `../MYFILE.TXT` (replace \"MYFILE.TXT\" with a file in the parent folder of `/public` which should not be available to users).\n         - Test `..../MYFILE.TXT`.\n         - Test `../..../MYFILE.TXT`.\n         - Test an absolute path such as `/folder/file` or `c:\\folder\\file` .\n         - Test an encoded file name: `%2e%2e/MYFILE.TXT` (`%2e` is `.`).\n         - Test `%2e%2e%2fMYFILE.TXT` (`%2e` is `.` and `%2f` is `/`).\n         - Test double encoded strings: `%252E%252E%252FMYFILE.TXT` (`%252E%252E%252F` is a double encoded `../`).\n\n- This test __fails__ if the application allows access to the files outside of the `/public` folder.\n\n- Also test a file with double dots (..) in its name, such as `MYFILE..TXT`.\n    - It is not a security risk if your code cannot process these filenames, but it may cause functional issues to some of the users.",
    "weakness_title_read_only": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
    "weakness_id_read_only": "P116",
    "weakness": "6a8e70fc-4f24-47bd-9fe4-c61376fd87e6",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2014-07-30T16:03:14.218000-04:00",
    "last_updated": "2021-06-25T14:47:53.705000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T298",
    "universal_id": "79614d3d-05a7-4f5b-96aa-edb928333597",
    "countermeasure_name": "Verify that Pasteboards are securely managed",
    "countermeasure_solution": "This countermeasure involves verifying all the security requirements pertaining to Pasteboards. Work with developers or use a code scanning tool to find the instances of Pasteboard being used: \n\n- Inspect the contents of public and system Pasteboards to make sure there is no unencrypted sensitive data.\n- Check that application Pasteboards have unique, random names.\n    - Use secure random number generators to build their names.\n- Work with developers to verify that Pasteboards are not marked as persistent.\n- Verify that all application Pasteboards are emptied when users log out.",
    "weakness_title_read_only": "Plaintext Storage in Memory",
    "weakness_id_read_only": "P213",
    "weakness": "c4de01f2-1157-4ed3-a1ba-e74dbabc46b4",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2014-07-30T16:57:09.115000-04:00",
    "last_updated": "2022-08-22T17:43:57.185000-04:00",
    "custom": "False",
    "rules": "3657f540-0b47-49b3-9a4d-69412ec692d6 AND c942552c-0d31-41c5-bba7-795ba0e8d88d;3657f540-0b47-49b3-9a4d-69412ec692d6 AND 9566b573-048b-4cc5-bd40-de4b4bf32f96",
    "rules_read_only": "A714 AND A736;A714 AND A738"
  },
  {
    "countermeasure_id": "T299",
    "universal_id": "89a71ef5-a5c2-4f63-be77-ed9d27bd6388",
    "countermeasure_name": "Verify that method swizzling is not being used in objective-C or is being used securely",
    "countermeasure_solution": "Work with the developers, or use a code scanning tool, to find where method swizzling is being used. Verify that __method swizzling is avoided__ unless absolutely necessary. When method swizzling is required, and those reasons are documented, verify all the security requirements of method swizzling in Objective-C by using the following test:\n\n- Work with the developers to make sure that any changes in the latest versions of the underlying function or library are being handled. \n    - Make sure that the security requirements and checks of the swizzled method are not being modified.\n\n- Verify that swizzling is implemented in the `+(void)load` method instead of the `(void)initialize` method:\n    - This includes any other method that could create concurrency issues (race-condition).\n    - Verify that no concurrency issues can arise from the implementation of method swizzling.\n \n- Verify that the assumptions made about the swizzled method are properly documented by developers:\n    - This includes specifying the version of the function that is used.\n    \n- Verify that `self` and `_cmd` arguments are passed correctly to the swizzled method:\n    - The code is calling the original method, so these arguments should be checked.\n    - Each Objective-C class has access to two hidden fields specifying the receiving object (`self`) and the selector of the message being sent (`_cmd`). \n    - Verify that Objective-C runtime method named `method_setImplementation()` is used instead of `method_exchangeImplementations()` for swizzling.",
    "weakness_title_read_only": "Race Condition",
    "weakness_id_read_only": "P260",
    "weakness": "158629c6-5ab4-4761-945b-e66f736f3f8d",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2014-07-31T11:30:36.067000-04:00",
    "last_updated": "2021-06-25T14:47:56.747000-04:00",
    "custom": "False",
    "rules": "cac96606-18f1-40b5-b598-04cb3b6a6e19",
    "rules_read_only": "A716"
  },
  {
    "countermeasure_id": "T300",
    "universal_id": "db4b1b25-ccfd-48d7-b05c-43e3b9314bef",
    "countermeasure_name": "Test that temporary files are cleaned up after the resource is used",
    "countermeasure_solution": "Test that the application cleans up temporary files by inspecting temporary directories belonging to the application or shared temporary folders used by the application:\n\n- Log in as various users.\n    - Use the application.\n    - Log out and check if the temporary files are removed.\n\n- Test if the expiry dates of temporary files are enforced by checking the time and date of the temporary files.\n   \n__Note__: A particular process may _create a large number of temporary files and create an opportunity to threaten the availability of the system_. It is helpful to identify those processes and concentrate the effort on testing them further.",
    "weakness_title_read_only": "Incomplete Cleanup",
    "weakness_id_read_only": "P348",
    "weakness": "6ac9bf26-6f17-401f-a8f8-75847e5b5c63",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2014-07-31T12:45:19.908000-04:00",
    "last_updated": "2021-06-25T14:47:56.298000-04:00",
    "custom": "False",
    "rules": "c942552c-0d31-41c5-bba7-795ba0e8d88d;647890fa-d25d-4852-86fe-a97a0d04cf54",
    "rules_read_only": "A736;A735"
  },
  {
    "countermeasure_id": "T301",
    "universal_id": "45a4a60d-cf61-42fd-b8df-4defd2b294d0",
    "countermeasure_name": "Verify that buffers holding sensitive information are scrubbed",
    "countermeasure_solution": "Consult developers or use code scanning tools to find places where the following types of data are handled in the application: \n\n * Passwords and other authentication tokens.\n * Personal Identification Numbers (PINs).\n * Confidential credit card data, such as CVVs and PANs.\n\nVerify that scrubbing techniques are employed, such as overwriting buffer/variables with zeros, before releasing memory that contains confidential data.",
    "weakness_title_read_only": "Sensitive information uncleared before release",
    "weakness_id_read_only": "P123",
    "weakness": "2002c126-9f98-416e-ba84-3648bad801e6",
    "tags": "",
    "countermeasure_priority": "3",
    "phase": "testing",
    "created": "2014-07-31T16:48:42.086000-04:00",
    "last_updated": "2021-06-25T14:47:56.170000-04:00",
    "custom": "False",
    "rules": "12b2ed2d-5b35-4d29-8996-7eefbc6b10aa",
    "rules_read_only": "A708"
  },
  {
    "countermeasure_id": "T302",
    "universal_id": "0b1f4b46-a65c-42aa-9476-093eeb441a04",
    "countermeasure_name": "Test that sensitive data is transmitted over secure channel for rich clients",
    "countermeasure_solution": "Use the following guidelines for testing whether rich clients use a secure channel to transmit sensitive data:\n\n## Structural testing and code analysis\n\n- Static code analysis might not be able to conclusively validate this test.\n    - In some cases, the protocol being used, which is indicated by the URL, such as HTTP vs HTTPS, is retrieved from messages received by the client instead of being explicitly specified in the code.\n- By reviewing the code you may not be able to figure out whether the HTTP or HTTPS protocol is used.\n\nTo audit the source code:\n\n1. Review all statically embedded URLs in the application.\n\n2. For each `http://` URL encountered, verify that no sensitive data is being sent or received using the specified URL.\n\n3. Review all network socket creations.\n    - If SSL is not enabled on the socket, verify that no sensitive data is being sent or received using the network endpoints.\n\n## Black-box testing\n\nFor black-box testing:\n\n1. Set up a proxy or network traffic sniffing tool.\n    - The proxy or traffic sniffing tools being used must be capable of inspecting the non-SSL content.\n\n2. If a proxy is being used, make sure that the SSL traffic is not modified when passing through it (do not enable SSL inspection).\n\n3. Point the device to use the proxy or network access point that you have set up and start using the application.\n\n4. Go through all possible operations that the application performs.\n\n5. Inspect the non-encrypted traffic.\n\n    This test __fails__ if any sensitive data is observed.",
    "weakness_title_read_only": "Clear Text and Unencrypted Transmission of Information",
    "weakness_id_read_only": "P216",
    "weakness": "b1d166d6-8ca7-415f-9cd9-8c2d745d3d01",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2014-08-01T16:50:23.194000-04:00",
    "last_updated": "2021-06-25T14:47:36.828000-04:00",
    "custom": "False",
    "rules": "5e40a9c3-a7fc-428b-bb70-36d1aeef0101",
    "rules_read_only": "A194"
  },
  {
    "countermeasure_id": "T304",
    "universal_id": "ed9675d6-cf28-470e-ab02-149b3dc88c40",
    "countermeasure_name": "Verify that unique device IDs are treated as personal information",
    "countermeasure_solution": "Use the following guidelines to verify that unique device IDs are treated as personal information: \n \n- Work with developers, or use code scanning tools, to find instances of any of the following pieces of information being used as unique device identifiers: \n\n \n   - Serial numbers \n   - International Mobile Equipment Identity (IMEI) \n   - Unique Device Identifiers (UDID) \n   - Integrated Circuit Card ID (ICCID) \n \nThese identifiers are labeled as UDID regardless of their device-specific names: \n \n* Verify that UDIDs and other unique device IDs are not used if they are not necessary. \n\n \n    * For example, make sure that these IDs cannot be used to trace installations. \n \n* Verify that UDIDs are not used in the generation of values such as URLs, usernames, addresses, or other information that might be disclosed in some way. \n\n \n    * Verify that users are informed about how UDIDs are used and treated. \n \n* Verify that UDIDs are not transmitted outside of the device, or if it is transmitted, it is treated as a password. \n\n \n    * For example, it is hashed using a secure method that uses a salt so that the plaintext value cannot be retrieved. \n \n* Verify that secure communication channels, such as SSL are used when handling UDIDs.\n\nCheck for evidence of completing this countermeasure, such as policy, records or logs of monitoring, and signage.",
    "weakness_title_read_only": "Privacy Violation",
    "weakness_id_read_only": "P257",
    "weakness": "b0418f1b-bf92-45ba-845f-abfb9735f1cf",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2014-08-05T15:59:42.708000-04:00",
    "last_updated": "2022-08-22T17:47:48.519000-04:00",
    "custom": "False",
    "rules": "c942552c-0d31-41c5-bba7-795ba0e8d88d AND d0d429b5-9b82-466a-af97-db8c40d0c246;2d6dc5e3-0ccb-4911-86d2-1f4aaac107b3 AND d0d429b5-9b82-466a-af97-db8c40d0c246",
    "rules_read_only": "A736 AND A713;A742 AND A713"
  },
  {
    "countermeasure_id": "T305",
    "universal_id": "ea065b92-6fda-442c-bb53-0cb77d229393",
    "countermeasure_name": "Verify that your application dynamically loads code only from secure locations",
    "countermeasure_solution": "Use the following guidelines to verify that an application only loads code dynamically from secure locations:\n\n- Work with developers, or use automatic code scanning tools, to find instances of dynamic loading of any code in the application.\n\n- Verify that you do not load code from unverified resources.\n\n- Verify that code is not loaded from shared locations and is not loaded through unencrypted networks.\n    - For example, any external storage.\n\n- If you have to load a class from an external location, make sure the class is signed and the application validates the signature before loading the class.",
    "weakness_title_read_only": "Unsecure Use of Dynamic Code/Class Loading",
    "weakness_id_read_only": "P434",
    "weakness": "2a5455a1-f66c-4691-886c-1f16ea5db0eb",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2014-08-05T17:23:26.352000-04:00",
    "last_updated": "2021-06-25T14:47:39.018000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T306",
    "universal_id": "7f25f51e-c533-4daf-a97d-a48810b093eb",
    "countermeasure_name": "Verify that confidential data is not cached on client",
    "countermeasure_solution": "Use the following guidelines to make sure confidential data is not being cached on the client:\n\n- Identify and categorize the types of confidential data that are handled by the application. For example, remote deposit capture (RDC) in banking apps.\n\n- Work with developers or use code scanning tools to locate the areas in the code where this information is cached by the application, especially in a flash memory or external storage device.\n\n- Verify that the caches are deleted right after use if caching cannot be avoided.\n    \n    This test __fails__ if they are not deleted.\n\n- Verify that the caches are deleted after a certain period and that the source determining the time cannot be tampered with by an attacker to evade the removal of caches.\n\n    This test __fails__ if caches of confidential data can exist for a long period.\n\n- Alternatively, you can test the application from outside:\n    - Locate the caches with some help from developers.\n    - Work with the application and inspect the contents of cached files to check if confidential data is not cached or caches are as temporary as possible.\n    \n    This test __fails__ if confidential data is cached, or caches are not temporary.",
    "weakness_title_read_only": "Information leak through client-side caching",
    "weakness_id_read_only": "P411",
    "weakness": "662c3860-00e9-4608-a926-aa393ed01dd2",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2014-08-06T16:57:41.092000-04:00",
    "last_updated": "2021-06-25T14:47:50.801000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T308",
    "universal_id": "adde5893-9d89-439d-84e9-1d3fecc64734",
    "countermeasure_name": "Verify that session information is cleared from client upon logout",
    "countermeasure_solution": "Work with developers to verify that session ID/handler and temporary/cached data pertaining to the sessions are cleared in these three events: **logout**, **session errors** and **session timeouts**.\n\nA method to test this is to develop a page that outputs all session data:\n\n- Log in to the application.\n- Work with the application to create cached or temporary data.\n- Create the three above-mentioned events.\n- Launch the test page that outputs session data.\n\n    This test __fails__ if session-ID or cached data is returned.\n\nThis type of test only verifies the session variables. If other temporary data is stored for each session, verify that it is cleared up by inspecting the locations where this data is stored.",
    "weakness_title_read_only": "Sessions Not Expired Upon Logout",
    "weakness_id_read_only": "P694",
    "weakness": "50803938-cdd7-44fd-b190-60a3c468c523",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2014-08-25T17:45:50.242000-04:00",
    "last_updated": "2021-06-25T14:48:00.906000-04:00",
    "custom": "False",
    "rules": "088e2318-7522-439a-a136-d43260a729da",
    "rules_read_only": "A717"
  },
  {
    "countermeasure_id": "T309",
    "universal_id": "7ecde134-f0fd-474c-8db5-2c004865661b",
    "countermeasure_name": "Verify that data received from server is validated before handling",
    "countermeasure_solution": "Work with developers to find where data is received from the server.\n\nVerify that:\n\n- Data validation is performed and any assumption about the format of incoming data is checked.\n    - This includes serialized data.\n\n- Verify that data is not passed to local Operating System libraries without explicit data validation, such as for display purposes.\n\n- Verify that you perform signature verification, or similar forms of data authentication, for sensitive data.\n    - Also perform data authentication for when the data format and content cannot be validated.\n\nA semi-automated test could be designed to verify the above items by sending the following types of data from server to client: \n\n1. Data in an invalid format.\n\n2. Data with an invalid signature.\n\nThis test __fails__ if the client application accepts this data.",
    "weakness_title_read_only": "Insufficient validation of data received from the server",
    "weakness_id_read_only": "P714",
    "weakness": "c0a2a01c-9d60-460b-abf4-31998a55ca6a",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2014-08-26T16:12:09.105000-04:00",
    "last_updated": "2021-06-25T14:47:54.981000-04:00",
    "custom": "False",
    "rules": "088e2318-7522-439a-a136-d43260a729da",
    "rules_read_only": "A717"
  },
  {
    "countermeasure_id": "T310",
    "universal_id": "3336c374-79a9-4f68-ae36-23848d7db507",
    "countermeasure_name": "Verify that WebView is securely used (Android)",
    "countermeasure_solution": "Follow these steps to verify that Android WebView is securely used:\n\n- Test that **JavaScript is disabled** when it is not absolutely needed.\n    - Provide an address of a page containing JavaScript content and check the results. \n\n- Work with developers to verify that **caches are deleted** after sensitive data is handled.\n\n- Work with developers to make sure that **access to local files** is prevented.\n\n- If JavaScript is needed, and if access to local objects through JavaScript is enabled, verify that the JavaScript code comes only from your local project (**your own APK**).\n \n- If a **whitelist** is implemented, test that access to any addresses outside the whitelist is denied.\n\n-  Verify that **mixed-content policy** is set to `MIXED_CONTENT_NEVER_ALLOW` using `setMixedContentMode()`.\n    - Unless there is a justification for not doing so.\n    \n    This test __fails__ if the policy is not set.\n\n- Verify that **third party cookies** are disabled if they are not needed (`setAcceptThirdPartyCookies()`).\n\n    This test __fails__ if they are enabled, but not needed.",
    "weakness_title_read_only": "Use of WebView without sufficient protection",
    "weakness_id_read_only": "P761",
    "weakness": "6d3d31da-287e-4843-930e-700106ab552f",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2014-08-27T11:06:34.034000-04:00",
    "last_updated": "2021-06-25T14:47:46.048000-04:00",
    "custom": "False",
    "rules": "64e2a4e5-efe8-4a19-8b5f-b835d963a40c",
    "rules_read_only": "A715"
  },
  {
    "countermeasure_id": "T311",
    "universal_id": "9ddd9ca3-8159-46a1-b1c9-0769a3a603f0",
    "countermeasure_name": "Verify that sensitive data is not sent using implicit Intents or Broadcasts",
    "countermeasure_solution": "Consult developers to find parts of the application that handle and send sensitive data to other applications or components. For each instance:\n\n- Verify that only explicit intents that specify the class or component of the receiver are used to send sensitive information.\n\n- Verify that your application does not broadcast sensitive information.\n    - Avoid Sticky broadcasts in particular because they cannot be protected by permissions.\n\n- If you broadcast between your own applications:\n    - Verify that all broadcasts are protected by using permissions, and the protection level of the permission is set to signature. This way, it is only available to your own applications.",
    "weakness_title_read_only": "Insufficient Restriction of Intent Receivers in Android",
    "weakness_id_read_only": "P738",
    "weakness": "191a468e-3cfa-4bfc-b51e-92f3679301a4",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2014-08-27T15:20:09.582000-04:00",
    "last_updated": "2021-06-25T14:47:37.754000-04:00",
    "custom": "False",
    "rules": "c942552c-0d31-41c5-bba7-795ba0e8d88d;9566b573-048b-4cc5-bd40-de4b4bf32f96",
    "rules_read_only": "A736;A738"
  },
  {
    "countermeasure_id": "T312",
    "universal_id": "29368982-ca3b-48e1-87dc-a2fcd594f1bd",
    "countermeasure_name": "Verify that inter-process communication (IPC) endpoints are secured in client",
    "countermeasure_solution": "This is a vast subject to test, and requirements are specified in other countermeasures for specific technologies. These are the general guidelines to verify that IPCs are secured:\n\n- Work with developers to identify places in the application where the application components communicate with other applications or application components.\n\n- Verify that access control is implemented.\n    - You can test it from outside the application by trying to use the offered services through the endpoints.\n\n- Verify that input is validated.\n    - Test this by providing unacceptable and unexpected input.",
    "weakness_title_read_only": "Insecure IPC Handling",
    "weakness_id_read_only": "P721",
    "weakness": "9e5815fc-1b24-4f07-8f60-204f32d61ad0",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2014-08-28T11:03:44.069000-04:00",
    "last_updated": "2022-08-22T17:50:34.149000-04:00",
    "custom": "False",
    "rules": "088e2318-7522-439a-a136-d43260a729da AND !3657f540-0b47-49b3-9a4d-69412ec692d6 AND !64e2a4e5-efe8-4a19-8b5f-b835d963a40c",
    "rules_read_only": "A717 AND !A714 AND !A715"
  },
  {
    "countermeasure_id": "T313",
    "universal_id": "56771680-6add-4961-add2-49bf20544a82",
    "countermeasure_name": "Identify and classify categories of personal information",
    "countermeasure_solution": "Follow these guidelines to identify and classify categories of personal and confidential information. This countermeasure is a prerequisite for several other privacy and information management countermeasures:\n\n1. Review different types of data that the application handles.\n2. Identify the compliance requirements that need to be met.\n3. Based on the requirements of the compliance regulations as well as other standards and definitions that are followed, identify, classify, and label the data that is handled by the application:\n    - Is the data confidential?\n    - Is the data sensitive?\n    - Is the data [personal information (PI)](/library/glossary/G8/)?\n    - Is the data considered to be [Individually Identifiable Health Information](/library/glossary/G7/)?\n4. Provide an organizational policy for consistent data classification.\n\nDevelopers will use this labeling and classification to comply with the requirements of other countermeasures.\n\n## Identifying personal information:\n\nThe following are examples of the most commonly encountered types of personal information, categorized into non-sensitive and sensitive.\n\n### Personal Information\n\n- Name\n- Home address\n- Email address\n- Identification number (such as a Social Security Number or Social Insurance Number)\n- Physical characteristics\n- Consumer purchase history\n\n### Sensitive personal information\n\n- Information on medical or health conditions\n- Financial information\n- Racial or ethnic origin\n- Political opinions\n- Religious or philosophical beliefs\n- Trade union membership\n- Sexual preferences\n- Information related to offenses or criminal convictions",
    "weakness_title_read_only": "Privacy Violation",
    "weakness_id_read_only": "P257",
    "weakness": "b0418f1b-bf92-45ba-845f-abfb9735f1cf",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "requirements",
    "created": "2014-09-02T14:42:05.317000-04:00",
    "last_updated": "2022-08-24T10:50:39.719000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T314",
    "universal_id": "52fab8db-5e3d-4940-9e0c-d006c5fb40c0",
    "countermeasure_name": "Verify that personal and confidential information is identified and classified",
    "countermeasure_solution": "Verify that different categories of information such as sensitive, confidential, [Personally Identifiable Information (PII)](/library/glossary/G8/) and [Individually Identifiable Health Information](/library/glossary/G7/) are identified, distinguished, and defined.\n\nIn addition, verify that any piece of information processed or maintained by an application is classified in the right category.",
    "weakness_title_read_only": "Privacy Violation",
    "weakness_id_read_only": "P257",
    "weakness": "b0418f1b-bf92-45ba-845f-abfb9735f1cf",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2014-09-02T15:04:04.672000-04:00",
    "last_updated": "2021-06-25T14:48:00.179000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T315",
    "universal_id": "9ceaeefe-0888-403b-9769-e6143e481147",
    "countermeasure_name": "Verify that potential security-critical events are logged",
    "countermeasure_solution": "Verify that security-specific logs are created in case of potential malicious activities, and that they consist of enough information:\n\nFor a majority of applications, especially web applications, include these data items in the logs (if relevant and applicable):\n\n* AE2 Multiple Failed Passwords\n* IE2 Violations Of Implemented White Lists\n* ACE2 Modifying Parameters Within A POST For Direct Object Access Attempts\n* ACE3 Force Browsing Attempts\n* ACE4 Evading Presentation Access Control Through Custom Posts\n\nVerify that a consistent time reference is used among logging module, database, application and any other systems using or examining the logs.\n\nVerify that these events and detection points are logged (if possible and relevant):\n\n* RE1 Unexpected HTTP Commands\n* RE2 Attempts To Invoke Unsupported HTTP Methods\n* RE3 GET When Expecting POST\n* RE4 POST When Expecting GET\n* AE1 Use Of Multiple Usernames\n* AE3 High Rate Of Login Attempts\n* AE4 Unexpected Quantity Of Characters In Username\n* AE5 Unexpected Quantity Of Characters In Password\n* AE6 Unexpected Types Of Characters In Username\n* AE7 Unexpected Types Of Characters In Password\n* AE8 Providing Only The Username\n* AE9 Providing Only The Password\n* AE10 Adding Additional POST Variables\n* AE11 Removing POST Variables\n* SE1 Modifying Existing Cookies\n* SE2 Adding New Cookies\n* SE3 Deleting Existing Cookies\n* SE4 Substituting Another User's Valid Session ID Or Cookie\n* SE5 Source IP Address Changes During Session\n* SE6 Change Of User Agent Mid Session\n* ACE1 Modifying URL Arguments Within A GET For Direct Object Access Attempts\n* IE1 Cross Site Scripting Attempt\n* EE1 Double Encoded Characters\n* EE2 Unexpected Encoding Used\n* CIE1 Blacklist Inspection For Common SQL Injection Values\n* CIE2 Detect Abnormal Quantity Of Returned Records.\n* CIE3 Null Byte Character In File Request\n* CIE4 Carriage Return Or Line Feed Character In File Request\n* FIO1 Detect Large Individual Files\n* FIO2 Detect Large Number Of File Uploads\n* UT1 Irregular Use Of Application\n* UT2 Speed Of Application Use\n* UT3 Frequency Of Site Use\n* UT4 Frequency Of Feature Use\n* STE1 High Number Of Logouts Across The Site\n* STE2 High Number Of Logins Across The Site\n* STE3 High Number Of Same Transaction Across The Site",
    "weakness_title_read_only": "Insufficient Logging or Insufficient Protection of Logs",
    "weakness_id_read_only": "P619",
    "weakness": "9a42301f-ed6c-42cb-a85d-a5134b76b701",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2014-09-04T12:53:53.845000-04:00",
    "last_updated": "2021-06-25T14:47:58.330000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T316",
    "universal_id": "6196e7e0-796a-446b-ac65-f3ec1ddb280c",
    "countermeasure_name": "Prevent unauthorized access to information through keyboard caches and shared dictionaries",
    "countermeasure_solution": "Use the following guidelines to prevent keyboard caches and shared dictionaries from being accessed without authorization:\n\n- Locate any text field that receives passwords, sensitive information, or confidential data.\n\n- Disable the auto-correct or save-to-dictionary feature for those inputs.\n\n__Note__: \n\n- Some operating systems or keyboard applications log the input that users type to provide features, such as customized auto-correct and form completion.\n    - In those cases, sensitive data may also be stored in a shared dictionary.\n- The cache's contents are usually beyond the administrative privileges of the application, and the data cannot be removed from the cache by the application.",
    "weakness_title_read_only": "Information leak through client-side caching",
    "weakness_id_read_only": "P411",
    "weakness": "662c3860-00e9-4608-a926-aa393ed01dd2",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "development",
    "created": "2014-09-12T13:08:47.477000-04:00",
    "last_updated": "2021-06-25T14:47:50.899000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T317",
    "universal_id": "aaf36cf5-df1b-4c3f-8c47-c4b134e86a03",
    "countermeasure_name": "Verify that keyboard caches and shared dictionaries do not divulge confidential information",
    "countermeasure_solution": "Work with developers to find text input that accepts sensitive data. Choose one of the following to verify the requirement is met:\n\n## Option 1\n\nVerify that for those text fields, the auto correction type is set so that it prevents auto correction or saving to a shared dictionary.\n\n## Option 2\n\nPerform a functional test (the details of which may vary based on the operating system):\n\n1. Find text fields with sensitive information.\n2. Enter some values in those fields.\n3. Check the user dictionaries to see if the values you entered in step 2 are saved.\n    - Try to enter the same values in another text field.\n    - This test __fails__ if the sensitive data previously entered in step 2 is suggested.",
    "weakness_title_read_only": "Information leak through client-side caching",
    "weakness_id_read_only": "P411",
    "weakness": "662c3860-00e9-4608-a926-aa393ed01dd2",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2014-09-12T13:31:12.252000-04:00",
    "last_updated": "2021-06-25T14:47:50.948000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T318",
    "universal_id": "38606bd3-8a32-45f3-a95c-9f7051ea9269",
    "countermeasure_name": "Verify security of cross origin resource sharing (CORS)",
    "countermeasure_solution": "To test a CORS policy, you will need to send cross-origin requests to the application's backend. The easiest way to achieve this is by using the [Postman tool](https://www.getpostman.com/), or a command line tool such as [HTTPie](https://httpie.org/). The instructions below assume you are using these tools or similar ones.\n\nFollow these instructions to verify CORS security:\n\n- Verify that the application performs authentication/authorization if the service is not public.\n    - Send a CORS request to an application endpoint using an HTTP request tool\n\t    - Send a custom `Origin` header containing a trusted value, that is also returned in `Access-Control-Allow-Origin` header.\n    \t- Do not include any authorization state (credentials, cookies, custom headers, ...)\n   \n    This test __fails__ if you can access protected services without authentication.\n\n- Test that the authentication covers all HTTP verbs.\n    - Send requests with different HTTP verbs (such as GET, POST, PUT, DELETE, PATCH, OPTIONS)\n\t    - Send one set of requests without `Origin` header. These requests mimic same-origin behavior.\n\t    - Send another set of requests with an `Origin` header with a trusted value. These requests mimic cross-origin behavior. \n\t    - Do not include any authorization state (credentials, cookies, custom headers, ...)\n\n    This test __fails__ if you can access a service or page that needs authentication in any of the above cases.\n\n- Test that the origins are properly verified.\n   - Send requests with an `Origin` header that contains a non-trusted origin (e.g., `https://evil.com`).\n\t\t- Include authorization state on these requests (e.g., a cookie, a custom header, ...) \n   - Make sure you run these tests for various non-trusted domains\n   - Look for tricky combinations. For example, to test an application accepting cross-origin requests from `https://www.example.com`, you could use the following values for the `Origin` header:\n   \t\t- `https://www-example.com` (bypasses regexes using the `.` as a wildcard)\n   \t\t- `https://notexample.com` (bypasses partial matching)\n   \t\t- `https://example.com.evil.com` (bypasses partial matching)\n   \t\t- `http://example.com` (bypasses partial matching)\n\n    This test __fails__ if you get any response other than the `Invalid CORS request` response.\n\n- Test that the origins are properly verified.\n\n- Work with developers, or analyze the responses, to make sure that you do not return 'Access-Control-Allow-Origin: *' for non-public services.\n    - While this is tested in the previous step, due to its prevalence, it is worth being verified again.\n\n- Test that anti-CSRF measures protect CORS requests too.\n    - For every endpoint that does not require a CORS preflight, CSRF protection needs to be validated.\n\t    - Send a trusted cross-origin request with authorization state, but without CSRF tokens\n\n    This test __fails__ if you can access the target service/page without a CSRF error.\n\n\t__*Note:*__ Endpoints requiring a preflight (e.g., accepting the `application/json` content type) are protected against CSRF by means of the CORS policy (i.e., malicious origins will not be accepted by the policy)\n\n- Work with developers to make sure that if you use part of the input for calculating the request target, you are validating the input.\n    - For more information, see [Input validation issue, XSS with CORS](https://www.owasp.org/index.php/Test_Cross_Origin_Resource_Sharing_(OTG-CLIENT-007)).",
    "weakness_title_read_only": "Cross-Site Request Forgery (CSRF)",
    "weakness_id_read_only": "P677",
    "weakness": "ec20bc24-5e77-4cac-a8bb-be1d2517e2a0",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2014-10-03T13:52:53.315000-04:00",
    "last_updated": "2021-06-25T14:47:46.021000-04:00",
    "custom": "False",
    "rules": "8f04f73a-f12b-48b8-a25c-191016f7153b",
    "rules_read_only": "A1192"
  },
  {
    "countermeasure_id": "T319",
    "universal_id": "cbf52dbe-36d0-4e4b-8a32-98a7000e7785",
    "countermeasure_name": "Verify that web messaging is securely used",
    "countermeasure_solution": "Use the following guidelines to verify that you are using web messaging securely:\n\n    This test __passes__ if the application does not send web messages, and does not define an event handler for \"message\".\n\nIf your application is sending web messages, work with developers, or use code scanning tools to verify that:\n\n- When sending a message, you have explicitly specified the target in the second argument of `postMessage()` rather than using `*`.\n\nIf your application is supposed to receive web messages that add an event handler for \"message\", work with developers to:\n\n- Check that the `origin` attribute of the sent event is properly verified.\n    - You can unit-test this part.\n        - Performing a black-box test for this is difficult as you need to send messages from different domains in a browser.\n    - Feed the validation function/module with domains that resemble the accepted domain to check that it is correctly verified.\n        - For example, if you allow messages from `mysite.com`, check strings such as `mysite.com.anotherdomain.com` and `anotherdomain.com?q=mysite.com`.\n\n    This test __fails__ if those strings are accepted as valid domains for sender.\n\n- Verify that you do not perform any action that needs access control that is only based on the origin.\n    - Try to create a page on the trusted site, and send a message to the receiver window to perform a task that needs access control.\n        - For example, removing cookies from the browser.\n\n    This test __fails__ if the action is performed based only on the fact that the origin is trusted. \n\n- Verify that you do not pass data received in messages to `eval()` without input validation.\n\n    This test __fails__ if you pass data without validation.\n\n- Verify that you do not add the data to DOM (such as through `innerHTML`) without proper input validation.\n\n    This test __fails__ if you add data without proper validation.",
    "weakness_title_read_only": "Improper Neutralization of Input During Web Page Generation (Cross-Site Scripting)",
    "weakness_id_read_only": "P632",
    "weakness": "67b0e738-a725-4462-be2a-52493b75f4ac",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2014-10-06T14:02:32.504000-04:00",
    "last_updated": "2021-06-25T14:47:53.678000-04:00",
    "custom": "False",
    "rules": "a71d1d86-8d40-417b-9883-05b81e282cee AND f0c5d269-ade4-4873-8321-2f442d38ee29",
    "rules_read_only": "A792 AND A3"
  },
  {
    "countermeasure_id": "T320",
    "universal_id": "950b5c34-4b79-415d-b3df-1bf2cf684525",
    "countermeasure_name": "Verify that WebSockets are securely used",
    "countermeasure_solution": "Use the following guidelines to verify that you are using WebSockets securely:\n\n- Verify that the `Origin:` attribute of the header is properly verified.\n    - You can unit-test this part.\n        - Performing a black-box test for this is difficult as you need to create WebSockets within pages loaded from different domains in a browser.\n    - Provide the validation function/module with domains that resemble the accepted/trusted domain to check that the domain name is correctly verified.\n        - For example, if you allow WebSockets from \"mysite.com\", test with strings such as \"mysite.com.anotherdomain.com\" and \"anotherdomain.com?q=mysite.com\".\n\n    This test __fails__ if those strings are accepted as valid domains for the origin of WebSocket.\n\n- Verify that you do not perform any actions that need an access control based only on the origin header.\n    - Try to make a page on a trusted site containing JavaScript that creates a WebSocket connection.\n        - A trusted site is one in which you allow WebSockets to originate from its pages.\n    - Delete cookies saved in the browser, and load the page from the trusted domain in the browser.\n    - Additionally, you can work with developers to verify that whenever a communication channel is established through a WebSocket, authentication and authorization is performed.\n\n    This test __fails__ if the page can send and receive messages using the WebSocket protocol without authentication.\n    \n    - In this case, the origin is correct. This is a test for other access control measures.\n\n- Verify that you do not pass data received in messages to `eval()` without input validation.\n\n    This test __fails__ if you pass data without validating it.\n\n- Verify that you do not add the data to DOM (such as through `innerHTML`) without proper input validation.\n\n    This test __fails__ if you add data without proper validation.\n\n- Work with developers to verify that data is validated after being received in both the server side code, and client side JavaScript.\n\n- Work with developers to verify that anti-CSRF tokens are included in the client page, and are verified on the server for WebSocket requests.\n\n- Verify that the application is set up to communicate through secure channel (wss:// and not ws://) when confidential data is being transferred.\n    - This setting may be hidden from developers if they are using libraries or middleware modules.\n    - Determine whether the library uses secure communication or whether this can be explicitly set in the settings.",
    "weakness_title_read_only": "WebSocket Hijacking",
    "weakness_id_read_only": "P743",
    "weakness": "07ed119f-9297-4fef-976a-dc685b7b8f16",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2014-10-07T14:11:22.918000-04:00",
    "last_updated": "2021-06-25T14:48:01.351000-04:00",
    "custom": "False",
    "rules": "b814b6b6-aa92-47ff-8d8b-ab1e72a9858d",
    "rules_read_only": "A793"
  },
  {
    "countermeasure_id": "T321",
    "universal_id": "694cd62d-39da-42bc-8e04-655d3b38952a",
    "countermeasure_name": "Verify that Local and Session Storage are securely used",
    "countermeasure_solution": "Use the following guidelines for verifying the security of Local and Session Storage:\n\n- Find tools or plugins that allow for the inspection of Local/Session Storage's contents.\n    - Chrome offers a strong tool under Developer Tools > Resources.\n    - The Firefox Firebug plugin could also be helpful.\n\n- Use the web application normally.\n    - Make sure to launch the pages that you know may store data in Local Storage or Session Storage.\n        - You may need input from developers.\n\n- Open the tabs for Local Storage and Session Storage in the plugin/inspection tool and examine the items.\n\n- This test __fails__ if:\n\n    - Unencrypted application secrets are stored in Local/Session Storage (such as keys).\n\n    - Unencrypted sensitive user data is stored in the Local/Session Storage.\n\n    - User data that does not need to be persisted is stored in Local Storage instead of Session Storage.\n\n    - Session identifiers are stored in Local/Session Storage instead of cookies.\n\n- Open various applications hosted on the same domain.\n    - Inspect the storage.\n    - This test __fails__ if data specific to one application that needs to be protected from other applications on the same domain is stored in the Local/Session Storage.\n\nWork with developers to verify these items:\n\n- Data from Local/Session Storage is not used by the JavaScript method `eval()`, in the `innerHTML` of nodes, or through similar methods to construct a web page without proper validation.\n    - This test __fails__ if the data is not properly validated.\n\n- If the data in Local/Session Storage is encrypted, verify that the key for encryption is not shared among different users.\n    - This test __fails__ if a shared key is sent to the client or stored locally.",
    "weakness_title_read_only": "Storage of sensitive data in client side local storage",
    "weakness_id_read_only": "P734",
    "weakness": "5c6732c4-ff55-403a-b2e0-920c1dd09cb3",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2014-10-10T13:54:47.421000-04:00",
    "last_updated": "2021-06-25T14:47:46.974000-04:00",
    "custom": "False",
    "rules": "8c9f2863-d4e9-4c79-860f-314d9c996c0f",
    "rules_read_only": "A1191"
  },
  {
    "countermeasure_id": "T322",
    "universal_id": "5d632c30-4801-4835-9036-25f7833b64e6",
    "countermeasure_name": "Include HTTP Strict-Transport-Security headers in HTTPS responses",
    "countermeasure_solution": "Use HTTP Strict Transport Security (HSTS) policy to add the ***Strict-Transport-Security*** header. This header allows browsers to remember that this server requires TLS connection even if a non-secure version is initially requested.\n\n- Specify ***max-age*** to tell the user-agent to cache the domain in the STS list for the number of seconds provided.\n- Add ***includeSubDomains*** to apply the rule to all of the site's subdomains as well.\n\n        Strict-Transport-Security: max-age=1024000; includeSubDomains\n\n- You can also include the ***preload*** directive for your site as another layer of security.\n    - **Note:** Ensure that you understand the implications of using the preload directive. The preload directive submits your domain to Google Chrome's HSTS preload list, which are sites that are hardcoded into Google Chrome as being HTTPS access only. Other browsers use this list too. When your site is included on this list, browsers only view your pages over HTTPS. They will not load your non-secure pages later, even if your server serves HTTP.\n\n**Note:** The browser considers the HSTS header and applies it to further requests only if the server sends it with an HTTPS response to an HTTPS request. The server needs to redirect the first non-HTTP request to the HTTPS page and then return this header.\n\n**Note:** Use this option as an additional security measure, and secure pages containing sensitive data as normal (redirect all HTTP requests to HTTPS).\n\n## References\n\n- [Mozilla: HTTP Strict-Transport-Security](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security)\n- [RFC 6797: HTTP Strict Transport Security (HSTS)](https://tools.ietf.org/html/rfc6797)",
    "weakness_title_read_only": "SSL Stripping",
    "weakness_id_read_only": "P744",
    "weakness": "27a61144-3c38-47c0-b820-e24f9c3734b5",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "requirements",
    "created": "2014-10-10T18:10:54.088000-04:00",
    "last_updated": "2021-06-25T14:47:36.569000-04:00",
    "custom": "False",
    "rules": "ed4ba6aa-be7d-4c57-839c-d9c6c9e091c0;b310a679-c006-4abb-a02b-5f1608d05ace",
    "rules_read_only": "A195;A1080"
  },
  {
    "countermeasure_id": "T323",
    "universal_id": "55c3cd7a-8668-48fa-b30c-ad583cf6f852",
    "countermeasure_name": "Test that default accounts are disabled or default passwords are changed",
    "countermeasure_solution": "Use the following guidelines to test that default passwords are changed or default accounts are disabled:\n\n- Identify all third party libraries/software that are used by your application and their default accounts.\n\n- Identify all default user accounts that are created by your application.\n\n- Test that accounts that are unnecessary after installation/deployment are deleted or disabled.\n    - Work with system administrators to check if those accounts are removed.\n    - This test __fails__ if these accounts are not removed.\n\n- Test the default passwords for third party library/software or application accounts.\n\n- This test __fails__ if any of the default passwords work.\n    - There are some cases in which permitting the use of default passwords could be acceptable.\n    - For example, a wireless modem may be shipped with a default admin username and password.",
    "weakness_title_read_only": "Use of Default Passwords and Accounts",
    "weakness_id_read_only": "P693",
    "weakness": "e19ebe87-c721-44e1-839d-8d409f907563",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2014-10-17T15:58:30.944000-04:00",
    "last_updated": "2021-06-25T14:47:43.724000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T324",
    "universal_id": "61d09daf-c1c2-4ffa-8bcd-579448f539d1",
    "countermeasure_name": "Follow best security practices when using WKWebView (iOS)",
    "countermeasure_solution": "Follow these guidelines for using WKWebView securely in iOS:\n\n- Use **Safari or an external app** to show the requested content if you do not need to display the content in your app.\n\n- Use the ***SFSafariViewController*** class if your app displays content from any external website that is not administrated by you inside the app instead of opening Safari.\n\n- Use **HTTPS** for all external requests, and enforce HTTPS certificate validation.\n    - Use ***NSURL*** with an HTTPS URI, in the form of `https://...`, for the connection specifier.\n    - The NSURL library handles the certificate chain validation by default.\n\n- Specify the files that are allowed to be accessed using *WKWebView* using `loadFileURL(_:allowingReadAccessTo:)`.\n\n- Use ***NSData*** class (`dataWithContentsOfURL` method) to review the remote content and restrict or sanitize received data.\n    - Do not use this synchronous method to request external URLs. It may block the current thread for tens of seconds on a slow network resulting in a poor user experience, and may cause your app to be terminated.\n\n- When user input is used to construct the target URL, **whitelist target URLs** and compare requests to a specific list of addresses.\n\n- Configure WebView to only allow a minimum set of protocol handlers required and ensure potentially dangerous handlers, such as file, tel and app-id, are disabled.\n\n- Clear cache, storage and loaded resources before the WebView is destroyed.\n\n**Note:** Starting in iOS 8.0, use ***WKWebView*** to add web content to your app. Do not use *UIWebView* or *WebView*.\n\n# References\n\n- [WKWebView](https://developer.apple.com/documentation/webkit/wkwebview)\n- [SFAuthenticationSession](https://developer.apple.com/documentation/safariservices/sfsafariviewcontroller)",
    "weakness_title_read_only": "Use of WebView without sufficient protection",
    "weakness_id_read_only": "P761",
    "weakness": "6d3d31da-287e-4843-930e-700106ab552f",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "development",
    "created": "2014-11-12T16:44:28.939000-05:00",
    "last_updated": "2021-06-25T14:47:48.557000-04:00",
    "custom": "False",
    "rules": "3657f540-0b47-49b3-9a4d-69412ec692d6",
    "rules_read_only": "A714"
  },
  {
    "countermeasure_id": "T325",
    "universal_id": "55849f76-180a-4d39-9e81-8b9533ee8adb",
    "countermeasure_name": "Use JavaScript Strict Mode",
    "countermeasure_solution": "Use the following guidelines for any page that handles sensitive data by using JavaScript in strict mode, especially for when user input is involved in the process:\n\n- Add `\"use strict\";` to the top of the JavaScript file that enforces strict rules on the entire script.\n\n- Add this directive to the beginning of any function:\n\n        function myFunction(inp){\n        \"use strict\";\n        return \"Something\";\n        } \n\n- Strict mode is supported in recent versions of browsers, such as:\n    - Internet Explorer 10\n    - Firefox 4, Safari 5.1\n    - iOS Safari 7.1.\n\nFor a list of strict mode implications, see this [ECMAScript 5 compatibility table](http://kangax.github.io/compat-table/strict-mode/).\n\nFor a browser compatibility table, see this [ECMAScript 5 compatibility table](http://kangax.github.io/compat-table/es5/).",
    "weakness_title_read_only": "JavaScript Global Scope of Variables and Functions",
    "weakness_id_read_only": "P745",
    "weakness": "b4686423-f6fd-4c17-8495-faa2f952d7ae",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "requirements",
    "created": "2014-11-18T13:56:25.481000-05:00",
    "last_updated": "2021-06-25T14:47:58.882000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T327",
    "universal_id": "fa0c63d5-c35c-4d3b-8248-b28ca73669b4",
    "countermeasure_name": "Review security of Node.js modules before installation",
    "countermeasure_solution": "The Node Packaged Modules (NPM) tool offers a simple and powerful means for installing Node.js packages. However, anyone can publish Node.js packages to the NPM package repository and there is no guarantee that the modules are not malicious or vulnerable.\n\nFollow these guidelines before installing and using any Node.js modules:\n\n- Read the security reviews of modules that are being installed.\n    -  You can use `npm audit` to check project dependencies and `npm audit fix` to replace vulnerable dependencies (See [npm-audit](https://docs.npmjs.com/cli/v6/commands/npm-audit)).\n\n- Source code of many open source modules could be found on GitHub.\n    - Examine the source code.\n\n- NPM supports [package.json scripts](https://docs.npmjs.com/cli/v6/using-npm/scripts) that allow the specification of a \"preinstall\" script that is executed before installation of the package and poses the risk of running dangerous OS commands.\n    - Make sure these scripts are harmless, and install the module in a controlled environment first. \n\n- Inspect local packages that are installed by NPM and review the source code.\n \n- Check static analysis results and review the rules that the module follows.\n    - For example, examine JSHint and JSLint results, published with the package.",
    "weakness_title_read_only": "Insufficient patching or use of insecure third party software/libraries",
    "weakness_id_read_only": "P728",
    "weakness": "659effab-aba7-464d-8760-f30eed4d032c",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "requirements",
    "created": "2014-11-18T17:24:35.451000-05:00",
    "last_updated": "2021-06-25T14:47:57.186000-04:00",
    "custom": "False",
    "rules": "c942552c-0d31-41c5-bba7-795ba0e8d88d AND 7fb6dbf9-c185-43c9-b25f-6615cf9a8469",
    "rules_read_only": "A736 AND A1063"
  },
  {
    "countermeasure_id": "T329",
    "universal_id": "8c508e3f-f36f-4053-a658-7eb581b0cd58",
    "countermeasure_name": "Verify that JavaScript is used in Strict Mode",
    "countermeasure_solution": "When using JavaScript in Strict Mode, work with developers or use code inspection tools to verify that:\n\n- For any page/JavaScript file that manipulates sensitive data, JavaScript is used in strict mode.\n    - Especially when user input is involved in the process.\n\n- Verify that `\"use strict\";` is specified in the beginning of the script.\n    - This test __fails__ if it is not specified.\n        - Alternatively, you can run strict mode for Node.js by running the entire application in strict mode (`node -use_strict myapp.js`).\n        - However, it is better to specify this in the code.",
    "weakness_title_read_only": "JavaScript Global Scope of Variables and Functions",
    "weakness_id_read_only": "P745",
    "weakness": "b4686423-f6fd-4c17-8495-faa2f952d7ae",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2014-11-19T16:16:11.877000-05:00",
    "last_updated": "2021-06-25T14:47:58.803000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T330",
    "universal_id": "bf41f8f4-5abb-419b-89b9-1c77ee3f9267",
    "countermeasure_name": "Monitor and manage Node.js workload",
    "countermeasure_solution": "To prevent the Node.js main event loop from crashing, try to monitor and limit the load and latency in the loop. \n\n- __Set limits on the size of different types of requests__.\n    - Some middleware allows setting limits on different request types such as JSON, URL-encoded or multi-part requests.\n\n- __Avoid placing CPU-intensive and memory-intensive operations in the main event loop__.\n    - Node.js is designed to solve the problem of I/O intensive transactions but all other heavy calculations can still block the main loop.\n    - If the application sleeps or processes a signal (such as an image) for one second Node.js cannot respond to any new requests during that time.\n    - Separate the CPU intensive parts as a separate process (anything but I/O can block) since the main event loop expects all requests to be responded to quickly.\n\n- __Use a Node.js load monitoring module__ such as \"toobusy\" to poll the event loop.\n    - Do not accept new requests if the server is too busy, and return a response that shows when the server is busy.",
    "weakness_title_read_only": "Crash of Node.js single threaded event loop",
    "weakness_id_read_only": "P746",
    "weakness": "d6c0cd99-dc10-4129-ba34-bc461afb75db",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "development",
    "created": "2014-11-21T14:15:54.531000-05:00",
    "last_updated": "2021-06-25T14:47:57.930000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T331",
    "universal_id": "73548890-308f-42d7-8f49-4f59c92a45d4",
    "countermeasure_name": "Enforce policies through content security policy (CSP) or XSS protection headers",
    "countermeasure_solution": "Use content security policy (CSP) headers to mitigate some security risks such as cross-site scripting (XSS) for web applications.\n\n**NOTE:** Browsers that do not support CSP headers simply ignore them. **Do not merely rely on CSP headers** as the primary means of protection against XSS, and always implement proper output encoding and escaping techniques. You can find a browser compatibility table from Mozilla [here](https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP#Browser_compatibility).\n\nConsider the following guidelines:\n\n- The main header is __`Content-Security-Policy`__. Use it as outlined here.\n- Specify the sources that you trust for loading scripts (in `script-src`).\n    - It normally includes your domain and the domain that you load scripts from: `Content-Security-Policy: script-src 'self' 'https://myScriptDomain.com';`.\n- __Do not include `unsafe-inline` and `unsafe-eval` among the script sources__.\n    - The first enables the use of inline JavaScript, and the second allows the use of text-to-JavaScript code evaluation functions such as `eval()`.\n\n- Specify the authorized origins for connections by setting `connect-src`:\n    - This directive restricts these methods of communication: `<a> ping`, `Fetch`, `XMLHttpRequest`, `WebSocket`, and `EventSource`.\n    - Specify `'none'` if you are not using these connection methods.\n    - It is especially important to restrict \"ping\" in links because they can be manipulated by malicious JavaScript to steal information.\n    - Specify 'Nonce' and 'Hash' for inline or remote scripts. This works as an additional layer of defense and reduces the risk of script injection, or load of scripts from untrusted sources. For more complex webpages, managing CSPs for various external resources can become very cumbersome. [This articles expands on the use of nonces, hashes and 'strict-dynamic' to simplify this process](https://websec.be/blog/cspstrictdynamic/).\n    - See [this](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/connect-src) page from Mozilla for more information about `connect-src`.\n\n- Specify the target of the forms. This is crucial because malicious scripts can change the forms' action and target and steal the submitted data. See this [page](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/form-action) from Mozilla for options and examples.\n    - In the most common scenarios, you just need to specify your target domain. For example:  `<meta http-equiv=\"Content-Security-Policy\" content=\"form-action 'https://*.mydomain.com'\">`\n\n- Specify the origins that frames are allowed to load content from in `frame-src`, including iFrames.\n    - If you do not use frames, specify `'none'`.\n- Other possible headers include: `font-src`, `img-src`, `media-src` (audio/video), `object-src` (mainly for Flash), and `style-src` (stylesheets).\n- __Set `default-src`, which defines the default value for all the other policies__ that are not defined in your CSP. For example, specify 'self' in the value.\n    - Not setting a policy is equivalent to setting it to the default value.\n    - If the default value is not set, the default policy will be open.\n- __Set `sandbox` value to `\"\"`, __especially for iFrames__ whenever you do not need other options such as allow-forms, allow-popups, allow-same-origin, allow-pointer-lock, allow-scripts, or allow-top-navigation.\n- __Set `report-uri` to a report page__ that you have developed to log all errors and violations that will be encountered.\n    - The browser sends reports of any violation to the address that you have specified in the form of a JSON document.\n    - The information includes document-uri, referrer, blocked-uri, violated-directive, and original-policy.\n- For more information, consult the [OWASP Content Security Policy](https://www.owasp.org/index.php/Content_Security_Policy).\n\n**Notes:** \n\n- For more information about XSS prevention, see the [OWASP XSS (Cross-Site Scripting) Prevention Cheat Sheet](https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet).\n- For a [step by step guide to deploying CSP, read this article](https://websec.be/blog/cspstepbystep/).",
    "weakness_title_read_only": "Improper Neutralization of Input During Web Page Generation (Cross-Site Scripting)",
    "weakness_id_read_only": "P632",
    "weakness": "67b0e738-a725-4462-be2a-52493b75f4ac",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "development",
    "created": "2014-11-24T17:40:10.698000-05:00",
    "last_updated": "2022-11-30T08:58:05.319000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T332",
    "universal_id": "786627ba-2b31-4c86-b200-8cd6f662e0cf",
    "countermeasure_name": "Test that content security policy (CSP) headers are added",
    "countermeasure_solution": "Use the following guidelines for testing that CSP headers are added to your web pages:\n\n- Find tools or plugins that allow the inspection of HTTP response headers.\n    - Chrome offers a strong tool under __Developer Tools > Resources__.\n    - The Firefox Firebug plugin could also be used for this test.\n\n- Identify the pages that handle sensitive information or critical operations.\n    - This could include your entire application.\n\n- Send a request to those pages, and inspect response message headers:\n    - This test __fails__ if the response header does not include __`Content-Security-Policy`__.\n        - Verify that the headers match your CSPs.\n        - This test __fails__ if the headers don't match.\n    - This test __fails__ if `unsafe-inline` and `unsafe-eval` are specified among the script sources (in `script-src`) without a valid reason.\n    - This test __fails__ if `default-src` is not set.\n    - This test __fails__ if suitable values for `connect-src` are not set.\n    - This test __fails__ if correct values for `form-action` are not specified.\n    - This test __fails__ if `report-uri` is not specified.\n        - Verify that the target for reporting exists and that errors are logged.\n        - This test __fails__ if the target does not exist.",
    "weakness_title_read_only": "Improper Neutralization of Input During Web Page Generation (Cross-Site Scripting)",
    "weakness_id_read_only": "P632",
    "weakness": "67b0e738-a725-4462-be2a-52493b75f4ac",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2014-11-25T13:44:52.145000-05:00",
    "last_updated": "2021-06-25T14:48:01.200000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T333",
    "universal_id": "9458df23-b485-43d3-b8ea-5fc68c7a81bf",
    "countermeasure_name": "Test that HTTP Strict-Transport-Security headers are sent in HTTPS responses",
    "countermeasure_solution": "Use the following steps to test that HTTP Strict-Transport-Security headers are sent in HTTPS responses:\n\n1. Use Chrome's Developer Tools, BurpSuite, Firefox FireBug, or any proxy software that allows you to read the contents of HTTP requests and responses.\n\n2. Establish a secure (HTTPS) connection with the application.\n\n3. Send a request over HTTPS channel.\n\n4. Open the proxy and check the headers of the response.\n\nThis test __fails__ if the Strict-Transport-Security header is not set, or it is not compatible with the policies of the application.",
    "weakness_title_read_only": "SSL Stripping",
    "weakness_id_read_only": "P744",
    "weakness": "27a61144-3c38-47c0-b820-e24f9c3734b5",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2014-12-16T14:36:33.645000-05:00",
    "last_updated": "2021-06-25T14:47:36.662000-04:00",
    "custom": "False",
    "rules": "ed4ba6aa-be7d-4c57-839c-d9c6c9e091c0;b310a679-c006-4abb-a02b-5f1608d05ace",
    "rules_read_only": "A195;A1080"
  },
  {
    "countermeasure_id": "T335",
    "universal_id": "4e4acf8f-30b3-4a25-8480-6d068151c94b",
    "countermeasure_name": "Sanitize user input before passing to NoSQL operators",
    "countermeasure_solution": "Follow best practices to prevent NoSQL injection attacks by sanitizing user input:\n\n- If you dynamically generate query statements using user input, **escape common keywords and special characters** of the application's programming language or the data-interchange format.\n    - For example, escape keywords and special characters for JSON and XML in PHP and JavaScript.\n\n- Any time you make a database call, verify that any variables that cross the application-to-database boundary are **parameterized** and passed as data.\n    - Avoid concatenating user input to create query statements.\n\n- When **whitelisting** is applicable on user input, use a robust **regular expression** to validate the input before passing it to a NoSQL operator as data.\n    - For example, when user input has a predictable structure, like dates, social security numbers, zip codes, e-mail addresses, and so on.\n\n- Always refer to the latest security updates and best practices for your NoSQL database.\n\n**Note:** Do not trust client-side data validation that could be bypassed by attackers. Implement all of the mentioned input validation steps on the server application.",
    "weakness_title_read_only": "Improper Neutralization of Special Elements used in a NoSQL Command (NoSQL Injection)",
    "weakness_id_read_only": "P747",
    "weakness": "29dfb867-b726-4222-90d0-60283ec903ca",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "development",
    "created": "2014-12-17T12:19:36.897000-05:00",
    "last_updated": "2022-07-07T23:55:12.648000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T336",
    "universal_id": "e3eb3a20-d42c-454e-ac02-0d48e678e870",
    "countermeasure_name": "Verify that no unsanitized user input is passed to NoSQL operators",
    "countermeasure_solution": "Follow these guidelines to verify that unsanitized user input is not passed to NoSQL operators:\n\n- Find any instance of a code block in the application that communicates with the NoSQL database.\n    - Verify that the input passed into the code block is properly **sanitized**, and the programming language's keywords and special characters are **escaped**.\n    - This test __fails__ if the input is not sanitized, and keywords are not escaped.\n\n- If you are required to pass a variable without escaping anything using a database call, verify that it is **parameterized** (depending on the application language) and passed to the server as data.\n    - This test __fails__ if variables are not parameterized before being passed to the server.\n\n- Verify that the application uses a robust **regular expression** to validate data with a consistent structure before passing the data to a NoSQL operator as data.\n    - For example, use a strong regular expression for phone numbers, zip codes, or e-mail addresses. \n    - This test __fails__ if consistently structured data is not validated.\n\n**Note:** Implement all of the input validations on the server application. This test __fails__ if user input is validated only on the client-side.",
    "weakness_title_read_only": "Improper Neutralization of Special Elements used in a NoSQL Command (NoSQL Injection)",
    "weakness_id_read_only": "P747",
    "weakness": "29dfb867-b726-4222-90d0-60283ec903ca",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2014-12-17T12:24:29.679000-05:00",
    "last_updated": "2022-07-07T23:55:05.025000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T337",
    "universal_id": "fb335c52-aa4c-4c94-9e44-b8f04ad8bf2c",
    "countermeasure_name": "Include a 'break glass' feature that enables emergency functions",
    "countermeasure_solution": "A [break-glass](/library/glossary/G9/) feature allows users to bypass stricter security controls in case of an emergency or other similar situations. These guidelines can be used to design and develop these features:\n\n- Identify critical, emergency and essential functions of the system that require 'break-glass' access.\n\n- Define the meaning of emergency and the scope of emergency situations.\n    - Define cases for which the break-glass feature should be enabled.\n\n- Design and develop a different method for access to identified functions in case of emergency. Some solutions include: \n    - Designating an area that is restricted by physical security, but allows bypassing normal authentication mechanisms (such as monitoring). \n    - Designing duplicate keys or allowing supervisory override. \n    - Generating a username (with obvious IDs such as 'breakglass') and putting the credentials in an envelope in a glass cabinet.\n        - Access to the cabinet in that case, involves literally breaking the glass.\n\n- Some of the rules for emergency user sessions, such as permissions, idle session lock and idle session timeout may be different from normal user sessions.\n    - Refine the permissions and keep them to a minimum that is necessary for the functions.\n\n- Show warnings at the moment of break-glass access request and require users to accept full responsibility.\n    - If it does not delay the emergency response, require users to provide a comment on why they need to use the break-glass feature.\n\n- Audit and log all the details of the break-glass procedures, and develop a way to review the audits and check the consistency of actions.\n\n- Disable and delete emergency accounts that were used at the end of the emergency.",
    "weakness_title_read_only": "Blocking of emergency actions or essential functions of a system",
    "weakness_id_read_only": "P748",
    "weakness": "935f97e0-7ef1-483d-b7bd-3b4411cb526c",
    "tags": "",
    "countermeasure_priority": "3",
    "phase": "requirements",
    "created": "2014-12-19T15:41:55.491000-05:00",
    "last_updated": "2022-03-18T11:53:05.146000-04:00",
    "custom": "False",
    "rules": "89a5e903-a2cd-4234-b0ea-714e3da7fee9",
    "rules_read_only": "A1082"
  },
  {
    "countermeasure_id": "T338",
    "universal_id": "8e1f1d7b-c3d6-467d-b88e-03f5fca3554c",
    "countermeasure_name": "Control access to resources through user authentication and authorization",
    "countermeasure_solution": "Use the following guidelines for controlling access to resources with user authentication and authorization:\n\n- Implement a user authentication/authorization system that enforces access control policies.\n    - Users include human, software process, or device.\n    - A typical authentication/authorization system identifies and authenticates users, and assigns roles to them.\n    - It also checks user permissions when a request is made to access a resource, such as a piece of information, service, or page.\n\n- Require additional levels of authentication (e.g., enable multi-factor authentication) when performing critical requests that involve [sensitive/personal information](/library/glossary/G8).\n\n-  Make sure that interfaces and pages that require authentication have easy access to logout functionality.\n-  Make sure unique identification and authentication of each service, program, or system attempting to access critical assets is required, where interfaces, such as APIs, allow for automated access to critical assets.\n-  Protect the authentication mechanisms, where identification is supplied across a non-console interface.\n\n- While there are many access control models, Role Based Access Control (RBAC) is one of the most common models for typical applications.\n    - For more information on access control models, especially RBAC, see this [FAQ from NIST](http://csrc.nist.gov/groups/SNS/rbac/faq.html).\n- Restrict by default all access to critical assets to only those accounts and services that require access.\n\n**Note:** Authorize a user or process acting on behalf of the user to publish **publicly accessible content**. Ensure information available to the general public, without identification and authentication, does not contain nonpublic content.",
    "weakness_title_read_only": "Improper Access Control (Authorization)",
    "weakness_id_read_only": "P182",
    "weakness": "e488cdc5-3c91-4d2b-bcec-5c651b000d8b",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "requirements",
    "created": "2015-01-05T12:23:26.588000-05:00",
    "last_updated": "2022-08-15T13:41:46.873000-04:00",
    "custom": "False",
    "rules": "2ef3b940-05af-4cb9-bfc6-ed2fee4c8d42 AND c942552c-0d31-41c5-bba7-795ba0e8d88d;2ef3b940-05af-4cb9-bfc6-ed2fee4c8d42 AND 2d6dc5e3-0ccb-4911-86d2-1f4aaac107b3;89a5e903-a2cd-4234-b0ea-714e3da7fee9 AND c942552c-0d31-41c5-bba7-795ba0e8d88d;616b6ea4-5436-4bad-83f6-bc83781aa8f2 AND 479085b0-c021-41a9-8b6c-1233b8e05e39",
    "rules_read_only": "A728 AND A736;A728 AND A742;A1082 AND A736;A23 AND A734"
  },
  {
    "countermeasure_id": "T340",
    "universal_id": "87fcbca5-351c-4fcb-b00d-f0a85b29606e",
    "countermeasure_name": "Use an account and identity management system",
    "countermeasure_solution": "Develop, set up, or use an account management system that enables the organization of user accounts, as well as service accounts (non-human accounts for software processes and devices that use the system).\n\nSuch a system provides the capability to:\n\n- Add, remove, disable, modify and activate accounts in accordance with organization-defined procedures or conditions.\n- Identify and select the types of accounts used to support organizational mission/business functions.\n- Assign account managers for accounts.\n- Manage authenticators and combinations of authenticators, such as passwords, tokens, symmetric keys, private keys, biometrics, physical keys, and key cards.\n- Define roles or groups of accounts (if applicable), and establish conditions for membership.\n- Assign permissions to individual accounts, to roles, or to groups of accounts.\n- Manage approvals by organization-defined personnel or roles when a request to create accounts is received.\n- Monitor the use of accounts.\n    - Verify the user identity before modifying any authentication factor.\n- Notify account managers within a time-period proper for each situation when:\n    - Accounts are no longer required.\n    - Users are terminated or transferred.\n    - Individual information system usage or need-to-know changes for an individual.\n- Authorize access to the information system based on:\n    - A valid access authorization.\n    - Intended system usage.\n    - Other attributes as required by the organization or associated missions/business functions.\n- Review accounts for compliance with account management requirements with a frequency mandated by your organization.\n    - Implementing an automatic report generation mechanism may help with the reviewing process.\n- Establish a process for reissuing shared/group account credentials (if deployed) when accounts are removed from the group.\n- Train users about security practices that will keep their accounts safe. This includes choosing strong authentication factors, protecting passwords, avoiding password reuse, and avoiding phishing attacks.\n\n- Deny all access by __default__.\n\n__Note__: Default authenticators (passwords) that are used for installation of the system should be modified after the first installation. Unused default accounts that are only necessary for installation should be removed after the first installation of the system.",
    "weakness_title_read_only": "Improper Access Control (Authorization)",
    "weakness_id_read_only": "P182",
    "weakness": "e488cdc5-3c91-4d2b-bcec-5c651b000d8b",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "architecture-design",
    "created": "2015-01-06T13:29:23.473000-05:00",
    "last_updated": "2023-03-23T18:22:41.686000-04:00",
    "custom": "False",
    "rules": "2058e370-15ea-438f-9dfe-33bbba20751d;2ef3b940-05af-4cb9-bfc6-ed2fee4c8d42;89a5e903-a2cd-4234-b0ea-714e3da7fee9;be965488-96da-4440-9541-f0f926250d70",
    "rules_read_only": "A45;A728;A1082;A1075"
  },
  {
    "countermeasure_id": "T342",
    "universal_id": "456f8657-3111-4e28-9972-86ae33e721c2",
    "countermeasure_name": "Inform and warn users about using critical system services",
    "countermeasure_solution": "Use the following guidelines to inform users about using critical system services:\n\n- The system/application must display or send adequate information in response messages to assure that users are aware of what they are doing when using a critical or important function of the system. An example of a critical function is authentication to critical subsystems.\n\n- **Identify** critical features and services that, if abused, may have significant consequences, such as the pursuit of legal action.\n\n- **Display** (or send) messages that include the following notes (whichever applicable) when these features are accessed:\n\n     - The user is about to utilize an important service.\n     - This part of the system may be subject to audit and recorded.\n     - By using the system, the user gives his/her consent to being monitored by the system.\n     - Users are responsible for their actions and may be prosecuted in the case of abuse or misuse of the system.\n     - Users are accessing a government information system.\n\n- Do not allow further access to the system until the user acknowledges receipt of the notification message, and agrees to the usage conditions by an **explicit action**, such as clicking on an acknowledgment button.\n\n- For **publicly accessible systems** display:\n\n    - System use conditions, before granting further access.\n    - References, if any, to indicated consistency of the auditing process with privacy policies for the system.\n    - A description of the authorized system usage.\n\n __Note__: While these warnings demonstrate that due care is exercised in product design, limit the liability of product designers, and help in case of legal prosecution, they can practically reduce the number of hacking or misuse attempts. The warnings dissuade opportunists from further experimenting with the system when they realize that the system is monitored and supervised.\n\n__Note__: System use notifications are not required for **access via non-human logon interfaces**.",
    "weakness_title_read_only": "Opportunity for disclaimer and lack of means to achieve non-repudiation",
    "weakness_id_read_only": "P749",
    "weakness": "eed86774-267d-44a2-b6e4-8213b5ba40e7",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "development",
    "created": "2015-01-15T14:12:54.953000-05:00",
    "last_updated": "2021-06-25T14:47:58.688000-04:00",
    "custom": "False",
    "rules": "89a5e903-a2cd-4234-b0ea-714e3da7fee9;be965488-96da-4440-9541-f0f926250d70;2ef3b940-05af-4cb9-bfc6-ed2fee4c8d42 AND 4fd90244-5770-4b68-88a7-9445cca26ec8",
    "rules_read_only": "A1082;A1075;A728 AND A1077"
  },
  {
    "countermeasure_id": "T343",
    "universal_id": "d232fcbd-366b-4cb7-a8f5-ae193260f68a",
    "countermeasure_name": "Test that proper system use notification is displayed or sent for critical features",
    "countermeasure_solution": "Use the following guidelines for testing that users receive system use notifications when using critical features:\n\n- Identify critical features and services of the application/system that, when abused, may have significant consequences, such as the pursuit of legal action.\n    - Try to access those services and features and test if a use notification message is shown or sent in the response message in each case.\n    - The **message should include** the following notes where applicable:\n        - The user is about to utilize an important service.\n        - This part of the system may be subject to audits and recordings.\n        - By using the system, the user gives their consent to being monitored by the system.\n        - Users are responsible for their actions and may be prosecuted in the case of abuse or misuse of the system.\n        - Users are accessing a government information system.\n\nThis test __fails__ if a system use notification is not sent, or the message does not contain the applicable required information.\n\n- Verify that the notification message or banner stays on the screen until the user acknowledges receipt of the notification message, and agrees to the usage conditions by an **explicit action**, such as clicking on an acknowledgment button.\n    - This test __fails__ if the user cannot explicitly agree.\n\n- For **publicly accessible systems**, this test __fails__ if the system:\n\n    - Displays system use information conditions **after** granting further access.\n    - Does not display references, if any, to indicated consistency of the auditing process with privacy policies for the system.\n    - Does not include a description of the authorized system usage.",
    "weakness_title_read_only": "Opportunity for disclaimer and lack of means to achieve non-repudiation",
    "weakness_id_read_only": "P749",
    "weakness": "eed86774-267d-44a2-b6e4-8213b5ba40e7",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2015-01-15T14:54:00.284000-05:00",
    "last_updated": "2021-06-25T14:47:58.643000-04:00",
    "custom": "False",
    "rules": "89a5e903-a2cd-4234-b0ea-714e3da7fee9;2ef3b940-05af-4cb9-bfc6-ed2fee4c8d42 AND 4fd90244-5770-4b68-88a7-9445cca26ec8;be965488-96da-4440-9541-f0f926250d70",
    "rules_read_only": "A1082;A728 AND A1077;A1075"
  },
  {
    "countermeasure_id": "T344",
    "universal_id": "6788ecf2-ddc1-42a2-997a-39bfc312d344",
    "countermeasure_name": "Enforce different rules for access to the system based on the origin, type, and medium of request",
    "countermeasure_solution": "Follow these guidelines to regulate access to the system/application from various networks:\n\n- Analyze the networks and media that are used to access the system/application.\n    - Figure out whether different rules are needed to restrict access to the system based on the network or type of request (see Additional Requirements for this countermeasure).\n\n- Design and enforce different access control rules based on the type of network and the origin of the request.\n\n- Divide the system into zones and identify channels from which access to those zones is enabled.\n    - The concepts of zones and conduits are explained in ANSI/ISA 62433-3-2.\n\n- Create rules to restrict inbound traffic from untrusted networks to trusted networks to:\n    - Permit only communications with system components that have been authorized to offer public services, protocols, and ports.\n    - Allow stateful responses to messages sent by trusted network system components.\n    - Deny all other traffic.",
    "weakness_title_read_only": "Improper Access Control (Authorization)",
    "weakness_id_read_only": "P182",
    "weakness": "e488cdc5-3c91-4d2b-bcec-5c651b000d8b",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "architecture-design",
    "created": "2015-01-16T11:46:04.330000-05:00",
    "last_updated": "2023-03-23T18:01:34.684000-04:00",
    "custom": "False",
    "rules": "be965488-96da-4440-9541-f0f926250d70;354f0787-0d6e-4b74-881b-956ae947f511",
    "rules_read_only": "A1075;A1065"
  },
  {
    "countermeasure_id": "T345",
    "universal_id": "287fb5aa-1459-4d5e-a82a-831eea91fef0",
    "countermeasure_name": "Check the integrity of critical configuration and data files",
    "countermeasure_solution": "Follow these guidelines for checking the integrity of important configuration and data files:\n\n- Identify important configuration files (or other sources of critical data) that are loaded from a shared or insecure location, and seriously affect the functionality of the server, application, or system.\n    - If untrusted people are able to change the contents of those files, include those files.\n        - For example, if the contents of files can be changed because they are in unprotected or shared folders on a server.\n        - Other examples may include a configuration file that contains parameters of a controller, or a file containing authentication system parameters.\n\n- Develop capabilities to verify the integrity of those files, whenever they are going to be used.\n    - For example, create a cryptographic hash of the file and keep it in another secure place along with the date of last modification of the file.\n        - Use a hash function with little probability of collision, such as SHA256.\n        - It is preferable to encrypt the hash as a signature.\n    - Include the last modification date in the hash/signature data.\n\n- Verify the hash/signature each time that the file is going to be used and check the hash value and the modification date to make sure that the file has not been altered.\n\n- Develop capabilities to automatically notify the responsible role of any integrity violation.\n\n- Develop capabilities to give an automated response upon discovering discrepancies.\n    - For example, shutdown, restart, or implement other security safeguards.\n    - Other examples of specific safeguards are halting the system, reversing the changes, or triggering audit alerts.",
    "weakness_title_read_only": "Missing support for integrity checks on important data and configuration files",
    "weakness_id_read_only": "P752",
    "weakness": "059f9863-6436-4841-b9fd-8b9febb4a1f6",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "development",
    "created": "2015-01-28T18:18:18.166000-05:00",
    "last_updated": "2021-06-25T14:47:39.106000-04:00",
    "custom": "False",
    "rules": "2ef3b940-05af-4cb9-bfc6-ed2fee4c8d42",
    "rules_read_only": "A728"
  },
  {
    "countermeasure_id": "T346",
    "universal_id": "1ea1bf36-ba88-472f-8b62-df47863bd05e",
    "countermeasure_name": "Test that the integrity of important configuration and data files are checked",
    "countermeasure_solution": "Follow these guidelines for testing file integrity:\n\n- Work with developers/designers to identify the files or data fields that are protected against alteration attacks.\n    - This checks their integrity.\n    - These files may include configuration files that contain parameters of a controller or authentication parameters of the system.\n\n- This test __fails__ if files that need an integrity check are ignored.\n    - These files include those that are loaded from unprotected or unsecure places.\n    - While there are no specific guidelines about how to choose which files to check, a strong risk assessment can help highlight which files to focus on.\n\n- Change the content of one or more files flagged as integral, and then try to use the functions/tools that use those files.\n\nThis test __fails__ if the system proceeds without any error messages indicating the absence of integrity.",
    "weakness_title_read_only": "Missing support for integrity checks on important data and configuration files",
    "weakness_id_read_only": "P752",
    "weakness": "059f9863-6436-4841-b9fd-8b9febb4a1f6",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2015-01-30T12:10:30.872000-05:00",
    "last_updated": "2021-06-25T14:47:39.243000-04:00",
    "custom": "False",
    "rules": "2ef3b940-05af-4cb9-bfc6-ed2fee4c8d42",
    "rules_read_only": "A728"
  },
  {
    "countermeasure_id": "T347",
    "universal_id": "2fe32e4d-6a49-4b27-ad0d-53c908000e32",
    "countermeasure_name": "Fail to a known state with predefined outputs",
    "countermeasure_solution": "Critical systems like industrial control systems must always be in a predetermined state even after unexpected failures. Follow these instructions to make sure the system fails to an expected safe state:\n\n- For every module/unit of the system, determine its default output and default failure state (this is especially important for modules/units that are remotely accessible or affected by user input and are susceptible to failure).\n- Consider __other units that interact with this unit__ and analyze the effect of the unit's output on the rest of the system to determine the output/state (especially for control systems).\n- Consider finding a means to __detect failure__ for purposes of acting upon it.\n- Preserve system state information upon failure to help to restore the system to an operational mode.",
    "weakness_title_read_only": "Failing to an unknown state with unpredictable behavior",
    "weakness_id_read_only": "P751",
    "weakness": "790aec68-c7c2-4360-ba9a-9c5b6f9106e1",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "development",
    "created": "2015-01-30T15:13:35.596000-05:00",
    "last_updated": "2022-03-01T11:22:48.300000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T348",
    "universal_id": "8f9cea7b-a554-416f-96a7-b83f17123355",
    "countermeasure_name": "Verify that the system fails to a known state",
    "countermeasure_solution": "Follow these steps to verify that the system and its modules/units fail to known and predetermined states:\n\n- For each unit of the system, try to create conditions that cause that unit to fail. \n\n- Verify the state and output values of the unit, and check if the unit fails to a predetermined state, and produces a predefined output value. \n\nThis test __fails__ if the unit does not fail or produce output in a predefined way.",
    "weakness_title_read_only": "Failing to an unknown state with unpredictable behavior",
    "weakness_id_read_only": "P751",
    "weakness": "790aec68-c7c2-4360-ba9a-9c5b6f9106e1",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2015-01-30T15:48:59.130000-05:00",
    "last_updated": "2021-06-25T14:47:41.220000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T349",
    "universal_id": "bd036e53-3dc0-425b-8f70-3d20ba919a8c",
    "countermeasure_name": "Protect audit information and logs against unauthorized access",
    "countermeasure_solution": "Protect audit information against unauthorized deletion or modification. This countermeasure is as crucial as logging important events itself.\n\nFollow these guidelines to protect audit records:\n\n- Identify, classify and collect required audit information:\n    - Audit information includes not only audit data, but audit settings and audit reports.\n\n- Design and develop extra safeguards:\n    - Give audit data a higher level of attention/security, prevent any modification to such data, or at a minimum, record the changes. \n    - The use of write-once-read-many (WORM) media is one way to adequately protect records.\n    - If possible, store log data on a different partition than the application and apply proper log rotation to log files (Systematically archive log files). This may not be possible in all the scenarios but is preferable. \n\n- Develop capabilities to grant access to audit data on a read-only basis for viewing and for report generation.\n\n- Create and keep signatures of records, and verify them when accessing the records again.\n\n- Maintain the original records, and make changes to the copies if the information is of high value.\n    - Otherwise, log changes to audit data if modification is allowed.\n\n__Note:__ NIST SP 800-92 (Guide to Computer Security Log Management) provides detailed information on how to design a secure log and auditing system. The following items are listed to protect logs and make a secure logging system:\n\n- Restrict user access to log files (users usually need no more than append access privileges, if any).\n- Avoid recording unneeded sensitive data.\n- Protect log files by message digests, encryption, and physical protection.\n- Limit the processes that generate the logs.\n- Implement suitable responses to logging errors.\n- Secure the communication channel used to send log data.\n- Destroy old logs when not needed.",
    "weakness_title_read_only": "Insufficient Logging or Insufficient Protection of Logs",
    "weakness_id_read_only": "P619",
    "weakness": "9a42301f-ed6c-42cb-a85d-a5134b76b701",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "requirements",
    "created": "2015-02-02T12:14:23.381000-05:00",
    "last_updated": "2022-08-24T10:56:08.262000-04:00",
    "custom": "False",
    "rules": "89a5e903-a2cd-4234-b0ea-714e3da7fee9;2ef3b940-05af-4cb9-bfc6-ed2fee4c8d42",
    "rules_read_only": "A1082;A728"
  },
  {
    "countermeasure_id": "T350",
    "universal_id": "b8ea1aca-011c-41b3-84ef-9bf65c93f1c6",
    "countermeasure_name": "Verify that audit information is sufficiently protected",
    "countermeasure_solution": "Review the system's/application's audit protection policies and safeguards:\n\n- Attempt to change the logs and review the permissions for write, delete, and modification of audit artifacts, such as audit data, audit settings and audit reports.\n    - Try to access and change this data.\n    - This test __fails__ if you can modify the data without having the required permissions.\n\n- If the requirements ask for storage of audit information on write-once-read-many (WORM) devices and media, test if they are met.\n\n- Verify that any changes to audit records are recorded according to the adopted policies.\n\n- Work with developers to verify that authorized users can only access audit records on a read-only basis if this is mandated by the policy's regulations.",
    "weakness_title_read_only": "Insufficient Logging or Insufficient Protection of Logs",
    "weakness_id_read_only": "P619",
    "weakness": "9a42301f-ed6c-42cb-a85d-a5134b76b701",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2015-02-02T12:28:18.274000-05:00",
    "last_updated": "2021-06-25T14:47:48.192000-04:00",
    "custom": "False",
    "rules": "89a5e903-a2cd-4234-b0ea-714e3da7fee9;2ef3b940-05af-4cb9-bfc6-ed2fee4c8d42",
    "rules_read_only": "A1082;A728"
  },
  {
    "countermeasure_id": "T353",
    "universal_id": "0c324589-8c67-44ce-a535-ddc87d9eebdb",
    "countermeasure_name": "Control the inbound and outbound data flow across the boundaries of zones",
    "countermeasure_solution": "Before starting, make sure you have identified and defined zones and conduits as detailed in other countermeasures, and in the ISA 62443-3-2 standard. Design the network architecture according to the guidelines below (you may either implement the architecture or provide enough deployment/network architecture documentation for people who will deploy your application):\n\n- __Restrict inbound traffic through conduits:__\n    - Determine or measure the data flow that different components of the system can handle (such as an identity management server).\n    - Use software or hardware tools to limit volume of the inbound data (that is, boundary protection devices, such as firewalls).\n\n- __Filter out malicious inbound traffic:__\n    - Implement measures (such as anti-spoofing measures)  to detect and block malicious inbound traffic (such as forged source IP addresses) from entering the trusted network.\n    - Select the right technology to protect conduits and data channels.\n    - Use/develop software or hardware tools to filter out suspicious data packets.\n    - To achieve this goal, consider developing/using industrial firewalls or other types of Network Security Controls (NSC) that are aware of SCADA protocols and can recognize and filter out malicious content.\n        - Such as Distributed Network Protocol (DNP), Modbus serial communication, and Profibus.\n    - __You will need to evaluate use of all types of firewalls:__\n        - Packet level firewalls (working on OSI layer 3/network).\n        - Stateful firewalls (working on OSI layer 3 and 4/transport).\n        - Application level firewalls (working on specific protocols and applications, up to OSI layer 7).\n    - Use a firewall in test mode to intercept all traffic, and see the effect of rules on the traffic.\n    - Start with stricter rules and adjust the rules until there is no false alarm.\n\n- __Control outbound traffic:__\n    - To prevent users from causing denial of service to other zones (initiating from one zone and attacking another), take measures to filter and control outbound traffic from each zone and across boundaries within the system boundaries.\n\n- Consider and analyze all the means of data transfer between zones (not only data transfers through typical networks).\n    - For example, data transfer __through USB devices such as flash memories and external hard drives__.\n\n- In addition to firewalls, evaluate the necessity of __an intrusion detection and prevention system (IPS, and IDPS)__ that suits the type of system and protocol that you use.",
    "weakness_title_read_only": "Insufficient Control over Data Flow",
    "weakness_id_read_only": "P753",
    "weakness": "1f0959bb-0e33-401b-a7da-6b831553a405",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "requirements",
    "created": "2015-02-03T17:02:08.024000-05:00",
    "last_updated": "2023-03-17T16:41:11.556000-04:00",
    "custom": "False",
    "rules": "a5ca3310-459c-488a-8c4f-65d8f794a4e4",
    "rules_read_only": "A1089"
  },
  {
    "countermeasure_id": "T355",
    "universal_id": "ad80aec2-a94f-4766-ae18-d9a019fe46dd",
    "countermeasure_name": "Verify that inbound/outbound traffic is properly filtered",
    "countermeasure_solution": "Verifying that inbound and outbound traffic is properly filtered requires an elaborate plan, and its details could vary depending on the type of technologies, protocols, applications and tools that are used. \n\nConsider the following guidelines when designing the test plan and testing the system:\n\n- There are a number of tools that are developed to generate high volumes of data or malformed data that could cause denial of service attacks.\n    - Use them to test that your system/application is not vulnerable.\n    - Use the tools, or develop one for your application, to test the inbound traffic through conduits.\n    - Use the tools to test the outbound traffic going to the other zones.\n    - In general, make sure the tools test for all types of denial of service attacks:\n        - Volume based attacks\n        - Protocol level attacks\n        - Application level attacks (such as SYN flooding, smurf DDoS, and Slowloris)\n\n- Verify that all the means of data transfer between zones are regulated and restricted.\n    - For example, zones __through USB devices__, such as flash memories and external hard drives.\n\n- Prepare the test plan based on the designed zones and conduits.\n    - Verify that everything that is indicated in those documents is implemented.\n    - For example try to access the zones, from a corporate network (which is normally separate from the control system's network), and from public networks (such as the Internet) to see if those paths are adequately blocked.",
    "weakness_title_read_only": "Insufficient Control over Data Flow",
    "weakness_id_read_only": "P753",
    "weakness": "1f0959bb-0e33-401b-a7da-6b831553a405",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2015-02-04T12:02:18.903000-05:00",
    "last_updated": "2021-06-25T14:47:53.031000-04:00",
    "custom": "False",
    "rules": "a5ca3310-459c-488a-8c4f-65d8f794a4e4",
    "rules_read_only": "A1089"
  },
  {
    "countermeasure_id": "T356",
    "universal_id": "24d43fcd-c6b0-494b-bc82-87ad6c87da86",
    "countermeasure_name": "Break the system into zones and design the conduits",
    "countermeasure_solution": "Follow these guidelines to define a system using zones and conduits:\n\n- Break the system into __Zones__.\n    - \"Zones are groupings of logical or physical assets that share common security requirements\" (ISA 62443-3-2).\n    - They usually have similar security capabilities (by using the same operating systems or network tools, for example). \n    - They pose the same risks of compromise, or the same possibility and consequences of security breach. \n    - They handle the same type of data (confidential or classified information).\n        - Or enable the same level of action in terms of importance and criticality.\n\n- Identify and design __Conduits__.\n    - Conduits are channels between zones.\n    - Conduits must block all non-essential communication between zones and across the boundaries of zones.\n\n- When analyzing conduits, consider all types of data transfer that is enabled between zones (and not only data transfer through typical networks).\n    - For example, consider data transfer __through USB devices__, such as flash memories and external hard drives.\n\n- Apply the concept of __'defense in depth'__ by designing several layers of security around zones.\n    - Use DMZs, Firewalls, VPNs, and routers to restrict and regulate data flow and ensure data integrity and confidentiality when data is transmitted within or between zones.\n\n- Fully document zones and conduits.\n    - For example, provide details on:\n        - Zone boundaries.\n        - Zone Assets.\n        - Zone risks (threats, possibility of security compromise and consequences).\n        - Zone security capabilities and security objectives.\n        - Acceptable communication protocols and channels within and between the zones (inter- and intra-zone communication).\n        - Zone change management.\n\n Consult the __ISA-62443-3-2 (IEC 62443-3-2)__ standard that introduces the concepts of zone and conduit, and provides more details on this subject.",
    "weakness_title_read_only": "Insufficient Control over Data Flow",
    "weakness_id_read_only": "P753",
    "weakness": "1f0959bb-0e33-401b-a7da-6b831553a405",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "architecture-design",
    "created": "2015-02-04T17:20:28.473000-05:00",
    "last_updated": "2021-06-25T14:47:52.503000-04:00",
    "custom": "False",
    "rules": "a5ca3310-459c-488a-8c4f-65d8f794a4e4",
    "rules_read_only": "A1089"
  },
  {
    "countermeasure_id": "T357",
    "universal_id": "ca6e5d26-6edd-436f-ac38-bfb236d3ab24",
    "countermeasure_name": "Review and verify the design of security zones",
    "countermeasure_solution": "Follow these guidelines to verify the design of security zones:\n\n- Verify that zones and conduits are properly defined.\n\n- Verify that zones and conduits are properly documented.\n    - The documentation must provide sufficient detail on:\n        - Zone boundaries\n        - Zone assets\n        - Zone risks (threats, possibility of security compromise and consequences)\n        - Zone security capabilities and security objectives\n        - Acceptable communication protocols and channels within and between the zones (inter- and intra-zone communication)\n        - Zone change management.\n\n- Verify that defined conduits are capable of blocking all non-essential communication between zones and across the boundaries of zones.\n    - The use of proxies, firewalls, routers, and other sorts of boundary protections devices must be analyzed and documented.\n\n- Verify that the design distinguishes between corporate networks, public networks, and the control system's network.\n\n- Verify that all types of inter-zone data transfers are regulated and limited (and not only data transfer through typical networks).\n    - Examples include data transfer __through USB devices__, such as flash memory and external hard drives.\n\n- Verify that the concept of __'defense in depth'__ is incorporated into the design by building several layers of security around zones and for the communication channels.",
    "weakness_title_read_only": "Insufficient Control over Data Flow",
    "weakness_id_read_only": "P753",
    "weakness": "1f0959bb-0e33-401b-a7da-6b831553a405",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2015-02-05T16:33:44.027000-05:00",
    "last_updated": "2021-06-25T14:47:53.191000-04:00",
    "custom": "False",
    "rules": "a5ca3310-459c-488a-8c4f-65d8f794a4e4",
    "rules_read_only": "A1089"
  },
  {
    "countermeasure_id": "T360",
    "universal_id": "8b9b48e7-aba1-407b-9960-1f236ec1cb0e",
    "countermeasure_name": "Partition the application in a way that facilitates adoption of a zoning model",
    "countermeasure_solution": "Use the following guidelines to design an application so that it can better adopt a zoning model:\n\nConsider the zones and conduits that are defined for the system when designing the application, data storage, and services.\n\nThe partitioning may involve running on different computers, using different CPUs, using different databases, using different networks (and ports), using different operating systems, and so on for various components of the application when they are in different partitions, such as safety system, process control system and operators workstation.",
    "weakness_title_read_only": "Insufficient Control over Data Flow",
    "weakness_id_read_only": "P753",
    "weakness": "1f0959bb-0e33-401b-a7da-6b831553a405",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "architecture-design",
    "created": "2015-02-05T17:08:43.539000-05:00",
    "last_updated": "2022-03-18T11:55:31.947000-04:00",
    "custom": "False",
    "rules": "a5ca3310-459c-488a-8c4f-65d8f794a4e4;be965488-96da-4440-9541-f0f926250d70 AND 4fd90244-5770-4b68-88a7-9445cca26ec8",
    "rules_read_only": "A1089;A1075 AND A1077"
  },
  {
    "countermeasure_id": "T363",
    "universal_id": "56a09da9-5b0c-4db9-9319-6141f7263a8e",
    "countermeasure_name": "Design a priority scheme for application services and operations",
    "countermeasure_solution": "Define a priority scheme for the application's processes, operations, and services: \n\n- Classify various categories of system processes based on their importance, such as distinguishing between the processes related to:\n\n    - Emergency and safety.\n    - Monitoring (such as virus scanning).\n    - Main functions of the system (especially control systems).\n    - Supervisory and administrative operations.\n\n- Define a priority for each type of process.\n\n- Identify the scenarios in which resources may become scarce due to high load, high volume of requests, or attacks.\n \n- Design the application in a way that enables ranking processes, and temporarily disables the low-priority processes, when resources are limited.",
    "weakness_title_read_only": "Denial of Service (DoS)",
    "weakness_id_read_only": "P750",
    "weakness": "04f3a13f-c7ea-4824-bd73-086d61dd30ba",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "architecture-design",
    "created": "2015-02-13T11:22:30.668000-05:00",
    "last_updated": "2021-09-23T15:31:22.771000-04:00",
    "custom": "False",
    "rules": "89a5e903-a2cd-4234-b0ea-714e3da7fee9;be965488-96da-4440-9541-f0f926250d70",
    "rules_read_only": "A1082;A1075"
  },
  {
    "countermeasure_id": "T364",
    "universal_id": "4b2a7525-2cd5-4f47-b5fa-80fe3dfc90a0",
    "countermeasure_name": "Enable secure backup and restore capabilities",
    "countermeasure_solution": "Follow these guidelines to develop or set up secure backup and restore capabilities:\n\n- Decide on the __types of data__ that need to be included in the backups.\n    - Such as user data, system data, and so on.\n\n- Apply the same rules to backup data as the original data.\n    - For example, make sure that confidential data (passwords, credit card numbers and social insurance numbers) in the backups are treated in the same way as the original data.\n\n- Decide on the location of the backup data (usually a server if applicable) and secure the communication channel to the server (use secure protocols such as TLS).\n    - __Authenticate__ the backup server before sending backup data to and loading data from it.\n\n- If system recovery is implemented, restore the system to a __secure state__ after a failure.\n    - Identify the minimum data, system parameters, security parameters, and security patches to achieve this goal.\n\n- Devise a means to __resume or restart backup__ when the process fails.\n    - Because of a power failure, for example.",
    "weakness_title_read_only": "Missing support for backup/restore capabilities or insufficient protection of backup data",
    "weakness_id_read_only": "P754",
    "weakness": "ce40fb80-9c97-457a-9b62-4b589e160907",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "requirements",
    "created": "2015-02-17T16:04:25.757000-05:00",
    "last_updated": "2021-06-25T14:47:41.375000-04:00",
    "custom": "False",
    "rules": "0b07fc15-1e13-4c03-b097-c7e222fc019a;89a5e903-a2cd-4234-b0ea-714e3da7fee9;2ef3b940-05af-4cb9-bfc6-ed2fee4c8d42",
    "rules_read_only": "A718;A1082;A728"
  },
  {
    "countermeasure_id": "T365",
    "universal_id": "25ada97b-5b5d-48db-b4db-a8e948711cca",
    "countermeasure_name": "Verify the security of backing up and restoring procedures",
    "countermeasure_solution": "Follow these guidelines to verify that backup/restore procedures are reliable and secure:\n\n- Create backups with different types of data.\n    - For example, system data, user data, and so on.\n    - Restore the data/system, and test if the system works properly and the data is restored.\n    - This test __fails__ if the system does not work as intended, or the data is not restored.\n \n- Interrupt the backing up process and check if it can be resumed/restarted.\n    - This simulates an uncontrolled abrupt interruption, such as a power failure.\n    - This test __fails__ if the backing up process cannot resume or restart.\n\n- Verify that the same rules are applied to backup data as the original data.\n    - For example, make sure that confidential data in the backups are treated in the same way as the original data (such as passwords, credit card numbers, and social insurance numbers). \n\n- Work with developers to verify that confidential data in transit is only sent over a secure communication channel.\n    - For example, use the TLS protocol to send data securely.\n\n- Work with developers to verify that the backup/restore server is authenticated before a data transfer.",
    "weakness_title_read_only": "Missing support for backup/restore capabilities or insufficient protection of backup data",
    "weakness_id_read_only": "P754",
    "weakness": "ce40fb80-9c97-457a-9b62-4b589e160907",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2015-02-18T13:14:55.961000-05:00",
    "last_updated": "2021-06-25T14:47:41.314000-04:00",
    "custom": "False",
    "rules": "0b07fc15-1e13-4c03-b097-c7e222fc019a;89a5e903-a2cd-4234-b0ea-714e3da7fee9;2ef3b940-05af-4cb9-bfc6-ed2fee4c8d42",
    "rules_read_only": "A718;A1082;A728"
  },
  {
    "countermeasure_id": "T367",
    "universal_id": "e7f63db4-af32-462f-a2fd-fdd6b19e504d",
    "countermeasure_name": "Mitigate the security risks of power cut and power supply switch",
    "countermeasure_solution": "Follow these steps to mitigate the security risks of **power cut** and **power supply switch**:\n\n- Identify the features that must be available in the event of a power cut or main power supply failure that need switching to a **secondary uninterruptible power supply**, such as UPS.\n- In particular, pay attention to the **security-related functions** that enable or disable other capabilities of the system.\n- Define a **degraded mode**, and list, decide on, and review the characteristics of the system in that mode.\n- Design (and develop) those features/functions, in a way that they are not hindered by the power being cut and switched to a secondary power supply.\n- Employ proper **shields and conduits** to physically protect external and internal power cabling and power sources of such systems.\n- Consider using **redundant power cabling** paths with a reasonable distance.\n- Consider employing automatic **voltage monitors** to detect and mitigate disruptions as soon as possible.",
    "weakness_title_read_only": "Blocking of emergency actions or essential functions of a system",
    "weakness_id_read_only": "P748",
    "weakness": "935f97e0-7ef1-483d-b7bd-3b4411cb526c",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "architecture-design",
    "created": "2015-02-19T13:26:17.697000-05:00",
    "last_updated": "2022-03-18T11:53:28.452000-04:00",
    "custom": "False",
    "rules": "89a5e903-a2cd-4234-b0ea-714e3da7fee9",
    "rules_read_only": "A1082"
  },
  {
    "countermeasure_id": "T368",
    "universal_id": "dd0eea15-c0b2-4805-a7b2-4d6e862e413b",
    "countermeasure_name": "Test system/application security in the event of a power cut or power supply switch",
    "countermeasure_solution": "Take these steps to test proper behavior of the system in the event of a power cut or power supply switch:\n\n1. Identify the functions that must be available during a power cut or power supply switch to a secondary supply.\n\n2. Test those functions through simulating a power cut and power supply switch.\n    - This test __fails__ if the functions become unavailable or security measures are compromised.\n\n3. Test the security measures separately for ordinary functions.\n    - Test if the transition to a degraded mode allows bypassing those security measures.\n        - In the case of a power cut and switch, for example.\n    - This test __fails__ if a degraded mode bypasses security measures.\n\n4. Verify that power sources and cables are physically protected using tamper-proof shields and conduits.\n    - This test __fails__ if power sources and cables are not properly protected.",
    "weakness_title_read_only": "Blocking of emergency actions or essential functions of a system",
    "weakness_id_read_only": "P748",
    "weakness": "935f97e0-7ef1-483d-b7bd-3b4411cb526c",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2015-02-19T13:29:59.399000-05:00",
    "last_updated": "2022-03-18T11:54:02.500000-04:00",
    "custom": "False",
    "rules": "89a5e903-a2cd-4234-b0ea-714e3da7fee9",
    "rules_read_only": "A1082"
  },
  {
    "countermeasure_id": "T370",
    "universal_id": "61aaffa5-8fbb-49b3-9547-39832addf943",
    "countermeasure_name": "Follow best practices for using third-party software libraries/modules and open source/COTS components",
    "countermeasure_solution": "Use the following guidelines to mitigate security risks and integrate third-party and commercial off the shelf (COTS) hardware or software components and solutions:\n\n###Vendor\n\n- When choosing a third-party vendor, consider their vulnerability footprint.\n- Wherever possible, use an approved existing third-party vendor instead of a new one.\n- Always review the security bulletins that vendors publish for their products, and follow their recommendations.\n\n###Components\n\n- __Do not use components with known vulnerabilities__.\n- Acquire components from reputable and reliable sources, check firmware signatures, or verify signed file hashes (digital signatures) to make sure the hardware and software are not modified.\n- Conduct risk assessments and threat modeling (architecture review) for all solutions involving third-party components.\n- Follow the principle of least privilege in providing the third-party components with access to your resources.\n- Monitor (log and audit) the communication of components in isolation to make sure that they do not exhibit suspicious behavior.\n- Follow any upgrade recommendations for newer versions, especially when a security flaw is discovered and reported, and only update from known sources after you check the software/firmware signature.\n- Securely configure third-party components, avoid using pre-configured defaults, and disable all unnecessary accounts and features. This includes unused storage capacities, sensors, communication ports, transmitters, emailing capabilities, and messaging capabilities.\n- Create a list of all components that includes the component ID, vendor, revision level, capabilities, and security risks. Frequently update this list.\n- Ensure each software component is still actively maintained and has not reached end of life. This should include new vulnerabilities found in the software being remediated.\n- Determine a plan of action for each software component that is no longer being maintained or will not be available in the near future.\n\n### Open Source Software Components:\n\nIn addition to the above points, perform the following steps when using open source software:\n\n- Check the licensing of the open source software to determine its proper use.\n- Use well-maintained code from master branches (as opposed to isolated forks).\n- Use verification techniques (e.g., SAST and DAST tools) to ensure that included code is at least as secure as code developed locally. \n- Monitor the components of the software against databases of known vulnerabilities continuously as a new vulnerability in existing code may be reported at any time. \n\n###Integration\n\nIf you are integrating third-party services into your application, follow these steps:\n\n- Authenticate the third-party services and use only secure channels for communication.\n- Securely remove integrations that are no longer needed.\n\n__Note:__ There are some methods for detecting vulnerable software libraries in different platforms, such as Node. Refer to the following Additional Requirements of this countermeasure for more information: \"Detect vulnerable JavaScript libraries using a scanner\".\n\nRef: Based on NIST 800-53 requirements.",
    "weakness_title_read_only": "Lack of control over third-party hardware or software components",
    "weakness_id_read_only": "P755",
    "weakness": "65a71c03-6460-4189-9a90-76ad3d1f21e1",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "architecture-design",
    "created": "2015-02-23T17:41:52.037000-05:00",
    "last_updated": "2023-05-23T09:27:51.648000-04:00",
    "custom": "False",
    "rules": "9df8c510-ee65-49b4-ae61-deff6ea425d6;332d0463-71cc-413a-a7c2-5e4c43643b7a;02b7767a-2ae7-4de9-a212-8fef1b55fada;eb5aba31-943f-4f34-a839-24bca9fcec51",
    "rules_read_only": "A1084;A1102;A1157;A1358"
  },
  {
    "countermeasure_id": "T371",
    "universal_id": "87b42fae-1cb8-485a-a18c-6167d67d3ac8",
    "countermeasure_name": "Provide unified and manageable interfaces for security settings and configuration parameters",
    "countermeasure_solution": " - Design and develop unified and manageable interfaces to security settings and configuration parameters.\n    - For many systems, it is helpful to provide the capability to generate a report, listing all installed components and their active and disabled features and settings.\n\n- The following are examples of security settings:\n    - Settings for file, directory, and account permissions.\n    - Registry settings.\n    - Functions, ports, protocols, services, and remote connection settings.\n\n- For specific technologies and platforms, there are common secure configurations such as United States Government Configuration Baseline (USGCB), which are established, recognized, and standardized benchmarks that improve secure configuration settings.\n    - Implementing such standard baselines based on the system requirements is recommended.\n\n- Implement functionalities that allow authorized administrators to verify the integrity of security-relevant configurations and make sure they have not been tampered with. Refer to additional requirements of [T338](/library/tasks/T338) for more information about administrative interface settings.\n\n- Make sure that all hardware and devices do not have any unprotected configuration interfaces, and that the only available option for the user is factory reset.",
    "weakness_title_read_only": "Lack of system transparency and control over configuration parameters",
    "weakness_id_read_only": "P756",
    "weakness": "f99dd60e-53d5-4591-ae7b-05560f434fd9",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "requirements",
    "created": "2015-02-24T16:41:42.185000-05:00",
    "last_updated": "2023-04-21T16:23:21.347000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T373",
    "universal_id": "13fa45fb-776b-41bc-b4d0-613ac1ff469e",
    "countermeasure_name": "Design and regulate access to unauthenticated parts of the application",
    "countermeasure_solution": "Follow these guidelines to identify, specify and regulate access to unauthenticated parts of the application (an unauthenticated, or authentication-free, part of an application consists of all the resources in the application, such as pages and services for which authentication is not necessary):\n\n- Create a white-list of services, pages, and directories that are accessible to the public.\n\n- Make sure that the items on the list are clearly specified as this list will be used later for authentication and authorization purposes.\n\n- Consider using light-weight technologies for those parts.\n    - For example, simple HTML pages.\n\n- Consider moving the non-authenticated parts of the application to another server (which may be subject to denial of service attacks, and usually receive a higher number of requests).\n    - This may involve changes to the design of the application.",
    "weakness_title_read_only": "Denial of Service (DoS)",
    "weakness_id_read_only": "P750",
    "weakness": "04f3a13f-c7ea-4824-bd73-086d61dd30ba",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "architecture-design",
    "created": "2015-03-10T14:16:36.582000-04:00",
    "last_updated": "2021-09-22T17:22:59.634000-04:00",
    "custom": "False",
    "rules": "2058e370-15ea-438f-9dfe-33bbba20751d AND 0b07fc15-1e13-4c03-b097-c7e222fc019a AND c942552c-0d31-41c5-bba7-795ba0e8d88d",
    "rules_read_only": "A45 AND A718 AND A736"
  },
  {
    "countermeasure_id": "T374",
    "universal_id": "e6b21932-a103-40a8-a7db-d91c08790050",
    "countermeasure_name": "Offload HTTP request handling to dedicated modules",
    "countermeasure_solution": "Follow these guidelines to protect your HTTP server against external attacks:\n\n1. Offload parts of the request handling processes onto the operating system if supported.\n    - Some operating systems provide the web server with specific optimization capabilities for a listening socket.\n    - For example, not sending HTTP requests to the server until the entire request is received.\n\n2. Configure available server-specific modules to protect the HTTP server against resource exhaustion attacks.\n    - For example, firewall, QoS, or security modules can restrict certain client behaviors and thereby mitigate risk of weaknesses that lead to denial of service (DoS) problems.",
    "weakness_title_read_only": "Uncontrolled Resource Consumption (Resource Exhaustion)",
    "weakness_id_read_only": "P293",
    "weakness": "1bee9747-5d60-43f1-8e0f-e261388a5c25",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "requirements",
    "created": "2015-03-16T16:19:56.234000-04:00",
    "last_updated": "2022-08-22T14:34:58.025000-04:00",
    "custom": "False",
    "rules": "ed4ba6aa-be7d-4c57-839c-d9c6c9e091c0",
    "rules_read_only": "A195"
  },
  {
    "countermeasure_id": "T375",
    "universal_id": "2efc0974-022e-4ac8-b961-1ec8538cd1d2",
    "countermeasure_name": "Release resources when no longer needed",
    "countermeasure_solution": "Release the following resources properly when you no longer need them:\n\n* Files\n* Network Sockets\n* Database Connections\n* I/O Devices (such as camera, microphone, speaker, or sensor)\n* Memory (for unmanaged languages)\n\n__Note:__ Newer versions of many programming languages introduce the ***with*** statement for ***try*** blocks, which lets you open and close multiple resources easier and with fewer errors. Use this feature for error handling where applicable.",
    "weakness_title_read_only": "Uncontrolled Resource Consumption (Resource Exhaustion)",
    "weakness_id_read_only": "P293",
    "weakness": "1bee9747-5d60-43f1-8e0f-e261388a5c25",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "development",
    "created": "2015-03-23T18:10:00.765000-04:00",
    "last_updated": "2021-06-25T14:47:39.987000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T376",
    "universal_id": "22add058-7941-4929-8925-7de826b4ffc7",
    "countermeasure_name": "Fill out the manufacturer disclosure statement for the medical device security (MDS2) form",
    "countermeasure_solution": "Follow these guidelines to correctly fill out manufacturer disclosure statements for medical device security (MDS2) forms:\n\n__Device Description__:\n\n    - Fill out the device description section according to the form's guidelines.\n    - There is nothing in this section that is affected by the completion of security tasks. \n \n__Sections A-D__:\n    \n    - Answers to questions in Sections A-D (Management of Private Data) depend on the project settings, and the device/application capabilities.\n    - These parameters are not closely related to or affected by the completion of security tasks, and these sections must be directly filled out.\n\n__Security Capabilities__:\n\n    - Many of the answers in this section are affected by performing the project's security tasks.\n    - Use the report generated for MDS2 and complete the tasks and the MDS2 requirements for the tasks.\n    - The questions related to those tasks are specified as Additional Requirements for those countermeasures.\n    - A few additional notes follow here.",
    "weakness_title_read_only": "Missing clear specification of security assumptions and capabilities",
    "weakness_id_read_only": "P757",
    "weakness": "ca68c5cc-8ee9-4bc5-bb7e-7ac25bc9ea5e",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "requirements",
    "created": "2015-04-09T15:37:55.099000-04:00",
    "last_updated": "2022-09-01T10:21:11.753000-04:00",
    "custom": "False",
    "rules": "fecb2e4d-8bf4-4b9f-a23a-29cb867ad995 AND c942552c-0d31-41c5-bba7-795ba0e8d88d",
    "rules_read_only": "A1083 AND A736"
  },
  {
    "countermeasure_id": "T377",
    "universal_id": "285acc5f-78ed-4d86-8807-f792abdc4ff3",
    "countermeasure_name": "De-identify protected health information before using it for a secondary purpose",
    "countermeasure_solution": "De-identify__ health data (any [Protected Health Information (PHI)](/library/glossary/G6/)) when the data is used for a secondary purpose. A secondary purpose is defined by a purpose that is different from the initial purpose for which the data was collected. \n \nThe main purpose of data collection is usually determined by a usage agreement. For example, if the usage agreement specifies medical treatment as the primary purpose of data collection, any medical research will be a secondary purpose. \n \nFor more information about the methods of de-identification, see [Guidance Regarding Methods for De-identification of Protected Health Information] \n\n(http://www.hhs.gov/ocr/privacy/hipaa/understanding/coveredentities/De-identification/guidance.html).",
    "weakness_title_read_only": "Privacy Violation",
    "weakness_id_read_only": "P257",
    "weakness": "b0418f1b-bf92-45ba-845f-abfb9735f1cf",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "requirements",
    "created": "2015-04-15T11:56:05.321000-04:00",
    "last_updated": "2022-01-17T21:00:08.886000-05:00",
    "custom": "False",
    "rules": "0fc18c4b-67a5-4845-a42c-01d47a02ef62",
    "rules_read_only": "A744"
  },
  {
    "countermeasure_id": "T378",
    "universal_id": "60c73a1e-ff93-4f8e-b123-555867e87892",
    "countermeasure_name": "Authorize every request for data objects",
    "countermeasure_solution": "Use the following guidelines to authorize data access requests made by a user:\n\n- Identify parts of the code or pages that enable users to access data objects.\n    - This includes database rows, files, or other data objects.\n\n- Verify that the authorization mechanism takes the requested object into account (checks required permissions), as opposed to merely authorizing the user to access the interface (such as the page).\n\n- Make sure that there are no alternative and less secure access paths to objects and files.\n\n- Provide an error message or refuse to serve a file when a web server encounters a file type that it does not know how to handle. \n    - This can happen if a server receives a request for an unknown file type.\n    - For example, if an attacker has already attacked the server with a directory traversal, this prevents them from trying to download or execute unauthorized content, such as password files from the application server.\n\n__Note__: It is not enough to authorize access to a page, such as with the web interface, when a user can manually manipulate the object references. Additionally, your application must properly authorize each access request.\n\nFor example, suppose that ___User A___ is authorized to see a page that shows their account information:\n\n `https://somedomain.com/showmyaccount?id=52`\n\n ___User A___ must not be allowed to see ___User B___'s information by using the link below, even if ___User A___ has logged into the system as a valid user:\n\n `https://somedomain.com/showmyaccount?id=53`",
    "weakness_title_read_only": "Access Control Bypass Through User-Controlled Keys",
    "weakness_id_read_only": "P524",
    "weakness": "e233b5bf-9e2c-40a0-ab76-da229c6af9e1",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "development",
    "created": "2015-04-22T14:04:05.405000-04:00",
    "last_updated": "2021-06-25T14:47:48.038000-04:00",
    "custom": "False",
    "rules": "2ef3b940-05af-4cb9-bfc6-ed2fee4c8d42;46594035-13ca-43ce-9db9-4570bb2a65c3;89a5e903-a2cd-4234-b0ea-714e3da7fee9;2058e370-15ea-438f-9dfe-33bbba20751d;a0c61b9c-b4f4-4652-b8f3-0f80f1e1e172",
    "rules_read_only": "A728;A37;A1082;A45;A731"
  },
  {
    "countermeasure_id": "T379",
    "universal_id": "4d5de4f9-fe73-44f5-9391-6181188a5000",
    "countermeasure_name": "Provide sufficient documentation for security-related features",
    "countermeasure_solution": "Prepare security guidelines as part of the product and in other traditional forms. For example, a part of the product could be warning messages that pop up when the features are going to be used, and other forms of security guidelines are booklets and manuals.\n\nFollow these guidelines:\n\n- Create security guides that tell __the users__ how to securely use or configure the device/software.\n- If the software/module is being used in another system, fully document the security parameters, capabilities and settings.\n- Seek and fill out standard security statement forms (such as MDS2 form) to specify the security and privacy features of your product.\n\nInclude these topics in security documents where applicable:\n\n- Privacy policies and types of data that are handled.\n- Authentication and authorization mechanisms.\n- Security features for all services, protocols, and ports that are in use.\n- Data protection methods (data in transit and data at rest).\n- Emergency procedures (break-glass features).\n- Backup/restore, logging and auditing features.\n- Communication with other software/devices including removable devices (for example, external hard drives, and flash memory).\n- Physical security (if applicable).\n- Virus and malware protection mechanisms.\n- Device sanitization (for example, instructions on how to permanently delete personal data).",
    "weakness_title_read_only": "Missing clear specification of security assumptions and capabilities",
    "weakness_id_read_only": "P757",
    "weakness": "ca68c5cc-8ee9-4bc5-bb7e-7ac25bc9ea5e",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "requirements",
    "created": "2015-04-23T16:54:41.215000-04:00",
    "last_updated": "2023-03-17T16:54:05.337000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T380",
    "universal_id": "03ca256b-6b38-42ac-b69d-8c6399b95390",
    "countermeasure_name": "Verify that security documents are complete",
    "countermeasure_solution": "Verify that security features and parameters are adequately documented in a way that each of the following people can easily use the information:\n\n1. Users\n2. Other developers that use the module/software in their products (if applicable) \n3. Security analysts that perform risk assessment on the product (if applicable)\n\nIn particular, verify that security documents contain these items (if applicable):\n\n- Instructions on how to securely configure the device/software.\n- Security parameters and settings if the module is used in another product.\n- Standard security statement forms (such as MDS2 form) to describe the security and privacy features of the product.\n\nVerify that these topics are covered in the security documents (if applicable):\n\n- Privacy policies and types of data that are handled.\n- Authentication and authorization mechanisms.\n- Data protection methods (data in transit and data at rest).\n- Emergency procedures (break-glass features).\n- Backup/restore, logging and auditing features.\n- Communication with other software/devices including removable devices (such as external hard drives, and flash memories).\n- Physical security (if applicable).\n- Virus and malware protection mechanisms.\n- Device sanitization (such as instructions on how to permanently delete personal data).",
    "weakness_title_read_only": "Missing clear specification of security assumptions and capabilities",
    "weakness_id_read_only": "P757",
    "weakness": "ca68c5cc-8ee9-4bc5-bb7e-7ac25bc9ea5e",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2015-04-23T17:11:25.662000-04:00",
    "last_updated": "2021-06-25T14:47:59.558000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T381",
    "universal_id": "b0b071b7-6ba3-4b2d-88e1-9fc138fe917e",
    "countermeasure_name": "Test break-glass procedures",
    "countermeasure_solution": "Test that break-glass procedures are well-designed and efficient. Complete a break-glass procedure and check the following items: \n\n- Check that warnings are shown at the moment of break-glass access and users are asked to acknowledge their intention (if possible).\n- Analyze audit logs and check that all the details of the break-glass procedures are logged.\n- Check the emergency accounts after completion of the procedure and make sure they are removed or disabled and the system is restored to the normal operation.\n\nWork with designers and system analysts to verify that none of the emergency functions that need break-glass access mode are overlooked.\n\nThis test __fails__ if any functions are overlooked.",
    "weakness_title_read_only": "Blocking of emergency actions or essential functions of a system",
    "weakness_id_read_only": "P748",
    "weakness": "935f97e0-7ef1-483d-b7bd-3b4411cb526c",
    "tags": "",
    "countermeasure_priority": "3",
    "phase": "testing",
    "created": "2015-04-24T16:43:16.815000-04:00",
    "last_updated": "2022-03-18T11:54:16.037000-04:00",
    "custom": "False",
    "rules": "89a5e903-a2cd-4234-b0ea-714e3da7fee9",
    "rules_read_only": "A1082"
  },
  {
    "countermeasure_id": "T382",
    "universal_id": "9496500e-d2e6-423b-8e27-c734b5b6ff46",
    "countermeasure_name": "Manage the visibility of actions and information in the Android notification area",
    "countermeasure_solution": "Since the notifications are accessible even on a locked phone, it is important to hide private information and disable sensitive actions in the notification area as described here:\n\n- Design a public version of notifications and exclude any private information or sensitive actions from that version.\n    - Use `Notification.publicVersion` for this purpose.\n\n- Use `Notification.Builder.setVisibility()` to set the visibility of sensitive actions and private information to `VISIBILITY_PRIVATE`.\n    - By default, the visibility is `VISIBILITY_PUBLIC` so the content will be shown on the lock screen.\n\n___Note:___ The notifications have public and private versions. The public version will be displayed on a secure lock screen and can be seen and used by anyone (this may include a customized action, such as responding to a message). You do not want an unauthorized person to reply to messages when the phone is locked. The private part is only shown once the user has signed into the device (such as by using a pattern or password).",
    "weakness_title_read_only": "Missing Authentication for Critical Functions",
    "weakness_id_read_only": "P203",
    "weakness": "1fd1f018-67e6-45b9-9ef4-4a7af3fd3ed6",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "development",
    "created": "2015-05-19T14:26:28.786000-04:00",
    "last_updated": "2021-06-25T14:47:37.711000-04:00",
    "custom": "False",
    "rules": "64e2a4e5-efe8-4a19-8b5f-b835d963a40c",
    "rules_read_only": "A715"
  },
  {
    "countermeasure_id": "T383",
    "universal_id": "774e6be8-f579-4ca4-b1b6-d8557dd1e48e",
    "countermeasure_name": "Test that access to the items on the Android lock screen is adequately restricted",
    "countermeasure_solution": "Follow these guidelines to test that the notification area only shows public information and enables publicly accessible actions:\n \n- Work with developers or application designers to figure out the types of information shown in the notification area.\n\n- Create situations in which those notifications are shown.\n\n- Test if any private information is shown on the lock screen.\n    - This test __fails__ if any private information is shown.\n\n- Test that custom critical actions are not enabled in the locked mode.\n    - For example, it should not be possible to reply to messages in locked mode.",
    "weakness_title_read_only": "Missing Authentication for Critical Functions",
    "weakness_id_read_only": "P203",
    "weakness": "1fd1f018-67e6-45b9-9ef4-4a7af3fd3ed6",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2015-05-19T17:23:55.637000-04:00",
    "last_updated": "2021-06-25T14:47:38.166000-04:00",
    "custom": "False",
    "rules": "64e2a4e5-efe8-4a19-8b5f-b835d963a40c",
    "rules_read_only": "A715"
  },
  {
    "countermeasure_id": "T384",
    "universal_id": "04c9aca5-c4cf-4840-9232-7283884e5b9f",
    "countermeasure_name": "Verify that UIWebView is securely used (iOS)",
    "countermeasure_solution": "Follow these instructions to verify that iOS UIWebView is securely used:\n\n- Verify that your app uses **Safari or an external application** to show the requested content if you do not need to display the content inside the application.\n\n- Verify that **HTTPS** is used for all external requests and HTTPS **certificate validation** is enforced.\n    - This test __fails__ if HTTPS and HTTPS certificate validation is not enforced.\n\n- Verify that the baseURL is set to `'about:blank'` when accessing a local file if the file does not need to access other local files.\n    - This test __fails__ if the baseURL is not set appropriately.\n\n- Work with developers to verify that they use the ***NSData*** class (`dataWithContentsOfURL` method) to review the remote content, and restrict or sanitize received data.\n    - Verify that this method is not used to request network-based URLs.\n    - This test __fails__ if remote content is not restricted or sanitized.\n\n- Work with developers to verify that they **whitelist target URLs** and compare requests to a specific list of addresses when user input is used to construct the target URL.",
    "weakness_title_read_only": "Use of WebView without sufficient protection",
    "weakness_id_read_only": "P761",
    "weakness": "6d3d31da-287e-4843-930e-700106ab552f",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2015-05-26T11:44:34.214000-04:00",
    "last_updated": "2021-06-25T14:47:50.264000-04:00",
    "custom": "False",
    "rules": "3657f540-0b47-49b3-9a4d-69412ec692d6",
    "rules_read_only": "A714"
  },
  {
    "countermeasure_id": "T394",
    "universal_id": "06b09c89-c1de-4deb-b62d-0d2fdd6f8e97",
    "countermeasure_name": "Secure one-time passwords (OTP)",
    "countermeasure_solution": "When generating one-time passwords (OTP) follow these guidelines to ensure their security:\n\n- Use a __secure random number generator__ for making OTPs.\n    - Consult the documentation for the random function that you use.\n    - The output of some random number generators is predictable if the previous _N_ random numbers generated are known.\n\n- Use a __secure hash function__ that is not reversible (for example, SHA and not MD5).\n\n- Restrict the __validity period__ of the OTP to the minimum necessary period.\n    - For example, one hour or a day.\n\n- Generate a __salt__ for each password, and keep the salt in a database.\n    - The salt could be stored in a plain-text format in the database, but it must be a different value for each OTP, even if the OTPs are the same.\n    - The value of the password stored in the database is, for example, the hash of the concatenation of the password and the salt value.\n\n- Use __longer passwords__, for example 8-16 character passwords.\n\nWhen transmitting OTPs:\n\n- Where applicable, __use secure channels__ for sending OTPs.\n    - For example, use __TLS__ if you are sending the OTP through an Internet connection.",
    "weakness_title_read_only": "Insecure one-time passwords (OTP)",
    "weakness_id_read_only": "P764",
    "weakness": "b70fe421-a6e1-48ea-846d-54c40c83da4b",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "requirements",
    "created": "2015-08-21T14:07:27.722000-04:00",
    "last_updated": "2021-06-25T14:47:44.426000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T395",
    "universal_id": "7dfafef1-c903-4d18-94b3-1be461a1edcd",
    "countermeasure_name": "Verify that one-time passwords (OTP) are securely used",
    "countermeasure_solution": "Verify that the following requirements are met for one-time-passwords (OTPs):\n\n- Verify that a __secure random number generator__ is used. \n- Verify that a __secure hash function__ is used (such as SHA, and not MD5).\n- Verify that the __validity period__ of the OTP is set to the minimum period necessary.\n- Verify that a __salt__ is used in password generation.\n- Verify that the password is __long__ enough (such as 8 characters or more).\n- Verify that __secure channels __ are used for sending OTPs (such as TLS, where possible based on the application/medium).",
    "weakness_title_read_only": "Insecure one-time passwords (OTP)",
    "weakness_id_read_only": "P764",
    "weakness": "b70fe421-a6e1-48ea-846d-54c40c83da4b",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2015-08-21T17:02:08.415000-04:00",
    "last_updated": "2021-06-25T14:47:44.409000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T396",
    "universal_id": "43f7ba56-c5ac-484c-866b-bd34cfe39731",
    "countermeasure_name": "Set maximum limits for authorized transactions",
    "countermeasure_solution": "Set limits for the maximum allowed value of transactions based on the type of account/transaction and the results of risk analysis.\n\n- Set limits especially for Internet transactions and online payment services.\n- The limit could be set on each particular transaction, or the total amount of transactions in a set period of time (for each account).\n- Inform the users of the limits.",
    "weakness_title_read_only": "Inadequate Transaction-Specific Authorization and Transaction Monitoring",
    "weakness_id_read_only": "P698",
    "weakness": "021dfcf0-1ccd-4c84-b3bc-12674760b29e",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "requirements",
    "created": "2015-09-08T16:35:35.083000-04:00",
    "last_updated": "2021-06-25T14:47:45.184000-04:00",
    "custom": "False",
    "rules": "e484539f-f91c-46ad-81c0-2f03be462663",
    "rules_read_only": "A759"
  },
  {
    "countermeasure_id": "T397",
    "universal_id": "b190123a-5ec7-431a-ac08-2e7c1538cbed",
    "countermeasure_name": "Test the limits of authorized transactions",
    "countermeasure_solution": "Follow these steps to test if maximum limits are enforced on various types of transactions:\n\n- Create a list of transaction types and account types.\n- Determine the limits set on those transactions and accounts (cumulative or per-transaction limits).\n- Try to perform transactions above those limits.\n\nThis test __fails__ if any of the transactions is successfully performed.\n\nAdditionally, check that users are informed about the total amount of authorized transactions.",
    "weakness_title_read_only": "Inadequate Transaction-Specific Authorization and Transaction Monitoring",
    "weakness_id_read_only": "P698",
    "weakness": "021dfcf0-1ccd-4c84-b3bc-12674760b29e",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2015-09-08T16:51:27.786000-04:00",
    "last_updated": "2021-06-25T14:47:48.511000-04:00",
    "custom": "False",
    "rules": "e484539f-f91c-46ad-81c0-2f03be462663",
    "rules_read_only": "A759"
  },
  {
    "countermeasure_id": "T399",
    "universal_id": "64573f9f-293f-48b4-9a24-6acfb47dcff6",
    "countermeasure_name": "Separate delegated payment pages from the rest of the application",
    "countermeasure_solution": "When a user requests to make a payment that is completed through another payment service provider, display a message, in a new window for example. This message must demonstrate that the user is transferred to another domain for payment services, and a separate service provider handles the online payment.",
    "weakness_title_read_only": "Insufficient separation of payment service provider pages from the rest of the application",
    "weakness_id_read_only": "P765",
    "weakness": "62d4d763-7741-4d27-b126-e3901998a857",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "development",
    "created": "2015-09-09T11:49:31.115000-04:00",
    "last_updated": "2021-06-25T14:47:47.353000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T400",
    "universal_id": "e3237382-4a13-4ccd-b9bd-2c852154bcb8",
    "countermeasure_name": "Test that delegated payment pages are distinguished from the rest of the application",
    "countermeasure_solution": "Use the following guidelines for testing that payment pages can be distinguished from other parts of the application:\n\n- Complete the business process to the point that you need to make a payment.\n    - For example, in an online shop, proceed to check-out to make the final payment.\n    - If the payment is facilitated by another payment service provider test that the interface is adequately distinguished from the rest of the application.\n\nFor example:\n\n- A new window is opened.\n- Users are informed of being transferred to another domain, the domain name is distinct, and so on.\n\nThis test __fails__ if users are not clearly informed of a payment service handover.",
    "weakness_title_read_only": "Insufficient separation of payment service provider pages from the rest of the application",
    "weakness_id_read_only": "P765",
    "weakness": "62d4d763-7741-4d27-b126-e3901998a857",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2015-09-09T11:53:39.726000-04:00",
    "last_updated": "2021-06-25T14:47:45.578000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T401",
    "universal_id": "4bde2600-8afc-4c3f-b2e3-2625f200b6b8",
    "countermeasure_name": "Provide users with sufficient information about payments and balances",
    "countermeasure_solution": "Use the following guidelines to provide sufficient information about completed transactions and payments to users through a secure channel:\n\n- Use a __secure channel__.\n    - For example, use a page accessible only over HTTPS.\n\n- Show completed transactions/payments, account balances, date/time of transactions and any relevant information that allows users to check the validity of payments.\n\n- Do not send unencrypted sensitive data over non-secure channels.\n    - This includes short messages such as __SMS__ or  __email__.\n\n- Provide users with a __near real-time__ facility that allows them to check the __latest status__ of balances and payments.\n    - The system should normally be accessible at any time (except when other restrictions apply).",
    "weakness_title_read_only": "Failure to provide users with sufficient transaction and account information",
    "weakness_id_read_only": "P766",
    "weakness": "91bf61be-ce32-46ba-a71b-bdf2bc2a5df0",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "requirements",
    "created": "2015-09-10T15:24:41.707000-04:00",
    "last_updated": "2021-06-25T14:47:58.726000-04:00",
    "custom": "False",
    "rules": "b27b3da4-7706-4b3c-9fdb-c82cc61b37b6;e484539f-f91c-46ad-81c0-2f03be462663",
    "rules_read_only": "A784;A759"
  },
  {
    "countermeasure_id": "T402",
    "universal_id": "c78af21c-db00-4dc4-a8c2-0b791c984600",
    "countermeasure_name": "Test that information provided about payments and balances is adequate",
    "countermeasure_solution": "Test that users have access to __sufficient information__ about their account balances and payments, through a __secure channel__ (such as HTTPS). In particular, test that:\n\n- Data is provided over a __secure channel__ such as HTTPS.\n\n- Sensitive data is not sent over insecure channels without proper encryption.\n    - Such as __email__ or __SMS__\n\n- Data items have __enough information__ including data and time of transactions, account balances and any relevant items that help the users verify the validity of transactions/payments.\n\n- Users can check the data at any time, with the exception of a reasonable downtime for the system or when other restrictions apply.\n    - The information must reflect the __current status__ of account balances and transactions.",
    "weakness_title_read_only": "Failure to provide users with sufficient transaction and account information",
    "weakness_id_read_only": "P766",
    "weakness": "91bf61be-ce32-46ba-a71b-bdf2bc2a5df0",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2015-09-11T11:55:53.784000-04:00",
    "last_updated": "2021-06-25T14:47:58.670000-04:00",
    "custom": "False",
    "rules": "e484539f-f91c-46ad-81c0-2f03be462663;b27b3da4-7706-4b3c-9fdb-c82cc61b37b6",
    "rules_read_only": "A759;A784"
  },
  {
    "countermeasure_id": "T403",
    "universal_id": "7a840bba-9af1-491e-99d8-b64058a2ed0d",
    "countermeasure_name": "Verify that errors and exceptions are securely handled",
    "countermeasure_solution": "Follow these guidelines to verify that system or user error messages disclose minimum information about the causes of the errors and the internal status of the system:\n\n- Work with developers to verify that a global error handler is used to catch errors or exceptions not explicitly handled by the application. Also, verify that application and server settings are set to return minimum details in the error messages when the errors are not handled by the application or the global handler.\n\n- Work with developers to verify the content of error messages within the application. It is much easier to do this with a class or property file that contains the text and syntax of error messages.\n\n- Test the content of error messages for a number of scenarios. Specifically, test that the messages do not provide internal system details, such as a stack trace, information about directories, or core dump.\n\n- Work with developers, or test, that when a number of reasons have caused the error, the application does not explicitly specify the underlying reason in a way that could be used towards more directed attacks.\n\n- Verify that when more detailed error messages are provided to a specific remote system, the error messages are signed and encrypted.",
    "weakness_title_read_only": "Information Exposure through an Error Message",
    "weakness_id_read_only": "P105",
    "weakness": "44473a31-0885-4e21-bc89-25ccc7dc73e1",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2015-09-17T11:37:24.546000-04:00",
    "last_updated": "2021-06-25T14:47:38.501000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T404",
    "universal_id": "c2343aba-698d-4daa-bacb-414477f102b5",
    "countermeasure_name": "Avoid setting broad paths and domains on session cookies",
    "countermeasure_solution": " - When setting cookies, restrict the path and domain values to the minimum value that is needed.\n\n- Avoid enabling cookies to parent domains and broad paths if it's not needed. For example, if you are setting a cookie for _A.domains.com_, do not set the domain to _domains.com_ because _B.domains.com_ will also have access to those cookies.\n\n- If the request path is '/sales', do not set the path to \"/\", which makes the cookies available to the entire domain rather than a particular directory ('/sales') on the domain.\n\n- Every time that you write a session cookie, you can specify values such as the name, value, as well as path and domain. The domain that is specified should be the same, or a parent of the original domain that the response comes from.\n\n- Avoid setting a broad domain or path.\n    - For example, if we have sent a request to _mydomain.domains.com_, the website can request setting the cookie for _domains.com_.\n    - In this case, the cookie values will be sent along with any requests to _domain.com_, and not only _mydomain.domains.com_.\n    - Therefore, a page on _anotherdomain.domains.com_ will also have access to the cookies (both for reading or modification).\n    - Similarly, if the path is set to \"/\", the cookies are available to the entire domain rather than a particular directory on the domain.",
    "weakness_title_read_only": "Setting broad domains or paths on session cookies",
    "weakness_id_read_only": "P767",
    "weakness": "13e49dd0-f92f-427d-bbb5-87263d0552a0",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "development",
    "created": "2015-10-09T15:52:35.044000-04:00",
    "last_updated": "2021-06-25T14:48:00.863000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T405",
    "universal_id": "0b359f0d-c7b6-4239-bacf-bee4b919741e",
    "countermeasure_name": "Verify that broad paths and domains are not set on session cookies",
    "countermeasure_solution": "Follow these guidelines to verify that the paths and domains of the cookies are not broader than required:\n\n- Find the lines of code that set session cookies.\n\n- Check if a path or domain is specified for the cookies.\n    - If a path or domain is set, verify that the domain and path are not overly broad.\n    - The path and domain must only enable the justifiable paths and domains to access the cookie.\n    - For example, if the domain is _A.domains.com_, the domain must not be set to _domains.com_ without proper justification.\n\nThis test __fails__ if the domain and name are too broad.\n\nYou can also use the browser tools to check the path and domain of cookies (such as Chrome Developers tools).",
    "weakness_title_read_only": "Setting broad domains or paths on session cookies",
    "weakness_id_read_only": "P767",
    "weakness": "13e49dd0-f92f-427d-bbb5-87263d0552a0",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2015-10-09T15:55:45.143000-04:00",
    "last_updated": "2021-06-25T14:48:01.121000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T406",
    "universal_id": "9eb4e7f3-488f-4488-8902-90350fae23cb",
    "countermeasure_name": "Secure symmetric-key authentication",
    "countermeasure_solution": "Follow these guidelines to design and implement (or adopt) a strong symmetric-key authentication scheme:\n\n- Use a unique secret key for each entity that needs to be authenticated.\n\n- Inject the shared secret keys to the entity before the first use and/or power up (such as with a device or application).\n\n- Use strong cryptography to encrypt the shared secret keys in storage.\n\n- Never exchange the shared secret key during authentication.\n    - Instead, send a randomly generated nonce and use a secure cryptographic technique to create a unique verifiable message from the key and the random number.\n    - For example, assume that ___A___ needs to directly authenticate ___B___.\n        - Send a random nonce from ___A___ to ___B___, and let ___B___ run a cryptographic function (___f___) on the nonce using the secret key, and return the result back to ___A___.\n        - ___A___ can verify if the message is what it expected.\n        - For mutual authentication, ___B___ can do the same thing and verify that the result is the same as what is received from ___A___.\n    - This way, both entities will be authenticated to each other.\n\n- The cryptographic function (___f___) mentioned above must be a secure algorithm that creates a verifiable message from the random nonce using the key. Use a secure algorithm, such as Cipher-based Message Authentication Code (CMAC), or Galois Counter Mode (GCM)/Galois Message Authentication Code (GMAC) for this purpose.\n\n- Using access control techniques, restrict access to the secret keys. The secret keys must be available only to a minimum number of users on each system (device). In many cases, the keys must be written once on the device, and could be write-only. In those cases, the device must protect the key against any type of read-out.\n\n- Limit the number of authentication responses to create another layer of defense (based on factors such as IP address), in order to reduce the chance of guessing the shared secret key by numerous authentication attempts. For example, delay responding to authentication requests from a certain device or location.",
    "weakness_title_read_only": "Weak symmetric-key authentication",
    "weakness_id_read_only": "P768",
    "weakness": "add785e9-3c50-4efb-a7b1-e4a1f015d264",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "requirements",
    "created": "2015-10-19T14:25:38.068000-04:00",
    "last_updated": "2021-06-25T14:47:44.526000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T407",
    "universal_id": "cd31a51b-f346-487a-a481-136842f0e7f6",
    "countermeasure_name": "Verify that symmetric-key authentication is secure",
    "countermeasure_solution": "Verify the following items to make sure that the symmetric key authentication mechanism is strong:\n\n- You have a unique secret key for each entity that needs to be authenticated.\n\n- The secret keys are injected to the systems (devices) before the first use and/or power up.\n\n- Strong cryptography is used for encrypting the secret keys in storage.\n\n- The secret keys are not exchanged directly during the authentication process.\n\n- You use a different randomly generated nonce for each authentication session with a random generator that is secure and unpredictable.\n\n- The secret keys are not accessible by non-privileged users and the access is limited to a small set of privileged users or none. If the secret key needs to read-only verify that the device/application disallows any type of read-out.\n\n- The device/application has the means to protect the shared key against extensive authentication requests. For example, brute force and denial or service attacks that attempt to guess the shared secret or occupy the device.",
    "weakness_title_read_only": "Weak symmetric-key authentication",
    "weakness_id_read_only": "P768",
    "weakness": "add785e9-3c50-4efb-a7b1-e4a1f015d264",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2015-10-19T14:36:19.151000-04:00",
    "last_updated": "2021-06-25T14:47:44.539000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T408",
    "universal_id": "448cda7f-efbe-459a-9fdb-3b5b7a9a7d19",
    "countermeasure_name": "Set secure flag on Android Activities with sensitive content",
    "countermeasure_solution": "Use the following guidelines to set the secure flag on sensitive content within Android Activities:\n\n- Set `LayoutParams.FLAG_SECURE` for any Activity that displays sensitive or confidential data (see the How-to for this countermeasure). This will prevent other applications from capturing and recording the Activity's screen content and also prevents taking a screenshot of the Activity.\n\n    If the application goes to the background (and in the recent app list), a blank image is shown instead of the actual screen. \n\n- Override `onActivityStopped` lifecycle method of the app to detect entering background-state and cleanse memory content. Override `onActivityStarted` method to reinitialize the cleansed variables.\n\n  __Note:__ From Android Lollipop (5), a third-party application can request capturing and recording screen content. When users provide consent, this feature will be enabled without requiring any specific permissions. If the users are not aware of the consequences, they may agree with screen capturing, and a malicious process can record the content of the screen and send it over the network.",
    "weakness_title_read_only": "Leak of sensitive data through Android snapshot and screen capture",
    "weakness_id_read_only": "P769",
    "weakness": "8b551d83-a907-4aa0-adbd-81327f35a205",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "development",
    "created": "2015-10-21T13:10:12.621000-04:00",
    "last_updated": "2022-08-22T17:58:45.094000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T409",
    "universal_id": "5185f3ad-4c3b-467a-9e4a-92fe36eb5991",
    "countermeasure_name": "Test that Android Activities with sensitive content set secure flag",
    "countermeasure_solution": "Follow these guidelines to test that Activities with sensitive or confidential data do not enable capturing and making screenshots of the content:\n\n- Identify the Activities with sensitive/confidential data.\n- Install a capturing app on the device that records the screen such as `SideScreen`, or other third party applications.\n- Start recording the screen into a video file.\n- Take a screenshot using the Android device.\n- Send the app into the background by clicking on the home button.\n\nThis test __fails__ if the content is visible in any of the above cases.\n\nAlternatively, you can work with developers to verify that `LayoutParams.FLAG_SECURE` is set for all the Activities that contain sensitive/confidential data.",
    "weakness_title_read_only": "Leak of sensitive data through Android snapshot and screen capture",
    "weakness_id_read_only": "P769",
    "weakness": "8b551d83-a907-4aa0-adbd-81327f35a205",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2015-10-21T13:59:03.347000-04:00",
    "last_updated": "2021-06-25T14:47:50.675000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T410",
    "universal_id": "cf941278-1e35-4aff-89d1-46045953a134",
    "countermeasure_name": "Manage use of Android third-party keyboards with sensitive data",
    "countermeasure_solution": "Use the following guidelines for managing sensitive data with Android third-party keyboards:\n\n- Check the active keyboard whenever sensitive data is entered into an Android device. For example, when entering data into an editable text box.\n\n- If the keyboard is not an established and well-known Android keyboard (in an allowlist), disable the action or show a warning to make the user aware of the risks.\n\nSee the How-to for this countermeasure for more details.",
    "weakness_title_read_only": "Leak of sensitive data through Android third party keyboards",
    "weakness_id_read_only": "P770",
    "weakness": "7f0f15b0-b31a-4499-9fbc-f7100aa7eb5c",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "development",
    "created": "2015-10-26T16:48:08.855000-04:00",
    "last_updated": "2022-09-01T10:23:33.913000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T412",
    "universal_id": "abeccf3e-5b1b-48f6-b3fa-41caf9c6045a",
    "countermeasure_name": "Test that use of Android third-party keyboards is managed",
    "countermeasure_solution": "Use the following guidelines for testing that Android third-party keyboards are managed:\n\n- Identify input boxes that can be used to enter confidential or sensitive data, such as editable text boxes asking for passwords or personal information.\n\n- Install and use a third-party keyboard that is not well-known and is not in your application's whitelist.  Consult developers for the whitelist.\n\n- Depending on the application's policy, if you do not receive a warning that states the risks or the action is not terminated, this test __fails__.",
    "weakness_title_read_only": "Leak of sensitive data through Android third party keyboards",
    "weakness_id_read_only": "P770",
    "weakness": "7f0f15b0-b31a-4499-9fbc-f7100aa7eb5c",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2015-10-27T13:05:55.799000-04:00",
    "last_updated": "2021-06-25T14:47:45.467000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T415",
    "universal_id": "ce187687-9371-4bcc-90c0-b8a718ed3b3e",
    "countermeasure_name": "Develop features to allow verifying the authenticity of the product",
    "countermeasure_solution": "Provide a **root of trust** (e.g., a physically unclonable function (PUF) based unique key) that could be verified by users, or provide other means to prove the originality/authenticity of the device/application. Regardless of the method used:\n\nRegardless of the method used:\n\n- **Do not send the cloneable proof of authenticity out:**\n\n    - The proof/evidence of authenticity that is sent out and verified by users, must not be cloneable.\n\n    - It must be _practically_ impossible to create a component that gives the same answer or emits the same signal.\n\n    - Generally, the adopted mechanism should be based on a challenge, rather than a fixed response. For example, the device may have a private key and sign a random number by the key. The private key, in this case, must always stay on the device/application.\n\n- **Limit the number of challenges/responses:**\n\n    - The unique item that enables generating the evidence must be impossible to guess by a considerable number of challenges. For example, a key written on the device by the manufacturer.\n\n    - The device must restrict the number of challenges made by the verifier to limit the possibility of guessing the unique identifier.\n\n    - Additionally, the device (such as a smart card) can check the verifier as well, and only respond to the requests if the verifier provides adequate evidence that it is authentic.",
    "weakness_title_read_only": "Missing proof of authenticity",
    "weakness_id_read_only": "P772",
    "weakness": "ba2ba016-c85e-4d09-ac9b-e09a81a569d8",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "requirements",
    "created": "2015-10-30T15:41:20.197000-04:00",
    "last_updated": "2021-06-25T14:47:42.612000-04:00",
    "custom": "False",
    "rules": "4fd90244-5770-4b68-88a7-9445cca26ec8",
    "rules_read_only": "A1077"
  },
  {
    "countermeasure_id": "T416",
    "universal_id": "4983ea69-6073-4d26-9f50-a1594ad862a3",
    "countermeasure_name": "Test that the device/application provides proof of authenticity",
    "countermeasure_solution": "Test that the device/application is equipped with mechanisms to prove that it is original, and that the mechanisms comply with the device's requirements for proof of originality, such as not being alterable and clonable.\n\nIn particular test that:\n\n - The device does not send the clonable proof of authenticity out in a way that is forgeable and writable to another device/application. \n - Verify that the device limits the number of challenges/responses or the number of verification attempts, and possibly checks the verifier and rejects the requests from an unknown verifier.",
    "weakness_title_read_only": "Missing proof of authenticity",
    "weakness_id_read_only": "P772",
    "weakness": "ba2ba016-c85e-4d09-ac9b-e09a81a569d8",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2015-10-30T16:04:14.128000-04:00",
    "last_updated": "2021-06-25T14:47:42.520000-04:00",
    "custom": "False",
    "rules": "4fd90244-5770-4b68-88a7-9445cca26ec8",
    "rules_read_only": "A1077"
  },
  {
    "countermeasure_id": "T417",
    "universal_id": "d441f965-27b4-46e1-8ed3-3975fdbd411b",
    "countermeasure_name": "Avoid passing dynamic data to trustAs or bypassSecurityTrust functions",
    "countermeasure_solution": "By default, AngularJS and Angular prevent the insertion of potentially unsafe code or markup into the DOM. Attempts to insert unsafe data causes an error (in AngularJS 1.x), or automatic sanitization of the data (in Angular 2+).\n\nIn **AngularJS**, unsafe data can be marked as safe by passing it into any of the`$sce.trustAs` functions (such as `$sce.trustAsHTML()` or `$sce.trustAsJs()`).\n\nIn **Angular**, unsafe data can be marked as safe by passing it into any of the `DomSanitizer.bypassSecurityTrust` functions (such as `DomSanitizer.bypassSecurityTrustHtml()` or `DomSanitizer.bypassSecurityTrustScript()`).\n\nThese functions are intended for use with known-safe data (e.g., a static code snippet). **They cannot safely be used with dynamic data**. Dynamic data should be passed through the sanitizer ([Countermeasure 418](/library/tasks/T418/)).\n\n__*Note*__: If dynamic data containing code or markup is passed through these functions, it will become executable and enable client-side injection and cross-site scripting (XSS) attacks.\n\n## References\n\n* [Strict Contextual Escaping](https://docs.angularjs.org/api/ng/service/$sce) (AngularJS)\n* [DomSanitizer](https://angular.io/api/platform-browser/DomSanitizer) (Angular)",
    "weakness_title_read_only": "Improper Neutralization of Input During Web Page Generation (Cross-Site Scripting)",
    "weakness_id_read_only": "P632",
    "weakness": "67b0e738-a725-4462-be2a-52493b75f4ac",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "development",
    "created": "2015-11-03T11:27:02.086000-05:00",
    "last_updated": "2022-09-01T12:17:55.147000-04:00",
    "custom": "False",
    "rules": "b130b529-34d4-4fcf-a467-dca4eb3d12fc;0921216e-bed3-4db9-be7a-6d8b67cf0492",
    "rules_read_only": "A1099;A1223"
  },
  {
    "countermeasure_id": "T418",
    "universal_id": "2d1532c0-4d0a-4f4d-bfe5-1b26342f8b46",
    "countermeasure_name": "Use Angular's built-in sanitization for user output with limited code or markup",
    "countermeasure_solution": "In some use cases, user input or other dynamic data needs to contain code or markup. Examples are rendering a rich text HTML document, or dynamically defining CSS rules. In these cases, escaping cannot be used. Instead, **the data needs to be sanitized**.\n\n_**Note:**_ Client-side sanitization of data is intended for safe rendering. It does not affect server-side input validation.\n\n___AngularJS___\n\nFor AngularJS, follow these steps to output dynamic data safely:\n\n* Load the `ngSanitize` module in your application. This module is part of the AngularJS core but needs to be loaded separately.\n* Use interpolation as the default output mechanism, using `{{}}` or `ng-bind`. Interpolated data is always escaped. Code or markup will be shown, not executed.\n* For cases where markup or code in the output is needed, use the `ng-bind-html` directive. AngularJS will **automatically remove unsafe code** or markup and insert the safe parts into the template.\n\n_**Note:**_ When the `ngSanitize` module is not loaded, AngularJS will refuse to insert the data and throws an error instead (`[$sce:unsafe] Attempting to use an unsafe value in a safe context.`). Resolve this error by passing the data through a `trustAs` function creates a vulnerability (See [Countermeasure T417](/library/tasks/T417/)). \n\n___Angular___\n\nFor Angular, follow these steps to output dynamic data safely:\n\n* Use interpolation as the default output mechanism, using `{{}}`. Interpolated data is always escaped. Code or markup will be shown, not executed.\n* For cases where markup or code in the output is needed, bind the value to the `[innerHTML]` property. This automatically triggers the sanitizer, without the need to load additional modules. Angular will **automatically remove unsafe code** or markup and insert the safe parts into the template.\n\n_**Note:**_ Do not sidestep the sanitizer by passing the data through a `bypassSecurityTrust`. This creates a significant security vulnerability, as discussed in [Countermeasure T417](/library/tasks/T417/).\n\n\n## References\n\n- [ngSanitize module](https://docs.angularjs.org/api/ngSanitize)\n- [ngBindHtml directive](https://docs.angularjs.org/api/ng/directive/ngBindHtml)\n- [DomSanitizer](https://angular.io/api/platform-browser/DomSanitizer)\n- [Binding to the innerHTML property](https://angular.io/guide/template-syntax#property-binding-or-interpolation)",
    "weakness_title_read_only": "Improper Neutralization of Input During Web Page Generation (Cross-Site Scripting)",
    "weakness_id_read_only": "P632",
    "weakness": "67b0e738-a725-4462-be2a-52493b75f4ac",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "requirements",
    "created": "2015-11-03T11:36:18.498000-05:00",
    "last_updated": "2022-08-24T14:11:12.973000-04:00",
    "custom": "False",
    "rules": "b130b529-34d4-4fcf-a467-dca4eb3d12fc;0921216e-bed3-4db9-be7a-6d8b67cf0492",
    "rules_read_only": "A1099;A1223"
  },
  {
    "countermeasure_id": "T419",
    "universal_id": "672bde9b-8ea4-43ce-808b-ccd10bbeb2f8",
    "countermeasure_name": "Make sure strict contextual escaping (SCE) is enabled in AngularJS",
    "countermeasure_solution": "Avoid disabling strict contextual escaping (SCE) in AngularJS.\n\nAs of version 1.2, Angular has SCE enabled by default, but can be disabled through `$sceProvider.enabled(false)`.  Search the code and make sure it is not disabled.\n\n__Note__: SCE helps ensure that code is written securely by default and makes auditing for security vulnerabilities, such as XSS, and clickjacking much easier. Disabling it is highly discouraged as SCE gives many security benefits for little coding overhead.\n\nFor more information, see the documentation for [Strict Contextual Escaping](https://docs.angularjs.org/api/ng/service/$sce).",
    "weakness_title_read_only": "Improper Neutralization of Input During Web Page Generation (Cross-Site Scripting)",
    "weakness_id_read_only": "P632",
    "weakness": "67b0e738-a725-4462-be2a-52493b75f4ac",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "requirements",
    "created": "2015-11-03T11:43:23.172000-05:00",
    "last_updated": "2021-06-25T14:47:53.607000-04:00",
    "custom": "False",
    "rules": "b130b529-34d4-4fcf-a467-dca4eb3d12fc",
    "rules_read_only": "A1099"
  },
  {
    "countermeasure_id": "T420",
    "universal_id": "cbd3439a-eac7-4d8f-9e97-db25a6ee36f2",
    "countermeasure_name": "Prevent Client-Side Template Injection (CSTI)",
    "countermeasure_solution": "Prevent client side Template injection using the following instructions:\n\n- Validate users' inputs if your Template dynamically embeds user input into a page. Refer to [Countermeasure 31](/library/tasks/T31) for more information about input validation.\n- Avoid passing untrusted user input to unsecure functions like `eval`. This can cause improper evaluation and execution of malicious expressions within a browser.\n- Do not rely on sandboxes as a security feature since they have limitations and can be bypassed. \n- Avoid mixing any server-side Templates with the client-side ones. Client-side Templates render HTML content in the browser using a JavaScript library.  \n\n\nFor more information, see the documentation on [Template Injection: Client Side](https://vulncat.fortify.com/en/detail?id=desc.dataflow.javascript.client_side_template_injection).",
    "weakness_title_read_only": "Improper Neutralization of Input During Web Page Generation (Cross-Site Scripting)",
    "weakness_id_read_only": "P632",
    "weakness": "67b0e738-a725-4462-be2a-52493b75f4ac",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "development",
    "created": "2015-11-09T14:42:28.817000-05:00",
    "last_updated": "2022-09-01T12:31:12.061000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T421",
    "universal_id": "1c1f0ec0-fe31-498d-ab62-6c25da23b839",
    "countermeasure_name": "Verify if web page template is vulnerable to client side template injection (CSTI)",
    "countermeasure_solution": "To verify whether an application that uses client side template is vulnerable to CSTI, inject an expression that can even bypass sandboxing, if it's being used. Depending on the language, the payload can be different. The following example is very general and it's just for understanding the concept.\n\nExample:\n\n````\nmyEval = function(script) { eval('alert (\"Hi\"+username+)' ); }\n\n````\nIn the above example, an untrusted user input can pass to unsecure _eval_ function and this test __fails__ if it executes. \n\nFor the details of the exploit and more examples in different JavaScripts frameworks, refer to [Client Side Template Injection Examples](https://code.google.com/archive/p/mustache-security/)",
    "weakness_title_read_only": "Improper Neutralization of Input During Web Page Generation (Cross-Site Scripting)",
    "weakness_id_read_only": "P632",
    "weakness": "67b0e738-a725-4462-be2a-52493b75f4ac",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2015-11-09T17:02:24.369000-05:00",
    "last_updated": "2021-06-25T14:47:55.089000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T422",
    "universal_id": "450dc8ad-c5a5-4d3b-af33-f07a1bb61d17",
    "countermeasure_name": "Verify that built-in sanitization is used in Angular with limited code or markup",
    "countermeasure_solution": "___AngularJS___\n\nIf your application needs to display HTML content that is controlled by the user:\n\n- Work with developers to verify that the `ngSanitize` module is enabled for your application.\n- Ensure to check all the occurrences of `ng-bind-html`.\n\nThis test __fails__ if the module is not enabled.\n\n___Angular___\n\nFor Angular, verify that:\n\n* You have used interpolation as the default output mechanism, using `{{}}`.\n* For cases where markup or code in the output is needed, verify that you have bound the value to the `[innerHTML]` property.\n* You have not bypassed the sanitizer by passing the data through a `bypassSecurityTrust`. (This creates a significant security vulnerability, as discussed in [Countermeasure 417](/library/tasks/T417/).",
    "weakness_title_read_only": "Improper Neutralization of Input During Web Page Generation (Cross-Site Scripting)",
    "weakness_id_read_only": "P632",
    "weakness": "67b0e738-a725-4462-be2a-52493b75f4ac",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2015-11-09T17:17:09.829000-05:00",
    "last_updated": "2022-09-01T10:26:58.863000-04:00",
    "custom": "False",
    "rules": "b130b529-34d4-4fcf-a467-dca4eb3d12fc;0921216e-bed3-4db9-be7a-6d8b67cf0492",
    "rules_read_only": "A1099;A1223"
  },
  {
    "countermeasure_id": "T423",
    "universal_id": "379f4caf-38d3-4b83-af2d-f4e0a9085b15",
    "countermeasure_name": "Disable copying on Android text fields with sensitive data",
    "countermeasure_solution": "If an activity with text input handles sensitive data that must not be shared with other applications through the Android clipboard, be sure to do the following:\n\n- Disable copying from the text input field to the clipboard. For example, disable `EditText`.\n- Disable the 'copy to clipboard' option on text input fields with sensitive data.\n\nFurthermore, keeping sensitive information in a readable format can cause security concerns and lead to sensitive information disclosures. Some operating systems allow developers to hide the information in the clipboard to prevent revealing sensitive information to the unintended audience. Hence, if you are storing sensitive information in the clipboard, ensure that you use secure methods (for instance, by masking the sensitive information in the clipboard).",
    "weakness_title_read_only": "Leak of sensitive data through Android clipboard",
    "weakness_id_read_only": "P771",
    "weakness": "43e8aa35-eb6a-4a38-aeb7-2ff9789eaf59",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "development",
    "created": "2015-11-13T11:38:15.232000-05:00",
    "last_updated": "2022-11-02T13:32:27.443000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T424",
    "universal_id": "e38eb533-00e2-4fe3-998b-ae25a9f56e1f",
    "countermeasure_name": "Test that copying is disabled on text fields with sensitive data (Android)",
    "countermeasure_solution": "Follow these steps to test that copying to the clipboard is disabled for Android text fields with sensitive data:\n\n1. Select a text field that handles sensitive data and is supposed to be protected against clipboard leaks.\n\n2. Enter text into a text field. A text field that handles confidential data is best, such as a password text field.\n\n3. Long-press and try to select/copy the text onto the clipboard. This should not be possible.\n\nThis test __fails__ if you can copy text from a password field onto a clipboard.",
    "weakness_title_read_only": "Leak of sensitive data through Android clipboard",
    "weakness_id_read_only": "P771",
    "weakness": "43e8aa35-eb6a-4a38-aeb7-2ff9789eaf59",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2015-11-13T11:52:43.985000-05:00",
    "last_updated": "2021-06-25T14:47:51.001000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T425",
    "universal_id": "ffa06fd7-3d4b-4d34-85e8-489bacc78b44",
    "countermeasure_name": "Check the authenticity of external devices/applications",
    "countermeasure_solution": "Use the following guidelines for checking the authenticity of external devices and applications:\n\n- For critical operations, avoid using third party components that do not provide proof of authenticity. Verify the proof of authenticity/originality that is provided by the third party application/device.\n\n- The details of verification depend on the type of proof that is provided. For example, if a digital signature is embedded in the application or device, check that it is signed by the private key of the manufacturer, such as with a signature that is a unique ID of the device. \n\n- The signature should be based on an element unique to the manufacturer, such as a private key, as well as an element that is not forgeable, and is unique to the device, such as a unique ID.",
    "weakness_title_read_only": "Lack of control over third-party hardware or software components",
    "weakness_id_read_only": "P755",
    "weakness": "65a71c03-6460-4189-9a90-76ad3d1f21e1",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "requirements",
    "created": "2015-11-27T15:37:38.311000-05:00",
    "last_updated": "2021-06-25T14:47:42.459000-04:00",
    "custom": "False",
    "rules": "89a5e903-a2cd-4234-b0ea-714e3da7fee9;9df8c510-ee65-49b4-ae61-deff6ea425d6 AND 4fd90244-5770-4b68-88a7-9445cca26ec8",
    "rules_read_only": "A1082;A1084 AND A1077"
  },
  {
    "countermeasure_id": "T426",
    "universal_id": "83172e9f-dc48-4888-ae25-082c8c7538b5",
    "countermeasure_name": "Verify that the authenticity of external devices/applications is properly checked",
    "countermeasure_solution": "Use the following guidelines for verifying that external devices and applications are checked for authenticity:\n\n- Verify that when you are using an external component, the evidence for proof of authenticity/originality of the device/application is properly checked. For example, when using commercial off the shelf components.\n\n- Verify that for critical operations, third party components that do not provide proof of authenticity are not used.",
    "weakness_title_read_only": "Lack of control over third-party hardware or software components",
    "weakness_id_read_only": "P755",
    "weakness": "65a71c03-6460-4189-9a90-76ad3d1f21e1",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2015-11-27T15:40:18.590000-05:00",
    "last_updated": "2023-03-17T16:50:07.603000-04:00",
    "custom": "False",
    "rules": "89a5e903-a2cd-4234-b0ea-714e3da7fee9;9df8c510-ee65-49b4-ae61-deff6ea425d6 AND 4fd90244-5770-4b68-88a7-9445cca26ec8",
    "rules_read_only": "A1082;A1084 AND A1077"
  },
  {
    "countermeasure_id": "T427",
    "universal_id": "4b267e93-4135-42d4-bb99-200d32951543",
    "countermeasure_name": "Implement previous login (access) notification",
    "countermeasure_solution": "For users who have successfully logged on (accessed) a system, implement a mechanism to inform them of the following details for a configurable number of previous logins (accesses):\n\n- Date\n- Time\n- Location\n\nThis countermeasure applies to logins to a system component by either a human user interface or other non-human interfaces (such as devices, processes, services).\n\nBased on an organization's policies and requirements, inform the user of:\n\n1. The number of unsuccessful login attempts since the last successful login/access, upon successful login.\n2. The number of successful logins, unsuccessful login attempts, or both during a certain period.\n3. Changes to security-related characteristics/parameters of the user's account during a certain period.\n    \n    - Send out the notification to a trusted user-provided email address, phone number, or other contact methods.\n\n    **Note:** For items 2 and 3, the system does not need to wait for a successful login to notify the user.\n\n\n4. The organization-defined additional information, upon successful login. For example:\n    - Location of the last login.\n    - IP addresses from which network logins occurred.\n    - Device identifiers (such as type of the operating system, browser, device).\n    - Local logins.",
    "weakness_title_read_only": "Inadequate Login Activity Monitoring and Notification",
    "weakness_id_read_only": "P774",
    "weakness": "d1c48f5c-6c1f-4d21-bd6a-7b763ecae311",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "requirements",
    "created": "2015-11-29T19:08:27.818000-05:00",
    "last_updated": "2022-09-01T10:29:15.701000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T428",
    "universal_id": "ad7b2a14-bba0-4f0f-b1c5-aebad0bcb9f3",
    "countermeasure_name": "Test that the system provides previous login (access) notifications",
    "countermeasure_solution": "Use the following guidelines for testing that a system has a feature to provide notifications about previous logins or accesses.\n\nThis test __fails__ if the system does not provide the following information about logins and accesses (according to the application's design choices and organizational policies):\n\n1. The number of unsuccessful access attempts since the last successful access, when successfully logging on.\n\n2. The number of successful accesses, unsuccessful access attempts, or both, during a defined period of time.\n\n3. Changes to security-related characteristics/parameters of the user's account during a configurable time period. \n\n    - The notification is sent to a trusted user-provided destination, such as an email address or phone number.\n    - **Note:** For items 2 and 3, the system does not have to wait until a successful login to notify the user.\n\n4. Any organization-defined additional information upon successful login.\n    - Such as location, IP address, and device identifier.",
    "weakness_title_read_only": "Inadequate Login Activity Monitoring and Notification",
    "weakness_id_read_only": "P774",
    "weakness": "d1c48f5c-6c1f-4d21-bd6a-7b763ecae311",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2015-11-29T19:33:06.102000-05:00",
    "last_updated": "2022-09-01T10:34:18.296000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T429",
    "universal_id": "184c6217-32f7-43c0-8582-3523c3722582",
    "countermeasure_name": "Limit the number of concurrent sessions for each account",
    "countermeasure_solution": "Limit the number of concurrent sessions for each **account and/or account type** to a proper number.\n\nDefine the **maximum number** for accounts:\n\n- Globally\n- By account type (such as user account, privileged user account, or system account)\n- By account\n- A combination of these items\n\nFor example, limit the number of concurrent sessions for system administration or privileged accounts in sensitive domains that have access to critical functions.\n\n### Required actions\n\nIf the concurrent session limit for an account is exceeded, take any of these actions based on the application requirements:\n\n- Terminate the previously available session (recommended for security-critical accounts).\n- Ask the user through the old, new, or both sessions to choose the session that must remain active.\n\n### Optional capabilities\n\nImplement a control panel to enable users to:\n\n- Check the details of active sessions at any time.\n- Manually terminate sessions remotely.\n- Track previous and current sessions history (logbook) by recording multiple client details, such as login date and time, user-agent (browser type), IP address, or idle time.\n\n**Note:** This countermeasure does not address concurrent sessions started by one individual through multiple accounts.",
    "weakness_title_read_only": "Lack of Concurrent Session Control",
    "weakness_id_read_only": "P775",
    "weakness": "b02dd2ac-570c-44aa-aa4d-815fef1d4bac",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "requirements",
    "created": "2015-11-30T15:27:58.354000-05:00",
    "last_updated": "2022-08-24T14:18:36.006000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T430",
    "universal_id": "e80a8a30-a005-4909-be04-2996e00b385b",
    "countermeasure_name": "Test that the number of concurrent sessions for each account is limited",
    "countermeasure_solution": "Test that the number of concurrent sessions for each account is properly limited based on the organization-defined requirements.\n\nIn particular test that:\n\n- The **maximum** number of concurrent sessions is properly set for specific accounts or account types.\n- The system takes **proper actions** when the limit for an account is reached.\n    - For example, it terminates the previously available session, or asks the user to choose between the sessions.\n- Verify the functionality of the **session control management panel** if one is implemented based on organization-defined requirements.\n\nThe session control management panel (optionally) enables users to:\n\n- Check the details of active sessions at any time.\n- Manually terminate sessions remotely.\n- Track previous and current sessions history (logbook) by recording multiple client details, such as login date and time, user-agent (browser type), IP address, or idle time.",
    "weakness_title_read_only": "Lack of Concurrent Session Control",
    "weakness_id_read_only": "P775",
    "weakness": "b02dd2ac-570c-44aa-aa4d-815fef1d4bac",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2015-11-30T15:44:33.544000-05:00",
    "last_updated": "2021-06-25T14:48:00.790000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T431",
    "universal_id": "40acceba-645e-40c1-9403-987b72e37a27",
    "countermeasure_name": "Design a response to logging failures and other minor failures",
    "countermeasure_solution": "Design a suitable response to log failures and minor failures for the application, device, or component that are serious enough to stop the entire functioning of the system. A logging error could be a minor failure for a component, but would require halting the main process for another component in a critical system.\n\nIn addition:\n\n- Design alternate actions to take in case these errors occur.\n- Do not let the critical and emergency functionalities of the system be hampered by minor errors.\n- Create a list of minor failures to facilitate the testing procedure in later stages.\n\n### Response to audit processing failure\n\nIn the event of an audit processing failure, failure in the capturing mechanism, or hardware/software errors:\n\n- Alert the responsible user/role.\n- Take the proper action for different failures based on their type, severity, location, or a combination of these factors.\n    - For example, if logging fails because the storage is full:\n        - Increase logging storage capacity, or switch to an alternate logging storage.\n        - Stop generating audit records.\n        - Overwrite the oldest audit records.\n        - Shut down the information system.",
    "weakness_title_read_only": "Blocking of emergency actions or essential functions of a system",
    "weakness_id_read_only": "P748",
    "weakness": "935f97e0-7ef1-483d-b7bd-3b4411cb526c",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "architecture-design",
    "created": "2015-12-18T12:00:30.207000-05:00",
    "last_updated": "2021-06-25T14:47:41.103000-04:00",
    "custom": "False",
    "rules": "d7b32214-f746-423f-80be-641b07d455a8;4fd90244-5770-4b68-88a7-9445cca26ec8;89a5e903-a2cd-4234-b0ea-714e3da7fee9;be965488-96da-4440-9541-f0f926250d70",
    "rules_read_only": "A90;A1077;A1082;A1075"
  },
  {
    "countermeasure_id": "T432",
    "universal_id": "f03f3e9f-1228-4d6b-a291-38d3b5850031",
    "countermeasure_name": "Test that logging failures and other minor failures are securely handled",
    "countermeasure_solution": "This test assumes that a list of possible log failures and other minor failures are created in the design stage. Go through the list, and create the situations leading to those errors or failures (such as limited storage capacity for logs with a full hard disk):\n\n- Test that the designed procedure is followed by the component.\n    - For example, if the component should be completely halted, this behavior is implemented.\n    - Test that alternative actions are implemented in the event of these errors based on the design documents and needs.\n\n    This test __fails__ if no alternative actions are taken when these errors occur.\n\n- Test that minor errors in the list do not hamper the critical and emergency functionalities of the system.\n    \n    This test __fails__ if minor errors affect the functionality of the system.\n\n- Test that the system properly alerts the responsible user/role in case of an audit processing failure.\n\n    This test __fails__ if users/roles are not alerted.",
    "weakness_title_read_only": "Blocking of emergency actions or essential functions of a system",
    "weakness_id_read_only": "P748",
    "weakness": "935f97e0-7ef1-483d-b7bd-3b4411cb526c",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2015-12-18T13:32:25.485000-05:00",
    "last_updated": "2021-06-25T14:47:40.482000-04:00",
    "custom": "False",
    "rules": "89a5e903-a2cd-4234-b0ea-714e3da7fee9;be965488-96da-4440-9541-f0f926250d70;4fd90244-5770-4b68-88a7-9445cca26ec8;d7b32214-f746-423f-80be-641b07d455a8",
    "rules_read_only": "A1082;A1075;A1077;A90"
  },
  {
    "countermeasure_id": "T433",
    "universal_id": "7f166d13-7b10-4b7f-a2ae-b22559bdceee",
    "countermeasure_name": "Design a fallback mechanism or a degraded mode for the system",
    "countermeasure_solution": "Use the following guidelines for designing a fallback mechanism or degraded mode for a system or application:\n\nThe fallback system and degraded mode are activated when some components of the system fail, or when the resources are exhausted under attack. The main goal of these mechanisms is to keep the most critical services of the system running. Allow essential and emergency functions of the system to be accessible in those modes.",
    "weakness_title_read_only": "Denial of Service (DoS)",
    "weakness_id_read_only": "P750",
    "weakness": "04f3a13f-c7ea-4824-bd73-086d61dd30ba",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "architecture-design",
    "created": "2016-01-04T15:11:10.016000-05:00",
    "last_updated": "2021-06-25T14:47:39.893000-04:00",
    "custom": "False",
    "rules": "89a5e903-a2cd-4234-b0ea-714e3da7fee9;be965488-96da-4440-9541-f0f926250d70;77178d7c-6a9a-43c5-9993-323fc6d763f4 AND 3ccf78b5-809f-4efa-a2d0-01ae61dbe793",
    "rules_read_only": "A1082;A1075;A1124 AND A1121"
  },
  {
    "countermeasure_id": "T434",
    "universal_id": "e35bd9f7-be6c-4061-b251-848dfa79b78b",
    "countermeasure_name": "Verify that the system has a fallback mechanism or a degraded mode",
    "countermeasure_solution": "Use the following guidelines for verifying that the system has a fallback mechanism, or a degraded mode, that allows critical services of the system to survive Denial of service (DoS) attacks, and other selected failures.\n\n- Simulate excessive resource consumption, DoS attacks, or those selected failures.\n    - Test that the system can (minimally) operate in those situations.\n    - Test that the essential/emergency functions are accessible in those cases.",
    "weakness_title_read_only": "Denial of Service (DoS)",
    "weakness_id_read_only": "P750",
    "weakness": "04f3a13f-c7ea-4824-bd73-086d61dd30ba",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2016-01-04T15:31:29.991000-05:00",
    "last_updated": "2021-06-25T14:47:40.104000-04:00",
    "custom": "False",
    "rules": "89a5e903-a2cd-4234-b0ea-714e3da7fee9;be965488-96da-4440-9541-f0f926250d70;77178d7c-6a9a-43c5-9993-323fc6d763f4 AND 3ccf78b5-809f-4efa-a2d0-01ae61dbe793",
    "rules_read_only": "A1082;A1075;A1124 AND A1121"
  },
  {
    "countermeasure_id": "T435",
    "universal_id": "b77f1a07-4263-4439-ab8c-11e75f30515a",
    "countermeasure_name": "Prevent web browsers from MIME sniffing",
    "countermeasure_solution": "Use the following guidelines for preventing web browsers from MIME sniffing:\n\n- Send an ***X-Content-Type-Options*** response header with the value `nosniff` to prevent web browsers from MIME-sniffing a response.\n    - By disabling the MIME-sniffing capabilities, web browsers only rely on the declared MIME type data to interpret the content.\n    - Set the *content-type* value to avoid misinterpretations or errors.",
    "weakness_title_read_only": "MIME Type Confusion",
    "weakness_id_read_only": "P776",
    "weakness": "de42753c-c762-4b76-a098-e23fa1f83aa3",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "requirements",
    "created": "2016-01-26T08:24:32.907000-05:00",
    "last_updated": "2021-06-25T14:47:54.659000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T436",
    "universal_id": "f98881ce-a4d3-487b-b65c-fa2999927256",
    "countermeasure_name": "Verify web browsers do not enable MIME sniffing",
    "countermeasure_solution": "Use the guidelines for verifying that web browsers do not enable MIME sniffing:\n\nCheck your web server configuration file and verify that the ***X-Content-Type-Options*** response header is set to `nosniff`.\n\nThis test __fails__ if the response header is not set appropriately.",
    "weakness_title_read_only": "MIME Type Confusion",
    "weakness_id_read_only": "P776",
    "weakness": "de42753c-c762-4b76-a098-e23fa1f83aa3",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2016-01-26T08:28:22.638000-05:00",
    "last_updated": "2021-06-25T14:47:53.732000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T437",
    "universal_id": "4591ac70-6390-4ed0-bf80-98b2928ca941",
    "countermeasure_name": "Include log reduction and report generation capabilities",
    "countermeasure_solution": "Use the following guidelines for including log reduction and report generation features:\n\n- Design and implement a log reduction and report generation mechanism to facilitate audit analysis and to make investigations easier after security incidents.\n    - This feature allows the system to summarize important information.\n    - You can consider using data mining techniques to identify any abnormal behavior displayed in the audit records.\n\n- Allow responsible roles to decide which auditable events need to be audited by specific components of the information system.\n- Make sure all events including untrusted data will **not execute as a code** in the log viewing software.\n\n**Note:** Do not modify original content or the time ordering of the event.",
    "weakness_title_read_only": "Insufficient log reduction and report generation",
    "weakness_id_read_only": "P777",
    "weakness": "d2534d16-f9bd-4225-9aae-5300439c7c49",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "architecture-design",
    "created": "2016-01-28T17:03:13.430000-05:00",
    "last_updated": "2022-03-23T03:45:44.443000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T438",
    "universal_id": "97709fe7-3780-4f77-ac1c-328ed6530448",
    "countermeasure_name": "Verify that log reduction and report generation capabilities exist",
    "countermeasure_solution": "Use the following guidelines for verifying that your system or application includes log reduction and report generation:\n\n- Employs required log reduction techniques to properly manipulate and summarize audit information.\n- Supports required on-demand audit review, analysis, and reporting.\n- Does not modify the original data or time ordering of audit records.\n\nThis test __fails__ if these features do not exist.",
    "weakness_title_read_only": "Insufficient log reduction and report generation",
    "weakness_id_read_only": "P777",
    "weakness": "d2534d16-f9bd-4225-9aae-5300439c7c49",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2016-01-28T17:05:40.154000-05:00",
    "last_updated": "2022-03-23T03:46:15.886000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T439",
    "universal_id": "c0e61f7e-b571-4501-a235-e1891f977081",
    "countermeasure_name": "Verify that the origin and integrity of remote code and updates are checked (client side)",
    "countermeasure_solution": "Use the following guidelines for verifying that you check remote code and updates for their origin and integrity:\n\nWork with developers to identify parts of the source code that:\n \n - Read and run functions from a remote (untrusted) location.\n - Perform object serialization/de-serialization from a stream or a downloaded file.\n - Update code or firmware from a remote (untrusted) location.\n\nVerify that for such items:\n\n - The size of the received code is examined and has an upper limit.\n - The authenticity of the source is verified through an authentication mechanism, such as through digital signatures.\n - The integrity of the code/data is verified before it is applied or executed, such as through digital signatures.\n\nIn addition, verify that the third-party libraries you use do not have any known object serialization vulnerabilities.",
    "weakness_title_read_only": "Download of code/updates without checking its origin and/or integrity",
    "weakness_id_read_only": "P384",
    "weakness": "20806dd6-ac6a-43a2-a6ba-6aa515a7dd7e",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2016-01-29T14:39:47.331000-05:00",
    "last_updated": "2023-03-27T12:41:19.830000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T440",
    "universal_id": "98052868-89e2-4b8b-bcca-5354a6254159",
    "countermeasure_name": "Follow best practices when managing Android permissions",
    "countermeasure_solution": "Follow these guidelines for adopting the best permission management strategy for your Android application:\n\n- First determine if the application actually needs a particular permission, or if it can use other applications or services through Intents instead. \n    - See this guide to help make this decision: [Consider Using an Intent](http://developer.android.com/training/permissions/best-practices.html#perms-vs-intents).\n\n- After you make sure you need some permissions, design a strategy for requesting the permissions.\n    - Familiarize yourself with both types of permission requests:\n        - The old model with static permissions before Android Marshmallow.\n        - After Android Marshmallow when permissions are asked at runtime.\n\n- Identify the best time to ask for permissions.\n\n    **Here are the main points you need to consider when asking for permissions:**\n\n    - Ask for permissions when required, and do not overwhelm users with permission dialogs. Starting in Android 11, there is __only this time__  option in the user-facing permissions dialog whenever the app asks permission related to a microphone, camera, or location. \n    - After asking for permission, give something back to users immediately. For example, if you ask for permission to use the camera, show the pictures so that the user knows why the permissions are granted.\n    - Ask for permission first, then if the user refuses, provide an explanation. If the user refuses again, do not insist, otherwise, the user may check the \"never ask again\" box. Starting Android 11, if users choose to __Deny__ specific permission more than once during the app's lifetime on a device, they do not see the system permission dialog box when the app asks that permission again.\n    - Do not assume to have permissions as with Android 6 and earlier.\n    - Design the application in a way that checks for permissions before using them.\n\n- Distinguish between the types of permissions that are used by your application (normal and dangerous).\n    - Dangerous permissions need user approval.\n    - Never assume that a permission remains in the same category and group.\n        - Permissions are frequently regrouped, so do not assume that receiving permission for a major group will give you all permissions in that group.\n    - Always ask/check for a permission if you use it. In apps that target Android 11 or higher, the system automatically resets the sensitive runtime permissions that the user had granted and have been unused for a few months.\n\n- Design a test plan for testing the application against both permission models (before Android Marshmallow and after).",
    "weakness_title_read_only": "Lacking proper strategy for management of Android permissions",
    "weakness_id_read_only": "P778",
    "weakness": "d628d668-efe6-4344-98c3-0a3593970cd4",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "architecture-design",
    "created": "2016-02-11T16:48:36.792000-05:00",
    "last_updated": "2021-06-25T14:47:45.300000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T441",
    "universal_id": "982449a3-eccd-4a74-816c-e08557f8d1ba",
    "countermeasure_name": "Ask for Android permissions at runtime",
    "countermeasure_solution": "For your application to run on Android Marshmallow and later, ask for permissions at runtime and do not assume that you have permissions after installation.\n\nUse the following guidelines:\n\n- Declare the required permissions in the Manifest file.\n    - For more information, see [Add Permissions to the Manifest](http://developer.android.com/training/permissions/declaring.html#perm-add).\n\n- Call `ContextCompat.checkSelfPermission()` at runtime to check if your application has a specific permission.\n    - For more information, see [Requesting Permissions at Run Time](http://developer.android.com/training/permissions/requesting.html).\n\n- Provide some justification for asking for specific permissions in a customized window when required.\n    - To know if you need to provide more explanation, use the `shouldShowRequestPermissionRationale()` method.\n    - The method returns `true` if the app has requested a permission previously but it has been denied, which shows the user needs more explanation, and returns `false` if \"Don't ask again\" is checked by the user.\n    - Display the information asynchronously, and do not block the main thread.\n\n- Override the `onRequestPermissionsResult()` method to handle the result of permission requests.\n    - Avoid any action that requires the requested permission if it is denied.\n\n- Develop the application in a way that works with any combination of permissions and does not crash.\n\n__Note__: \n\n- In Android O, the app is only given the runtime permissions it has explicitly requested.\n    - However, when the user gives a permission to the app, all subsequent requests for permissions in that __permission group__ are automatically granted.\n    - For example, if you request the `SEND_SMS` permission from the SMS permission group, then Android does not prompt the user for `READ_SMS`, which is in the same group, when required if it is listed in the manifest file.\n    - Previously, a bug in Android O allowed the system to grant the app the rest of the permissions in the same permission group registered in the manifest file when the app received a permission at runtime. This error is fixed.\n\n__Note__: To get the hardware ID of other devices around you through Bluetooth and Wifi, you need `ACCESS_FINE_LOCATION` or `ACCESS_COARSE_LOCATION` permissions in Android Marshmallow and later. This is because with the widespread use of beacons with location information, it will be possible to trace the device using Bluetooth and Wifi scanners.",
    "weakness_title_read_only": "Lacking proper strategy for management of Android permissions",
    "weakness_id_read_only": "P778",
    "weakness": "d628d668-efe6-4344-98c3-0a3593970cd4",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "development",
    "created": "2016-02-11T17:02:52.248000-05:00",
    "last_updated": "2021-06-25T14:47:46.536000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T442",
    "universal_id": "46ca72c3-5323-495c-8414-3ce1ae8a1047",
    "countermeasure_name": "Test that Android permissions are properly managed",
    "countermeasure_solution": "Create two test plans for testing your application against two permission models. Before Android Marshmallow (v6.0, API level 23), and after it:\n\n- For versions before Android Marshmallow:\n    - Grant the application the requested permissions.\n    - Install and run the application.\n    - Perform the tasks that need particular permissions.\n    - Test if the application runs smoothly.\n\n- For Android Marshmallow and later:\n    \n    - Perform tasks that require particular permissions. \n    \n    - Test the application with any combination of permissions, and test if it does not fail.\n\n        Otherwise, this test __fails__.\n    \n    - Reject a permission once, and test if the application provides an explanation for why the permission is needed after the second rejection.\n\n        This test __fails__ if the application does not properly implement providing users with an explanation of permissions.\n    \n    - Test that the application immediately shows the benefit of accepting a permission.\n\n        Otherwise, this test __fails__.\n    \n    - Test that the application does not crash when you check the \"Never ask again\" box, even if it may not be able to offer all the required services.\n\n        Otherwise, this test __fails__.\n    \n    - Test that the application does not ask for permissions one after another, and waits for the right time to ask for each permission.\n\n        Otherwise, this test __fails__.",
    "weakness_title_read_only": "Lacking proper strategy for management of Android permissions",
    "weakness_id_read_only": "P778",
    "weakness": "d628d668-efe6-4344-98c3-0a3593970cd4",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2016-02-11T17:03:29.068000-05:00",
    "last_updated": "2021-06-25T14:47:47.904000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T443",
    "universal_id": "b4a80518-200d-4892-9582-ed72386f3548",
    "countermeasure_name": "Protect peripheral devices against malicious remote activation",
    "countermeasure_solution": "Follow these guidelines to protect peripheral devices against malicious use:\n\n- Disable remote device activation except for specific devices that need this feature. Don't allow remote entities, or activate the device or components of the device, unless it is necessary.\n\n- Display a signal that indicates the device is being used. For example, turn on an LED light to indicate the camera is in use, or display an on-screen indicator that shows a certain resource is shared with another account.\n\n- Ensure that the information collected by the device is only accessible to authorized users or processes.\n\n- Employ proper measures to ensure that sensor-collected data is not used for unauthorized purposes. For example, if the system is supposed to use GPS location information for navigation, the information should not be utilized for any other purposes.",
    "weakness_title_read_only": "Improper protection of remotely accessible devices",
    "weakness_id_read_only": "P779",
    "weakness": "c4348531-49bd-4127-abfa-49f911ea9d92",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "requirements",
    "created": "2016-02-23T11:48:57.168000-05:00",
    "last_updated": "2021-06-25T14:47:52.560000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T444",
    "universal_id": "555f9c1c-48bb-4c23-a7ce-35d87c81d28d",
    "countermeasure_name": "Verify that peripheral devices are protected against malicious remote activation",
    "countermeasure_solution": "Follow these instructions to verify that peripheral devices are protected against malicious use:\n\n- Maintain a list of devices that are required to be activated through remote access.\n- Attempt to remotely activate each device.\n    - This test __fails__ if there is no explicit indicator signaling when the device is activated.\n- Attempt to remotely activate the devices that are not on the list.\n    - This test __fails__ if you can successfully activate a device.",
    "weakness_title_read_only": "Improper protection of remotely accessible devices",
    "weakness_id_read_only": "P779",
    "weakness": "c4348531-49bd-4127-abfa-49f911ea9d92",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2016-02-23T11:50:29.666000-05:00",
    "last_updated": "2021-06-25T14:47:53.222000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T445",
    "universal_id": "b056fe69-bf87-4f29-94b0-f9840fe895ac",
    "countermeasure_name": "Verify that only approved cryptographic algorithms and key lengths are used",
    "countermeasure_solution": "Use the following guidelines for verifying that you only use approved cryptographic algorithms and key lengths:\n\n- List all the cryptographic algorithms and key lengths used by developers in the application.\n    - Verify that they are validated to be secure and reliable.\n\n- Check the algorithms against the [FIPS 140-3 validation list](https://csrc.nist.gov/projects/cryptographic-module-validation-program). [Annex A Section 14](https://csrc.nist.gov/CSRC/media/Projects/cryptographic-module-validation-program/documents/fips%20140-3/Draft%20FIPS-140-3-CMVP%20Management%20Manual%2009-18-2020.pdf) provides a list of approved security algorithms applicable to FIPS 140-3.\n\n- Check that the initialization vectors (IVs) are randomized securely for cipher-block chaining (CBC) and other algorithms.\n\n- Check that encryption is performed in CBC mode instead of Electronic Codebook (ECB) mode, which encrypts separate blocks of input.\n    - Unless there is a justification for not using CBC.",
    "weakness_title_read_only": "Use of weak cryptographic algorithms or unsecure algorithm practices",
    "weakness_id_read_only": "P224",
    "weakness": "043ee434-f7bc-48aa-b75e-d2ec73c2a0d2",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2016-02-23T16:04:38.827000-05:00",
    "last_updated": "2021-06-25T14:47:37.525000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T446",
    "universal_id": "5638e271-ba43-4e07-9958-1ab4338062f3",
    "countermeasure_name": "Verify that only standard libraries are used for cryptography",
    "countermeasure_solution": "Use the following guidelines for verifying that you only use standard libraries for cryptography:\n\n- Create a list of libraries used for cryptography, including:\n    - Encryption\n    - Signature generation/verification\n    - Key generation\n    - Message digest generation\n\n- Verify that only standard libraries are used, and no outstanding vulnerabilities are reported for those libraries.",
    "weakness_title_read_only": "Use of weak cryptographic algorithms or unsecure algorithm practices",
    "weakness_id_read_only": "P224",
    "weakness": "043ee434-f7bc-48aa-b75e-d2ec73c2a0d2",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2016-02-23T17:32:46.804000-05:00",
    "last_updated": "2021-06-25T14:47:37.551000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T447",
    "universal_id": "19bb9a5a-bbc5-4a1d-9ebc-5af054d12731",
    "countermeasure_name": "Secure Android in-app purchases",
    "countermeasure_solution": "Follow these guidelines to secure use of in-app billing services:\n\n1. ___Verify the signature provided with the response on the server:___ Google play's Developer Console, assigns an asymmetric key pair to each application (The private key will always remain with Google. You can see the application's public key through Developer Console application's details -> Services & APIs -> License Key. Read ['Securing Your Application'](http://developer.android.com/google/play/billing/billing_integrate.html#billing-security) for more detail). Google Play signs the response string (in JSON format) that is sent to your application. You need to send the signature along with the data to the server (if the application has a server component) to check the signature on the server and take the next steps only if the signature is valid (see the `verify()` method in `Security.java` that is shipped as sample (TrivialDrive) with `IInAppBillingService.aidl` and SDK package from Google. Change the function to do the verification on the server if possible).\n\n2. ___Use a secure channel with a reliable handshake:___ Use a secure channel between the application and the server. For example, use a secure TLS/SSL channel.\n\n3. ___Make the purchased items uniquely available to the application:___ Do not put the purchasable items and content in the APK file without proper security protection. It is recommended to put them on the server and download them to the application only after they are purchased. After you copy the content to the client, use an application-specific method to encrypt the content and save them on storage. For example use the UUID (Universal Unique Identifier) of the application with a key to encrypt data.\n\n4. ___Verify the Order Id and the Developer Payload values:___ You provide a developer payload value with your request. When the response is returned to the application the payload value (developerPayload argument) and the unique ID of the order (orderID argument) are sent to your application (see the [In-app Billing Reference](http://developer.android.com/google/play/billing/billing_reference.html)). Verify these values along with the signature (on the server). \n\n5. Use secure random generators (`SecureRandom`) if you generate a random number for parts or whole of developerPayload. \n\n6. ___Obfuscate your application and protect the keys:___ Android documents recommend obfuscating the application. However note that any obfuscation method can be reversed, so while using this method do not solely rely on obfuscation. See this section on [obfuscating the code](http://developer.android.com/google/play/billing/billing_best_practices.html#obfuscate) and [ProGuard page](http://developer.android.com/tools/help/proguard.html). Also do not hard-code the public key in the application or leave it unprotected. If you check the signature on the server, you will not need the public key saved on the client.\n\n7. ___Design and implement a scheme for disabling content:___ Design and implement means to disable any content that is purchased but revoked for any security or piracy reasons afterwards.\n\nRead [this page](http://developer.android.com/google/play/billing/billing_best_practices.html) along with the above recommendations before starting to secure in-app-purchases in your application.",
    "weakness_title_read_only": "Insufficient Verification of Data Authenticity",
    "weakness_id_read_only": "P244",
    "weakness": "b804db70-a48e-4d47-8c34-d8ee26babd77",
    "tags": "",
    "countermeasure_priority": "3",
    "phase": "requirements",
    "created": "2016-03-02T15:08:29.553000-05:00",
    "last_updated": "2021-06-25T14:47:54.955000-04:00",
    "custom": "False",
    "rules": "3e46c566-5461-41fb-99b7-52df39f28c6d AND 64e2a4e5-efe8-4a19-8b5f-b835d963a40c",
    "rules_read_only": "A1106 AND A715"
  },
  {
    "countermeasure_id": "T448",
    "universal_id": "2d8cd01b-b719-4f23-aa86-8bb528d543f7",
    "countermeasure_name": "Verify that Android in-app purchases are securely implemented",
    "countermeasure_solution": "Follow these guidelines to verify that in-app purchases are securely implemented:\n\n1. Check that the signature provided by Google is verified by the server component of the application.\n    - Check that the signature verification is performed on the server when possible.\n    - Otherwise, this test __fails__.\n        - There are some cases where client side verification is acceptable, but these decisions should be justified.\n\n2. Verify that a secure channel with a secure handshake (such as TLS/SSL) is used between the application and the server.\n\n3. Verify that the content (which is enabled through a purchase) is not in the APK in a way that hackers can access the files and copy them to any other packages.\n    - Verify that the content is encrypted when moved to the client from the server. If possible, the encrypted content should be application-specific, in a way that does not allow its use on other devices and applications.\n    - Verify that a unique element of the application is used to encrypt the content (such as a Universal Unique Identifier, UUID)\n\n4. Check that Order ID and Developer Payload values are verified against the request values.\n\n5. Verify that secure random generators (`SecureRandom`) are used to generate random numbers for Developer Payloads. \n\n6. Verify that the code is obfuscated.\n\n7. Verify that a revocation scheme is designed and implemented for the purchased items.",
    "weakness_title_read_only": "Insufficient Verification of Data Authenticity",
    "weakness_id_read_only": "P244",
    "weakness": "b804db70-a48e-4d47-8c34-d8ee26babd77",
    "tags": "",
    "countermeasure_priority": "3",
    "phase": "testing",
    "created": "2016-03-02T15:09:54.251000-05:00",
    "last_updated": "2021-06-25T14:47:53.691000-04:00",
    "custom": "False",
    "rules": "3e46c566-5461-41fb-99b7-52df39f28c6d AND 64e2a4e5-efe8-4a19-8b5f-b835d963a40c",
    "rules_read_only": "A1106 AND A715"
  },
  {
    "countermeasure_id": "T449",
    "universal_id": "6f89abd6-f3a0-49eb-84be-b844584cb5d7",
    "countermeasure_name": "Manage the visibility of information and actions in iOS 3D touch preview window",
    "countermeasure_solution": "Apple's 3D Touch feature in iOS 9 allows users to access app data and perform app-specific actions by long pressing the app icon. This may make sensitive functions or confidential data available without authentication. For example, a user may preview bank account information or make transactions through a banking app without going through any required authentication.\n\nIt is important to hide private information and disable sensitive actions in the 3D Touch preview area as described here:\n\n- Properly design and set *previewProvider* in the `UIContextMenuConfiguration:` return object of `contextMenuInteraction(_:configurationForMenuAtLocation:)` method . Do so in a way that does not reveal any private information without authentication.\n\n- Carefully implement the `actionWithTitle:style:handler:` method for any function you need to present in the *peek quick action* area. If an action requires authentication, add code to the *handler* block to prompt for authentication before further proceeding.\n\n## References\n\n- [3D Touch APIs](https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/Adopting3DTouchOniPhone/3DTouchAPIs.html)\n- [UIPreviewAction Class Reference](https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIPreviewAction_Class/index.html)\n- [UIViewControllerPreviewing Protocol Reference](https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIViewControllerPreviewing_Protocol/index.html)",
    "weakness_title_read_only": "Missing Authentication for Critical Functions",
    "weakness_id_read_only": "P203",
    "weakness": "1fd1f018-67e6-45b9-9ef4-4a7af3fd3ed6",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "development",
    "created": "2016-03-19T16:04:10.867000-04:00",
    "last_updated": "2021-08-03T11:25:00.131000-04:00",
    "custom": "False",
    "rules": "3657f540-0b47-49b3-9a4d-69412ec692d6",
    "rules_read_only": "A714"
  },
  {
    "countermeasure_id": "T450",
    "universal_id": "0907052b-2411-4fda-8cd3-ba92735a0bbe",
    "countermeasure_name": "Test that access to the items on the iOS 3D Touch preview is adequately restricted",
    "countermeasure_solution": "Follow these steps to verify that private information or sensitive actions are not accessible through the *Peek and Pop* menu without proper authentication:\n\n1. Long press the app icon on the Home screen until the preview menu shows up.\n2. Verify that no confidential data is presented in the preview menu.\n    - In this case, confidential data is any data that needs further authentication to be reviewed.\n    - Otherwise, this test __fails__.\n3. Check if there are any sensitive actions available in the *peek quick action* area.\n    - Try performing each of them.\n    - This test __fails__ if the app continues with performing any sensitive actions without prompting for authentication.",
    "weakness_title_read_only": "Missing Authentication for Critical Functions",
    "weakness_id_read_only": "P203",
    "weakness": "1fd1f018-67e6-45b9-9ef4-4a7af3fd3ed6",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2016-03-19T16:06:59.421000-04:00",
    "last_updated": "2021-06-25T14:47:37.947000-04:00",
    "custom": "False",
    "rules": "3657f540-0b47-49b3-9a4d-69412ec692d6",
    "rules_read_only": "A714"
  },
  {
    "countermeasure_id": "T451",
    "universal_id": "15324b44-5448-4d34-924d-1a14a7cb4cc6",
    "countermeasure_name": "Disable index and search capabilities for confidential content on iOS",
    "countermeasure_solution": "Apple introduced global index and search in iOS 9. By making an app's content searchable, users can access content and activities deep within the app through *Handoff*, *Spotlight* and *Safari* search results, and *Siri* suggestions. Follow these guidelines to disable this feature for confidential content and sensitive activities:\n\n- For any instance of *NSUserAcivity* with sensitive content:\n    - Set the value of ***eligibleForSearch*** and ***eligibleForPublicIndexing*** attributes to `NO` if your app does not require this feature.\n\n- If search and index capabilities are part of the app requirements:\n    - Implement the `application:continueUserActivity:restorationHandler:` method in the app delegate to properly check for the type of the incoming activity and handle any required authentication.\n\n- Also, do not include any confidential information in `NSUserActivity`'s properties because this metadata will be indexed to enrich search results.\n    - Confidential information includes *title*, *userInfo*, and ***contentAttributeSet***.\n\n## References\n\n- [Index Activities and Navigation Points](https://developer.apple.com/library/ios/documentation/General/Conceptual/AppSearch/Activities.html)\n- [NSUserActivity Class Reference](https://developer.apple.com/library/ios/documentation/Foundation/Reference/NSUserActivity_Class/index.html)",
    "weakness_title_read_only": "Information leak through indexing and searching",
    "weakness_id_read_only": "P780",
    "weakness": "f8d51641-9bbc-48ab-91fd-b970674933f2",
    "tags": "",
    "countermeasure_priority": "3",
    "phase": "development",
    "created": "2016-03-19T20:37:27.829000-04:00",
    "last_updated": "2021-06-25T14:47:50.750000-04:00",
    "custom": "False",
    "rules": "3657f540-0b47-49b3-9a4d-69412ec692d6",
    "rules_read_only": "A714"
  },
  {
    "countermeasure_id": "T452",
    "universal_id": "74bd5984-56ae-4ffd-b26d-08fc859439e7",
    "countermeasure_name": "Verify that index and search capabilities are disabled for confidential content on iOS",
    "countermeasure_solution": "Follow these instructions to verify that the confidential content of your app is not indexed on an iOS device:\n\n- Verify that none of the ***eligibleForSearch*** and ***eligibleForPublicIndexing*** attributes of *NSUserAcivity* (with confidential content) are set to *YES*.\n    - Unless it is a documented requirement of the app.\n    - Otherwise, this test __fails__.\n\n- If search and index capabilities are part of the app requirements, verify that the `application:continueUserActivity:restorationHandler:` method in the app delegate properly checks the validity of the activity type upon receipt, and prompts for authentication if necessary.\n    - Otherwise, this test __fails__.\n\n- Check the metadata that is added to *NSUserAcivity*'s properties, specifically the data added to `contentAttributeSet`.\n    - This test __fails__ if any non-public information is provided to these indexable attributes.",
    "weakness_title_read_only": "Information leak through indexing and searching",
    "weakness_id_read_only": "P780",
    "weakness": "f8d51641-9bbc-48ab-91fd-b970674933f2",
    "tags": "",
    "countermeasure_priority": "3",
    "phase": "testing",
    "created": "2016-03-19T20:40:18.860000-04:00",
    "last_updated": "2021-06-25T14:47:50.988000-04:00",
    "custom": "False",
    "rules": "3657f540-0b47-49b3-9a4d-69412ec692d6",
    "rules_read_only": "A714"
  },
  {
    "countermeasure_id": "T453",
    "universal_id": "7b367378-8ac5-4cdd-8d9c-57cc57c4bfed",
    "countermeasure_name": "Perform security function verification on a regular basis",
    "countermeasure_solution": "Follow these instructions to verify that your security measures are functioning correctly:\n\n1. Document and maintain a list of **security functions** in the system.\n    - For example, integrity verification, input validation, malware detection, firewall, and encryption.\n\n2. Consult with system security experts to **design** a proper verification process for the functions on the list.\n\n3. **Run** the process:\n    * As required by a privileged role\n    * At system transitional states (system startup, shutdown, and restart)\n    * On a regular schedule with an appropriate frequency\n\n4. **Notify** assigned roles of any test failures\n    - For example, by electronic alerts, console warning messages, and/or hardware notification such as alert sounds or lights.\n\n5. Take proper **action** on failures based on the importance of the failed function and the criticality of the system it's on.\n    - For example, restart or shut down the system, or another action.\n    * **Note**: Failure of a trivial test should not cause a system halt during a critical operation.\n        - Make sure the action you take is proportional to the severity of the security function that fails.",
    "weakness_title_read_only": "Lack of security function verification",
    "weakness_id_read_only": "P781",
    "weakness": "ee2815f2-4c99-45d8-b956-187faa040f25",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "requirements",
    "created": "2016-03-22T16:22:52.803000-04:00",
    "last_updated": "2021-06-25T14:47:59.910000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T454",
    "universal_id": "2a832cca-e6ba-4f9a-beaa-a19ad4f3b75d",
    "countermeasure_name": "Verify the performance of security function verification processes",
    "countermeasure_solution": "This series of tests helps you determine the effectiveness of your security verifications. Details of your plan will vary according to the technologies, applications, and tools that you use.\n\nKeep the following guidelines in mind when you design your tests:\n\n1. Verify that all security functions of the system are identified and documented.\n2. Verify that properly designed test plans are in place for every security measure in the list.\n3. Test that the verification process starts as expected at predefined times.\n    - Otherwise, the test __fails__.\n4. Verify that a software notification or a hardware indication notifies assigned roles of any verification failure.\n    - Otherwise, the test __fails__.\n5. Test that the system takes the expected action (such as shutdown, or restart) on test failure.\n    - Otherwise, the test __fails__.",
    "weakness_title_read_only": "Lack of security function verification",
    "weakness_id_read_only": "P781",
    "weakness": "ee2815f2-4c99-45d8-b956-187faa040f25",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2016-03-22T16:28:27.220000-04:00",
    "last_updated": "2021-06-25T14:47:59.797000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T456",
    "universal_id": "fda30aa2-fd37-4dac-89b0-44eefe1a3bd0",
    "countermeasure_name": "Change default security settings to the most stringent ones and disable unnecessary services and modules",
    "countermeasure_solution": "Follow these instructions to decrease the possibility of exploits through excessive capabilities:\n \n- Change the default/basic security settings to the most stringent settings available for the device, application, container or component in use. This will help to reduce the attack surface of the system or software. For example, basic security settings for a device might enable Bluetooth connectivity by default, which can make the device vulnerable to different types of attacks.\n \n - Maintain a list of system components and server modules, including all available functions, services, protocols, and ports. You can refer to the framework/device/component documentation to help compile the list, which you should review periodically.\n \n - In addition to listing capabilities manually, use scanning tools to identify unnecessary modules, open ports, and available services, and then add those findings to the list of system components and server modules.\n \n - Configure the system and all its components to provide only necessary functionality, disabling all inessential modules, functions, services, protocols, and ports. For example, a directory listing module, HTTP or FTP protocols, or JTAG and USB ports. Disable any unnecessary ports to ensure operation with a minimum number of open ports.  \n \n - If it is feasible, limit the functionality of system components to a single function per component/device. For example, do not run a file sharing server on the same host as a DNS server.",
    "weakness_title_read_only": "Running with Excessive Functionalities and Capabilities",
    "weakness_id_read_only": "P782",
    "weakness": "d12bf8a0-ba19-497a-b53f-a0114737042d",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2016-04-19T16:47:28.084000-04:00",
    "last_updated": "2023-03-17T16:49:18.052000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T457",
    "universal_id": "9c23472a-19d9-45c0-bec0-94db2c41e6a1",
    "countermeasure_name": "Verify that unnecessary services and capabilities are disabled",
    "countermeasure_solution": "Follow these instructions to make sure excessive system capabilities are disabled:\n\n- Make sure the list of system components and capabilities is complete and updated.\n    - This includes functions, services, protocols, and ports.\n\n- Test that any capability on the list marked as unnecessary is properly disabled.\n    - Otherwise, this test __fails__.",
    "weakness_title_read_only": "Running with Excessive Functionalities and Capabilities",
    "weakness_id_read_only": "P782",
    "weakness": "d12bf8a0-ba19-497a-b53f-a0114737042d",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2016-04-19T16:50:19.684000-04:00",
    "last_updated": "2021-06-25T14:47:55.814000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T458",
    "universal_id": "c02f9cb4-dd1d-4af4-930f-bafcce3b572c",
    "countermeasure_name": "Keep Jabber server components local to the XMPP server",
    "countermeasure_solution": "Use the following guidelines for keeping the Jabber server components local to the XMPP server:\n\n- Install the *Jabber Server Component* on the same *XMPP Server* or on an XMPP server on the same local area network (LAN).\n\n- Make sure that the 'Jabber Component Protocol' port is closed to the Internet.",
    "weakness_title_read_only": "Missing TLS and SASL Support in XMPP Server Components",
    "weakness_id_read_only": "P783",
    "weakness": "5f37d8c1-e21f-4e3c-8ce4-0ad10b04eab2",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "architecture-design",
    "created": "2016-04-25T15:30:58.297000-04:00",
    "last_updated": "2021-06-25T14:47:52.710000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T459",
    "universal_id": "3d8bc71d-2e96-4abe-b152-28ab2bb76a9f",
    "countermeasure_name": "Remove factory default reset button or key metadata used for IoT device registration",
    "countermeasure_solution": "To prevent hijacking the device by reinitiating the registration process, block access to at least one of the key metadata or the factory default reset button from unauthorized people after the successful installation of the device. To achieve this, either:\n\n- Seal or hide the factory default reset button and make sure it is possible to restrict access to the reset button in a way that it is only accessible by the owner or the licensed maintenance personnel.\n\n- Keep registration metadata secret:\n    1. Place the key metadata (QR-code) on the package or on a separate paper that is not on the device itself, and ask the device owner to keep it secret.\n        - Or if you are using an electronic device to present the key metadata (for instance by displaying a QR-code on a display on the device) make sure the information cannot be displayed without authenticating the user or breaking a seal, or through other means to protect the device.\n    \n    2. Prevent the key metadata from being shown in public searches by either:\n        1. Including a **KEY** tag in the key metadata.\n            - The **KEY** tag is not searchable nor presented in search results.\n        2. Removing, truncating, or changing some key metadata after a successful ownership claim.\n            - Partial information is not sufficient for a successful ownership claim.\n        3. Removing the device from the registry.\n\n- Since the **KEY** tag is not searchable, it is ideal for providing secrets shared only between the device and the owner.\n    - By providing a sufficiently long **KEY** value in the key metadata, required to claim the device, guessing the information will be sufficiently difficult.\n    - Even when other metadata is available.\n\n- Even though the **KEY** tag is not searchable or available in search results, it is better to be cleared by the device after a successful claim if the device needs to stay registered.\n    - This is to make sure the key cannot be learned by looking into the database of the registry, or by some other means.",
    "weakness_title_read_only": "IoT device hijacking through re-initiating device registration",
    "weakness_id_read_only": "P784",
    "weakness": "b5565272-9c02-442e-bd3d-ef02921a23b6",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "architecture-design",
    "created": "2016-04-26T16:32:33.714000-04:00",
    "last_updated": "2021-06-25T14:47:49.340000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T460",
    "universal_id": "d6542383-0505-43a0-8022-26a85ba674c9",
    "countermeasure_name": "Limit the length and number of XMPP registration tags provided by IoT devices",
    "countermeasure_solution": "XMPP-XEP-347 does not restrict the length of tag names or the number of tags that can be provided by devices during the registration process. This opens up the possibility of tag spam. Use the following guidelines to limit the length and number of XMPP registration tags provided by IoT devices.\n\nMalicious devices could fill the database of the device registry by reporting random tag names until the database is full. To prevent these attacks, the registry must limit the tags it allows to be stored in the database. The registry must, however, allow the storage of the predefined tag names defined in XMPP-XEP-347. Whether the device registry has a configurable list of approved tags (that can be stored), or if it sanitizes tags is an implementation decision.",
    "weakness_title_read_only": "Uncontrolled Resource Consumption (Resource Exhaustion)",
    "weakness_id_read_only": "P293",
    "weakness": "1bee9747-5d60-43f1-8e0f-e261388a5c25",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "requirements",
    "created": "2016-05-03T17:49:48.645000-04:00",
    "last_updated": "2021-06-25T14:47:40.202000-04:00",
    "custom": "False",
    "rules": "35a51c3b-c010-4e52-97e6-de17d3e0dc89",
    "rules_read_only": "A1115"
  },
  {
    "countermeasure_id": "T461",
    "universal_id": "f596df00-3553-4c08-a1ec-a0ece0626489",
    "countermeasure_name": "Protect XMPP in-band registration",
    "countermeasure_solution": "Since in-band registration support is optional in XMPP, do any one of the following:\n\n- Disable in-band registration in your XMPP service and create a web registration form with **CAPTCHA** support to prevent abusing the registration interface by spammers. \n\n- Use an implementation of an XMPP server that supports CAPTCHA in in-band registration. Some implementations provide this extra feature. \n\n- Use a **KEY** and a **SECRET** as specified in \"[XEP-348: Signing Forms](https://xmpp.org/extensions/xep-0348.html)\" to sign the requests when an account is being created. This allows the server to keep track of the person that is responsible for creating particular accounts, and facilitates putting a limit on the number of accounts that can be created.\n\n**Note:** CAPTCHA support will not completely stop spammers, but it acts as a barrier and makes the attack a bit more difficult.",
    "weakness_title_read_only": "Missing Authentication in XMPP In-band Registration",
    "weakness_id_read_only": "P785",
    "weakness": "2d4584ee-a6cd-43aa-8d58-2b880e197aad",
    "tags": "",
    "countermeasure_priority": "3",
    "phase": "requirements",
    "created": "2016-05-10T17:42:01.236000-04:00",
    "last_updated": "2021-06-25T14:47:41.498000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T462",
    "universal_id": "0a5f695d-fc8c-487f-8c74-3222eb00b33a",
    "countermeasure_name": "Limit the resources allocated to decompression of XMPP stanzas",
    "countermeasure_solution": "Use the following guidelines for limiting the resources needed for XMPP stanza decompression:\n\n- Limit the resources allocated to application-layer compression on an XMPP server when decompressing XMPP stanzas. If the server fails to do so, the decompression process can monopolize the CPU usage and consume the entire available memory.\n\n- Several XMPP server implementations that support application-layer compression (XEP-0138) suffer from an uncontrolled resource consumption vulnerability.\n    - This vulnerability can be remotely exploited by attackers to mount denial of service (DoS) attacks by sending highly compressed XML elements (called \"xmppbombs\") over XMPP streams.\n\n- You can also disable XMPP-level compression as a temporary workaround.",
    "weakness_title_read_only": "Uncontrolled Resource Consumption (Resource Exhaustion)",
    "weakness_id_read_only": "P293",
    "weakness": "1bee9747-5d60-43f1-8e0f-e261388a5c25",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "requirements",
    "created": "2016-05-10T18:18:44.736000-04:00",
    "last_updated": "2021-06-25T14:47:40.269000-04:00",
    "custom": "False",
    "rules": "39b9fd6f-9013-43af-9534-a7a244e59659",
    "rules_read_only": "A1112"
  },
  {
    "countermeasure_id": "T463",
    "universal_id": "cabdfefb-fc98-4f79-a2e3-4785dd052d00",
    "countermeasure_name": "Verify that Jabber server components are local to the XMPP server",
    "countermeasure_solution": "Use the following guidelines for verifying that Jabber server components are local to the XMPP server:\n\n- Verify that Jabber components are on the same local network as the XMM server.\n\n- Verify that the \"Jabber Component Protocol\" port is closed to the Internet.",
    "weakness_title_read_only": "Missing TLS and SASL Support in XMPP Server Components",
    "weakness_id_read_only": "P783",
    "weakness": "5f37d8c1-e21f-4e3c-8ce4-0ad10b04eab2",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2016-05-31T11:40:33.602000-04:00",
    "last_updated": "2021-06-25T14:47:53.178000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T464",
    "universal_id": "5c74d53c-b2ce-4dcf-a5fe-b89eceb4235d",
    "countermeasure_name": "Verify the access control mechanisms for the factory default reset button or the key metadata used for device registration",
    "countermeasure_solution": "Do one of the following to verify access control mechanisms and key metadata:\n\n- Verify that access to the factory default reset button can be restricted to the owner, or the licensed maintenance personnel after the successful device registration.\n\n- Test that registration metadata is kept secret:\n    1. Verify that the key metadata (QR-code) is placed on the package or a separate paper (and not on the device itself) and the required guidance is provided to the device owner to keep it secret, or if the device has a display for showing the key metadata, the key metadata is shown to the owner just after appropriate authentication of the user.\n    2. Test that the key metadata is not available in public searches.\n        - Search for the public devices on the \"registry server\" and see if your device's key metadata is shown in the search results.\n        - If the key metadata is shown, unchanged, the test __fails__.",
    "weakness_title_read_only": "IoT device hijacking through re-initiating device registration",
    "weakness_id_read_only": "P784",
    "weakness": "b5565272-9c02-442e-bd3d-ef02921a23b6",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2016-05-31T11:59:13.706000-04:00",
    "last_updated": "2021-06-25T14:47:48.629000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T465",
    "universal_id": "2b0e391b-5d33-4411-96f2-30897d59db21",
    "countermeasure_name": "Test that the length and the number of XMPP registration tags provided by IoT devices are limited",
    "countermeasure_solution": "Use the following guidelines for testing that the length and number of XMPP registration tags provided by IoT devices are limited:\n\n- Use your IoT device to send very long tags (longer than the specified threshold set by your app), or a huge number of tags (more than the specified threshold by your app) to the \"registry server\" during the registration process.\n\n- Verify that the server returns an error, or just simply ignores the long or excessive tags sent by the device.\n    - This test __fails__ if the server accepts the excessive data, and the device owner can claim ownership of the device using those exact metadata tags.",
    "weakness_title_read_only": "Uncontrolled Resource Consumption (Resource Exhaustion)",
    "weakness_id_read_only": "P293",
    "weakness": "1bee9747-5d60-43f1-8e0f-e261388a5c25",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2016-05-31T12:17:22.718000-04:00",
    "last_updated": "2021-06-25T14:47:40.341000-04:00",
    "custom": "False",
    "rules": "35a51c3b-c010-4e52-97e6-de17d3e0dc89",
    "rules_read_only": "A1115"
  },
  {
    "countermeasure_id": "T466",
    "universal_id": "fff0584e-6f6a-4755-8366-37220cb866c4",
    "countermeasure_name": "Verify that XMPP's in-band registration cannot be spammed",
    "countermeasure_solution": "Verify any of the following items for XMPP in-band registration:\n\n   - It is disabled on your XMPP server deployment.\n\n   - It requires a CAPTCHA before creating a new account and changing passwords.\n\n   - It requires the request to be signed, and refuses unsigned registration or password change inquiries.",
    "weakness_title_read_only": "Missing Authentication in XMPP In-band Registration",
    "weakness_id_read_only": "P785",
    "weakness": "2d4584ee-a6cd-43aa-8d58-2b880e197aad",
    "tags": "",
    "countermeasure_priority": "3",
    "phase": "testing",
    "created": "2016-05-31T12:27:04.534000-04:00",
    "last_updated": "2021-06-25T14:47:41.628000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T467",
    "universal_id": "1ba05e53-f1fe-4e52-8118-2434e2220b9d",
    "countermeasure_name": "Test that the resources allocated to decompression of XMPP stanzas are limited",
    "countermeasure_solution": "Test either of the following items:\n\n- Verify that XMPP-level compression is disabled on your XMPP deployment.\n\n- Test that the resources allocated to application-layer compression are limited on an XMPP server when decompressing XMPP stanzas.\n    - To test for this, send a highly compressed XMPP stanza (called \"xmppbomb\") to your XMPP server and verify that the CPU and memory usage of the server does not fluctuate heavily, and the server stays responsive during and after decompression.\n    - You can search for different xmppbomb proof of concepts on the Internet. An example is provided [here](https://hackerone.com/reports/5928).",
    "weakness_title_read_only": "Uncontrolled Resource Consumption (Resource Exhaustion)",
    "weakness_id_read_only": "P293",
    "weakness": "1bee9747-5d60-43f1-8e0f-e261388a5c25",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2016-05-31T12:37:58.081000-04:00",
    "last_updated": "2021-06-25T14:47:40.233000-04:00",
    "custom": "False",
    "rules": "39b9fd6f-9013-43af-9534-a7a244e59659",
    "rules_read_only": "A1112"
  },
  {
    "countermeasure_id": "T468",
    "universal_id": "8c35f47d-d185-4de7-9c0b-37b589f8eda2",
    "countermeasure_name": "Develop an RFID usage, safety, and privacy policy",
    "countermeasure_solution": "Follow these guidelines to develop an RFID usage, safety, and privacy policy:\n\n- Identify the standards and regulations that the system needs to comply with.\n\n- Perform a risk assessment to determine the hazards of electromagnetic radiation to people (HERP), ordnance (HERO), fuel (HERF), and other materials, such as medical products and pharmaceuticals.\n    - Establish safety policies based on the results of those assessments, and with regard to applicable standards and regulations that the organization needs to abide by.\n\n- Perform a Privacy Impact Assessment (PIA).\n    - The results of the PIA can affect implementation decisions.\n    -  For example, a system may need to strengthen its security measures by using stronger authentication mechanisms, or to implement a \"kill\" command to deactivate the tags.\n    - If implementing a kill command, adopt an opt-in approach in which people can choose to keep the RFID tag alive.  This is helpful for when people will want to use the additional benefits of RFID.\n    - A good guideline for privacy assessment can be found in [Privacy and Data Protection Impact Assessment Framework for RFID Applications](http://cordis.europa.eu/fp7/ict/enet/documents/rfid-pia-framework-final.pdf).\n\n- Establish the policies governing the sharing of the RFID system's data with other organizations.\n    - This includes passwords and key management policies, and the way the keys and credentials are shared among organizations that need to operate the same tags.\n    - Prepare any Memorandum of Agreement (MOA) or Memorandum of Understanding (MOU) documents that need to be understood and accepted by both parties.\n\n- Conduct the design and development process taking into account all the above policies.",
    "weakness_title_read_only": "Lack of enforced usage, safety and privacy policies (for an RFID system)",
    "weakness_id_read_only": "P786",
    "weakness": "d6e2a1d1-15ef-47d0-8f8b-29ec5f7c91c7",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "architecture-design",
    "created": "2016-06-13T14:16:37.797000-04:00",
    "last_updated": "2021-10-29T14:24:41.593000-04:00",
    "custom": "False",
    "rules": "a1d487ae-0462-4027-b802-3f8fda3bc4c2 AND 77178d7c-6a9a-43c5-9993-323fc6d763f4 AND 3ccf78b5-809f-4efa-a2d0-01ae61dbe793",
    "rules_read_only": "A1123 AND A1124 AND A1121"
  },
  {
    "countermeasure_id": "T469",
    "universal_id": "d99dab54-ebda-47cf-aa18-a94b95552ecb",
    "countermeasure_name": "Verify that established RFID usage, safety, and privacy policies are enforced",
    "countermeasure_solution": "Follow these steps to check that suitable RFID policies are established and enforced:\n\n- Verify that all standards and regulations the application needs to comply with are identified and used in the policy development process.\n\n- Verify that the hazards of electromagnetic radiation to people (HERP), ordnance (HERO), fuel (HERF), and other materials are measured.\n    - Ensure that these hazards are within an acceptable range.\n\n- Verify that a Privacy Impact Assessment (PIA) is performed.\n    - Ensure that the PIA results are used in the design and implementation processes.\n\n- Verify that the policies governing the sharing of the RFID system's data with other organizations are well documented.\n    - Ensure that appropriate Memorandum of Agreement (MOA) or Memorandum of Understanding (MOU) documents have been prepared and signed.",
    "weakness_title_read_only": "Lack of enforced usage, safety and privacy policies (for an RFID system)",
    "weakness_id_read_only": "P786",
    "weakness": "d6e2a1d1-15ef-47d0-8f8b-29ec5f7c91c7",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2016-06-13T14:24:43.441000-04:00",
    "last_updated": "2021-10-29T14:24:41.604000-04:00",
    "custom": "False",
    "rules": "a1d487ae-0462-4027-b802-3f8fda3bc4c2 AND 77178d7c-6a9a-43c5-9993-323fc6d763f4 AND 3ccf78b5-809f-4efa-a2d0-01ae61dbe793",
    "rules_read_only": "A1123 AND A1124 AND A1121"
  },
  {
    "countermeasure_id": "T470",
    "universal_id": "30a7620e-bf36-487a-8f1f-8c7d63445911",
    "countermeasure_name": "Include physical access control in design of RFID systems",
    "countermeasure_solution": "Despite the availability of all other security measures, in some cases, physical access control is the only security measure that can prevent unauthorized reading or manipulation of RFID tags. Physical access control may require detecting readers/tags and preventing them from entering a restricted zone. Design the system by following these guidelines:\n\n- Identify the areas that need to be free from any external readers or tags.\n    - You need to measure the effective range of signal transmission for the tags and devices to demarcate those restricted areas.\n- Design and implement methods to identify RFID tags and readers at the entrances.\n- Design safeguards that prevent unauthorized personnel from entering the restricted areas.",
    "weakness_title_read_only": "Improper authentication of RFID tags/readers and possibility of spoofing",
    "weakness_id_read_only": "P787",
    "weakness": "230e341e-ce72-4a18-941f-26503334c8ff",
    "tags": "",
    "countermeasure_priority": "2",
    "phase": "architecture-design",
    "created": "2016-06-13T14:53:25.456000-04:00",
    "last_updated": "2021-10-29T14:18:15.278000-04:00",
    "custom": "False",
    "rules": "89a5e903-a2cd-4234-b0ea-714e3da7fee9 AND 77178d7c-6a9a-43c5-9993-323fc6d763f4;77178d7c-6a9a-43c5-9993-323fc6d763f4 AND 2ef3b940-05af-4cb9-bfc6-ed2fee4c8d42",
    "rules_read_only": "A1082 AND A1124;A1124 AND A728"
  },
  {
    "countermeasure_id": "T471",
    "universal_id": "87250215-f399-4f38-a3be-2e5646e522aa",
    "countermeasure_name": "Verify that adequate physical access control is included in design of RFID system",
    "countermeasure_solution": "Verify that design includes adequate measures to enforce physical RFID access control:\n\n- The areas that need to be free from any external readers or tags are identified.\n- Adequate measures are examined and taken to identify RFID tags/readers at entrances.\n- A plan is in place to prevent unauthorized personnel from entering those areas.",
    "weakness_title_read_only": "Improper authentication of RFID tags/readers and possibility of spoofing",
    "weakness_id_read_only": "P787",
    "weakness": "230e341e-ce72-4a18-941f-26503334c8ff",
    "tags": "",
    "countermeasure_priority": "2",
    "phase": "testing",
    "created": "2016-06-13T15:07:33.459000-04:00",
    "last_updated": "2021-10-29T14:18:15.290000-04:00",
    "custom": "False",
    "rules": "89a5e903-a2cd-4234-b0ea-714e3da7fee9 AND 77178d7c-6a9a-43c5-9993-323fc6d763f4;77178d7c-6a9a-43c5-9993-323fc6d763f4 AND 2ef3b940-05af-4cb9-bfc6-ed2fee4c8d42",
    "rules_read_only": "A1082 AND A1124;A1124 AND A728"
  },
  {
    "countermeasure_id": "T472",
    "universal_id": "8c52c9e5-9e90-4830-a035-4155cc43595e",
    "countermeasure_name": "Authenticate RFID reader before sending sensitive data or executing a command",
    "countermeasure_solution": "Design a multi-step process for the interaction between the tag and the RFID reader. Do not send any additional data that is not public (such as owner's data) to the reader unless the reader has been securely authenticated. The methods of authentication vary based on the capabilities of the RFID tag and may include:\n\n- Use of a password:\n    - The reader sends a password to the tag along with a read command or a command to be executed by the tag.\n    - Such as the \"kill\" command.\n\n- Challenge/response with keyed hash message authentication (HMAC):\n    - The tag sends a random value (challenge) to the reader.\n    - The reader calculates HMAC on the challenge with the symmetric key (that is assigned to the RFID tag).\n    - The tag verifies the HMAC (see the How-to for this countermeasure for more details).\n\n- Digital signatures:\n    - The tag sends a challenge to the reader.\n    - The reader uses its private key and calculates a digital signature on the challenge.\n    - The public key of the reader is stored on the tag, and the tag can verify the digital signature.\n    - Asymmetric encryption asks for a lot of computing power that is normally unavailable to passive RFID tags.\n\nThere are three major points to consider when designing the authentication mechanism:\n\n1. Use a secure random number generator to generate the random numbers (challenges). \n2. Use a long key where the computing power of the device allows. \n3. Do not use a weak proprietary cryptographic algorithm because they are usually weak and are not rigorously analyzed by security experts.",
    "weakness_title_read_only": "Improper authentication of RFID tags/readers and possibility of spoofing",
    "weakness_id_read_only": "P787",
    "weakness": "230e341e-ce72-4a18-941f-26503334c8ff",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "development",
    "created": "2016-06-13T15:22:49.440000-04:00",
    "last_updated": "2022-08-23T09:30:49.019000-04:00",
    "custom": "False",
    "rules": "2ef3b940-05af-4cb9-bfc6-ed2fee4c8d42",
    "rules_read_only": "A728"
  },
  {
    "countermeasure_id": "T473",
    "universal_id": "30134481-23b7-4bab-b40e-b655469c4e83",
    "countermeasure_name": "Verify that RFID tags authenticate readers",
    "countermeasure_solution": "For this test you need to be able to change the RFID reader's data or code. Follow these steps to verify that the tag properly authenticates the reader:\n\n- Alter the passwords or keys that allow the tag to verify the reader.\n\n- Send a read command to the RFID tag.\n\n- This test __fails__ if the data received from the RFID tag is anything but public data of the tag. Such as a public ID.\n\n- Send other commands that make changes to the RFID tag's data or kill the tag.\n\n- This test __fails__ if the commands are executed on the tag.\n\n- Check the length of keys and passwords, and verify that they are as long as the RFID capabilities allow. If a random generator is used in generating those items, verify that it is a secure random generator.",
    "weakness_title_read_only": "Improper authentication of RFID tags/readers and possibility of spoofing",
    "weakness_id_read_only": "P787",
    "weakness": "230e341e-ce72-4a18-941f-26503334c8ff",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2016-06-13T15:33:25.089000-04:00",
    "last_updated": "2021-10-29T14:18:15.316000-04:00",
    "custom": "False",
    "rules": "2ef3b940-05af-4cb9-bfc6-ed2fee4c8d42",
    "rules_read_only": "A728"
  },
  {
    "countermeasure_id": "T474",
    "universal_id": "7a92779e-c777-4660-8427-46ee8860e678",
    "countermeasure_name": "Authenticate RFID tags",
    "countermeasure_solution": "Authenticate the tag before trusting the tag's data. ___This is extremely important for the access control systems that rely on RFID cards/tags as the means of authentication___.\n\nConsider these points:\n\n- Verify that the tag's ID is valid\n    - Ensure that the ID is actually issued for the tag and matches one of the IDs in the database.\n\n- Implement the strongest authentication methods that could be implemented based on the tags' capabilities.\n    - Especially when reading the tag's data enables executing other commands.\n        - Such as when a door is opened each time a tag is sensed.\n\n- Use a keyed hash message authentication algorithm (HMAC) to verify that the secret key on the tag is valid.\n    - The tag (if capable of performing HMAC) should never send out its actual secret key.\n    - Send a challenge (securely generated random number) to the tag to calculate HMAC on it.\n    - Authenticate the tag by verifying that the ID of the tag and its secret key match.\n    - Always use a long key (as long as the RFID computation power permits, such as 128 bits).\n    - There are two major weaknesses that may exist in HMAC-based verification:\n        - Predictability of the random numbers.\n        - Short keys.\n\n- If the RFID tag is capable of performing asymmetric encryption, use an asymmetric encryption algorithm.\n    - Send a challenge to the tag, and ask it to create a digital signature using its private key.\n    - The private key is never sent out by the tag.\n    - The reader has the public key of the tag and can verify that the tag is the one that it claims.",
    "weakness_title_read_only": "Improper authentication of RFID tags/readers and possibility of spoofing",
    "weakness_id_read_only": "P787",
    "weakness": "230e341e-ce72-4a18-941f-26503334c8ff",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "development",
    "created": "2016-06-13T16:05:36.117000-04:00",
    "last_updated": "2021-10-29T14:18:15.327000-04:00",
    "custom": "False",
    "rules": "2ef3b940-05af-4cb9-bfc6-ed2fee4c8d42 AND 3ccf78b5-809f-4efa-a2d0-01ae61dbe793;2058e370-15ea-438f-9dfe-33bbba20751d AND 3ccf78b5-809f-4efa-a2d0-01ae61dbe793;89a5e903-a2cd-4234-b0ea-714e3da7fee9 AND 3ccf78b5-809f-4efa-a2d0-01ae61dbe793",
    "rules_read_only": "A728 AND A1121;A45 AND A1121;A1082 AND A1121"
  },
  {
    "countermeasure_id": "T475",
    "universal_id": "fdc843e8-e3c5-489a-8d69-542782a0cd2f",
    "countermeasure_name": "Check the integrity of RFID readings at the backend",
    "countermeasure_solution": "It is not always possible to identify errors or data manipulation just by looking at a reader's data. Follow these guidelines to check the integrity of data at the backend:\n\n- Devise a means to detect discrepancies at the backend by taking into account data collected through various readers. \n- Only accept an RFID reading if it follows an acceptable pattern. For example, make sure one RFID tag is not simultaneously used in many places.\n- Correct the errors (discrepancies in data patterns) in the database if they are caused by natural reader collision (reading a tag at the same time by several readers close to each other), or report the case if it is suspicious. For example, reading a tag ID in multiple locations that are far apart.",
    "weakness_title_read_only": "Possibility of tampering and lack of mechanisms to check the integrity of RFID data",
    "weakness_id_read_only": "P788",
    "weakness": "a9fc0fbb-2481-4409-adff-23d64d383a2f",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "requirements",
    "created": "2016-06-14T15:16:29.476000-04:00",
    "last_updated": "2021-10-29T14:19:49.092000-04:00",
    "custom": "False",
    "rules": "0b07fc15-1e13-4c03-b097-c7e222fc019a AND 3ccf78b5-809f-4efa-a2d0-01ae61dbe793;77178d7c-6a9a-43c5-9993-323fc6d763f4",
    "rules_read_only": "A718 AND A1121;A1124"
  },
  {
    "countermeasure_id": "T476",
    "universal_id": "3f0692d9-2b7f-4c53-94bc-24fbc48e94dc",
    "countermeasure_name": "Verify that the integrity of RFID readings is checked at the backend",
    "countermeasure_solution": "Use the following guidelines for verifying that the backend checks the integrity of RFID readings:\n\n- Consult the design and development teams to make sure RFID readings are verified against acceptable reading patterns at the backend.\n\n- Test these patterns in some simple scenarios. For example, read duplicate RFID tags (with the same ID), at a very short interval, and in different places.\n    - This test __fails__ if the system accepts the readings.",
    "weakness_title_read_only": "Possibility of tampering and lack of mechanisms to check the integrity of RFID data",
    "weakness_id_read_only": "P788",
    "weakness": "a9fc0fbb-2481-4409-adff-23d64d383a2f",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2016-06-14T15:41:28.825000-04:00",
    "last_updated": "2021-10-29T14:19:49.103000-04:00",
    "custom": "False",
    "rules": "77178d7c-6a9a-43c5-9993-323fc6d763f4;0b07fc15-1e13-4c03-b097-c7e222fc019a AND 3ccf78b5-809f-4efa-a2d0-01ae61dbe793",
    "rules_read_only": "A1124;A718 AND A1121"
  },
  {
    "countermeasure_id": "T477",
    "universal_id": "fdc63307-10f3-442d-8390-e3a15d5399c4",
    "countermeasure_name": "Check the integrity of RFID data in transit and on tags",
    "countermeasure_solution": "There are two types of RFID data tampering that need to be detected:\n\n- Tampering of the data stored on RFID tags (or counterfeit data).\n- Tampering of the data in transit. \n\nFollow these guidelines to detect data that has been tampered with:\n\n- Use a digital signature algorithm to sign the data that is stored on the RFID tags:\n    - Include time-stamps in the data-items that are signed.\n    - The RFID tag holds the data and its signature, then sends those two items to the reader when queried.\n    - The tag does not need to calculate the signature, which is normally too computationally expensive for the tags.\n    - This defense does not protect the system against tags being cloned, but assures that the data on the tag is consistent (the ID matches the data).\n\n- Verify the signature at the reader:\n    - The reader (or the central system that the reader is connected to) needs to have the public key of the issuer (of the signature) and must verify that the data is not modified.\n\n- Consider updating the data and signature on the tag:\n    - The reader can update the data and signature on the RFID tag, each time a transaction is performed. The reader (or the backend system) recalculates the signature and stores it on the tag again.\n    - Include the time-stamps in the signature.\n\n- Use a keyed hash message authentication algorithm (HMAC) to protect the integrity of the communication channel.\n    - This may not be possible for simple RFID tags, and in those cases is optional.\n    - However, the risks (modification of the data in transit) should be understood and accepted.\n    - If implemented, the tag and the reader need to have a shared key.\n    - The reader and the tag send (and verify) the HMAC of the message (along with the message itself) to the other side.",
    "weakness_title_read_only": "Possibility of tampering and lack of mechanisms to check the integrity of RFID data",
    "weakness_id_read_only": "P788",
    "weakness": "a9fc0fbb-2481-4409-adff-23d64d383a2f",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "requirements",
    "created": "2016-06-14T15:49:32.439000-04:00",
    "last_updated": "2021-10-29T14:19:49.119000-04:00",
    "custom": "False",
    "rules": "3ccf78b5-809f-4efa-a2d0-01ae61dbe793",
    "rules_read_only": "A1121"
  },
  {
    "countermeasure_id": "T478",
    "universal_id": "c826c4a1-d238-47aa-b553-7e4838d48fce",
    "countermeasure_name": "Verify that the integrity of RFID data in transit and on tags is checked at the reader",
    "countermeasure_solution": "Use the following guidelines for verifying that the reader checks the integrity of RFID data in transit and on tags:\n\n- Consult the design and development teams to determine the methods used for data integrity verification.\n\n- Place inconsistent data (such as non-matching ID and data) on the tags, and test that the reading is accepted.\n    - This test __fails__ if the reading is accepted.",
    "weakness_title_read_only": "Possibility of tampering and lack of mechanisms to check the integrity of RFID data",
    "weakness_id_read_only": "P788",
    "weakness": "a9fc0fbb-2481-4409-adff-23d64d383a2f",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2016-06-14T16:07:53.511000-04:00",
    "last_updated": "2021-10-29T14:19:49.129000-04:00",
    "custom": "False",
    "rules": "3ccf78b5-809f-4efa-a2d0-01ae61dbe793",
    "rules_read_only": "A1121"
  },
  {
    "countermeasure_id": "T479",
    "universal_id": "9f77011a-e7c8-4d55-b4bd-23d672abe3b1",
    "countermeasure_name": "Mitigate the risks of RFID missed identifications",
    "countermeasure_solution": "Jamming an RFID reader or shielding a tag can prevent the reader from identifying the tag. Make sure you consider these points in the design of the system:\n\n- There will always be missed authentication cases.\n    - It is wrong to expect a 100% success rate and to rely heavily on the identification of tags (for business or critical decisions).\n\n- Protect the readers against jamming.\n    - Such as through physical access control and preventing certain electromagnetic devices from entering an area.\n\n- Devise a means to detect (unauthorized) RFID shields in an area.\n\n- Design the system taking into account the possibility of RFID jamming or shielding.\n    - For example, know that the system is only good for voluntary authentication.\n    - This means that it only works when it is in the interest of the user to be identified.\n    - In other words the system cannot detect a tag that is concealed and shielded.",
    "weakness_title_read_only": "Possibility of tampering and lack of mechanisms to check the integrity of RFID data",
    "weakness_id_read_only": "P788",
    "weakness": "a9fc0fbb-2481-4409-adff-23d64d383a2f",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "architecture-design",
    "created": "2016-06-14T16:18:01.062000-04:00",
    "last_updated": "2021-10-29T14:19:49.139000-04:00",
    "custom": "False",
    "rules": "2058e370-15ea-438f-9dfe-33bbba20751d AND 77178d7c-6a9a-43c5-9993-323fc6d763f4",
    "rules_read_only": "A45 AND A1124"
  },
  {
    "countermeasure_id": "T480",
    "universal_id": "f7253953-8671-4e38-b3d7-995458e0c7cd",
    "countermeasure_name": "Include a tamper resistance feature for RFID tags",
    "countermeasure_solution": "Implement tamper resistance (or tamper alarm) features on RFID tags, or use tags with these features. The use of RFID for tamper resistance is twofold: to protect the tags, or to protect the object the tag is attached to.\n\nFollow these instructions (where applicable):\n\n- ___Use RFID tags with tamper resistance features:___\n    - RFID tags can be equipped with tamper detection and resistance features. For example, the antenna can be made so fragile that it breaks if any tampering is attempted or any pressure is exerted.\n    - Since the memory is still accessible after breaking the antenna, a good tamper resistance feature should automatically erase the memory if the tag is unusable.\n    - Erase any sensitive data if tampering is detected. This may not be possible in typical passive tags.\n\n- ___Use RFID tags for detecting tampering:___\n    - RFID tags are used for tamper detection in many applications.\n    - In those applications, the RFID tag is connected to sensors that measure variables, such as temperature, force, or humidity. These values can be used to detect cases of tampering, misuse, or abuse of the equipment.\n    - Several RFID tags can also get attached to an object at different locations (such as on different sides of the object), and any inconsistency in the condition of those tags can trigger a tamper detection alarm.",
    "weakness_title_read_only": "Possibility of tampering and lack of mechanisms to check the integrity of RFID data",
    "weakness_id_read_only": "P788",
    "weakness": "a9fc0fbb-2481-4409-adff-23d64d383a2f",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "requirements",
    "created": "2016-06-14T16:31:38.409000-04:00",
    "last_updated": "2021-10-29T14:19:49.154000-04:00",
    "custom": "False",
    "rules": "2058e370-15ea-438f-9dfe-33bbba20751d AND a1d487ae-0462-4027-b802-3f8fda3bc4c2;89a5e903-a2cd-4234-b0ea-714e3da7fee9 AND a1d487ae-0462-4027-b802-3f8fda3bc4c2;a1d487ae-0462-4027-b802-3f8fda3bc4c2 AND 2ef3b940-05af-4cb9-bfc6-ed2fee4c8d42",
    "rules_read_only": "A45 AND A1123;A1082 AND A1123;A1123 AND A728"
  },
  {
    "countermeasure_id": "T481",
    "universal_id": "f34f7327-fccb-4778-b65a-3354677c8424",
    "countermeasure_name": "Verify that RFID tags are equipped with tamper resistance features",
    "countermeasure_solution": "Use the following guidelines for verifying that RFID tags include tamper resistant features:\n\n- Verify that RFID tags, selected or designed/manufactured, are equipped with tamper resistance features (where possible). For example, verify that the tags have frangible antennas that prevent tinkering of the tags.",
    "weakness_title_read_only": "Possibility of tampering and lack of mechanisms to check the integrity of RFID data",
    "weakness_id_read_only": "P788",
    "weakness": "a9fc0fbb-2481-4409-adff-23d64d383a2f",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2016-06-14T16:41:08.027000-04:00",
    "last_updated": "2021-10-29T14:19:49.165000-04:00",
    "custom": "False",
    "rules": "2058e370-15ea-438f-9dfe-33bbba20751d AND a1d487ae-0462-4027-b802-3f8fda3bc4c2;89a5e903-a2cd-4234-b0ea-714e3da7fee9 AND a1d487ae-0462-4027-b802-3f8fda3bc4c2;a1d487ae-0462-4027-b802-3f8fda3bc4c2 AND 2ef3b940-05af-4cb9-bfc6-ed2fee4c8d42",
    "rules_read_only": "A45 AND A1123;A1082 AND A1123;A1123 AND A728"
  },
  {
    "countermeasure_id": "T482",
    "universal_id": "cf0bfb49-b9f7-40b3-93a7-1ea0b855cca9",
    "countermeasure_name": "Secure password-based authentication for RFID tags",
    "countermeasure_solution": "Follow these instructions to secure RFID password handling to the extent that is possible (despite the low capacity of RFID tags in handling complex password management schemes). Implement these features:\n\n- Lock the RFID tag after a number of unsuccessful attempts at executing commands (including read) on the tags with wrong passwords (for a limited amount of time). \n    - Due to the low complexity of RFID passwords, it is very easy to try all the possible combinations. For example, an adversary can kill all the RFIDs in an area by trying possible combinations of bits in a sequence.\n\n- Disallow the \"killing\" of a tag with an uninitiated password (a zero length password).\n\n- Cover-code the passwords sent by the RFID reader\n    - There is a separate countermeasure that describes cover-coding.\n\n- Implement the strongest password scheme that the RFID technology (in use) allows. Understand, assess, mitigate, and accept the risks.\n\nThe following instructions are mainly related to the operation of tags, but the system development should allow easy implementation of these:\n\n- Use a different password for each tag. Do not use the same password for all tags.\n\n- Use different passwords for different classes of commands.\n\n- Use a secure random generator to generate passwords.\n    - This is especially important when you need to share passwords with other organizations. For example, you may need to share the \"kill\" command password with other entities, but you do not have to share passwords for rewriting data on the tags or for other sensitive actions.\n\n- Make sure that Memorandum of Agreement (MOA) or Memorandum of Understanding (MOU) documents are prepared, signed, and followed when passwords are shared with other organizations.",
    "weakness_title_read_only": "Improper authentication of RFID tags/readers and possibility of spoofing",
    "weakness_id_read_only": "P787",
    "weakness": "230e341e-ce72-4a18-941f-26503334c8ff",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "requirements",
    "created": "2016-06-15T11:04:39.335000-04:00",
    "last_updated": "2022-08-24T14:21:41.185000-04:00",
    "custom": "False",
    "rules": "583f20c1-76a3-48ee-924d-a45029a29531;2ef3b940-05af-4cb9-bfc6-ed2fee4c8d42",
    "rules_read_only": "A19;A728"
  },
  {
    "countermeasure_id": "T483",
    "universal_id": "34c37de5-da9e-4a54-99cc-46b21a0279b5",
    "countermeasure_name": "Verify the security of RFID password scheme",
    "countermeasure_solution": "Verify that the password management scheme is secure, as described below:\n\n-  Test that there is a lock mechanism that prevents trying all possible passwords to execute commands.\n    - Provide the tag with random passwords and check if the tag locks itself (temporarily or permanently).\n    - This test __fails__ if the tag is not locked. Unless there is a justification for this behavior.\n\n- Test that the passwords are cover-coded in transition.\n    - You can verify this by examining the reader's code, or you can use another reader to test the transmitted data.\n    - This test __fails__ if the password is not encrypted or cover-coded.\n\n- Test that each RFID tag has a unique password.\n\n- Test that different commands have different passwords (where possible).\n\n- Verify that a secure random generator is used to assign a tag's password.",
    "weakness_title_read_only": "Improper authentication of RFID tags/readers and possibility of spoofing",
    "weakness_id_read_only": "P787",
    "weakness": "230e341e-ce72-4a18-941f-26503334c8ff",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2016-06-15T11:28:26.336000-04:00",
    "last_updated": "2021-10-29T14:18:15.353000-04:00",
    "custom": "False",
    "rules": "583f20c1-76a3-48ee-924d-a45029a29531;2ef3b940-05af-4cb9-bfc6-ed2fee4c8d42",
    "rules_read_only": "A19;A728"
  },
  {
    "countermeasure_id": "T484",
    "universal_id": "5336e690-4dc0-48ab-b668-c8107186aca9",
    "countermeasure_name": "Lock the memory of RFID tags",
    "countermeasure_solution": "Use the following guidelines for locking the memory of RFID tags\n\n- Lock a tag's memory after the data is stored on them. That is, when there is no need to change the data on the tags.\n\n- Various parts of memory, and various data items need to be locked at different stages. Some tags allow locking the memory below a certain address.\n\n- Lock each area of memory after there is no need to write to those areas.",
    "weakness_title_read_only": "Possibility of tampering and lack of mechanisms to check the integrity of RFID data",
    "weakness_id_read_only": "P788",
    "weakness": "a9fc0fbb-2481-4409-adff-23d64d383a2f",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "development",
    "created": "2016-06-15T12:00:29.929000-04:00",
    "last_updated": "2021-10-29T14:19:49.175000-04:00",
    "custom": "False",
    "rules": "2ef3b940-05af-4cb9-bfc6-ed2fee4c8d42;89a5e903-a2cd-4234-b0ea-714e3da7fee9",
    "rules_read_only": "A728;A1082"
  },
  {
    "countermeasure_id": "T485",
    "universal_id": "81565f8e-a545-4ffe-91fb-571d81a59db2",
    "countermeasure_name": "Sign audit records for non-repudiation",
    "countermeasure_solution": "Use the following guidelines for signing audit records for non-repudiation:\n\n- Whenever non-repudiation is a goal, ask the other entity to sign audit records with their private key and hold the records for a reasonable amount of time.\n\n- Use a secure digital signature algorithm for signing data.\n    - Such as SHA512 with RSA, or SHA512 with ECDSA.\n    - [NIST FIPS PUB 186-4 Digital Signature Standard (DSS)](http://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.186-4.pdf) provides an in-depth description of DSS algorithms.\n\n- Include time-stamps and identifiers in the audit records that are signed.",
    "weakness_title_read_only": "Opportunity for disclaimer and lack of means to achieve non-repudiation",
    "weakness_id_read_only": "P749",
    "weakness": "eed86774-267d-44a2-b6e4-8213b5ba40e7",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "development",
    "created": "2016-06-15T12:42:25.647000-04:00",
    "last_updated": "2021-06-25T14:47:39.325000-04:00",
    "custom": "False",
    "rules": "89a5e903-a2cd-4234-b0ea-714e3da7fee9;dc108d46-46f8-4bff-83f7-2924435e9ce5",
    "rules_read_only": "A1082;A1122"
  },
  {
    "countermeasure_id": "T486",
    "universal_id": "63e7a3de-a14d-4732-b752-c4e765f56c0e",
    "countermeasure_name": "Verify that audit records are signed to enable non-repudiation",
    "countermeasure_solution": "Verify that for every action that requires non-repudiation:\n\n- The log records are signed using the private keys of the involved entities that need to be held responsible.\n- A strong digital signature algorithm is used for signing data\n    - Such as SHA512 with RSA, or SHA512 with ECDSA.\n- Time-stamps and identifiers are included in the audit records.",
    "weakness_title_read_only": "Opportunity for disclaimer and lack of means to achieve non-repudiation",
    "weakness_id_read_only": "P749",
    "weakness": "eed86774-267d-44a2-b6e4-8213b5ba40e7",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2016-06-15T13:16:23.443000-04:00",
    "last_updated": "2021-06-25T14:47:39.075000-04:00",
    "custom": "False",
    "rules": "dc108d46-46f8-4bff-83f7-2924435e9ce5;89a5e903-a2cd-4234-b0ea-714e3da7fee9",
    "rules_read_only": "A1122;A1082"
  },
  {
    "countermeasure_id": "T487",
    "universal_id": "cc9e6229-0206-4593-b924-2065b3b9ae1d",
    "countermeasure_name": "Minimize the amount of unencrypted data stored on RFID tags",
    "countermeasure_solution": "Use the following guidelines for unencrypted data stored on RFID tags:\n\n- Limit the amount of data (especially unencrypted sensitive data) that is stored on RFID tags.\n    - The tag only needs to have an ID which acts as a reference to the records held in the database.\n    - Do not save the actual data on the tags.\n\n- If other data items need to be stored on the tag, encrypt those items and send them to the tag to save them.\n    - The tag does not need to support any cryptographic functions because it does not need to decrypt the data, but only needs to store it in its memory.",
    "weakness_title_read_only": "Disclosure of sensitive information by RFID tags or readers",
    "weakness_id_read_only": "P789",
    "weakness": "fb20e6be-c6da-4171-8f3d-009cfa6c0886",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "requirements",
    "created": "2016-06-17T10:52:52.504000-04:00",
    "last_updated": "2021-10-29T14:20:10.094000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T488",
    "universal_id": "6d5653e1-6738-454b-8fbe-1b75a3c4bdec",
    "countermeasure_name": "Verify that RFID tags hold minimum required data",
    "countermeasure_solution": "Use the following guidelines for verifying that RFID tags hold a minimum amount of data.\n    \n- The tags need to store identifiers that are references to the actual data associated with them.\n- This test __fails__ if any unencrypted sensitive data is stored on the tags without adequate justification.",
    "weakness_title_read_only": "Disclosure of sensitive information by RFID tags or readers",
    "weakness_id_read_only": "P789",
    "weakness": "fb20e6be-c6da-4171-8f3d-009cfa6c0886",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2016-06-17T11:29:11.387000-04:00",
    "last_updated": "2021-10-29T14:20:10.106000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T489",
    "universal_id": "993945ae-1366-4af1-a560-94d47f7333a8",
    "countermeasure_name": "Minimize the information revealed by RFID tag identifiers",
    "countermeasure_solution": "Use the following guidelines for designing tag identifiers in a way that does not disclose unnecessary information about the product or its owner:\n\n- Some standards, such as EPCglobal standards, propose EPC code structures that reveal information about the manufacturer and type of the item, such as \"EPC Manager\" and \"Object Class\" fields.\n\n- While this could be acceptable for many low-risk applications, avoid using IDs, such as the public ID of the RFID tag especially in highly sensitive applications where the device type or manufacturer information is considered confidential.\n\n- Use a secure random generator to assign IDs to the tags if the sequence of IDs can reveal unnecessary information about the tags. For example, attackers can detect the object type based on the range or similarity of IDs.",
    "weakness_title_read_only": "Disclosure of sensitive information by RFID tags or readers",
    "weakness_id_read_only": "P789",
    "weakness": "fb20e6be-c6da-4171-8f3d-009cfa6c0886",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "architecture-design",
    "created": "2016-06-17T11:42:07.183000-04:00",
    "last_updated": "2021-10-29T14:20:10.120000-04:00",
    "custom": "False",
    "rules": "77178d7c-6a9a-43c5-9993-323fc6d763f4",
    "rules_read_only": "A1124"
  },
  {
    "countermeasure_id": "T490",
    "universal_id": "0de1034f-7fda-47af-b34e-805e87999a50",
    "countermeasure_name": "Verify that non-revealing identifiers are assigned to RFID tags",
    "countermeasure_solution": "Use the following guidelines for verifying that non-revealing identifiers are assigned to RFID tags:\n\n- Verify that RFID identifiers do not disclose unnecessary information.\n- Verify that a secure random number generator is used for generating the IDs if they are random.",
    "weakness_title_read_only": "Disclosure of sensitive information by RFID tags or readers",
    "weakness_id_read_only": "P789",
    "weakness": "fb20e6be-c6da-4171-8f3d-009cfa6c0886",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2016-06-17T11:57:41.886000-04:00",
    "last_updated": "2021-10-29T14:20:10.131000-04:00",
    "custom": "False",
    "rules": "77178d7c-6a9a-43c5-9993-323fc6d763f4",
    "rules_read_only": "A1124"
  },
  {
    "countermeasure_id": "T491",
    "universal_id": "df5efb48-d778-4e1b-9f29-059e9e2d8e63",
    "countermeasure_name": "Include a shielding feature for RFID tags and tag containers",
    "countermeasure_solution": "Use the following guidelines for including a shielding feature in the design of a system:\n\n- Wrap the tag in a metallic shield (such as foil), or other types of electromagnetic shields:\n    - This restricts the emission of signals in situations where the tag is not supposed to be read. For example, RFID tags holding sensitive data should be shielded when they are not being read, such as biometric data or data used in passports.\n    - The shielding reduces the chances of eavesdropping and unintended disclosure.\n    - Shielding tags and tag containers can also reduce interference and other negative consequences of unintended RF signal emissions, such as the duplicate identification of tags.",
    "weakness_title_read_only": "Disclosure of sensitive information by RFID tags or readers",
    "weakness_id_read_only": "P789",
    "weakness": "fb20e6be-c6da-4171-8f3d-009cfa6c0886",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "requirements",
    "created": "2016-06-17T12:12:18.189000-04:00",
    "last_updated": "2021-10-29T14:20:10.146000-04:00",
    "custom": "False",
    "rules": "89a5e903-a2cd-4234-b0ea-714e3da7fee9 AND a1d487ae-0462-4027-b802-3f8fda3bc4c2;a1d487ae-0462-4027-b802-3f8fda3bc4c2 AND 2ef3b940-05af-4cb9-bfc6-ed2fee4c8d42",
    "rules_read_only": "A1082 AND A1123;A1123 AND A728"
  },
  {
    "countermeasure_id": "T492",
    "universal_id": "14b5ff24-3ed2-4838-9fe7-8a3afa2703a1",
    "countermeasure_name": "Test that a shielding feature is included in the design of RFID system",
    "countermeasure_solution": "Use the following guidelines for testing that a shielding feature is included in the design of a RFID system:\n\n- Test that a shielding feature is designed and implemented if the tags hold sensitive data, or when there is a high chance of collision.\n- Test that the tags are shielded when they are not being read.",
    "weakness_title_read_only": "Disclosure of sensitive information by RFID tags or readers",
    "weakness_id_read_only": "P789",
    "weakness": "fb20e6be-c6da-4171-8f3d-009cfa6c0886",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2016-06-17T12:15:36.134000-04:00",
    "last_updated": "2021-10-29T14:20:10.156000-04:00",
    "custom": "False",
    "rules": "a1d487ae-0462-4027-b802-3f8fda3bc4c2 AND 2ef3b940-05af-4cb9-bfc6-ed2fee4c8d42;89a5e903-a2cd-4234-b0ea-714e3da7fee9 AND a1d487ae-0462-4027-b802-3f8fda3bc4c2",
    "rules_read_only": "A1123 AND A728;A1082 AND A1123"
  },
  {
    "countermeasure_id": "T493",
    "universal_id": "7ac19053-a09d-46ed-a3ef-633568a70e5b",
    "countermeasure_name": "Design a secure process for disposal of RFID tags",
    "countermeasure_solution": "Devise methods to electronically clear a tag's data, or physically destroy the RFID tags after their intended use. \n\nConsider the following guidelines:\n\n- Make sure any sensitive data is wiped before disposing of tags.\n\n- Disable tags using commands such as \"kill\" or memory clearing commands.\n    - Memory can be readable by adversaries that have access to the tag after it is killed.\n    - In addition to kill commands, other methods of memory erasing and physical destruction should be used if data on the tag is very sensitive.\n\n- Consider shredding the tags if the data on them is important or confidential.\n\n- Retain audit records in the database for a reasonable amount of time.\n    - Some privacy or other compliance requirements may stipulate specific conditions for erasing those records in a proper manner.\n    - Consult corresponding regulations and determine when records should be retained and when they should be erased.",
    "weakness_title_read_only": "Disclosure of sensitive information by RFID tags or readers",
    "weakness_id_read_only": "P789",
    "weakness": "fb20e6be-c6da-4171-8f3d-009cfa6c0886",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "architecture-design",
    "created": "2016-06-17T12:40:32.254000-04:00",
    "last_updated": "2021-10-29T14:20:10.171000-04:00",
    "custom": "False",
    "rules": "77178d7c-6a9a-43c5-9993-323fc6d763f4 AND 2ef3b940-05af-4cb9-bfc6-ed2fee4c8d42;89a5e903-a2cd-4234-b0ea-714e3da7fee9 AND 77178d7c-6a9a-43c5-9993-323fc6d763f4",
    "rules_read_only": "A1124 AND A728;A1082 AND A1124"
  },
  {
    "countermeasure_id": "T494",
    "universal_id": "01ffed43-a6ef-4902-919c-720e5025f356",
    "countermeasure_name": "Verify that a secure process is designed for disposal of RFID tags",
    "countermeasure_solution": "Use the following guidelines for verifying that a secure process is designed for the disposal of RFID tags:\n\n- This assures that any sensitive data on tags is wiped out and the data is not accessible after deletion.\n- A plan is developed for retaining or deleting audit records associated with those tags in the database. The plan needs to conform to the same privacy regulations as the system.",
    "weakness_title_read_only": "Disclosure of sensitive information by RFID tags or readers",
    "weakness_id_read_only": "P789",
    "weakness": "fb20e6be-c6da-4171-8f3d-009cfa6c0886",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2016-06-17T12:54:52.140000-04:00",
    "last_updated": "2021-10-29T14:20:10.181000-04:00",
    "custom": "False",
    "rules": "77178d7c-6a9a-43c5-9993-323fc6d763f4 AND 2ef3b940-05af-4cb9-bfc6-ed2fee4c8d42;89a5e903-a2cd-4234-b0ea-714e3da7fee9 AND 77178d7c-6a9a-43c5-9993-323fc6d763f4",
    "rules_read_only": "A1124 AND A728;A1082 AND A1124"
  },
  {
    "countermeasure_id": "T496",
    "universal_id": "380cf225-7afd-4750-8be3-520a3ff8f226",
    "countermeasure_name": "Protect sensitive data on forward and back (reverse) RFID channels",
    "countermeasure_solution": "Signals on an RFID forward channel (reader to tag) and back channel (tag to reader) are susceptible to eavesdropping.\n\nFollow these guidelines to minimize this risk as much as possible:\n\n- Encrypt any sensitive data items on the forward channel that the tag only needs to store. The tag does not need to decrypt those data items and does not ask for any cryptographic capabilities from the tag's side.\n\n- Encrypt any sensitive data on the back channel, that is produced by RFID tags, and is sent to the RFID readers, such as data from a fingerprint scanner connected to an RFID tag.\n    - This is only possible if the tag can perform encryption.\n\n- __If encryption is not affordable for tags__, then understand and accept the risks, then build those risks into the system design. Use other methods to minimize the chance of eavesdropping, such as cover-coding, shielding the channel, and access control.\n\n## Cover Coding\n\nImplement cover coding and, at the very least, send the sensitive data from the RFID reader to the tag in cover-coded format if encryption is not possible.\n\nIn the cover coding routine:\n\n- Whenever the reader needs to communicate confidential information to the tag, it sends a request to the tag to initiate cover coding using a predefined command.\n\n- The tag sends a random number (_R_) to the reader in response.\n\n- The reader calculates the exclusive-OR (XOR) of any additional requests/commands that are sent to the tag with a random number (_R_).\n    - In other words, _H_ = XOR (_R_, _M_) is sent to the tag where _M_ is the actual message.\n\n- The tag XORs the received message with the random number (_R_).\n    - It calculates _M_ = XOR (_R_, _H_). This way, it retrieves the original message.\n\n\nCover coding is helpful because the signal on the forward channel (from reader to tag) is usually stronger than the signal on the back channel (from tag to reader). Cover coding makes eavesdropping on the forward channel ineffective by using a simple XORing trick. EPCglobal Class-1 Gen-2 specifications support cover coding for some commands. Remember to also cover-code the passwords sent by the RFID reader.",
    "weakness_title_read_only": "Disclosure of sensitive information by RFID tags or readers",
    "weakness_id_read_only": "P789",
    "weakness": "fb20e6be-c6da-4171-8f3d-009cfa6c0886",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "development",
    "created": "2016-06-17T14:06:44.210000-04:00",
    "last_updated": "2021-10-29T14:20:10.196000-04:00",
    "custom": "False",
    "rules": "2ef3b940-05af-4cb9-bfc6-ed2fee4c8d42;583f20c1-76a3-48ee-924d-a45029a29531",
    "rules_read_only": "A728;A19"
  },
  {
    "countermeasure_id": "T497",
    "universal_id": "34f07dba-5a03-4fb6-9e80-3b32358ab90b",
    "countermeasure_name": "Verify that sensitive data is protected on the forward and back (reverse) channels",
    "countermeasure_solution": "Use the following guidelines for verifying that sensitive data is protected on forward and back channels:\n\n- Examine the data transmitted between the RFID tag and the reader.\n    - Verify that encryption or (at least) cover coding is used for protecting the communication of sensitive data.",
    "weakness_title_read_only": "Disclosure of sensitive information by RFID tags or readers",
    "weakness_id_read_only": "P789",
    "weakness": "fb20e6be-c6da-4171-8f3d-009cfa6c0886",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2016-06-17T15:06:43.699000-04:00",
    "last_updated": "2021-10-29T14:20:10.206000-04:00",
    "custom": "False",
    "rules": "2ef3b940-05af-4cb9-bfc6-ed2fee4c8d42;583f20c1-76a3-48ee-924d-a45029a29531",
    "rules_read_only": "A728;A19"
  },
  {
    "countermeasure_id": "T498",
    "universal_id": "b8c707c4-4caa-4e54-b9a0-dce18fb9434b",
    "countermeasure_name": "Determine and adjust the parameters of RF transmission",
    "countermeasure_solution": "Determine these parameters to minimize information disclosure and eavesdropping:\n\n- Class of passive/active RFID tags:\n    - Based on cryptographic function requirements, decide if a passive or active RFID tag is needed.\n    - Other factors include the memory size, whether the memory is write-once/rewritable, and whether the tags can initiate communication.\n    - These characteristics decide the class of RFID tags that are used, for example, EPC tags Class 0 to 5. \n\n- Transmission power:\n    - Determine the required transmission power and adjust the transmission power on forward and back/reverse channel in a way that reduces the risks of eavesdropping.\n    - The signal should be weak enough to be undetectable outside the designated areas.\n\n- Frequency:\n    - The radio wave spectrum ranges from 9KHz (for VLF signals) to HF, VHF, UHF, and higher frequencies up to 3000GHz.\n    \n    - The ISO/IEC 18000 standard series define the air interface specification for RFID equipment working in various frequency ranges.\n    \n    - The permitted frequency range in each region is decided by regulatory structures and must be determined before adopting any technologies. For example, see ([EPC Gen2 UHF frequency ranges for different countries](http://www.gs1.org/docs/epc/UHF_Regulations.pdf)).\n    \n    - Interference with other equipment and distortion due to the existence of other materials in the vicinity of the RFID system.\n    \n    - Other factors that need to be considered in the adoption of a frequency range are: \n        - Results of risk assessments and adopted policies, including risk assessments to determine the hazards of electromagnetic radiation to:\n            - People (HERP)\n            - Ordnance (HERO)\n            - Fuel (HERF)\n            - Other materials",
    "weakness_title_read_only": "Disclosure of sensitive information by RFID tags or readers",
    "weakness_id_read_only": "P789",
    "weakness": "fb20e6be-c6da-4171-8f3d-009cfa6c0886",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "architecture-design",
    "created": "2016-06-17T15:11:47.181000-04:00",
    "last_updated": "2021-10-29T14:20:10.217000-04:00",
    "custom": "False",
    "rules": "77178d7c-6a9a-43c5-9993-323fc6d763f4",
    "rules_read_only": "A1124"
  },
  {
    "countermeasure_id": "T499",
    "universal_id": "5bb83cbc-2479-4d2b-a95e-003776a6d140",
    "countermeasure_name": "Implement a temporary activation feature on tags",
    "countermeasure_solution": "Use the following guidelines for implementing a temporary activation feature on tags:\n\n- Allow tags to be deactivated by default\n- Implement a temporary activation feature on tags to prevent any unintended readings at other times.\n    - The activation could be triggered by a push button, or a specific command.\n    - The tag can return to the deactivated state after a set amount of time. For example, a push button on an RFID enabled ID card can help the owners protect their privacy by preventing unauthorized readings. Likewise, the tags in supply chain management need to be read at specific time intervals and do not need to be active all the time.",
    "weakness_title_read_only": "Disclosure of sensitive information by RFID tags or readers",
    "weakness_id_read_only": "P789",
    "weakness": "fb20e6be-c6da-4171-8f3d-009cfa6c0886",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "requirements",
    "created": "2016-06-17T15:38:38.068000-04:00",
    "last_updated": "2021-10-29T14:20:10.231000-04:00",
    "custom": "False",
    "rules": "a1d487ae-0462-4027-b802-3f8fda3bc4c2 AND 2ef3b940-05af-4cb9-bfc6-ed2fee4c8d42;89a5e903-a2cd-4234-b0ea-714e3da7fee9 AND a1d487ae-0462-4027-b802-3f8fda3bc4c2",
    "rules_read_only": "A1123 AND A728;A1082 AND A1123"
  },
  {
    "countermeasure_id": "T500",
    "universal_id": "dd98597f-55b0-4b33-9e0f-02c0adb2ddee",
    "countermeasure_name": "Test the temporary activation feature on tags",
    "countermeasure_solution": "Use the following guidelines for testing the temporary activation feature on tags:\n\nTest that a temporary activation feature is designed and implemented for tags that prevents tags from being read unintentionally.",
    "weakness_title_read_only": "Disclosure of sensitive information by RFID tags or readers",
    "weakness_id_read_only": "P789",
    "weakness": "fb20e6be-c6da-4171-8f3d-009cfa6c0886",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2016-06-17T15:53:07.758000-04:00",
    "last_updated": "2021-10-29T14:20:10.243000-04:00",
    "custom": "False",
    "rules": "a1d487ae-0462-4027-b802-3f8fda3bc4c2 AND 2ef3b940-05af-4cb9-bfc6-ed2fee4c8d42;89a5e903-a2cd-4234-b0ea-714e3da7fee9 AND a1d487ae-0462-4027-b802-3f8fda3bc4c2",
    "rules_read_only": "A1123 AND A728;A1082 AND A1123"
  },
  {
    "countermeasure_id": "T501",
    "universal_id": "907d8b57-024a-4f1d-8445-9676ad1f5be3",
    "countermeasure_name": "Protect RFID authentication system against relay attacks",
    "countermeasure_solution": "All electromagnetic signals sent from a reader to an RFID tag can be relayed to another tag while responses are returned to the reader.\n\nImplement as many of these countermeasures as possible to protect the system against relay attacks:\n\n- Design a shield for the tags (or an activation button) so that users can knowingly enable authentication and prevent any stealthy communication. \n- If possible, attach an indicator to cards/tags that shows when they are being read, such as turning on an LED light. This helps the owner realize if the tag is covertly read.\n- Never base the location verification on the reading of tags alone, especially in critical applications. For example, in house arrest applications (electronic monitoring for offenders) the signal from a tag attached to the offender's wrist can be relayed when the person is in another place. Add other security measures, such as camera surveillance, or other liveness tests for reinforcement.\n\nOther more sophisticated countermeasures include: \n\n1. Sending specific out-of-band signals in other frequency bands that cannot be detected by the relaying tools. Those tools are designed to sense the signals in a specific spectral band.\n\n2. Calculating the time difference between sending a challenge and receiving its response. The time difference is a function of distance between the tag and the reader and can be used to reject the relayed signals.",
    "weakness_title_read_only": "Possibility of relay attacks",
    "weakness_id_read_only": "P790",
    "weakness": "0e698fbd-8fef-4d79-bfee-8940bfb297c0",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "requirements",
    "created": "2016-06-22T14:56:10.432000-04:00",
    "last_updated": "2021-10-29T14:23:59.607000-04:00",
    "custom": "False",
    "rules": "2058e370-15ea-438f-9dfe-33bbba20751d AND 3ccf78b5-809f-4efa-a2d0-01ae61dbe793",
    "rules_read_only": "A45 AND A1121"
  },
  {
    "countermeasure_id": "T502",
    "universal_id": "741603d3-b6d3-40d6-b7b1-9fb919e7d51c",
    "countermeasure_name": "Limit MQTT broker resource consumption",
    "countermeasure_solution": "An MQTT broker needs enough resources to maintain client connections, buffer in-flight messages (messages in the process of being transmitted), manage clients, and other similar tasks.\n\nSince the server's capacity is limited, you have to set some constraints to ensure its availability:\n\n- Set a reasonable constraint on the **payload size** of the _publish_ messages. Messages up to 256 megabytes are permitted by default. \n- Limit the **number of concurrent sessions** it can handle, especially if the clients are not under your control.\n- Limit the number of QoS 1 or QoS 2 **in-flight** messages.\n- Remove **persistent clients** if they do not reconnect within a properly set timeframe. Persistent clients connect to the broker with **Clean Session** set to false.",
    "weakness_title_read_only": "Denial of Service (DoS)",
    "weakness_id_read_only": "P750",
    "weakness": "04f3a13f-c7ea-4824-bd73-086d61dd30ba",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "requirements",
    "created": "2016-06-28T15:31:42.918000-04:00",
    "last_updated": "2021-06-25T14:47:40.023000-04:00",
    "custom": "False",
    "rules": "9b189320-d144-4ff1-a220-e709d947c9d9",
    "rules_read_only": "A1125"
  },
  {
    "countermeasure_id": "T503",
    "universal_id": "3b44102f-8c20-46f9-8728-0a1fd0bb2a38",
    "countermeasure_name": "Verify that MQTT broker resource consumption is restricted",
    "countermeasure_solution": "Follow these instructions to make sure that the broker does not get overwhelmed by requests beyond its capacity:\n\n- Using a test client, subscribe to a test topic.\n    - Publish a message to the test topic with a payload larger than the maximum payload size limit.\n    - This test __fails__ if the broker accepts the message and the client receives the message.\n\n- Connect several MQTT clients to the broker.\n    - As many as the maximum number of concurrent client sessions allowed.\n    - This test __fails__ if the broker does not reject the next connection request.\n\n- Verify that the number of QoS 1 and QoS 2 in-flight messages is limited to a reasonable number in the broker's configuration file.\n\n- Verify that there is a timeout value set in the broker's configuration file to remove idle persistent clients.",
    "weakness_title_read_only": "Denial of Service (DoS)",
    "weakness_id_read_only": "P750",
    "weakness": "04f3a13f-c7ea-4824-bd73-086d61dd30ba",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2016-06-28T15:40:08.462000-04:00",
    "last_updated": "2021-06-25T14:47:40.748000-04:00",
    "custom": "False",
    "rules": "9b189320-d144-4ff1-a220-e709d947c9d9",
    "rules_read_only": "A1125"
  },
  {
    "countermeasure_id": "T504",
    "universal_id": "dddd75b0-6324-4341-b414-0909abb7bec2",
    "countermeasure_name": "Check the integrity of MQTT messages",
    "countermeasure_solution": "Check the authenticity and integrity of MQTT messages at the transport or message level:\n\n- Use TLS and validate certificates\n- Use digital signatures/Message Authentication Codes (MACs)\n\n## Transport level - TLS with verified certificates\n\n- TLS coupled with proper certificate validation can be used to guarantee the integrity and authenticity of MQTT messages.\n    - If you use TLS (as described in [T21](/library/tasks/T21/)) for MQTT messaging, and have properly implemented authentication and authorization mechanisms, additional integrity checks do not make a significant difference.\n- However, if you use digital signatures for client data validation, you benefit from non-repudiation as well.\n\n## Message level - Digital signature / Message Authentication Code (MAC)\n\n- Add a digital signature or MAC of _the publish message_ content to the message so that the receiver can validate the message.\n    - You may use the **topic** and **payload** of the publish message to calculate the MAC or digital signature.\n- Use these mechanisms to ensure that an attacker cannot modify the MQTT messages during transit.\n- These also mitigate the risk of a replay attack, especially if you don't use TLS, or have untrusted clients in your MQTT environment that can access the MQTT topics.\n\n**Note:** \n\n- Do not use *Message ID* or *QoS* fields because their values might change in a communication.\n- MAC algorithms, such as HMAC, are usually faster than digital signatures.",
    "weakness_title_read_only": "Insufficient Verification of Data Authenticity",
    "weakness_id_read_only": "P244",
    "weakness": "b804db70-a48e-4d47-8c34-d8ee26babd77",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "architecture-design",
    "created": "2016-06-28T15:50:59.948000-04:00",
    "last_updated": "2021-06-25T14:48:01.320000-04:00",
    "custom": "False",
    "rules": "9b189320-d144-4ff1-a220-e709d947c9d9",
    "rules_read_only": "A1125"
  },
  {
    "countermeasure_id": "T505",
    "universal_id": "73a5e01e-3740-443e-84b9-23ce45036799",
    "countermeasure_name": "Secure iOS in-app purchases",
    "countermeasure_solution": "Follow these guidelines to secure use of in-app purchase services:\n\n1. Keep the list of **product identifiers** in a file within the app bundle, or securely fetch them from your server.\n    - Do not store the list on shared device memory.\n\n2. Make the purchased items **uniquely available to the application**.\n    - It is recommended to put them on the server and download them to the application only after they are purchased.\n    - After you copy the content to the client, use an application-specific method to encrypt the content and save them on storage, for example, use the UUID (Universal Unique Identifier) of the application with a key to encrypt data.\n\n3. Provide the App Store with additional payment information to improve **irregular activity detection**.\n    - The App Store needs to know which account on your server is associated with each transaction to detect anomalies.\n    - Set the *applicationUsername* property of the payment object to a **one-way hash** of the **unique** username.\n    - Do not submit any unhashed user information to the App Store to protect user privacy. For example, do not submit an Apple ID or the Apple ID of your developer account.\n\n4. Parse and **validate in-app purchase and application receipts** that are cryptographically signed by Apple to confirm a legitimate transaction has been successful.\n    - You can choose:\n        - [Validating Receipts Locally](https://developer.apple.com/library/ios/releasenotes/General/ValidateAppStoreReceipt/Chapters/ValidateLocally.html#//apple_ref/doc/uid/TP40010573-CH1-SW2).\n        - [Validating Receipts With the App Store](https://developer.apple.com/library/ios/releasenotes/General/ValidateAppStoreReceipt/Chapters/ValidateRemotely.html#//apple_ref/doc/uid/TP40010573-CH104-SW1).\n        - Or both, depending on what best fits your app requirements.\n    - In the case of receipt validation failure, use the *SKReceiptRefreshRequest* API to refresh the receipt and validate it again.\n\n5. **Use a secure channel with a reliable handshake** for any communication between the app and your server, and between your server and the App Store.\n    - Use a secure channel such as TLS/SSL.\n        - For example, when fetching product IDs from your server, or when the app notifies your server of a successful purchase and downloads the purchased content.\n    \n6. Design and implement a **scheme for disabling content**.\n    - Design and implement a means to disable any content that is purchased, but revoked for any security or privacy reasons afterwards.\n\n## References\n\n- [In-App Purchase Programming Guide](https://developer.apple.com/library/ios/documentation/NetworkingInternet/Conceptual/StoreKitGuide/Introduction.html)\n- [Receipt Validation Programming Guide](https://developer.apple.com/library/ios/releasenotes/General/ValidateAppStoreReceipt/Introduction.html)",
    "weakness_title_read_only": "Insufficient Verification of Data Authenticity",
    "weakness_id_read_only": "P244",
    "weakness": "b804db70-a48e-4d47-8c34-d8ee26babd77",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "requirements",
    "created": "2016-07-12T13:09:50.310000-04:00",
    "last_updated": "2021-06-25T14:47:54.278000-04:00",
    "custom": "False",
    "rules": "3e46c566-5461-41fb-99b7-52df39f28c6d AND 3657f540-0b47-49b3-9a4d-69412ec692d6",
    "rules_read_only": "A1106 AND A714"
  },
  {
    "countermeasure_id": "T506",
    "universal_id": "c45bb371-ac93-493b-8a43-2618a5b88c13",
    "countermeasure_name": "Verify that iOS in-app purchases are securely implemented",
    "countermeasure_solution": "Follow these guidelines to verify that in-app purchases are securely implemented:\n\n1. Verify that the list of product identifiers are not stored on the shared device memory.\n\n2. Verify that the content is encrypted after being moved to the client from the server.\n    - The encryption key should be application-specific where possible, in a way that the encrypted content would not be readable on other devices or by other applications on the same device.\n    - Verify that a unique element of the application is used to encrypt the content. For example, a Universal Unique Identifier (UUID).\n\n3. Verify that the one-way hash of additional payment information is sent to the App Store for anomaly detection purposes. Also verify that no user information is sent unhashed.\n\n4. Check that cryptographically signed in-app purchase receipts are properly validated.\n\n5. Verify that a secure channel with a secure handshake (such as TLS/SSL) is used between the application and your server, and between your server and App Store.\n\n6. Verify that a revocation scheme is designed and implemented for purchased items.",
    "weakness_title_read_only": "Insufficient Verification of Data Authenticity",
    "weakness_id_read_only": "P244",
    "weakness": "b804db70-a48e-4d47-8c34-d8ee26babd77",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2016-07-12T14:02:23.247000-04:00",
    "last_updated": "2021-06-25T14:47:53.890000-04:00",
    "custom": "False",
    "rules": "3e46c566-5461-41fb-99b7-52df39f28c6d AND 3657f540-0b47-49b3-9a4d-69412ec692d6",
    "rules_read_only": "A1106 AND A714"
  },
  {
    "countermeasure_id": "T508",
    "universal_id": "ab4270ae-0e38-468a-9885-89edc357ecd8",
    "countermeasure_name": "Require authentication for accessing HyperCat catalogs and resources",
    "countermeasure_solution": "Follow these guidelines to secure access to Hypercat catalogs and resources:\n\n- __Protecting the catalogs__:\n    - Protect access to the HyperCat catalog through authenticating HTTP(S) requests using a valid key.\n    - The key can be single use token that provides access to an entire catalog or just a part of it.\n\n- __Protecting the resources__:\n    - Protect access to the resource itself, using authentication and encrypted channels.\n    - HyperCat documents clearly state that you should not rely on security through obscurity in HyperCat. \n\n Authentication metadata is used in HyperCat catalogs to specify authentication methods for each resource. See the How-to for this countermeasure for more information.",
    "weakness_title_read_only": "Missing Authentication for Critical Functions",
    "weakness_id_read_only": "P203",
    "weakness": "1fd1f018-67e6-45b9-9ef4-4a7af3fd3ed6",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "requirements",
    "created": "2016-07-21T17:18:25.165000-04:00",
    "last_updated": "2022-09-01T12:21:28.778000-04:00",
    "custom": "False",
    "rules": "f8064121-c8db-43a2-85d1-cca86d50f01b",
    "rules_read_only": "A1127"
  },
  {
    "countermeasure_id": "T509",
    "universal_id": "82de18c9-ea11-4c46-a13c-710c818a295d",
    "countermeasure_name": "Protect the integrity of HyperCat catalogs and resources",
    "countermeasure_solution": "Follow these guidelines to protect the integrity of HyperCat catalogs and resources:\n\n__Use licensed resources:__ Always provide and consume resources that have license and access control metadata.\n\n__Use digital signatures:__ Catalogs and items within them can be digitally signed to provide more confidence about their sources and to prevent tampering. A How-to for this countermeasure explains the details.\n\n__Note:__ See the following guidelines about access control metadata:\n\n- The `hasLicense` metadata consists of relation-value pairs that can be used to clarify the license conditions of the HyperCat catalog and its linked resources.\n- A new single `rel` is an indication for clients that the data is provided under a set of license conditions. \n- `val` is a URL pointing to the version of a license. \n- It is possible for `hasLicense` to be invalid or incorrect for a resource.\n- Clients should only trust the `hasLicense` declaration for resources that belong to the same domain as the linking HyperCat.",
    "weakness_title_read_only": "Missing support for integrity checks on important data and configuration files",
    "weakness_id_read_only": "P752",
    "weakness": "059f9863-6436-4841-b9fd-8b9febb4a1f6",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "requirements",
    "created": "2016-07-25T16:18:44.016000-04:00",
    "last_updated": "2022-09-01T12:23:42.638000-04:00",
    "custom": "False",
    "rules": "f8064121-c8db-43a2-85d1-cca86d50f01b",
    "rules_read_only": "A1127"
  },
  {
    "countermeasure_id": "T510",
    "universal_id": "3cffed9e-2e68-49d9-8bf5-db2127e5388f",
    "countermeasure_name": "Test if authentication is enforced on HyperCat catalogs",
    "countermeasure_solution": "Use the following guidelines for testing if authentication is enforced on HyperCat catalogs:\n\nTry to access a HyperCat catalog as an unauthenticated user.\n \nThis test __fails__ if you are able to access it.\n\nThis test __passes__ if you are prompted to authenticate.",
    "weakness_title_read_only": "Missing Authentication for Critical Functions",
    "weakness_id_read_only": "P203",
    "weakness": "1fd1f018-67e6-45b9-9ef4-4a7af3fd3ed6",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2016-07-27T17:22:08.674000-04:00",
    "last_updated": "2022-09-01T12:21:47.486000-04:00",
    "custom": "False",
    "rules": "f8064121-c8db-43a2-85d1-cca86d50f01b",
    "rules_read_only": "A1127"
  },
  {
    "countermeasure_id": "T511",
    "universal_id": "e96710f6-fa08-4246-99da-933840bf87f4",
    "countermeasure_name": "Test if HyperCat resources have license and access control metadata",
    "countermeasure_solution": "Use the following guidelines for testing if HyperCat resources have license and access control metadata:\n\n- Check if `hasLicense` metadata is defined for the HyperCat catalogue or linked resources.\n    - If so, then check if the metadata declarations for resources held on the same domain as the linking HyperCat.\n    - If not, the test __fails__.",
    "weakness_title_read_only": "Missing support for integrity checks on important data and configuration files",
    "weakness_id_read_only": "P752",
    "weakness": "059f9863-6436-4841-b9fd-8b9febb4a1f6",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2016-07-27T18:11:09.731000-04:00",
    "last_updated": "2022-09-01T12:24:08.070000-04:00",
    "custom": "False",
    "rules": "f8064121-c8db-43a2-85d1-cca86d50f01b",
    "rules_read_only": "A1127"
  },
  {
    "countermeasure_id": "T512",
    "universal_id": "61bf935e-68a5-4dfb-b440-5353a24d0a5b",
    "countermeasure_name": "Restrict access to opener in the opened window",
    "countermeasure_solution": "Follow these steps to secure page opening in HTML:\n\n(In all of the examples below, the main page tries to open `B.html`.)\n\n* Specify `noopener noreferrer` as the value of `rel` attribute in the hyperlink reference.\n    - `<a href=\"B.html\" target=\"_blank\" rel=\"noopener noreferer\">Link!</a>`\n    - This is the easiest way to prevent the opened window from accessing the original window. However, it does not work for all the browsers.\n\n* For all user input that can open external windows:\n    - Make sure `rel=\"noopener noreferrer\"` values are added to hyperlinks before posting. For example, add these values for a forum or chat-room that users can submit hyperlinks to.\n\n* Alternatively, if you use JavaScript to open the window, set the opener attribute to null:\n    - `<script>var A = window.open(); A.opener = null; A.location = 'B.html';</script>`\n\n* For Safari browsers:\n    - Open an intermediary iFrame (<iframe src=\"C.html\"></iframe>) and open a `C.html` file in the iFrame.\n    - `C.html` can in turn open the target HTML file (`B.html`) using the JavaScript code shown above:\n        - (`<script>var A = window.open(); A.opener = null; A.location = 'B.html';</script>`)\n\n* Consider using [a framework/project similar to this](http://danielstjules.github.io/blankshield) for consistently changing links as specified above.\n\n* __Note 1__:\n\n- You can test the `B.html` file for possible attacks by using code like this:\n    - `<script>if (window.opener) {opener.location = 'http://www.yahoo.com';} else {document.write(\"Safe Use!\")}</script>`.\n    - If access to the original page is possible, the original (opener) window will be redirected to the Yahoo page.\n\n * __Note 2__:\n\n - `noopener` works for most browsers and is enough to restrict access to the opener page in most cases.\n\n * __Note 3__:\n\n - Set `noreferrer` for the `rel` attribute in hyperlink reference to protect older browsers.\n    - Since the behavior of browsers changes very quickly, it is important to test these in the browsers that your application is opened.\n        - Test this when specifying multiple values for `rel` [space-separate the values](https://www.w3.org/TR/html401/struct/links.html#adef-rel) (`rel=\"noopener noreferrer\"`).",
    "weakness_title_read_only": "Possibility of access to an opener page from an opened page in HTML/JavaScript",
    "weakness_id_read_only": "P792",
    "weakness": "cb903ff6-5e9e-4f7e-8a6c-591515719b7a",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "development",
    "created": "2016-08-19T17:45:21.520000-04:00",
    "last_updated": "2021-06-25T14:47:48.424000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T513",
    "universal_id": "81a45919-f9c7-4328-8288-1180ac7810cd",
    "countermeasure_name": "Verify that access to the opener is restricted in opened window",
    "countermeasure_solution": "Find all instances of the following items in the web application code:\n\n- Any hyperlinks to external websites.\n- Any user input that can turn into hyperlinks to external websites. For example, a text input that allows users to post links to external websites on your forum.\n- Any JavaScript code that opens a window to an external website.\n\n- Temporarily replace the link to the website to another page.\n    - For this example, we will use `B.html`\n    - For the second scenario above, you need to post a link to `B.html`.\n\n- The code in `B.html` could be:\n    - `<script>if (window.opener) {opener.location = 'http://www.yahoo.com';} else {document.write(\"Safe Use!\")}</script>`.\n    - The code tries to redirect the opener window to `www.yahoo.com` (or a target page of your choice).\n    - If the original page is redirected to the target page, this test fails.\n\n__Note 1__: Verify the hyperlinks posted, and check if they have at least `noopener` as `rel` value (right click the links in Chrome and click **Inspect** to see if `rel='noopener'` is specified). This does not guarantee full protection in all browsers, but reduces the vulnerability.",
    "weakness_title_read_only": "Possibility of access to an opener page from an opened page in HTML/JavaScript",
    "weakness_id_read_only": "P792",
    "weakness": "cb903ff6-5e9e-4f7e-8a6c-591515719b7a",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2016-09-07T16:06:29.484000-04:00",
    "last_updated": "2021-06-25T14:47:46.549000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T514",
    "universal_id": "45d324dc-017c-4a1d-b85d-69d5eb43b6d9",
    "countermeasure_name": "Prevent formula injection in CSV/Excel files",
    "countermeasure_solution": "Use the following guidelines for protecting against **formula injection**:\n\n- Implement input validation procedures for any web application or spreadsheet software that generates CSV Excel files containing user-supplied content.\n\n- Add a space before `= , + , - , @` to make sure that the content of the cell won't be interpreted as a formula.",
    "weakness_title_read_only": "Improper Input Validation",
    "weakness_id_read_only": "P95",
    "weakness": "df80ca69-a2c0-4d7f-b3f7-d81bd6d685e9",
    "tags": "",
    "countermeasure_priority": "3",
    "phase": "development",
    "created": "2016-09-19T17:23:05.550000-04:00",
    "last_updated": "2021-06-25T14:47:54.222000-04:00",
    "custom": "False",
    "rules": "7f83068a-6718-479c-b44f-5138320a9219",
    "rules_read_only": "A1193"
  },
  {
    "countermeasure_id": "T515",
    "universal_id": "fdf44ff8-e46f-44de-898e-4aba063f97cd",
    "countermeasure_name": "Limit resource consumption of outgoing HTTP requests sent to external user-defined webhooks",
    "countermeasure_solution": "Follow these instructions to protect webhooks against excessive usage:\n\n- Limit the **rate of outgoing HTTP requests** sent to the external user-defined webhooks to prevent uncontrolled resource consumption through user generated events. For example, limit the rate to one request per second.\n- Run the requests **asynchronously** to avoid blocking on the requests sent to malfunctioning external webhook URLs.",
    "weakness_title_read_only": "Uncontrolled Resource Consumption (Resource Exhaustion)",
    "weakness_id_read_only": "P293",
    "weakness": "1bee9747-5d60-43f1-8e0f-e261388a5c25",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "requirements",
    "created": "2016-09-27T14:54:00.123000-04:00",
    "last_updated": "2021-06-25T14:47:40.451000-04:00",
    "custom": "False",
    "rules": "58daef50-c9b7-4c99-ba60-3f858e39cc1c",
    "rules_read_only": "A1128"
  },
  {
    "countermeasure_id": "T516",
    "universal_id": "72e73eed-1286-42dc-9eda-1da7cdeba423",
    "countermeasure_name": "Verify the limit on outgoing HTTP requests to external webhooks",
    "countermeasure_solution": "Verify that there is a limit implemented in the application's code to throttle the excessive number of outgoing HTTP requests sent to external user defined webhooks.",
    "weakness_title_read_only": "Uncontrolled Resource Consumption (Resource Exhaustion)",
    "weakness_id_read_only": "P293",
    "weakness": "1bee9747-5d60-43f1-8e0f-e261388a5c25",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2016-09-28T10:35:37.875000-04:00",
    "last_updated": "2021-06-25T14:47:40.563000-04:00",
    "custom": "False",
    "rules": "58daef50-c9b7-4c99-ba60-3f858e39cc1c",
    "rules_read_only": "A1128"
  },
  {
    "countermeasure_id": "T517",
    "universal_id": "243078a9-63e9-4dec-9b0b-1a1fccdcfc35",
    "countermeasure_name": "Protect user registration and account modification pages against user enumeration",
    "countermeasure_solution": "When a user tries to **modify his/her username** or **create a new account**, the application needs to check if the username already exists. However, giving away this information allows attackers to build a list of valid usernames (user enumeration). Follow these steps to protect the application against user enumeration:\n\n1. Include an anti-automation technique, such as a **CAPTCHA** image to slow down attacks. Use accessibility options for visually impaired users.\n    - **Note:** If usernames are not user email addresses, but arbitrary choices, ignore the rest of these steps.\n\n2. For usernames that are email addresses, display a message informing the user that a validation email has been sent to their inbox. Display a similar message **regardless of whether the entered email address exists**. \n\n3. If an account is associated with the selected email address, send a **warning message** to that address. Also send an **abnormal behavior alert** to system admin.\n\n4. If the submitted email address is unique in the system, send a one-time-use email address validation link to that address.  Expire the link if it is not used within a predefined period.",
    "weakness_title_read_only": "Response Discrepancy Information Exposure",
    "weakness_id_read_only": "P100",
    "weakness": "85a0f395-026f-4269-8454-64c5b4311261",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "requirements",
    "created": "2016-09-28T11:59:59.646000-04:00",
    "last_updated": "2021-06-25T14:47:38.673000-04:00",
    "custom": "False",
    "rules": "0b07fc15-1e13-4c03-b097-c7e222fc019a",
    "rules_read_only": "A718"
  },
  {
    "countermeasure_id": "T518",
    "universal_id": "92eed197-25cf-4f7e-8191-3b2995bf7594",
    "countermeasure_name": "Test that registration and account modification pages are protected against user enumeration",
    "countermeasure_solution": "Follow these steps for both username **registration** and **modification** procedures to make sure they do not lead to user enumeration:\n\n1. Attempt to submit 10 consecutive username registration/modification requests.\n    - This test __fails__ if:\n        - You do not see a **CAPTCHA** (or other **anti-automation** technique).\n        - You are not prevented from making further requests.\n    - **Note:** If the username is an arbitrary choice of the users instead of email addresses, ignore the rest of these steps.\n\n2. Attempt to create/modify an account with an existing email address and inspect the response. Next, create/modify an account with a unique email address and inspect the response.\n    - This test __fails__ if the two **responses differ**.\n\n3. Attempt to create an account with an existing email address.\n    - This test __fails__  if the existing account owner does not receive a **warning notification**.\n\n4. Attempt to modify a username with an existing email address. Next, check the inbox for an **email address validation link**.\n    - This test __fails__ if there is no such link sent.\n\n5. Click on the **link** and follow the instructions to change the username. Once the new username is successfully set, click the link again within the expiry time window.\n    - This test __fails__ if it allows you to update the username again.\n\n6. Repeat step 4. Next, wait until the link's **expiry time window** passes. Then click on the link and attempt to update the username.\n    - This test __fails__ if it allows you to update the username.",
    "weakness_title_read_only": "Response Discrepancy Information Exposure",
    "weakness_id_read_only": "P100",
    "weakness": "85a0f395-026f-4269-8454-64c5b4311261",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2016-09-28T12:17:36.027000-04:00",
    "last_updated": "2021-06-25T14:47:38.653000-04:00",
    "custom": "False",
    "rules": "0b07fc15-1e13-4c03-b097-c7e222fc019a",
    "rules_read_only": "A718"
  },
  {
    "countermeasure_id": "T519",
    "universal_id": "adbf3bd7-398f-43bc-a64a-7f5f933f2e3c",
    "countermeasure_name": "Test that input validation is done on all forms of input",
    "countermeasure_solution": "Use the following guidelines for input validation:\n\n- Create a comprehensive list of all input fields and input items for the application.\n\n- For each input field or input item, identify the acceptance criteria of the input value, such as types of characters used, and length or size of the input.\n\n- Test each input field or input item with unacceptable values to make sure it is validated correctly in the code.",
    "weakness_title_read_only": "Improper Input Validation",
    "weakness_id_read_only": "P95",
    "weakness": "df80ca69-a2c0-4d7f-b3f7-d81bd6d685e9",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2016-09-28T13:01:46.325000-04:00",
    "last_updated": "2021-06-25T14:47:54.124000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T520",
    "universal_id": "ef946dab-c29b-436c-9384-2d4fda267ba8",
    "countermeasure_name": "Design secure SOAP web services",
    "countermeasure_solution": "This countermeasure gives you an overview of the choices you have when designing secure web services. While the problem is broader than access control, you generally need to pay attention to the following aspects of security:\n\n__Authentication and Authorization:__ \n\n- Enable SSL/TLS with certificate authentication (server and client authentication) on both sides of communication.\n    - Disable non-HTTPS endpoints, and make sure client certificate validation is on.\n        - Certificate management is a hurdle in this method.\n    - If the called service needs to call other services in a chain, all the services should trust their direct caller, and there is no method to propagate trust in the chain.\n\n- You can choose to use [WS-Security](https://www.oasis-open.org/committees/tc_home.php?wg_abbrev=wss) standards as a basis for communicating authentication tokens. \n    - There are many options for authentication in WS-Security standards, including username and signature, SAML certificates, Kerberos tokens, and X509 tokens.\n    - For a list of choices, see [page 2-16 of NIST 800-95](http://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-95.pdf).\n\n- You can use proprietary methods for Authentication/Authorization.\n    - Any fields of the SOAP messages can contain usernames, passwords or tokens that are generated by a trusted entity (sent by the caller service), and can be verified at the consumed service.\n    - Make sure passwords and sensitive data are encrypted in the SOAP message fields.\n    - You will lose the interoperability advantage by using proprietary methods, but if all the services are internal, and understand the protocol using proprietary methods is a possibility.\n\n__Confidentiality:__\n\n- Use encryption (XML Encryption) or SSL/TLS to preserve the confidentiality of fields that contain sensitive data.\n    - If you use XML encryption, you can protect specific parts of an XML payload in transit and at rest on the server.\n    - The encrypted fields are protected unless they are decrypted and stored somewhere.\n    - You also have the option of selective encryption of fields if you use XML encryption (as opposed to SSL/TLS).\n\n__Availability:__\n\n- If your service depends on other services, make sure the design allows your service to work properly or fail safely if those services become unavailable or slow. \n    - Make sure you limit the size of the service's inputs and also the size of the response you accept from other services.\n    - Large payloads can break your service.\n\n\n__Integrity and non-repudiation:__\n\n- Include a signature with the requests, and include time-stamps, IDs, and important parts of the message in the signature.\n    - Use WS-Security ([W3C XML Signature](https://www.w3.org/TR/xmldsig-core/)) for adding signatures to SOAP messages.\n    - For non-repudiation, make sure you include enough data (including request address, IDs, and time-stamps) so that the signature cannot be resent with other requests.\n    - In particular, use WS-Addressing or some similar methods to make sure the request cannot be replayed.\n\n___Notes:___\n\n- If you need non-repudiation, then SSL/TLS is not sufficient on its own. You should include digital signatures with messages.\n- When using SSL/TLS and certificate validation, if the service needs to call other services, the identity of the main caller cannot be passed to the other services down the path. Each of the called services should still trust the SSL/TLS certificate of the caller. In those situations, tokens or signatures that are passable to other services are better choices.\n\n- See [Table 2-1 and Table 2-2 of NIST 800-95](http://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-95.pdf) for an overview of the specifications you can choose for each security objective.\n- Also, see this article on [web service security concepts](https://docs.oracle.com/cd/E17904_01/web.1111/b32511/intro_security.htm#WSSEC1508).",
    "weakness_title_read_only": "Improper Access Control (Authorization)",
    "weakness_id_read_only": "P182",
    "weakness": "e488cdc5-3c91-4d2b-bcec-5c651b000d8b",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "architecture-design",
    "created": "2016-09-30T17:00:26.354000-04:00",
    "last_updated": "2022-08-24T14:36:45.347000-04:00",
    "custom": "False",
    "rules": "16baf492-81ad-438e-b3fd-1f618e1ff17e",
    "rules_read_only": "A730"
  },
  {
    "countermeasure_id": "T521",
    "universal_id": "e636d7bb-8a7a-4589-b927-9fdcc12a45e9",
    "countermeasure_name": "Protect the ZigBee network infrastructure with a Network Key",
    "countermeasure_solution": "Use the following guidelines for protecting ZigBee network infrastructure with a network key:\n\n- Ensure your **devices** support and utilize a **Network Key**.\n__Note:__ Network Key is one type of cryptographic key specified in the ZigBee standard. It is shared among all nodes in a ZigBee network, including End Devices, Routers, and Gateways.\n- Consider the following assumption:\n All **nodes** ideally should be required to possess a **valid Network Key** to utilize the ZigBee network for transmitting and receiving data.\n                    - Nodes without a valid Network Key should not join or utilize a ZigBee network for transport.\n                    - Routing nodes should validate ZigBee packets based on the Network Key before processing and forwarding the packet.\n                    - The ZigBee protocol should specify a **key rotation mechanism** that may be employed for **key update purposes**.\n__Note:__ Key rotation mechanisms are used as an extra effort to protect the Network Key.\n- At a minimum, secure a ZigBee network with a Network Key used by all the devices to protect all network frames, such as routing messages and network join requests, and to prevent the unauthorized joining and use of the ZigBee network by illegitimate devices.\n    \nFor more information about web server security, see [Security Best Practice Recommendation Section G](https://www.energy.gov/sites/prod/files/oeprod/DocumentsandMedia/Securing_ZigBee_Wireless_Networks.pdf)",
    "weakness_title_read_only": "Clear Text and Unencrypted Transmission of Information",
    "weakness_id_read_only": "P216",
    "weakness": "b1d166d6-8ca7-415f-9cd9-8c2d745d3d01",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "architecture-design",
    "created": "2016-10-11T09:33:54.176000-04:00",
    "last_updated": "2022-03-01T11:28:14.935000-05:00",
    "custom": "False",
    "rules": "77774b24-c3a6-401f-88cc-8de973ca94c8",
    "rules_read_only": "A1130"
  },
  {
    "countermeasure_id": "T522",
    "universal_id": "558cf226-1dfa-4a28-8f4a-3f609066cd5b",
    "countermeasure_name": "Employ address filtering at the MAC layer",
    "countermeasure_solution": "Use the following guidelines for MAC address filtering:\n\n- Use address filtering at the MAC layer to reduce the risk of unauthorized nodes accessing the network.\n    - This is a low-level security mechanism that is defined in the IEEE 802.15.4 standard and is referred to as Access Control List (ACL) mode.\n\n- Make sure your device vendor supports this feature.\n    - It should be utilized by all nodes within the network to only accept MAC frames received from authorized nodes listed in the ACL for the device.",
    "weakness_title_read_only": "Improper Access Control (Authorization)",
    "weakness_id_read_only": "P182",
    "weakness": "e488cdc5-3c91-4d2b-bcec-5c651b000d8b",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "architecture-design",
    "created": "2016-10-11T10:11:36.694000-04:00",
    "last_updated": "2021-06-25T14:47:52.228000-04:00",
    "custom": "False",
    "rules": "77774b24-c3a6-401f-88cc-8de973ca94c8;2138f278-35d1-49c9-80d9-222ad0f372a7",
    "rules_read_only": "A1130;A1131"
  },
  {
    "countermeasure_id": "T523",
    "universal_id": "ed0e4458-8711-4723-b58c-b70c1987c502",
    "countermeasure_name": "Designate a ZigBee Coordinator",
    "countermeasure_solution": "Use the following guidelines for designating a ZigBee coordinator:\n\n- Designate a particular **FFD (Full Function Device) node** as the dedicated ZigBee Coordinator for each ZigBee network implementation.\n    - This ensures maximum control over the formation and operation of the WPAN network.\n\n- Where possible, all other nodes should be **disabled** from assuming the role of WPAN Coordinator, with the possible exception of a ZigBee node specifically designated to function as a backup Coordinator.",
    "weakness_title_read_only": "Uncertainty about which ZigBee node is the coordinator",
    "weakness_id_read_only": "P794",
    "weakness": "cb63adce-4694-4bbd-a951-4a59692f64c5",
    "tags": "",
    "countermeasure_priority": "2",
    "phase": "architecture-design",
    "created": "2016-10-14T12:39:49.591000-04:00",
    "last_updated": "2021-06-25T14:47:52.291000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T524",
    "universal_id": "286d71d6-c425-4867-8131-b051ec3a5f81",
    "countermeasure_name": "Designate a backup ZigBee Coordinator",
    "countermeasure_solution": "Use the following guidelines for designating a backup ZigBee coordinator:\n\n- If supported by the ZigBee vendor:\n    - Designate a **backup or secondary WPAN Coordinator** to function as the Coordinator in the event that the primary Coordinator fails.\n    - Both the primary and secondary Coordinator should be dedicated nodes within the network to perform this vital function. All other nodes should be configured to not assume the role of Coordinator dynamically.\n        - This will prevent other nodes from taking over the role of an existing Coordinator if the Coordinator fails, or attempting to establish a new and separate LR-WPAN network on their own.",
    "weakness_title_read_only": "Lack of fault tolerance or having a single point of failure",
    "weakness_id_read_only": "P762",
    "weakness": "c56fb0b9-aad4-4dde-ad43-bc3a3ca9a244",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "architecture-design",
    "created": "2016-10-14T12:46:38.181000-04:00",
    "last_updated": "2021-06-25T14:47:39.642000-04:00",
    "custom": "False",
    "rules": "77774b24-c3a6-401f-88cc-8de973ca94c8",
    "rules_read_only": "A1130"
  },
  {
    "countermeasure_id": "T525",
    "universal_id": "770bfd7a-47a3-40b3-ad6f-c38ddf709c02",
    "countermeasure_name": "Pre-assign a PAN Identifier for the ZigBee network",
    "countermeasure_solution": "Use the following guidelines for pre-assigning a PAN identifier for the ZigBee network:\n\n- Predetermine a PAN Identifier to be used by the Coordinator. Other ZigBee devices should be limited to only joining a network with the pre-assigned PAN Identifier.\n\n- The determined PAN Identifier can be integrated into the devices during their initial setup.\n    - A degree of coordination and control of PAN Identifiers is necessary if multiple ZigBee networks will be operating in a given environment to prevent potential conflicts.\n    - The setup application should manage the networks, their PAN Identifiers, and the integration of those PAN IDs into the Coordinator and remaining devices.",
    "weakness_title_read_only": "Uncertainty about which ZigBee network to join",
    "weakness_id_read_only": "P795",
    "weakness": "dcc5a42f-e82b-42e0-a32b-0cf1c96e2909",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "architecture-design",
    "created": "2016-10-17T11:53:50.367000-04:00",
    "last_updated": "2021-06-25T14:47:52.137000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T526",
    "universal_id": "2a290f63-a0b4-4dd1-a664-ff8a063709dd",
    "countermeasure_name": "Choose an out-of-band method for loading keys into ZigBee devices if possible",
    "countermeasure_solution": "If the ZigBee vendor supports it, use an out-of-band method for loading the cryptographic key(s) onto ZigBee devices. The key management methods, such as generation, distribution, updating, and revoking will vary among ZigBee vendors. Generally, the initial generation and loading of cryptographic keys (the Master key, for example) will be possible in three ways:\n\n1. Out-of-band:\n    - This method loads the key into the ZigBee device using a mechanism other than through the normal wireless communication channels used for network operation.\n    - An example would be a serial port on the device through which a key could be loaded with a cable attachment to the key generation device, such as a laptop or the Trust Center host.\n\n2. In-band:\n    - This method delivers keys over-the-air through the normal wireless communication channels used for network operation.\n    - This is a less secure method of key delivery because the transmission of the key to a device joining the network that has not been preconfigured is unprotected.\n    - This creates a potential period of vulnerability.\n\n3. Factory preloaded:\n    - This method of key delivery consists of the vendor generating and loading the key(s) into ZigBee devices at the manufacturing location prior to delivery to the customer.\n    - Key values must subsequently be conveyed to the customer when they receive the ZigBee equipment.\n    - This approach is the least secure because the vendor has knowledge of the key values and must also successfully convey the information to the customer in a secure manner.\n\nFrom a security standpoint, the preferred method (if supported by the ZigBee vendor) is to have the customer use the **out-of-band** method for generating and loading keys. If that is not supported, then an in-band delivery method for loading keying material under controlled conditions would be the second most secure method. The factory generated and preloaded key option is likely to be the least secure method and should be used only if the two other key loading methods are not supported.",
    "weakness_title_read_only": "Unencrypted loading of network keys onto devices",
    "weakness_id_read_only": "P796",
    "weakness": "46f70c3a-4302-4aaa-8cb3-eaa0c8d56d31",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "architecture-design",
    "created": "2016-10-17T12:26:56.123000-04:00",
    "last_updated": "2021-06-25T14:47:52.210000-04:00",
    "custom": "False",
    "rules": "77774b24-c3a6-401f-88cc-8de973ca94c8",
    "rules_read_only": "A1130"
  },
  {
    "countermeasure_id": "T528",
    "universal_id": "2cfe6416-e206-427f-b124-94b2363f6b72",
    "countermeasure_name": "Enable MAC layer security mechanisms supported in the IEEE 802.15.4 when supported by the vendor",
    "countermeasure_solution": "Use the following guidelines for enabling MAC layer security mechanisms:\n\nZigBee and Thread protocols are built on the lower layer IEEE 802.15.4 protocol and use MAC layer security features defined in this standard. This layer offers the following MAC frame security features:\n\n- *Encryption*\n- *Integrity*\n- *Sequential freshness*\n\nUse these security features if they are supported by the vendor. In particular, use the frame integrity capability because it protects the MAC header that contains the source and destination hardware address fields.",
    "weakness_title_read_only": "No MAC layer security in shared networks",
    "weakness_id_read_only": "P799",
    "weakness": "3f1a758c-ee16-42a9-83dc-847ef04a508c",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "architecture-design",
    "created": "2016-10-17T12:39:44.673000-04:00",
    "last_updated": "2021-06-25T14:47:52.193000-04:00",
    "custom": "False",
    "rules": "cab80cea-1a20-433f-b78c-783b816b8d33 AND 2138f278-35d1-49c9-80d9-222ad0f372a7;77774b24-c3a6-401f-88cc-8de973ca94c8 AND cab80cea-1a20-433f-b78c-783b816b8d33",
    "rules_read_only": "A739 AND A1131;A1130 AND A739"
  },
  {
    "countermeasure_id": "T529",
    "universal_id": "0f42a73a-2fc7-426f-a9fe-21f454661edc",
    "countermeasure_name": "Verify that a Network Key is utilized in the ZigBee network",
    "countermeasure_solution": "Verify that a Network Key is used by all devices in the network for encrypting data in transit.",
    "weakness_title_read_only": "Clear Text and Unencrypted Transmission of Information",
    "weakness_id_read_only": "P216",
    "weakness": "b1d166d6-8ca7-415f-9cd9-8c2d745d3d01",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2016-10-17T12:56:43.626000-04:00",
    "last_updated": "2021-06-25T14:47:36.705000-04:00",
    "custom": "False",
    "rules": "77774b24-c3a6-401f-88cc-8de973ca94c8",
    "rules_read_only": "A1130"
  },
  {
    "countermeasure_id": "T530",
    "universal_id": "7e43b315-346f-480a-a828-27576260a3b9",
    "countermeasure_name": "Test that MAC layer address filtering is enabled",
    "countermeasure_solution": "Test that MAC layer address filtering is enabled in the 802.15.4 layer of the network stack.\n\nTo test this, use a device with an address not in the authorized list and make sure the device is not able to connect to the established network.",
    "weakness_title_read_only": "Improper Access Control (Authorization)",
    "weakness_id_read_only": "P182",
    "weakness": "e488cdc5-3c91-4d2b-bcec-5c651b000d8b",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2016-10-17T13:00:58.291000-04:00",
    "last_updated": "2021-06-25T14:47:52.254000-04:00",
    "custom": "False",
    "rules": "77774b24-c3a6-401f-88cc-8de973ca94c8;2138f278-35d1-49c9-80d9-222ad0f372a7",
    "rules_read_only": "A1130;A1131"
  },
  {
    "countermeasure_id": "T531",
    "universal_id": "f06e9e10-b244-467a-b55f-c333693fa147",
    "countermeasure_name": "Verify that the network has a designated ZigBee Coordinator",
    "countermeasure_solution": "Verify that your system provides a mechanism that fixes the Coordinator node in the ZigBee network:\n    \n- Test that any new device added to an already established ZigBee network is able to connect to the designated Coordinator and does not assume the role of a Coordinator by itself.\n- The new device should not start a new network when one already exists.",
    "weakness_title_read_only": "Uncertainty about which ZigBee node is the coordinator",
    "weakness_id_read_only": "P794",
    "weakness": "cb63adce-4694-4bbd-a951-4a59692f64c5",
    "tags": "",
    "countermeasure_priority": "2",
    "phase": "testing",
    "created": "2016-10-17T13:12:06.221000-04:00",
    "last_updated": "2021-06-25T14:47:52.241000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T532",
    "universal_id": "68d161d6-8abd-482d-9f82-7d7778b99ea9",
    "countermeasure_name": "Test that the network has a designated backup ZigBee Coordinator",
    "countermeasure_solution": "Test that in a ZigBee network running your system, a designated backup ZigBee Coordinator can substitute the primary Coordinator without interruption.\n    \n- Turn the Coordinator device off and make sure the backup Coordinator detects that and starts working as the network's Coordinator.\n- All other nodes should not assume backup roles for themselves and should wait for the backup node to manage the network.",
    "weakness_title_read_only": "Lack of fault tolerance or having a single point of failure",
    "weakness_id_read_only": "P762",
    "weakness": "c56fb0b9-aad4-4dde-ad43-bc3a3ca9a244",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2016-10-17T13:19:26.368000-04:00",
    "last_updated": "2021-06-25T14:47:39.624000-04:00",
    "custom": "False",
    "rules": "77774b24-c3a6-401f-88cc-8de973ca94c8",
    "rules_read_only": "A1130"
  },
  {
    "countermeasure_id": "T533",
    "universal_id": "f69510f7-3403-46c9-be7e-09a863bec096",
    "countermeasure_name": "Test that ZigBee nodes only connect to a network with a pre-assigned PAN Identifier",
    "countermeasure_solution": "Use the following guidelines for testing that ZigBee nodes only connect to a network with a pre-assigned PAN ID:\n\n1. Create two networks:\n    - One with the pre-assigned PAN ID.\n    - A second with a different random identifier.\n\n2. Make sure any new device added to the system connects to the right network in any condition.\n    - Test this with new devices, with devices that rejoin a network, and so on.\n\nAdditionally, if multiple ZigBee networks will be operating in the environment:\n\n- Verify that the setup application coordinates the networks, their PAN IDs, and the integration of the PAN IDs into the devices correctly.\n- The setup application should also prevent any conflicts of PAN IDs between different networks.",
    "weakness_title_read_only": "Uncertainty about which ZigBee network to join",
    "weakness_id_read_only": "P795",
    "weakness": "dcc5a42f-e82b-42e0-a32b-0cf1c96e2909",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2016-10-17T13:25:43.682000-04:00",
    "last_updated": "2021-06-25T14:47:52.175000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T534",
    "universal_id": "d5dd6a3e-91f1-4620-86bb-051897ab1681",
    "countermeasure_name": "Verify that an out-of-bound method is used for loading network keys into ZigBee devices",
    "countermeasure_solution": "Verify the following items for loading network keys into ZigBee devices:\n\n- The system loads network keys using an out-of-band method.\n- The inbound transportation of network keys to new joining devices is disabled by default.",
    "weakness_title_read_only": "Unencrypted loading of network keys onto devices",
    "weakness_id_read_only": "P796",
    "weakness": "46f70c3a-4302-4aaa-8cb3-eaa0c8d56d31",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2016-10-17T13:30:16.019000-04:00",
    "last_updated": "2021-06-25T14:47:52.162000-04:00",
    "custom": "False",
    "rules": "77774b24-c3a6-401f-88cc-8de973ca94c8",
    "rules_read_only": "A1130"
  },
  {
    "countermeasure_id": "T535",
    "universal_id": "3cd2d10a-c40f-4dac-a953-98862cc75d2d",
    "countermeasure_name": "Test that MAC frames of 802.15.4 layer are secure",
    "countermeasure_solution": "Test that 802.15.4 MAC frames, exchanged in ZigBee or Thread networks, are using a cipher suite that provides the following for each frame:\n\n- Encryption\n- Integrity\n- Sequential freshness",
    "weakness_title_read_only": "No MAC layer security in shared networks",
    "weakness_id_read_only": "P799",
    "weakness": "3f1a758c-ee16-42a9-83dc-847ef04a508c",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2016-10-17T13:36:34.671000-04:00",
    "last_updated": "2021-06-25T14:47:52.120000-04:00",
    "custom": "False",
    "rules": "77774b24-c3a6-401f-88cc-8de973ca94c8 AND cab80cea-1a20-433f-b78c-783b816b8d33;cab80cea-1a20-433f-b78c-783b816b8d33 AND 2138f278-35d1-49c9-80d9-222ad0f372a7",
    "rules_read_only": "A1130 AND A739;A739 AND A1131"
  },
  {
    "countermeasure_id": "T536",
    "universal_id": "42e01c71-79c4-4590-8510-d45ba834d3c6",
    "countermeasure_name": "Restrict the size of incoming messages in services",
    "countermeasure_solution": "Use the following guidelines for restricting the size of incoming messages in services:\n\n- Limit the size of input messages that services accept to protect them against Denial of Service (DoS) attacks.\n    - If services call other services as part of their operation, make sure the message sizes are within a range.\n    - Some servers allow setting these values in configuration files.\n\n__Notes:__ \n\n- According to NIST 800-95, oversized XML documents can also cause XML parsers to collapse. Configure the server the service is running on to only accept messages up to a certain size.\n\n- This countermeasure might not be required if your architecture is designed in a way that you have low load on your server by using techniques such as DNS or TCP/IP load balancing. Check whether your application is still vulnerable to amplification attacks after using such techniques. If so, then apply the requirements in this countermeasure.",
    "weakness_title_read_only": "Denial of Service (DoS)",
    "weakness_id_read_only": "P750",
    "weakness": "04f3a13f-c7ea-4824-bd73-086d61dd30ba",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "requirements",
    "created": "2016-10-18T13:29:02.731000-04:00",
    "last_updated": "2022-09-01T10:42:10.087000-04:00",
    "custom": "False",
    "rules": "ae1d26d0-d3f3-45ac-9936-4721c3091e25",
    "rules_read_only": "A1183"
  },
  {
    "countermeasure_id": "T537",
    "universal_id": "a53b0691-576c-465e-be0d-79249cce43f7",
    "countermeasure_name": "Test that the size of incoming messages in services is restricted",
    "countermeasure_solution": "Use the following guidelines to check the size of incoming messages for services:\n\n- Perform load testing for services to make sure they are not vulnerable to Denial of Service (DoS) attacks as a result of unrestricted incoming message sizes.\n    - There are different load testing tools available to check whether the maximum size of payload is configured for the services. These tools include Appache JMeter, WebLOAD, and loadUI.\n- The tool needs to be able to send requests with different sizes and check the performance.\n\n    This test __fails__ if large requests break the services.\n\n__Notes:__ \n\n- You should also pay attention to external services that are called within your services. If you receive input from other services within your code, you should also test that your system cannot be brought down by a malicious or malfunctioning external service.\n\n- This countermeasure might not be required if your architecture is designed in a way that a single request creates consistent and low load on your server by using DDoS protection techniques such as an approved DNS or TCP/IP load balancing. Check whether your application is still vulnerable to amplification attacks after using such techniques. If so, then apply the requirements in this countermeasure .",
    "weakness_title_read_only": "Denial of Service (DoS)",
    "weakness_id_read_only": "P750",
    "weakness": "04f3a13f-c7ea-4824-bd73-086d61dd30ba",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2016-10-18T16:41:28.833000-04:00",
    "last_updated": "2022-08-23T10:00:13.988000-04:00",
    "custom": "False",
    "rules": "ae1d26d0-d3f3-45ac-9936-4721c3091e25",
    "rules_read_only": "A1183"
  },
  {
    "countermeasure_id": "T538",
    "universal_id": "39f61754-bb0f-4d25-8a75-8080b688e77c",
    "countermeasure_name": "Disable or protect JTAG interfaces in production",
    "countermeasure_solution": "There are two major solutions for the JTAG exploit depending on the type of device:\n\n- If the chip is in an end-device that does not need to be reprogrammed or debugged after leaving the factory, permanently disconnect JTAG lines by configuring specific fuse bits. For example, disable OCDEN and JTAGEN in Atmel AVR.\n    - **Note:** Do not rely on temporary soft programming methods, such as setting JTD bit in Atmel chips, because resetting the bit re-enables the JTAG interface.\n\n- If debugging errors and reprogramming the chip are required in the course of the device's lifetime, use chips that protect the active JTAG interface using a sufficient challenge-response protocol to authenticate the debug tool. In most cases, the authentication key should be unique to each device.\n\n**Note:** Different microcontrollers may provide a variety of On-Chip Debugging (OCD) physical interfaces other than JTAG. Consider disabling/protecting these interfaces according to the chip's datasheets.",
    "weakness_title_read_only": "Unprotected Hardware Debugging Interfaces",
    "weakness_id_read_only": "P800",
    "weakness": "4c30e507-467e-4120-a791-192490b6057f",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "requirements",
    "created": "2016-10-18T19:12:48.953000-04:00",
    "last_updated": "2021-06-25T14:47:55.613000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T539",
    "universal_id": "d1dcf6fc-3301-4b5a-a0b9-7c7c08fe7a43",
    "countermeasure_name": "Test that JTAG interfaces are disabled or protected in production",
    "countermeasure_solution": "Follow these steps to test that JTAG interfaces are disabled and protected:\n\n1. Reset the chip using its RESET pin. This is to void the soft settings if JTAG is disabled with temporary methods.\n\n2. Try to attach a debug tool to the JTAG interface.\n\nThis test __fails__ if it connects without any challenge-response negotiation and you can read or write its registers, or the authentication key is not unique to the device.\n\n__Note:__ In some devices the JTAG interface can be active but protected with an authenticator module.",
    "weakness_title_read_only": "Unprotected Hardware Debugging Interfaces",
    "weakness_id_read_only": "P800",
    "weakness": "4c30e507-467e-4120-a791-192490b6057f",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2016-10-18T19:16:13.263000-04:00",
    "last_updated": "2021-06-25T14:47:55.901000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T540",
    "universal_id": "7ac69e62-bb98-4847-9326-20fdb98caf3c",
    "countermeasure_name": "Restrict direct memory access",
    "countermeasure_solution": "Follow these instructions to protect memory against unauthorized direct memory access (DMA):\n\n- Inspect the circuit board to identify interfaces that provide DMA to external components. For example, Thunderbolt, PC Card, ExpressCard, and FireWire.\n\n- Disable these interfaces in production, where possible, and where they are not needed.\n    - One solution is to disable these interfaces in BIOS and protect the BIOS configurations with a strong password.\n\n- If not possible, design the device considering that the device memory is accessible. For example, do not load any secrets to the memory that is not particular to the device or the user. This includes shared secrets of the organization, master keys, and issuer keys.\n    - Be aware that attackers have as much time as they need to explore the device and extract this data.",
    "weakness_title_read_only": "Direct Memory Access Attack",
    "weakness_id_read_only": "P797",
    "weakness": "1b0e6d9a-4a6d-4a78-aec1-6d9576cd5828",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "requirements",
    "created": "2016-10-18T19:26:27.002000-04:00",
    "last_updated": "2021-06-25T14:47:48.924000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T541",
    "universal_id": "4b66d6b9-9ab5-46af-8f26-da682b2c1afa",
    "countermeasure_name": "Verify that direct memory access is restricted",
    "countermeasure_solution": "Follow these instructions to verify that memory is protected against unauthorized direct memory access (DMA):\n\n1. Inspect the circuit board to identify interfaces that provide DMA to external components. For example, Thunderbolt, PC Card, ExpressCard, and FireWire.\n\n2. Attempt connecting to such interfaces using proper hardware devices.\n\n3. Verify that any secret not particular to the device or the user is never loaded into the memory. This applies to shared secrets of the organization, master keys, and issuer keys.",
    "weakness_title_read_only": "Direct Memory Access Attack",
    "weakness_id_read_only": "P797",
    "weakness": "1b0e6d9a-4a6d-4a78-aec1-6d9576cd5828",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2016-10-18T19:31:01.673000-04:00",
    "last_updated": "2021-06-25T14:47:49.809000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T542",
    "universal_id": "ecb4899d-accf-4adf-8510-02e7b921216f",
    "countermeasure_name": "Protect hardware modules against tampering and probing",
    "countermeasure_solution": "Follow these instructions to protect the hardware against tampering and probing:\n\n- Protect on-board chips, such as processing units, memory chips, and cryptographic modules, using the following measures where applicable:\n    - Use tamper-resistant and tamper-evident physical casings with tamper-detection seals.\n        - Tamper resistant casings prevent the intrusion.\n        - Tamper-evident casings create permanent evidence on the material when tampered with.\n        - Anti-tamper coating covers the underlying circuitry.\n\n- Intrusion and removal attempts must cause serious non-recoverable damage to the device.\n\n- Employ critical security parameters (CSP) zeroization and tamper response mechanisms to securely erase stored sensitive data in the event of tampering.\n\n- Where feasible, inspect the hardware modules to detect tampering at random, at a proper frequency, or upon defined indications of the need for inspection.\n\nFor more information see NIST's [Implementation Guidance for FIPS PUB 140-3 and the Cryptographic Module Validation Program - Annex A Section 14](https://csrc.nist.gov/CSRC/media/Projects/cryptographic-module-validation-program/documents/fips%20140-3/Draft%20FIPS-140-3-CMVP%20Management%20Manual%2009-18-2020.pdf)",
    "weakness_title_read_only": "Insufficient Protection of Hardware Modules and Wiring Against Tampering and Probing",
    "weakness_id_read_only": "P798",
    "weakness": "2c259a0f-08ce-455c-883a-40da7392cc29",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "requirements",
    "created": "2016-10-18T19:39:43.859000-04:00",
    "last_updated": "2023-03-17T17:34:09.828000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T543",
    "universal_id": "d6e698c5-da32-4e28-8d3c-cadaa2adb2e6",
    "countermeasure_name": "Verify that hardware modules are protected against tampering and probing",
    "countermeasure_solution": "Follow these instructions to verify that a device is protected against tampering and probing:\n\n- Verify that the applied casing and coating deters direct observation, probing, or manipulation of the underlying circuitry.\n- Verify that the casing and coating cannot be easily removed or penetrated, and that it leaves evidence of tampering if tampering occurs.\n- Verify that critical security parameters (CSP) zeroization and tamper response mechanisms have been implemented.\n- Verify that tamper evidence inspections (if feasible) are done on schedule.\n\nFor more information see NIST's [Implementation Guidance for FIPS PUB 140-3 and the Cryptographic Module Validation Program - Annex A Section 14](https://csrc.nist.gov/CSRC/media/Projects/cryptographic-module-validation-program/documents/fips%20140-3/Draft%20FIPS-140-3-CMVP%20Management%20Manual%2009-18-2020.pdf)",
    "weakness_title_read_only": "Insufficient Protection of Hardware Modules and Wiring Against Tampering and Probing",
    "weakness_id_read_only": "P798",
    "weakness": "2c259a0f-08ce-455c-883a-40da7392cc29",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2016-10-18T19:42:38.222000-04:00",
    "last_updated": "2021-06-25T14:47:59.383000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T544",
    "universal_id": "7812a6c8-49c1-49c4-b873-91780cdb5123",
    "countermeasure_name": "Anonymize (de-identify) identifying information before using it for a secondary purpose",
    "countermeasure_solution": "Anonymize personally identifiable information that can be linked to an individual when the information is intended to be used for secondary purposes.\n\nIf you are a [controller](/library/glossary/G33/) delegating this job to [processors](/library/glossary/G34/), provide them with written anonymization instructions. If you are a processor assigned to the job on behalf of the controller, ensure that the anonymization is in compliance with the controller's written instructions.\n\nAnonymization helps protect users' privacy by removing the possibility of the individuals being identified uniquely. Some examples of personally identifiable information are:\n\n- Names\n- Addresses\n- Gender\n- Date of birth\n- Protected health information (PHI)",
    "weakness_title_read_only": "Privacy Violation",
    "weakness_id_read_only": "P257",
    "weakness": "b0418f1b-bf92-45ba-845f-abfb9735f1cf",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "requirements",
    "created": "2016-10-20T13:16:57.392000-04:00",
    "last_updated": "2023-05-25T13:09:48.805000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T545",
    "universal_id": "f0dcc4f2-cb2a-4217-b865-5fa7517f2e32",
    "countermeasure_name": "Verify that personal information is anonymized before being reused for secondary purposes",
    "countermeasure_solution": "Use the following guidelines for personal information: \n \n- Verify that personal information is anonymized (de-identified) if a user's private data is used for secondary purposes in your application. \n\n- Check whether evidence such as deidentification procedures, assessment of risk of reidentification, expert opinions exist.\n\n \nThis test __fails__ if user information is not anonymized or can be linked to an individual.",
    "weakness_title_read_only": "Privacy Violation",
    "weakness_id_read_only": "P257",
    "weakness": "b0418f1b-bf92-45ba-845f-abfb9735f1cf",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2016-10-20T14:37:17.328000-04:00",
    "last_updated": "2023-05-11T12:48:26.356000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T548",
    "universal_id": "2d8485cd-5251-4679-a9eb-836c6d9013da",
    "countermeasure_name": "Protect physical data transmission channels",
    "countermeasure_solution": "Follow these instructions to protect data distribution lines and transmission channels:\n\n- Use a tamper-resistant coating or lockable casing to cover on-board circuitry.\n- Cover wiring using tamper resistant conduits or cable trays.\n- Disconnect or lock spare jacks and sockets.\n- When feasible, inspect the wiring to detect tampering at random and with regular frequency.",
    "weakness_title_read_only": "Insufficient Protection of Hardware Modules and Wiring Against Tampering and Probing",
    "weakness_id_read_only": "P798",
    "weakness": "2c259a0f-08ce-455c-883a-40da7392cc29",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "requirements",
    "created": "2016-10-20T15:41:34.800000-04:00",
    "last_updated": "2023-03-17T17:34:57.994000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T549",
    "universal_id": "a6f7adac-f7fa-46c3-8117-52406dc20f39",
    "countermeasure_name": "Verify that physical data transmission channels are protected",
    "countermeasure_solution": "Follow these instructions to verify that data distribution lines and transmission channels are protected:\n\n- Verify that the circuitry and wiring conduits cannot be penetrated, that the coating cannot be removed, and that meddling with the device leaves evidence of tampering. Also verify that the coating deters direct observation, probing, or manipulation.\n- Inspect the device for spare jacks and sockets, and verify they are properly disconnected or locked.\n- Verify that tamper evidence inspections are done on schedule.",
    "weakness_title_read_only": "Insufficient Protection of Hardware Modules and Wiring Against Tampering and Probing",
    "weakness_id_read_only": "P798",
    "weakness": "2c259a0f-08ce-455c-883a-40da7392cc29",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2016-10-20T15:42:51.577000-04:00",
    "last_updated": "2021-06-25T14:47:59.396000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T552",
    "universal_id": "8351b669-85e4-428f-952b-02ee49371984",
    "countermeasure_name": "Verify that SOAP web services are securely designed",
    "countermeasure_solution": "Make sure proper design choices are made to address the following aspects of security for SOAP web services (the problem that is addressed here is broader than just access control):\n\n__Authentication and Authorization:__\n\n- Verify that an authentication mechanism is chosen for web services.\n    - Access control should be in place for all the web services, and its security should not be based on obscurity (assuming that nobody knows the address of those web services).\n    - Refer to this countermeasure for available methods of authentication [520: Design secure SOAP web services](/library/tasks/T520/).\n\n__Confidentiality:__\n\n- Verify that encryption (XML Encryption) or SSL/TLS is used to protect the confidentiality of any sensitive data in transit.\n\n__Availability:__\n\n- Verify that if your services depend on other services, the design allows your services to work properly or fail safely if those services become unavailable or slow.\n    - Also, make sure you limit the size of the inputs for services and the size of the response you accept from other services.\n\n__Integrity and Non-repudiation:__\n\n- Verify that a signature is included with the requests, with a time-stamp, ID, and important parts of the message.\n    - For non-repudiation, verify that you have included enough data so that the signature cannot be re-sent with other requests. Include request address, IDs, and time-stamps.",
    "weakness_title_read_only": "Improper Access Control (Authorization)",
    "weakness_id_read_only": "P182",
    "weakness": "e488cdc5-3c91-4d2b-bcec-5c651b000d8b",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2016-10-26T14:55:23.844000-04:00",
    "last_updated": "2022-09-01T10:44:04.545000-04:00",
    "custom": "False",
    "rules": "16baf492-81ad-438e-b3fd-1f618e1ff17e",
    "rules_read_only": "A730"
  },
  {
    "countermeasure_id": "T553",
    "universal_id": "843040ca-cf99-450f-8d1d-fde76c52b1ef",
    "countermeasure_name": "Design secure RESTful web services",
    "countermeasure_solution": "See the following guidelines for a high level overview of security requirements for designing a REST client and server:\n\n- Consider security for REST on both client and server sides.\n    - The client side of REST deals with user interfaces and user states, and it is developed independently from the server side.\n    - The server side on the other hand, deals with functions such as data storage, database connections, and business logic.\n\n- Make sure all aspects of security are protected and considered in the design (as detailed below), including:\n    - Confidentiality (such as using secure channels)\n    - Integrity (such as using signatures)\n    - Availability (such as checking the size of messages)\n    - Access control\n\n__Confidentiality__\n\n- Mandate secure channels everywhere with no exception to protect data at rest and data in transit between client and server, including session state, and requests.\n    - Use SSL/TLS for channel security.\n\n__Access Control__\n\n- Authenticate and authorize the requests on the server side.\n    - To reduce the chance of replay attacks, the server should only accept requests within a reasonable timeframe by comparing the timestamp of the sent request with the current timestamp.\n    - Use HTTP access control to only allow API access from trusted URLs.\n    - To protect the session state, design a secure session management and use session tokens.\n    - Session tokens should be protected on the client and the server.\n\n__Integrity and Non Repudiation__\n\n- Digitally sign and verify messages.\n    - JSON Web Token (JWT) can be used to ensure the integrity of messages transmitted as JSON objects between parties and XML signature can be used for XML objects.\n- Explicitly check the incoming `Content-Type` to be the expected one, such as *application/xml* or *application/json*.\n\n__Availability__\n\n- Specify the maximum size of message throughput to improve the availability of your web services.\n\nReferences:\n\n- [REST Security Cheat Sheet](https://www.owasp.org/index.php/REST_Security_Cheat_Sheet)\n- [Web Service Security Cheat Sheet](https://www.owasp.org/index.php/Web_Service_Security_Cheat_Sheet)\n- [REST API and Security](http://lawsonry.github.io/2014/12/introduction-to-rest-apis-and-security/)",
    "weakness_title_read_only": "Improper Access Control (Authorization)",
    "weakness_id_read_only": "P182",
    "weakness": "e488cdc5-3c91-4d2b-bcec-5c651b000d8b",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "architecture-design",
    "created": "2016-10-26T19:14:22.469000-04:00",
    "last_updated": "2021-06-25T14:48:01.338000-04:00",
    "custom": "False",
    "rules": "a0c61b9c-b4f4-4652-b8f3-0f80f1e1e172",
    "rules_read_only": "A731"
  },
  {
    "countermeasure_id": "T554",
    "universal_id": "5f516ded-8854-4027-bf58-ea879a6fb9ae",
    "countermeasure_name": "Verify that REST web services are securely designed",
    "countermeasure_solution": "Verify that the following security requirements are considered in the design of your RESTful web services. For a checklist and more detail of items to check, refer to [Countermeasure 553](/library/tasks/T553/). \n\nVerify that all aspects of security are included in the design:\n\n- __Confidentiality:__ Verify that secure channels are used (such as SSL/TLS).\n- __Access Control:__ Verify that a secure authentication and authorization mechanism is designed.\n- __Integrity and Non Repudiation__: Verify that signature and integrity checks are considered in design.\n- __Availability__: Verify that checking the maximum size of message throughput is included in design.",
    "weakness_title_read_only": "Improper Access Control (Authorization)",
    "weakness_id_read_only": "P182",
    "weakness": "e488cdc5-3c91-4d2b-bcec-5c651b000d8b",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2016-10-27T12:49:21.582000-04:00",
    "last_updated": "2022-09-01T10:44:47.668000-04:00",
    "custom": "False",
    "rules": "a0c61b9c-b4f4-4652-b8f3-0f80f1e1e172",
    "rules_read_only": "A731"
  },
  {
    "countermeasure_id": "T555",
    "universal_id": "4833394c-4b73-471a-86d6-c9aab5b13e46",
    "countermeasure_name": "Acquire a secret token from users for signing the payload of webhook notifications",
    "countermeasure_solution": "Provide a feature for users to set up a secret token for signing the payload of webhook notifications. They can use the token to check the integrity and the authenticity of the payload sent to any webhook specified by them:\n\n- Let users set an arbitrary token that is long enough.\n    - Try to provide a tool for users to select a random token with a specified minimum length.\n    - Users should be able to change this token at any time.\n\n- Provide a signed hash of the payload for each webhook notification that you send from your application.\n    - For doing this, create a hash of the payload and then encrypt it using the secret token provided by the user.\n    - Pass the signed hash along with each request in a header such as `X-[EXAMPLE]-Signature`.\n\n- Let users know which hash algorithms you have used and how they can check the hash and signature to evaluate the integrity and authenticity of the payload sent with the webhook notification.",
    "weakness_title_read_only": "Missing proof of authenticity",
    "weakness_id_read_only": "P772",
    "weakness": "ba2ba016-c85e-4d09-ac9b-e09a81a569d8",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "architecture-design",
    "created": "2016-10-28T14:42:45.097000-04:00",
    "last_updated": "2021-06-25T14:47:42.343000-04:00",
    "custom": "False",
    "rules": "58daef50-c9b7-4c99-ba60-3f858e39cc1c",
    "rules_read_only": "A1128"
  },
  {
    "countermeasure_id": "T556",
    "universal_id": "7808c0b0-c928-4bec-90c3-5153299b3019",
    "countermeasure_name": "Test that users can provide a secret token for signing the payload of webhook notifications",
    "countermeasure_solution": "Test that the user can provide a security token for signing the payloads sent to the user-defined webhook. Otherwise, this test __fails__.\n\n1. Set up a webhook and provide its address and a random security token to the application.\n\n2. Test that the application precisely specifies:\n    - How to check the signature on the payload.\n    - The algorithms used for hashing and encrypting the payload.\n    - The HTTP header name that contains the signature.\n\n3. Trigger the event that causes the webhook callback and inspect the payload you receive through your webhook.\n\n4. Create a hash of the payload and encrypt the hash using the same token and algorithms that the application has specified.\n\n5. This test __fails__ if the result does not match the signature provided by the application in the specified HTTP request header.",
    "weakness_title_read_only": "Missing proof of authenticity",
    "weakness_id_read_only": "P772",
    "weakness": "ba2ba016-c85e-4d09-ac9b-e09a81a569d8",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2016-10-28T14:48:41.579000-04:00",
    "last_updated": "2021-06-25T14:47:42.507000-04:00",
    "custom": "False",
    "rules": "58daef50-c9b7-4c99-ba60-3f858e39cc1c",
    "rules_read_only": "A1128"
  },
  {
    "countermeasure_id": "T557",
    "universal_id": "c6ae5c27-ab31-46fa-8597-bb5a888c0ae9",
    "countermeasure_name": "Set SameSite attribute of cookies to Lax/Strict",
    "countermeasure_solution": "Add `SameSite` attribute to the session cookie in your application, or even all cookies.\n\nThis advice is applicable if your application:\n\n* Uses cookies to maintain a session or propagate authorization information\n* Your application works in an isolated fashion, without relying on cross-site or cross-origin requests\n\nMore details are provided below.\n\n## The purpose of the SameSite attribute\n\nThe browser automatically attaches cookies on outgoing requests. This enables web applications to keep the history and preferences of the users and perform session management. \n\nHowever, if a malicious page triggers a request to an application's backend, the browser also attaches the cookie. If such a request triggers a state-changing operation (e.g., post an update on a social media platform), we are talking about *Cross-Site Request Forgery (CSRF)*.\n\nThe `SameSite` attribute helps prevent CSRF. When present, the browser will only send the cookie on *same site requests*. In essence, the cookie will be present on every request that originates within the domain (e.g., from `https://one.example.com` to `https://one.example.com` or to `https://two.example.com`). However, the cookie will not be present on cross-site requests (e.g., from `https://www.evil.com` to `https://one.example.com`). When the cookie is missing, the application cannot perform the operation in the user's name, and the CSRF attack is mitigated.\n\n\n## Lax vs Strict mode\n\nThe `SameSite` attribute can be configured in two modes:\n\n* `Set-Cookie: username=Joe; SameSite=Strict;`\n* `Set-Cookie: username=Joe; SameSite=Lax;`\n\n\nIn `Strict` mode, the cookie will never be sent on cross-site requests. This mode is the default setting when only the attribute name with no value is provided.\n\nIn `Lax` mode, the cookie will never be sent on cross-site reuqests, except for top-level navigational GET requests (requests that change the URL in the browser's address bar). Such requests occur when the user clicks a link that navigates the page to your application. Without `Lax` mode, the cookies would be missing and the user would be logged out, even if a session existed before.\n\n__Both configurations stop CSRF attacks. For private enterprise applications, `Strict` mode is likely to work well. Public applications can use `Lax` mode if needed.__\n\n__*Note 1:*__ Some applications depend on cross-site requests for legitimate features. Those applications are incompatible with the `SameSite` attribute and should rely on other CSRF defenses instead  ([T29](/library/tasks/T29/)).\n\n__*Note 2:*__ The `SameSite` attribute is a recent addition to the web security landscape. Older browser versions, as well as Internet Explorer, do not support it. Therefore, it is not yet recommended to use this attribute as a primary CSRF defense. __If your application is vulnerable to CSRF, you must also implement another CSRF defense__ ([T29](/library/tasks/T29/)).",
    "weakness_title_read_only": "Cross-Site Request Forgery (CSRF)",
    "weakness_id_read_only": "P677",
    "weakness": "ec20bc24-5e77-4cac-a8bb-be1d2517e2a0",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "development",
    "created": "2016-10-28T18:21:24.403000-04:00",
    "last_updated": "2021-06-25T14:48:01.635000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T558",
    "universal_id": "37a3ec84-f8c9-4012-b2f5-cdb9cc9140d7",
    "countermeasure_name": "Authenticate all other components before any network communication with them",
    "countermeasure_solution": "Authenticate application components that communicate through a network before exchanging any kind of information.\n\n- This includes mobile applications that communicate with a cloud-based web service, or embedded devices that communicates with a controller.\n- Implicit and inherent trust of other components leads to external cyberattack avenues.\n    - For example, if your web server uses a database located on a separate machine and communicates with it through the network, it should authenticate the database before using it.\n    - As another example, your mobile application should authenticate your cloud service before uploading user information.",
    "weakness_title_read_only": "Implicit trust of components that communicate through network",
    "weakness_id_read_only": "P801",
    "weakness": "00ac4737-67af-4162-b04f-15665f5ec250",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "requirements",
    "created": "2016-11-02T12:41:11.938000-04:00",
    "last_updated": "2021-06-25T14:47:42.582000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T559",
    "universal_id": "676d009b-01ed-4c41-b2b5-14c40dbea74d",
    "countermeasure_name": "Verify that the authenticity and integrity of SOAP messages are checked",
    "countermeasure_solution": "Verify that the authenticity and integrity of SOAP messages are checked at the message or transport level:\n\n1. Transport Level:\n\n    - Test that the web service end-point is only accessible through SSL/TLS.\n    - Try to use the non-HTTPS address of the web service.\n    - If the web service responds to requests without transferring to HTTPS, this test __fails__ for SSL/TLS section.\n    - The entire test could still be successful if proper message level security is implemented.\n        - In most cases, having one of either transport or message level security is sufficient, but message level security also protects messages at rest.\n\n2. Message Level:\n\n    - Create a SOAP message with some content and create a signature for the message. You need to consult the developers and create the signature based on the implemented standard of the web service.\n        - The message level test __fails__ if any of these sub-tests fails:\n\n            - Try to change some of the fields of the message without changing the signature.\n                \n                If the web service call is successful, then this test __fails__.\n            \n            - Try to delete or modify the signature.\n                \n                If the web service call is successful this test __fails__.\n            \n            - Verify that a timestamp, and a nonce are among the items used for signatures.\n                \n                Otherwise, this test __fails__.\n            \n            - Change the web service request time, such as the `<Timestamp>` element under `<Security>` to a time beyond expiry time ([see this WS Security document for more details](https://docs.oasis-open.org/wss/v1.1/wss-v1.1-spec-errata-os-SOAPMessageSecurity.htm)).\n                \n                If the call is successful this test __fails__.",
    "weakness_title_read_only": "Insufficient Verification of Data Authenticity",
    "weakness_id_read_only": "P244",
    "weakness": "b804db70-a48e-4d47-8c34-d8ee26babd77",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2016-11-03T22:56:55.228000-04:00",
    "last_updated": "2021-06-25T14:48:01.368000-04:00",
    "custom": "False",
    "rules": "16baf492-81ad-438e-b3fd-1f618e1ff17e",
    "rules_read_only": "A730"
  },
  {
    "countermeasure_id": "T560",
    "universal_id": "260ec458-6e48-4f69-9e75-a8eae2670311",
    "countermeasure_name": "Sanitize any HTML input passed to dangerouslySetInnerHTML attribute",
    "countermeasure_solution": "Avoid using React's `dangerouslySetInnerHTML` attribute to set raw HTML as the inner HTML of a component.\n\n- If you need to use this attribute, properly **sanitize input strings** before passing them to any *dangerouslySetInnerHTML* attribute with a `__html` key.\n    - **Note**: If user input containing code or markup is not sanitized before being passed, it becomes executable and can potentially lead to cross-site scripting (XSS) or other types of attacks.\n\nAvoid using `React.createElement(type, [props], [...children])` to create arbitrary React components with user input passed as the `props` parameter to the function.\n\n- If, in rare cases, you need to define a the props based on user inputs, properly **sanitize input strings**. Otherwise, pass a malicious payload to set the `dangerouslySetInnerHTML` property and inject a script.\n\n## References\n\n- [Dangerously Set innerHTML](https://zhenyong.github.io/react/tips/dangerously-set-inner-html.html)\n- [React.createElement()](https://facebook.github.io/react/docs/react-api.html#createelement)",
    "weakness_title_read_only": "Improper Neutralization of Input During Web Page Generation (Cross-Site Scripting)",
    "weakness_id_read_only": "P632",
    "weakness": "67b0e738-a725-4462-be2a-52493b75f4ac",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "development",
    "created": "2016-11-07T13:01:01.965000-05:00",
    "last_updated": "2021-06-25T14:47:53.864000-04:00",
    "custom": "False",
    "rules": "88e67649-e344-4623-b6a0-a01a29fe08ee",
    "rules_read_only": "A1136"
  },
  {
    "countermeasure_id": "T561",
    "universal_id": "c0c5b5b2-381c-47f5-9c4a-1917bc751a9f",
    "countermeasure_name": "Verify that any HTML input passed to dangerouslySetInnerHTML attribute is sanitized",
    "countermeasure_solution": "Use code inspection tools or work with developers to find any occurrence of the `dangerouslySetInnerHTML` attribute.\n\n- Verify that its input data object, and the object with `__html` as a key with an HTML string as its value, is sanitized before being passed to the attribute.\n    - Otherwise, this test __fails__.\n\n- Verify that a wrapper function is used to return the sanitized data object (`<div dangerouslySetInnerHTML={createSanitizedObject()} />`) instead of `<div dangerouslySetInnerHTML={{__html: getHtmlString()}} />`.",
    "weakness_title_read_only": "Improper Neutralization of Input During Web Page Generation (Cross-Site Scripting)",
    "weakness_id_read_only": "P632",
    "weakness": "67b0e738-a725-4462-be2a-52493b75f4ac",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2016-11-07T13:05:43.113000-05:00",
    "last_updated": "2021-06-25T14:47:54.260000-04:00",
    "custom": "False",
    "rules": "88e67649-e344-4623-b6a0-a01a29fe08ee",
    "rules_read_only": "A1136"
  },
  {
    "countermeasure_id": "T562",
    "universal_id": "7c6bec0d-0dde-4b84-aa0f-b5eb3ad28bf3",
    "countermeasure_name": "Consider Doze, Standby, and battery saving limitations when developing Android applications",
    "countermeasure_solution": "Follow these guidelines to secure the application in Doze/Standby or battery saving modes:\n\n- Identify time-critical functions of the app, and develop those functions in a way that is not affected by those modes.\n    - Android offers two types of power saving modes: [Doze and Standby](https://developer.android.com/training/monitoring-device-state/doze-standby.html).\n    - The application goes to Doze mode after being idle for a significant amount of time. When the device is not moving, the screen is off, and the device is not charging. \n    - Some features are limited or disabled in Doze/Standby modes, such as network access, WakeLocks, alarms, and syncs.\n\n- The most significant security risk of Doze mode is missing time critical triggers.\n    - If the app is using `AlarmManager`, use `setAndAllowWhileIdle()` or `setExactAndAllowWhileIdle()` functions instead of `setExact()` or `setWindow()`.\n\n- Review the design of the app and check if the app depends on any of the restricted features:\n    - This includes sync adapters, job schedulers, network connectivity, alarms, and WakeLocks.\n- Make sure none of the time-critical functions are designed in a way that are affected by the temporary unavailability of those features.\n\n - In particular, determine how the unavailability of network services affects the app.\n    - Try to use downstream messaging if continuous connectivity is needed. For example, try to use Google Cloud Messaging (GCM) in cases of time-critical notifications.\n\n- In Android O and later, background services that run without active components will have execution limitations on getting implicit broadcasts, use of other services, and receiving location updates.\n    - Analyze these limitations to check that they will not affect your app. See the Android documentation on [behavior changes in Android O](https://developer.android.com/about/versions/oreo/android-8.0-changes.html#all-apps).\n\n- If Doze can affect the core functionality of the app, consider whitelisting it from power-saving.\n    - See the whitelisting section in the [Android documentation](https://developer.android.com/training/monitoring-device-state/doze-standby.html#whitelisting-cases). \n\nWhile it is unlikely that the details of Doze can affect your app development, [see this video](https://www.youtube.com/watch?v=HBPQZEU_ofg) for more information about light and extended Doze mode.",
    "weakness_title_read_only": "Negative impact of Doze/Standby/Battery Saving Modes on Time-critical Functions of Android Applications",
    "weakness_id_read_only": "P802",
    "weakness": "25fde85e-545b-411e-8932-0bda63a3dbd0",
    "tags": "",
    "countermeasure_priority": "2",
    "phase": "development",
    "created": "2016-11-08T16:38:54.396000-05:00",
    "last_updated": "2021-06-25T14:47:41.237000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T563",
    "universal_id": "d0337966-ca39-4e1a-af46-29de3288cc9d",
    "countermeasure_name": "Test that critical functions of Android applications are not affected by Doze, Standby and battery saving limitations",
    "countermeasure_solution": "Follow these instructions to test that critical functions of the application are not negatively affected by Doze, Standby, and other battery saving limitations:\n\n- Identify the time-critical functionalities of the app.\n    - You may need to consult with developers.\n    - Pay special attention to functions that need network connection (especially notifications), or the ones that depend on AlarmManager.\n\n- Use `adb` to simulate Doze and Standby modes.\n    - For detailed instructions, see the Android documentation on [Optimizing with Doze and App Standby](https://developer.android.com/training/monitoring-device-state/doze-standby.html#testing_doze_and_app_standby).\n\n- Test that the app gracefully recovers from Doze and Standby modes.\n\n- Test that the functions are not affected or delayed by those modes if the delay is not acceptable.\n\n- Test that if the application needs to work in the background with no active components, the battery saving limitations do not block the critical functionalities.",
    "weakness_title_read_only": "Negative impact of Doze/Standby/Battery Saving Modes on Time-critical Functions of Android Applications",
    "weakness_id_read_only": "P802",
    "weakness": "25fde85e-545b-411e-8932-0bda63a3dbd0",
    "tags": "",
    "countermeasure_priority": "2",
    "phase": "testing",
    "created": "2016-11-08T16:41:47.376000-05:00",
    "last_updated": "2021-06-25T14:47:41.189000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T564",
    "universal_id": "414f95f5-f6fa-46f7-9c5f-cd7527d22703",
    "countermeasure_name": "Follow best practices for sharing data between Android applications",
    "countermeasure_solution": "Follow these guidelines to secure data shared between Android applications:\n \n - __Use `Intent` objects when sharing a small amount of data__:\n    - `Intent` objects are the primary mechanism to secure sharing small amounts of data between Android applications.\n    - To learn how to send data along with `Intent` objects to another application, see the Android developer article [Sending Simple Data to Other Apps](https://developer.android.com/training/sharing/send.html).\n    - Use explicit `Intent` objects and encrypt sensitive data when possible. There is no significant risk with `Intent` communication if the operating system is trusted, so encrypting data is optional.\n\n - __Use `ContentProvider` objects for sharing complex or large data__:\n    - `ContentProvider` objects are the standard way to share complex data. The data is shared through a URI that points to the provider's namespace.\n    - For general information about creating content providers, see the Android developer article [Creating a Content Provider](https://developer.android.com/guide/topics/providers/content-provider-creating.html)).\n            \n        - Define two separate permissions for reading and writing.\n        - If the communication happens between two applications signed by the same key (they are both your applications), use `signature` as the value of `android:protectionLevel`.\n        - Grant more granular permissions by using URI-based permissions. You can specify permissions on a subset of data, for example: `<grant-uri-permission android:path=\"/shared_resources/\">`\n        - You will need to grant permission to particular apps to read the data: `Context.grantUriPermission(\"someApp\", address_link, intent.FLAG_GRANT_READ_URI_PERMISSION);`\n        - Avoid SQL Injection attacks by using bind variables and parameterized methods such as `query()` and `update()` instead of concatenating user input to build the query strings. This recommendation for data querying methods remains the same for any content provider.\n\n- __Use `FileProvider` objects for sharing files between applications__:\n    - `FileProvider` is a type of content provider (subclass of `ContentProvider`).\n    - For a detailed description of file sharing in Android, see the Android developer article [Setting Up File Sharing](https://developer.android.com/training/secure-file-sharing/setup-sharing.html).\n    - The other applications that the file is shared with (each called a client) receive a content URI that hides the actual location of the file. Any permissions such as read/write are temporary and specific.\n    - To implement this, you need to use getUriForFile and then grant temporary permission. For more information, see the [getUriForFile section](https://developer.android.com/reference/android/support/v4/content/FileProvider.html#getUriForFile(android.content.Context, java.lang.String, java.io.File)).\n\n__Avoid__ these approaches to data sharing for any sensitive information:\n\n- __Avoid using `MediaStore` objects for sensitive data__:\n    - Some developers use [MediaStore](https://developer.android.com/training/sharing/send.html) for sharing files. The content of the files will be available to other applications.\n\n- __Avoid writing files that contain sensitive or private data to a shared location and then passing the URI to the client application)__:\n    - From Android 7.0 onward the operating system enforces the `StrictMode` API policy, which means that if an `Intent` containing a file URI leaves any app, the app will get a `FileUriExposedException` exception.\n    - Use the `detectFileUriExposure()` method of the `android.os.StrictMode.VmPolicy.Builder` class to detect any event where your app exposes a `file://` Uri to another app. For more information about *StrictMode*, please see the How-tos section of this countermeasure.\n- __Avoid using shared UIDs for data sharing__:\n    - Shared UIDs have been known to cause non-deterministic behavior in the package manager and should be avoided if possible. If you are using shared UIDs to communicate between your apps, you should consider using instead standard cross-app communication mechanisms such as services and content providers.",
    "weakness_title_read_only": "Using insecure methods for sharing data with other Android applications",
    "weakness_id_read_only": "P803",
    "weakness": "999ac713-dd2b-43f8-ab92-d724ccc377e5",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "development",
    "created": "2016-11-14T17:20:01.551000-05:00",
    "last_updated": "2022-11-02T14:27:53.845000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T565",
    "universal_id": "26f92ac6-708c-41fd-99b4-b54126fcc007",
    "countermeasure_name": "Verify that data sharing between Android applications is secure",
    "countermeasure_solution": "Verify that all the points stated in [Countermeasure 564](/library/tasks/T564/) are considered in the implementation. In particular:\n\n- Verify that MediaStore is not used to store files with sensitive information.\n\n- Verify that files that contain sensitive or private data are not stored in any shared location\n    - Also, make sure that a URI is not passed to the client, such as by an Intent.\n\n- Verify that the permissions passed by URI for access to any content provider (and FileProvider) data are as strict as possible.\n    - Also, verify that, where possible, the protection level is set to `signature` when communicating applications are signed with the same certificate.\n\n- If Intents are used for sharing data, verify that the target of the Intent is as specific as possible.\n    - Also, verify that explicit Intents are used where possible.",
    "weakness_title_read_only": "Using insecure methods for sharing data with other Android applications",
    "weakness_id_read_only": "P803",
    "weakness": "999ac713-dd2b-43f8-ab92-d724ccc377e5",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2016-11-14T17:37:00.616000-05:00",
    "last_updated": "2022-08-23T11:14:28.009000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T566",
    "universal_id": "3059abeb-a5fb-45d5-a9aa-d8f1146009ae",
    "countermeasure_name": "Enable network layer encryption for local area network communications",
    "countermeasure_solution": "If the system's operation involves local communication among different components/devices, pay attention to LAN security in the system.\n\n- Make sure the network layer packets are encrypted and cannot be sniffed by unauthorized people who are on the premises or have access to the shared network medium.\n- The details of this countermeasure vary based on the type of network layer protocol your system uses.\n\nSee the following guidelines for securing well-known network protocols:\n\n# WiFi\nIf your system uses WiFi for establishing a local network, you have different choices of security standards, such as:\n\n## WEP\n- WiFi Equivalent Privacy (WEP) is an old IEEE 802.11 standard from 1999.\n    - Avoid using WEP because it is a notoriously weak security standard. Its password, which is used for generating packet encryption keys, can often be cracked in a few minutes with a basic laptop computer and widely available software tools.\n\n## WPA2\n- WPA2 is a WiFi Alliance branded version of the final IEEE 802.11i standard. The primary enhancement over WPA is the inclusion of the AES-CCMP algorithm as a mandatory feature, which solves the weaknesses in WEP.\n    - WPA2 has two different modes:\n        - WPA2-Personal, which uses a password for authentication of clients.\n        - WPA2-Enterprise, which uses an enterprise authentication server like Remote Authentication Dial-In User Service (RADIUS). Where possible, use WPA2-Enterprise as it has a more secure authentication method.\n\n- In WPA2-Personal, the network password is used for generating a PSK (Pre-Shared Key).\n    - PSK is later used for constructing a PMK (Pairwise Master Key), which is shared among all the devices on the network, and PTKs (Pairwise Transient Keys), which are unique for each joining device. These keys are created during an initial 4-way handshake.\n    - The WPA2-Personal mode is safe to use if the network password is random and long enough.  However, anyone who has the password can sniff the 4-way handshake and see the unique PTK keys generated for devices that join later.\n    - Leaked PTKs can be used for decrypting all the packets from that device. If you are using WPA2-Personal, you should choose a strong password, with at least 8 characters and keep it safe at all times to protect the confidentiality of the packets. A 16-character password is recommended.\n\n- In WPA2-Enterprise mode, the PMK is generated based on the parameters provided by the authentication server, which means each user has a different password.\n    - There is no single shared password for the network. This provides a stronger basis for keeping the encryption keys in the network secure. However, it needs a relatively heavy-weight authentication server to be setup in the network.\n \n# ZigBee/Thread\nIn newer low-power protocols like ZigBee and Thread, all the packets are encrypted using a \"Network Key\" that protects the confidentiality of the network packets from other devices on the premises. Make sure your devices support and take advantage of the mentioned Network Key encryption.",
    "weakness_title_read_only": "Clear Text and Unencrypted Transmission of Information",
    "weakness_id_read_only": "P216",
    "weakness": "b1d166d6-8ca7-415f-9cd9-8c2d745d3d01",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "architecture-design",
    "created": "2016-11-16T13:05:45.289000-05:00",
    "last_updated": "2022-09-09T16:35:46.806000-04:00",
    "custom": "False",
    "rules": "e6b8604b-c16f-43b2-b5f3-644b48d713f0 AND e8630ac3-4603-4fe7-a3ee-b883e2b91c22",
    "rules_read_only": "A1138 AND A1103"
  },
  {
    "countermeasure_id": "T567",
    "universal_id": "5f2f921d-7046-488c-873c-64debabdf3a5",
    "countermeasure_name": "Enable network access control for local area network communications",
    "countermeasure_solution": "If the system's operation involves local communication among different components/devices, you should think of LAN security in your system. Make sure you have access control in place for using the network. The access control mechanism depends on the network layer protocol your system uses. Here, we give a short guidance for well-known network protocols:\n\n# WiFi\n- If your system uses WiFi for establishing a local network, make sure your network is not open to the public, and uses the WPA2 standard for protecting any access to the network. WPA2 should be set to use a strong password or an enterprise authentication service to authenticate joining devices.\n\n# Thread\n- The Thread networking protocol uses a special device called \"commissioner\" for authenticating new joining devices. Make sure your system has a commissioner in place that manages any access to the network.\n\n# ZigBee\n- ZigBee uses a preinstalled \"Network Key\" on devices to authenticate them before letting them join the network. Make sure your devices support and utilize the Network Key for joining the network.",
    "weakness_title_read_only": "Improper Access Control (Authorization)",
    "weakness_id_read_only": "P182",
    "weakness": "e488cdc5-3c91-4d2b-bcec-5c651b000d8b",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "architecture-design",
    "created": "2016-11-16T13:21:41.895000-05:00",
    "last_updated": "2021-06-25T14:47:52.272000-04:00",
    "custom": "False",
    "rules": "e6b8604b-c16f-43b2-b5f3-644b48d713f0 AND e8630ac3-4603-4fe7-a3ee-b883e2b91c22",
    "rules_read_only": "A1138 AND A1103"
  },
  {
    "countermeasure_id": "T568",
    "universal_id": "c23666ad-086a-4bc7-924f-6ccb0217b2c9",
    "countermeasure_name": "Restrict exposure of IoT devices to the Internet",
    "countermeasure_solution": "Use the following guidelines to limit how exposed IoT devices are to the Internet:\n\n- Take advantage of gateways/firewalls to isolate your local network from the Internet if your system enables a local network of IoT devices.\n- Set up inbound/outbound communication rules on the gateway/firewall to restrict unnecessary remote access to weaker devices from the Internet.\n    - For example, if you are developing a home automation system with multiple IoT devices that need access to the Internet, design a more capable gateway device that regulates Internet access for the less capable and low powered devices. This way you can protect weaker devices from direct remote access attacks.",
    "weakness_title_read_only": "Exposure of weak IoT devices to the Internet",
    "weakness_id_read_only": "P804",
    "weakness": "0482d5fa-574a-4743-83cb-dbe238f94d50",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "architecture-design",
    "created": "2016-11-16T15:06:39.468000-05:00",
    "last_updated": "2021-11-02T03:07:28.863000-04:00",
    "custom": "False",
    "rules": "e8630ac3-4603-4fe7-a3ee-b883e2b91c22",
    "rules_read_only": "A1103"
  },
  {
    "countermeasure_id": "T569",
    "universal_id": "bed07b8a-1d0d-4806-9ccb-8490f1fb5d8d",
    "countermeasure_name": "Prevent parameter tampering in web services",
    "countermeasure_solution": "Apply constraints on type and format in **Web Services Description Language (WSDL)** files to prevent parameter tampering in web services.\n\n- Restrict incoming data to *strong types* so that only allowed values are true or false, a number, or one of a small number of acceptable values.\n- Loosely typed web services do not have a strongly defined schema in the interface definition of the service (WSDL) to define any kind of message format that the service uses. \n\nFor more information please see the article [Loosely typed versus strongly typed web services](http://www.ibm.com/developerworks/library/ws-loosevstrong/).",
    "weakness_title_read_only": "Improper Input Validation",
    "weakness_id_read_only": "P95",
    "weakness": "df80ca69-a2c0-4d7f-b3f7-d81bd6d685e9",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "requirements",
    "created": "2016-11-18T15:31:32.420000-05:00",
    "last_updated": "2023-03-17T17:46:07.440000-04:00",
    "custom": "False",
    "rules": "ae1d26d0-d3f3-45ac-9936-4721c3091e25 AND ed4ba6aa-be7d-4c57-839c-d9c6c9e091c0;16baf492-81ad-438e-b3fd-1f618e1ff17e;5be24703-9455-4585-9e4c-35d75f2a9def",
    "rules_read_only": "A1183 AND A195;A730;A6"
  },
  {
    "countermeasure_id": "T570",
    "universal_id": "9ed62cda-cb0c-4de5-abbb-1ab661304262",
    "countermeasure_name": "Sign the parent tag of the SAML assertion before forwarding",
    "countermeasure_solution": "When your application needs to forward a user request to a remote third party service, you have two ways to pass the identity of the user to it using SAML:\n\n1. If you have received a SAML assertion with the user's request that reveals a user's identity:\n\n    - Sign the parent tag of the SAML assertion, not the SAML assertion itself, and include timestamps and validity periods. Then forward the assertion to the remote service.\n\n    - Signing the parent tag of the assertion helps the remote service in two ways:\n        - First, the remote service would be able to verify the signature and authenticate the request.\n        - Second, the timestamp and the validity periods included in the parent tag would help the remote service to bind the SAML assertion to an individual message and protect against replay attacks.\n\n2. If you have not received any SAML assertion with the user's request:\n    - Ensure that you authenticate the user directly.\n    - Generate a SAML assertion for the user:\n        - Set the timestamp and validity periods of the parent tag, then sign the parent tag.\n    - Forward this signed assertion to the remote service. The remote service verifies the signature and the timestamp to authenticate the request and protect against replay attacks.",
    "weakness_title_read_only": "Weakness in SSO or federated authentication",
    "weakness_id_read_only": "P727",
    "weakness": "b51a0a4e-0812-4030-90fc-ab706278661d",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "development",
    "created": "2016-11-18T17:17:51.814000-05:00",
    "last_updated": "2021-06-25T14:48:01.479000-04:00",
    "custom": "False",
    "rules": "a96dfba5-3101-4647-ba00-467d9eed0d6a AND 1ea67369-e5fb-4a5e-b251-d877f8a180db",
    "rules_read_only": "A1140 AND A762"
  },
  {
    "countermeasure_id": "T571",
    "universal_id": "74f80c57-b532-4c73-94fb-e3ba24e60d59",
    "countermeasure_name": "Validate SAML assertions",
    "countermeasure_solution": "When your application receives a forwarded request, and corresponding user identity, from another service provider using SAML, validate the received SAML assertion by following these steps:\n\n1. Make sure both the SAML assertion and its parent tag, including timestamps and validity periods, are signed by the other service provider to protect against replay attacks.\n2. Verify the signature to make sure it belongs to the corresponding service provider.\n3. Validate the validity period of the assertion using the timestamps provided in the parent tag.\n4. Validate the information provided in the SAML assertion to make sure the user is eligible for the request.",
    "weakness_title_read_only": "Weakness in SSO or federated authentication",
    "weakness_id_read_only": "P727",
    "weakness": "b51a0a4e-0812-4030-90fc-ab706278661d",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "development",
    "created": "2016-11-20T16:51:28.813000-05:00",
    "last_updated": "2021-06-25T14:48:01.461000-04:00",
    "custom": "False",
    "rules": "c2ba8305-c5dc-4c16-9524-842f8eb30a37 AND 1ea67369-e5fb-4a5e-b251-d877f8a180db;695f7a18-457b-4e84-8f6c-6f2d251e5cf5 AND 1ea67369-e5fb-4a5e-b251-d877f8a180db",
    "rules_read_only": "A1141 AND A762;A54 AND A762"
  },
  {
    "countermeasure_id": "T572",
    "universal_id": "a84b3ae3-f07f-43b6-bc81-a61a00c306fb",
    "countermeasure_name": "Check for symlinks before opening files",
    "countermeasure_solution": "Check for the existence of files before opening or creating them:\n\n- If they already exist, make sure they are neither [symlinks](/library/glossary/G25) nor [hard links](/library/glossary/G26), unless it is an expected requirement of the application.\n\n- If a symlink is expected, check the target of the symlink to make sure it is pointing to an expected path before any other action.\n\n## Explanation:\n\nSymlinks may point to any file or directory irrespective of the volumes on which the link and target reside, and may contain an arbitrary path that points to a file that does not exist yet.\n\nAn attacker may take advantage of a vulnerability to position a symbolic link in such a manner that the targeted user or application accesses the symlink's endpoint, assuming that it is accessing a file with the link's name. The endpoint file may be used either for output or input:\n\n- If the file is for output, the result is that the link's endpoint file is modified, instead of the file at the intended location of the symlink. \n    -  Modifications to the endpoint file may include appending, overwriting, corrupting, changing permissions, or other modifications.\n    - An attacker may use this to forward information to a location that he has access to or do modifications or corruptions to a file at his desired location.\n- Alternatively, the endpoint file may serve as input to the targeted application.\n    - This can be used to feed malformed input into the target or to cause the target to process different information.\n    - This may allow the attacker to control the actions of the target or to cause the target to expose information to the attacker.\n\nMoreover, the actions taken on the endpoint file are undertaken with the permissions of the targeted user or application, which may exceed the permissions that the attacker would normally have.",
    "weakness_title_read_only": "Improper Link Resolution Before File Access ('Link Following')",
    "weakness_id_read_only": "P480",
    "weakness": "1b409625-0b3d-4baf-94bc-c9f86fad890a",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "development",
    "created": "2016-11-21T10:15:17.680000-05:00",
    "last_updated": "2021-06-25T14:47:54.067000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T573",
    "universal_id": "da26fdf3-869d-482e-8189-dade5f908f1a",
    "countermeasure_name": "Prevent UDDI/ebXML spoofing",
    "countermeasure_solution": "Use the following guidelines for preventing UDDI and ebXML spoofing:\n\n__For applications that rely on registry/discovery services:__\n\n- Only trust messages from *Universal Description, Discovery and Integration (UDDI)*,  *Electronic Business XML(ebXML)*, or similar discovery/registry services that are signed and verified by a trusted party.\n- This prevents spoofing attacks in which attackers can craft malicious UDDI entries to reference harmful web services.\n\n__For registry/discovery services:__\n\n- Provide users/callers a means to check the authenticity of those entries.\n- Protect the directory and do not allow unauthorized entities to add information to the service directory without proper analysis and verification by qualified individuals.",
    "weakness_title_read_only": "Spoofing of UDDI/ebXML or other service discovery/registry entries",
    "weakness_id_read_only": "P810",
    "weakness": "460fad57-9025-46e9-9dd5-82d2900b3820",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "requirements",
    "created": "2016-11-21T11:50:34.251000-05:00",
    "last_updated": "2021-06-25T14:47:42.477000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T574",
    "universal_id": "a5b68dbe-2084-4f3b-96b3-8e650a6f4b82",
    "countermeasure_name": "Prevent information exposure in HyperCat",
    "countermeasure_solution": "Use the following guidelines to prevent **reconnaissance attacks**:\n\n- Attackers can target an application by collecting information about it and its execution environment to execute other types of attacks.\n\n- Where possible, disable the automatic publication of HyperCat catalogues, unless there is a legitimate business reason for it.\n    - Ensure that discovery information is not revealed and exposed within the catalogue. This exposure contributes to *Denial of Service* attacks, and other weaknesses.",
    "weakness_title_read_only": "Information Exposure",
    "weakness_id_read_only": "P96",
    "weakness": "5caa926a-86e4-498d-97f8-5d2f5c5ddd7b",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "architecture-design",
    "created": "2016-11-21T15:23:46.900000-05:00",
    "last_updated": "2021-06-25T14:47:45.383000-04:00",
    "custom": "False",
    "rules": "ae1d26d0-d3f3-45ac-9936-4721c3091e25 AND f8064121-c8db-43a2-85d1-cca86d50f01b AND cab80cea-1a20-433f-b78c-783b816b8d33",
    "rules_read_only": "A1183 AND A1127 AND A739"
  },
  {
    "countermeasure_id": "T575",
    "universal_id": "d55c2132-61fd-4440-a50c-6f1dd296db5c",
    "countermeasure_name": "Verify that HyperCat catalogues are not revealing discovery information",
    "countermeasure_solution": "Verify that discovery information for a resource of sensitive data is not exposed in HyperCat.\n\nFor example, try to find a resource of health related data or personal information and check if it is published without a legitimate business reason and consent. \n\nIf so, this test __fails__.",
    "weakness_title_read_only": "Information Exposure",
    "weakness_id_read_only": "P96",
    "weakness": "5caa926a-86e4-498d-97f8-5d2f5c5ddd7b",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2016-11-21T16:58:08.660000-05:00",
    "last_updated": "2021-06-25T14:47:48.905000-04:00",
    "custom": "False",
    "rules": "ae1d26d0-d3f3-45ac-9936-4721c3091e25 AND f8064121-c8db-43a2-85d1-cca86d50f01b AND cab80cea-1a20-433f-b78c-783b816b8d33",
    "rules_read_only": "A1183 AND A1127 AND A739"
  },
  {
    "countermeasure_id": "T576",
    "universal_id": "6e85433a-821a-4d09-ab44-a659f56004ff",
    "countermeasure_name": "Verify that UDDI/ebXML spoofing is prevented",
    "countermeasure_solution": "Use the following guidelines for verifying that you prevent UDDI/ebXML spoofing:\n\n__For applications that rely on registry/discovery services:__\n\n- Verify that only signed messages (or trusted by other means of authentication) from *Universal Description, Discovery and Integration (UDDI)*, *Electronic Business XML(ebXML)*, or any other similar discovery/registry services that are taken into consideration when finding web services.\n\n- Verify that the system does not crash or unacceptably slow down if the right entries do not exist and restriction are applied on the amount of data added to UDDI upon the registry to prevent Denial of Service (DoS). \n\n__For registry/discovery services:__\n\nVerify that entries are signed, and protected against unauthorized manipulation.",
    "weakness_title_read_only": "Spoofing of UDDI/ebXML or other service discovery/registry entries",
    "weakness_id_read_only": "P810",
    "weakness": "460fad57-9025-46e9-9dd5-82d2900b3820",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2016-11-21T17:04:52.868000-05:00",
    "last_updated": "2021-06-25T14:47:42.564000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T577",
    "universal_id": "3159346b-1470-43e7-b1e3-05288507a856",
    "countermeasure_name": "Verify that parameter tampering is prevented in web services",
    "countermeasure_solution": "Use the following guidelines to verify the prevention of parameter tampering:\n\n- Verify that WSDL files apply constraints to its type and format.\n- Verify that incoming data is restricted to strong types only to prevent parameter tampering.\n- Check that the web service's schema is not loosely defined and only allows acceptable values. If not, this test __fails__.",
    "weakness_title_read_only": "Improper Input Validation",
    "weakness_id_read_only": "P95",
    "weakness": "df80ca69-a2c0-4d7f-b3f7-d81bd6d685e9",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2016-11-21T17:15:07.404000-05:00",
    "last_updated": "2021-06-25T14:47:54.388000-04:00",
    "custom": "False",
    "rules": "ae1d26d0-d3f3-45ac-9936-4721c3091e25 AND ed4ba6aa-be7d-4c57-839c-d9c6c9e091c0;16baf492-81ad-438e-b3fd-1f618e1ff17e;5be24703-9455-4585-9e4c-35d75f2a9def",
    "rules_read_only": "A1183 AND A195;A730;A6"
  },
  {
    "countermeasure_id": "T578",
    "universal_id": "2096e4be-01c0-4d76-9fd0-0c16fdaa2309",
    "countermeasure_name": "Execute only compiled programs in mainframe",
    "countermeasure_solution": "Review the Job Control Language (JCL) libraries to ensure that all problem programs being executed are ***Compiled-Load-Modules***:\n\n- Efficiency in mainframe operations can only be achieved if the majority of the program executions are ***Compiled-Load-Modules*** and linked into a load-library. This includes all COBOL and ACL modules and the majority of fourth-generation modules (REXX, Easytrieve, SAS).\n- If these utilities will be used in production environments, compile their source codes into object-modules, and link them to create a load-module.\n- Only execute ***Compiled-Load-Modules***. When compilation is not possible, store the source code in secured libraries (parmlibs) and send the output to a secured **Sysout Archival and Retrieval System (SAR)**. \n\nConsider the following points regarding the execution of compiled modules in mainframe:\n\n- Store source code in secure libraries designated for source code. \n\n- Store parameters for job execution in secured *parmlibs*. Some applications require utilities that need specific parameters to be executed. Parameters for all IBM utilities (IDCAMS, DFHSORT) should be stored in secured *parmlibs*.\n\n- When using a combination of utilities and a fourth-generation module, compilation may not be possible or impractical. Store these combinations, such as File Manager and REXX, in specific libraries designated for these parameters.\n\n- In some instances, compilation is not possible because the base installation did not include the compiler (REXX). Store these modules in secured *parmlibs* specifically designated for the type of code stored.\n\n__Note__: Having code stored in a secure location minimizes the risk of exposing critical applications to unauthorized individuals.   \n\nFor more information about executing compiled modules, see *Notes on executing compiled modules* in the How-to section of this countermeasure.",
    "weakness_title_read_only": "Execution of non-compiled modules in mainframe programs",
    "weakness_id_read_only": "P805",
    "weakness": "2dae7c8d-678d-408b-b3b9-daac5eea15a0",
    "tags": "",
    "countermeasure_priority": "3",
    "phase": "development",
    "created": "2016-11-25T13:03:03.159000-05:00",
    "last_updated": "2022-09-01T10:53:48.979000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T580",
    "universal_id": "03d58e6a-28a7-4b7b-9c44-f6fdbc72e338",
    "countermeasure_name": "Validate return codes in mainframe programs",
    "countermeasure_solution": "When creating an executable module, evaluate the return code of any action where a return code is available.\n\n- Validate the available status or return code for each action that is coded in a program to determine whether the results were as expected. For example, programs should carefully evaluate the return status of I/O actions, such as opening or closing files and reading/writing/deleting data from/to files.\n\n- Set the return code in your program to alter the path of the ***Job Control Language (JCL)*** when a program receives a return code that indicates a critical error. Examples of setting the return code are illustrated in *Setting the Return Code* in the How-to section of this countermeasure.",
    "weakness_title_read_only": "Failure to evaluate return codes in mainframe",
    "weakness_id_read_only": "P806",
    "weakness": "a017093a-c7fb-468f-b45a-b6dc45c7f875",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "development",
    "created": "2016-11-25T15:23:37.077000-05:00",
    "last_updated": "2022-09-01T10:54:34.762000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T581",
    "universal_id": "cbfd6cd8-e2b5-42f9-9866-de52db7b524a",
    "countermeasure_name": "Verify that return codes are evaluated in mainframe programs",
    "countermeasure_solution": "Use the following guidelines for verifying that return codes are evaluated in mainframe programs:\n\nFind all programs that provide return codes after their completion, and verify that the status of the return codes is evaluated and proper actions are taken based on those values.\n\nConsider the following points in this process:\n\n- The ***Multiple Virtual Storage (MVS)*** job log will contain:\n    1. A list of the steps executed\n    2. The return codes.\n        - In most cases, the return codes will be zero.\n        - Investigate values that are non-zero to ensure that special processing does not occur when the values are greater than 4.\n\n- Critical errors should _AbEnd_ (abnormally terminate) the process and inform the programmer that immediate action is required to correct them.\n\n__Note__: *Setting the Return Code* in the How-to section of [Countermeasure 580](/library/tasks/T580) illustrates how a return code can be set when a failure requires correction in order for the JCL to complete normally.\n\n- Return code processing is critical for detecting problems as quickly as possible. **MVC** offers conditional **Job Control Language (JCL)** to not only report process errors but also alter execution when required.\n\n- COBOL, PLI, C, REXX, and most other programming languages provide access to the return code. It is a binary register that can be interrogated and set to any numerical value.\n\n- IBM utilities and third-party software also set the return code. A non-zero return code usually indicates an issue.\n\n- An informal standard is that if the return code is greater than 4, processing stops, and an AbEnd step is executed.\n\n- *Evaluating the Return Code* in the How-to section of [Countermeasure 580](/library/tasks/T580) illustrates the appropriate method of verifying a job completed normally by checking the return code. It also illustrates how to incorporate conditional JCL to enhance the execution of your JCL.",
    "weakness_title_read_only": "Failure to evaluate return codes in mainframe",
    "weakness_id_read_only": "P806",
    "weakness": "a017093a-c7fb-468f-b45a-b6dc45c7f875",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2016-11-25T15:58:01.073000-05:00",
    "last_updated": "2022-09-01T12:29:05.665000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T582",
    "universal_id": "3eca6a90-cfd1-40a1-8323-32fec2699722",
    "countermeasure_name": "Secure SYSABEND, SYSUDUMP, or SNAP dumps in mainframe",
    "countermeasure_solution": "Take adequate measures to ensure that the system dumps have proper access control applied to them. To secure **SYSBEND**, **SYSDUMP** or SNAP dumps, consider the following points:\n\n- Protect system dump data sets from being viewed by almost all users.\n    - Staff requiring access for system dump analysis should be the only users accessing these data sets.\n    - The data sets should have audit settings that show who accessed them, whether for READ access, or any other purpose.\n\n- System dump data sets are often archived. If this is the case for you, then protect those archives in a manner similar to the original system dump data sets.\n\n- Direct system dumps to a **Sysout Archival and Retrieval System (SAR)** file (using Job Control Language statements), rather than to **SYSOUT**.\n\n- In installations where data set access is controlled by RACF/ACF2:\n    - A common practice to protect potentially sensitive data in these dumps is to direct system dumps to a file (using Job Control Language statements), rather than to **SYSOUT**.\n    - This prevents access by those without the privileges to view these files (by installation security methods such as RACF/ACF2).\n    - This has the added benefit of not tying up SDSF output storage queues.\n\n__Note__: The best place for debug information is to use a **SAR**. Only designated individuals can access the dump using their individual security. The security product can allow access to dump datasets in the same manner it allows access to datasets.",
    "weakness_title_read_only": "Disclosure of sensitive information through system dumps in mainframe programs",
    "weakness_id_read_only": "P807",
    "weakness": "5e5d22d6-ed60-4328-93a7-95684bce0e5e",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "requirements",
    "created": "2016-11-25T16:26:24.354000-05:00",
    "last_updated": "2021-06-25T14:47:47.724000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T583",
    "universal_id": "7f1ac2cf-6bd8-40da-81fe-019c2d7b6cb7",
    "countermeasure_name": "Verify the security of system dumps in mainframe",
    "countermeasure_solution": "Use the following guidelines to verify system dump security in mainframes:\n\n- Search for all instances of `//SYSUDUMP` or `//SYSABEND` in the Job Control Language (JCL). If found, verify that the dump is going to a **Sysout Archival and Retrieval System (SAR)** or a secured file, instead of to the output queue.\n\n- Ensure that debug information is not made available to unauthorized parties.\n    - This information contains file buffers, control information, and other data elements that could be sensitive.\n    - Verify that dumps, traces, and other system dump information are stored in a secured ***SAR***.\n    - When not available, the data should be directed to a secured dataset only accessible by those individuals who need to do the actual debug work. \n\n- The test __fails__ if one of the following lines are found:\n\n    //SYSUDUMP DD SYSOUT....\n\n    //SYSABEND DD SYSOUT....\n\n- Instead, make sure the following lines are used (otherwise this test __fails__):\n\n    //SYSUDUMP DD DSN=...\n\n    //SYSABEND DD DSN=...\n\n    //SYSUDUMP DD SYSOUT=(S,SARID01)\n\n    //SYSABEND DD SYSOUT=(S,SARID01)",
    "weakness_title_read_only": "Disclosure of sensitive information through system dumps in mainframe programs",
    "weakness_id_read_only": "P807",
    "weakness": "5e5d22d6-ed60-4328-93a7-95684bce0e5e",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2016-11-28T15:45:39.146000-05:00",
    "last_updated": "2021-06-25T14:47:47.165000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T584",
    "universal_id": "504b5c43-b576-4f76-b24b-0f99a6dbcda1",
    "countermeasure_name": "Implement update capabilities for your application",
    "countermeasure_solution": "Implement update capabilities for your application to make sure it can be updated and patches can be applied quickly when vulnerabilities are discovered. Consider the following guidelines:\n\n- Provide both automatic and manual updates. Both should be considered to give users the freedom to update their applications/devices by choice, or to set it up to be done automatically.\n\n- Provide a capability for scheduled updates. This helps users update at a preferred interval.",
    "weakness_title_read_only": "No update capabilities are provided",
    "weakness_id_read_only": "P808",
    "weakness": "66e0a7aa-6b81-4c00-a762-a5bcca03b3a4",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "architecture-design",
    "created": "2016-11-29T15:21:05.240000-05:00",
    "last_updated": "2021-06-25T14:47:56.990000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T585",
    "universal_id": "fa3a63d1-b3e6-490e-abd5-8af55df426b1",
    "countermeasure_name": "Do not expose sensitive information in the update binaries sent to devices",
    "countermeasure_solution": "Use the following guidelines to protect sensitive information in update binaries:\n\n- If you send software updates to a set of devices, make sure the update files do not expose sensitive data.\n- Exposure of sensitive information in a human readable format to someone using a hex edit tool can make it easier for hackers to abuse that information. Review the binary of the update file using a hex edit tool, and try to obfuscate any readable sensitive information found within it.",
    "weakness_title_read_only": "Information Exposure",
    "weakness_id_read_only": "P96",
    "weakness": "5caa926a-86e4-498d-97f8-5d2f5c5ddd7b",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "requirements",
    "created": "2016-12-02T12:17:16.821000-05:00",
    "last_updated": "2021-06-25T14:47:38.274000-04:00",
    "custom": "False",
    "rules": "3023b03d-f513-4d0b-be0a-8dd1c18d9507 AND bf71c43d-0c09-47fd-a42d-8b38afdcbea4",
    "rules_read_only": "A1144 AND A737"
  },
  {
    "countermeasure_id": "T586",
    "universal_id": "7e4e6088-7838-42f5-8bee-7cd622697fdf",
    "countermeasure_name": "Implement Secure Boot if possible",
    "countermeasure_solution": "If your device vendor supports it, implement the _Secure Boot_ feature to protect against _boot integrity_ attacks.\n\nInclude the following in the secure boot process:\n\n- Cryptographic validation of bootloader.\n- Cryptographic validation of OS image and application content.\n    1. When Secure Boot is activated on a device, the device checks each piece of software, including the BIOS and the operating system, against databases of known good signatures that are maintained in the firmware.\n    2. If each piece of software has a valid signature, the firmware runs the software and the operating system. Otherwise, the software has been modified or replaced (by a bootkit, for example) and Secure Boot will prevent running it.\n\nRefer to the documents provided by your device vendor for more implementation and configuration details.",
    "weakness_title_read_only": "Not Checking Boot/Platform Integrity",
    "weakness_id_read_only": "P809",
    "weakness": "bedc2920-f931-4842-bbdd-1fc8062d9042",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "architecture-design",
    "created": "2016-12-02T13:33:03.659000-05:00",
    "last_updated": "2023-04-23T16:22:31.078000-04:00",
    "custom": "False",
    "rules": "4fd90244-5770-4b68-88a7-9445cca26ec8",
    "rules_read_only": "A1077"
  },
  {
    "countermeasure_id": "T587",
    "universal_id": "2aa3e897-52e0-4afe-9d9f-c981f363590f",
    "countermeasure_name": "Verify that cryptographically secure algorithms are used for random number generation",
    "countermeasure_solution": "Follow these steps to verify that secure, well-documented, and adequately tested random number generation algorithms are used in the source code:\n\n- Find all the instances of random generation.\n- Verify that secure random generator functions and classes are used.\n- List the random generation algorithms that are specified as the parameters to those function. It is usually better to use the default random generator, such as `SecureRandom()` in Java, than specifying a random generator algorithm that has not been adequately analyzed.\n- Verify that those algorithms are secure, and the seeds are properly provided to the functions.\n\n__Note__: The _SHA1PRNG_ algorithm that is widely used for random number generation is no longer considered cryptographically strong and should be avoided in critical applications.",
    "weakness_title_read_only": "Use of Insufficiently Random Values",
    "weakness_id_read_only": "P228",
    "weakness": "5dcf2b67-f1e0-4f95-9469-c0a23b0acc7c",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2016-12-02T14:48:51.817000-05:00",
    "last_updated": "2021-06-25T14:47:37.662000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T589",
    "universal_id": "6cefc843-cb72-4234-97d3-ec641930f030",
    "countermeasure_name": "Verify that all the components are authenticated explicitly",
    "countermeasure_solution": "Verify that your application authenticates all other components explicitly before any kind of network communication with them.\n\nAdditionally, ensure that it does not rely on an implicit trust of other components.",
    "weakness_title_read_only": "Implicit trust of components that communicate through network",
    "weakness_id_read_only": "P801",
    "weakness": "00ac4737-67af-4162-b04f-15665f5ec250",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2016-12-14T11:58:30.590000-05:00",
    "last_updated": "2021-06-25T14:47:42.393000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T590",
    "universal_id": "0da315af-7a0d-4c7a-860c-e044c644d82c",
    "countermeasure_name": "Verify that network layer encryption is enabled for local area network communications",
    "countermeasure_solution": "Make sure your devices are set up to use encrypted and secure protocols for local area communication with other devices.\n\n- For example, if your devices use WiFi for local networking, verify that they are configured to always use WPA2 for authentication and the password is strong enough (at least 8 characters). \n\n__Note:__ If your devices are low-powered and use ZigBee or Thread protocols, make sure \"Network Key\" encryption is supported and activated on all your devices.",
    "weakness_title_read_only": "Clear Text and Unencrypted Transmission of Information",
    "weakness_id_read_only": "P216",
    "weakness": "b1d166d6-8ca7-415f-9cd9-8c2d745d3d01",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2016-12-14T12:40:20.853000-05:00",
    "last_updated": "2021-06-25T14:47:37.209000-04:00",
    "custom": "False",
    "rules": "e6b8604b-c16f-43b2-b5f3-644b48d713f0 AND e8630ac3-4603-4fe7-a3ee-b883e2b91c22",
    "rules_read_only": "A1138 AND A1103"
  },
  {
    "countermeasure_id": "T591",
    "universal_id": "9e53ee82-f80f-462a-8d74-48c84bfbda48",
    "countermeasure_name": "Verify that network access control is enabled for local area network communications",
    "countermeasure_solution": "Make sure your devices are set up to be authenticated before joining any local area networks.\n\nFor example, if your devices use WiFi for local networking, verify that they are configured to always use WPA2 for authentication and the password is strong enough (at least 8 characters). \n\n__Note:__ If your devices are low-powered and use ZigBee or Thread protocols, make sure \"Network Key\" is supported and activated on all your devices, and the network coordinator/commissioner authenticates the devices before letting them join the network.",
    "weakness_title_read_only": "Improper Access Control (Authorization)",
    "weakness_id_read_only": "P182",
    "weakness": "e488cdc5-3c91-4d2b-bcec-5c651b000d8b",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2016-12-14T12:49:04.077000-05:00",
    "last_updated": "2021-06-25T14:47:52.150000-04:00",
    "custom": "False",
    "rules": "e6b8604b-c16f-43b2-b5f3-644b48d713f0 AND e8630ac3-4603-4fe7-a3ee-b883e2b91c22",
    "rules_read_only": "A1138 AND A1103"
  },
  {
    "countermeasure_id": "T592",
    "universal_id": "a1c5757a-daab-4331-8bc0-a39919cfc36b",
    "countermeasure_name": "Test that IoT devices are not accessible through the Internet",
    "countermeasure_solution": "Use the following guidelines to test that IoT devices cannot be accessed through the Internet:\n\nUse a device outside the local area network of your IoT devices and try to reach them through the gateway they are attached to.\n\nIf the access is possible, this test __fails__.",
    "weakness_title_read_only": "Exposure of weak IoT devices to the Internet",
    "weakness_id_read_only": "P804",
    "weakness": "0482d5fa-574a-4743-83cb-dbe238f94d50",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2016-12-14T12:55:44.580000-05:00",
    "last_updated": "2021-11-02T04:23:37.604000-04:00",
    "custom": "False",
    "rules": "e8630ac3-4603-4fe7-a3ee-b883e2b91c22",
    "rules_read_only": "A1103"
  },
  {
    "countermeasure_id": "T593",
    "universal_id": "d69d4f69-0e41-45f3-b115-c068df5fa462",
    "countermeasure_name": "Test that the parent tag of the SAML assertions are signed",
    "countermeasure_solution": "Use the following guidelines to test that SAML assertion parent tags are signed:\n\n1. Deploy a test web service and set up your application to forward some user requests to it.\n2. When you receive the request and the SAML assertion on the test web service, check that the parent tag of the SAML assertion is signed by your application.\n3. Verify the signature and make sure that the timestamps are valid and provided in the parent tag.",
    "weakness_title_read_only": "Weakness in SSO or federated authentication",
    "weakness_id_read_only": "P727",
    "weakness": "b51a0a4e-0812-4030-90fc-ab706278661d",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2016-12-14T13:28:44.294000-05:00",
    "last_updated": "2021-06-25T14:48:01.505000-04:00",
    "custom": "False",
    "rules": "a96dfba5-3101-4647-ba00-467d9eed0d6a AND 1ea67369-e5fb-4a5e-b251-d877f8a180db",
    "rules_read_only": "A1140 AND A762"
  },
  {
    "countermeasure_id": "T594",
    "universal_id": "fde9fc82-160c-416c-bbf2-4098ca278224",
    "countermeasure_name": "Verify that your application validates SAML assertions properly",
    "countermeasure_solution": "Use the following guidelines to verify that your application validates SAML assertions.\n\nYour application must:\n\n1. Check if both the SAML assertion and its parent tag are signed by the other service provider.\n2. Verify the signature provided by the service provider appropriately.\n3. Validate the timestamp provided in the parent tag properly.\n4. Verify the information provided in the SAML assertion properly.",
    "weakness_title_read_only": "Weakness in SSO or federated authentication",
    "weakness_id_read_only": "P727",
    "weakness": "b51a0a4e-0812-4030-90fc-ab706278661d",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2016-12-14T15:57:52.268000-05:00",
    "last_updated": "2021-06-25T14:48:01.531000-04:00",
    "custom": "False",
    "rules": "c2ba8305-c5dc-4c16-9524-842f8eb30a37 AND 1ea67369-e5fb-4a5e-b251-d877f8a180db;695f7a18-457b-4e84-8f6c-6f2d251e5cf5 AND 1ea67369-e5fb-4a5e-b251-d877f8a180db",
    "rules_read_only": "A1141 AND A762;A54 AND A762"
  },
  {
    "countermeasure_id": "T595",
    "universal_id": "f45f29b3-3fa6-4bf5-abdb-d060552309d5",
    "countermeasure_name": "Test that your application checks for symlinks before opening files",
    "countermeasure_solution": "Use the following guidelines to test that your application checks for symlinks:\n\n- Find scenarios in which your application opens a file for reading or writing data.\n- Create a symlink at the expected location with the expected name, and link it to a file outside the application realm.\n- Test that your application detects the symlink and rejects opening it.\n    - This test __fails__ if your application does not detect the symlink.",
    "weakness_title_read_only": "Improper Link Resolution Before File Access ('Link Following')",
    "weakness_id_read_only": "P480",
    "weakness": "1b409625-0b3d-4baf-94bc-c9f86fad890a",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2016-12-14T16:02:17.431000-05:00",
    "last_updated": "2021-06-25T14:47:53.877000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T596",
    "universal_id": "fdeeb2f1-f458-4511-895a-b0cd67f7f5ff",
    "countermeasure_name": "Test that your application provides update capabilities",
    "countermeasure_solution": "Set up an update server for testing the following cases using the application:\n\n- Test that you can update your application manually.\n- Test that you can set your application to be updated automatically, and that it works as expected.\n- Test that you can schedule your application to be updated at specific time intervals, and that it works as expected.",
    "weakness_title_read_only": "No update capabilities are provided",
    "weakness_id_read_only": "P808",
    "weakness": "66e0a7aa-6b81-4c00-a762-a5bcca03b3a4",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2016-12-14T16:44:29.056000-05:00",
    "last_updated": "2021-06-25T14:47:56.399000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T597",
    "universal_id": "7e361700-8719-4b62-9ccd-c3b6eb15cc6b",
    "countermeasure_name": "Test that the update binaries do not expose sensitive information",
    "countermeasure_solution": "Use the following guidelines to test for sensitive data exposure in update binaries:\n\n- Use a hex editor with ANSI and Unicode view panes to open the update binaries sent from the update server to the clients.\n\n- Check that there is no evident sensitive information exposed in the binary file. Any kind of information that can be misused by hackers should not be visible in the binary file.",
    "weakness_title_read_only": "Information Exposure",
    "weakness_id_read_only": "P96",
    "weakness": "5caa926a-86e4-498d-97f8-5d2f5c5ddd7b",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2016-12-14T16:56:49.279000-05:00",
    "last_updated": "2021-06-25T14:47:38.640000-04:00",
    "custom": "False",
    "rules": "3023b03d-f513-4d0b-be0a-8dd1c18d9507 AND bf71c43d-0c09-47fd-a42d-8b38afdcbea4",
    "rules_read_only": "A1144 AND A737"
  },
  {
    "countermeasure_id": "T598",
    "universal_id": "693f717d-ceb5-4ba3-a318-c88f85456c96",
    "countermeasure_name": "Test that Secure Boot is implemented",
    "countermeasure_solution": "Use the following guidelines for testing whether Secure Boot is implemented or not:\n\n- Change the BIOS or the operating system code, or sign it using a malicious key, and replace the genuine version on the device with the new malicious one.\n- Test that your device detects the malicious key and prevents the booting process.\n    - This test __fails__ if your device does not detect the malicious key.",
    "weakness_title_read_only": "Not Checking Boot/Platform Integrity",
    "weakness_id_read_only": "P809",
    "weakness": "bedc2920-f931-4842-bbdd-1fc8062d9042",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2016-12-14T17:06:59.704000-05:00",
    "last_updated": "2021-06-25T14:47:39.364000-04:00",
    "custom": "False",
    "rules": "4fd90244-5770-4b68-88a7-9445cca26ec8",
    "rules_read_only": "A1077"
  },
  {
    "countermeasure_id": "T599",
    "universal_id": "f84242c4-78d0-4ca7-aef9-a18fdba409d8",
    "countermeasure_name": "Do not rely on mutable HTTP headers such as 'host' and 'referer'",
    "countermeasure_solution": "Do not trust and rely on values provided in mutable HTTP headers. These values can be modified and forged. Two examples are HTTP host and referer headers:\n\n- Do not use the Host header provided by the client to create user output or links without proper validation. For example, do not use `request.host` to create a call-back URL.\n      - For more information about host header attacks, see this [article](https://www.acunetix.com/blog/articles/automated-detection-of-host-header-attacks/).\n- Do not make decisions based on the HTTP referer. For example, do not use it as a means of authentication.",
    "weakness_title_read_only": "Reliance on Mutable HTTP Headers",
    "weakness_id_read_only": "P811",
    "weakness": "1420114a-875e-4c1d-adef-a1f530e71ff3",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "development",
    "created": "2016-12-23T16:17:59.088000-05:00",
    "last_updated": "2023-03-17T17:45:30.563000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T600",
    "universal_id": "db1b16cb-4088-4d33-bc2d-194f6b1ce7e3",
    "countermeasure_name": "Verify that HTTP header values are not used without proper validation",
    "countermeasure_solution": "Verify that the values of the HTTP headers (especially 'referer' and 'host' headers) are never directly used for authentication, or for creating links or user output without proper validation in your code.",
    "weakness_title_read_only": "Reliance on Mutable HTTP Headers",
    "weakness_id_read_only": "P811",
    "weakness": "1420114a-875e-4c1d-adef-a1f530e71ff3",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2016-12-23T17:04:40.548000-05:00",
    "last_updated": "2021-06-25T14:47:42.710000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T604",
    "universal_id": "757ed35f-3f45-44d0-82c7-14c8c4a86b9a",
    "countermeasure_name": "Implement a consent withdrawal mechanism",
    "countermeasure_solution": "Act on the consent withdrawal if you are a [controller](/library/glossary/G33/) or a [processor](/library/glossary/G34/) assigned to act on behalf of the controller. Communicate the withdrawal mechanism to your processors or sub-processors.\n \nIf your application needs to collect personal information that requires user consent: \n \n- Review the [Privacy Impact Assessment (PIA)](/library/glossary/G60/) document and consult with your privacy officer to create a list of the user data you are collecting that requires consent. \n- Implement a consent page in the user profile/settings page. \n- Fetch and display the list of all consent items accepted by the user from the database. \n- Implement a checkbox or toggle button for each item to let the user withdraw their consent. \n- Once a user withdraws consent from an item, stop all the activities that were being carried out based on the consent for that item. However, this does not necessarily mean the personal data must be deleted. For example, if a user withdraws consent for location tracking, their location can no longer be tracked. It is not necessary to delete their previous location data unless they request it under the \"Right to Erasure/Right to be Forgotten\" (GDPR Article 17) addressed in [T607](/library/tasks/T607/).",
    "weakness_title_read_only": "Privacy Violation",
    "weakness_id_read_only": "P257",
    "weakness": "b0418f1b-bf92-45ba-845f-abfb9735f1cf",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "requirements",
    "created": "2017-01-18T14:45:58.046000-05:00",
    "last_updated": "2023-05-17T10:46:40.921000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T605",
    "universal_id": "dc2faa4c-9bed-462b-9d60-6a461b211858",
    "countermeasure_name": "Verify if consent is obtained prior to personal information collection (where applicable)",
    "countermeasure_solution": "Review the [Privacy Impact Assessment (PIA)](/library/glossary/G60) document and consult with your privacy officer to confirm whether the process of personal information collection for the specified purpose requires consent. If so, check the records and verify that each user has provided their consent for the data collection processing. \n\nEvidence such as policy and records of consent, privacy notice, just-in-time notices, limitations on uses set out in policies or procedures should exist to prove the implementation of this countermeasure.\n \nThis test __fails__ if consent is required but it is not offered by the user prior to information collection, and there is no evidence of completing this countermeasure.",
    "weakness_title_read_only": "Privacy Violation",
    "weakness_id_read_only": "P257",
    "weakness": "b0418f1b-bf92-45ba-845f-abfb9735f1cf",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "testing",
    "created": "2017-02-03T00:16:59.660000-05:00",
    "last_updated": "2023-05-11T12:48:28.505000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T606",
    "universal_id": "c2a490e3-d8dc-47b6-a746-4a457250d474",
    "countermeasure_name": "Verify that CSV/Excel files are protected against macro injection",
    "countermeasure_solution": "If your web application or spreadsheet software generates CSV Excel files containing user supplied content, verify that the resulting CSV files do not contain macro injection.\n\nUse the following steps to test for macro injection:\n\n1.  Provide simple macros beginning with `=, +, -, @` as input for your application. For example, `+1+1` and `=1+1`.\n\n2.  Export a CSV file of your provided input.\n\n3.  This test __fails__ if the macros have been executed. The macro in the example above executes if you receive a value of **2** instead of `=1+1`.",
    "weakness_title_read_only": "Improper Input Validation",
    "weakness_id_read_only": "P95",
    "weakness": "df80ca69-a2c0-4d7f-b3f7-d81bd6d685e9",
    "tags": "",
    "countermeasure_priority": "3",
    "phase": "testing",
    "created": "2017-02-03T12:29:34.075000-05:00",
    "last_updated": "2021-06-25T14:47:54.575000-04:00",
    "custom": "False",
    "rules": "7f83068a-6718-479c-b44f-5138320a9219",
    "rules_read_only": "A1193"
  },
  {
    "countermeasure_id": "T607",
    "universal_id": "9469f27b-0854-4289-a00f-afad1c749921",
    "countermeasure_name": "Develop automated tools/settings for destroying personal information when it is no longer needed",
    "countermeasure_solution": "[Controllers](/library/glossary/G33) have the primary responsibility to respond to users. If they delegate this responsibility to their [processors](/library/glossary/G34), they must provide them with written instructions. Processors who are assigned such a responsibility must ensure that the functionality for destroying unneeded personal information is in compliance with the controller's written instructions.\n\nFollow these instructions to implement a configurable functionality for destroying personal information: \n \n- Review the [PIA](/library/glossary/G60/) and/or Data Processing Register to determine the scope of user's personal information.  \n- Find database dependencies and identify the retention period for each piece of information. Retention should be based on a relative schedule. For example, delete information _x_ years after the user's last purchase or last login (not from when the record was created). \n- Implement an admin setting page to let the system's admin, setup and configure the information removal conditions. \n- Implement a function to remove all the identified personal information that has reached the end of its retention period.  \n   - Exclude the information items flagged as restricted (i.e. personal information of the individuals who object to processing, which is addressed in [T754](/library/tasks/T754/)). \n- Remove the information from your backup servers. \n- If the information was disclosed to other parties, inform them all to remove the information from their systems. \n \nAnonymized information that cannot be linked to individuals and reidentified, can be kept on the system.",
    "weakness_title_read_only": "Privacy Violation",
    "weakness_id_read_only": "P257",
    "weakness": "b0418f1b-bf92-45ba-845f-abfb9735f1cf",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "requirements",
    "created": "2017-02-06T18:01:24.023000-05:00",
    "last_updated": "2022-02-25T16:42:56.404000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T608",
    "universal_id": "e461d713-8e34-4616-a374-1dd920bdfe92",
    "countermeasure_name": "Obfuscate your executables",
    "countermeasure_solution": "Use a publicly available or a custom-made obfuscator to make the executables of your application harder to understand before distributing them to external end users.\n\n- Obfuscate application executables to reduce their risk of being reverse engineered by attackers, or having low-level details of the application revealed.\n- Select an obfuscation tool that provides different methods of obfuscation to increase the complexity of reverse engineering.\n\nObfuscation can involve:\n\n- Stripping out redundant meta-data, which potentially reveal unnecessary details to attackers, especially debugging symbols from binaries.\n- Encoding plaintext data to make it harder to read.\n- Encrypting/compressing data in various layers to make the executable harder to be reversed.\n- Changing the name of variables to something meaningless.\n- Changing the control flow of the application and sophisticating the control flow graph to make it harder to understand what the application does in different layers.\n- Making the application change its own code on each run.\n\n__Note__:\n\n- Obfuscation tools can simply make reversing engineer code more difficult. Adept hackers would be able to break all obfuscation methods given enough time and the appropriate tools. Use obfuscation as an extra layer of security to harden the process for hackers, and make them reconsider the cost and effort of reversing your code.\n\n- Proprietary tools such as Denuvo Anti-Tamper strengthen the security of applications by preventing debugging, reverse engineering, and changing of executable files. These tools provide better protection in exchange for increased costs. If you use these tools, do not combine them with other obfuscating methods without checking their documentation and manuals.",
    "weakness_title_read_only": "Easy-to-Reverse Executable",
    "weakness_id_read_only": "P814",
    "weakness": "d1f8b198-2f4b-4fcd-8755-cba4f64584d0",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "requirements",
    "created": "2017-02-15T10:06:41.978000-05:00",
    "last_updated": "2021-06-25T14:47:38.878000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T609",
    "universal_id": "0e108e8d-cbce-4a15-875f-919959b8b2f0",
    "countermeasure_name": "Protect your application against debuggers",
    "countermeasure_solution": "Use anti-debugger tools and techniques to protect your code against reverse engineering tools.\n\n- Use anti-debugging to help you detect the presence of a debugger tool and change the behavior of your application to make reverse engineering harder for attackers. Free advanced debuggers can help attackers disassemble and examine your application to gain extra information, or even change your application to bypass some security controls.\n\n__Note__:\n\n- Adept hackers would be able to bypass all anti-debug techniques given enough time and the appropriate tools. Use anti-debug techniques as an extra layer of security to harden the process for hackers, and make them reconsider the cost and effort of reversing your code.\n\n- Proprietary tools such as Denuvo Anti-Tamper strengthen the security of applications by preventing debugging, reverse engineering, and changing of executable files. These tools provide better protection in exchange for increased costs. If you use these tools, do not combine them with other obfuscating methods without checking their documentation and manuals.",
    "weakness_title_read_only": "Easy-to-Reverse Executable",
    "weakness_id_read_only": "P814",
    "weakness": "d1f8b198-2f4b-4fcd-8755-cba4f64584d0",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "requirements",
    "created": "2017-02-21T12:51:09.116000-05:00",
    "last_updated": "2021-06-25T14:47:38.860000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T610",
    "universal_id": "f558cdae-5bd2-44e2-bf4d-5fb9ef5fc74f",
    "countermeasure_name": "Devise overall consistency measures for game",
    "countermeasure_solution": "For multiplayer games, build in consistency and check it in real time on the server:\n\n- Devise an overall consistency measure for the game.\n    - For example, the total number of coins in the game should be constant.\n    - If a player loses some coins, another player should gain the same amount of money.\n- Always verify the value of that parameter and resolve inconsistencies.\n- Send redundant data, such as two related variables, or even the same value in two variables, and check the consistency of submitted values.",
    "weakness_title_read_only": "Submission of altered data by game clients",
    "weakness_id_read_only": "P823",
    "weakness": "c0937aba-0c3a-4d7c-8fdf-53e26d850762",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "architecture-design",
    "created": "2017-02-23T12:43:45.455000-05:00",
    "last_updated": "2021-06-25T14:47:54.111000-04:00",
    "custom": "False",
    "rules": "0b07fc15-1e13-4c03-b097-c7e222fc019a",
    "rules_read_only": "A718"
  },
  {
    "countermeasure_id": "T611",
    "universal_id": "1e6f893a-b0f4-4253-a3c3-55788a379372",
    "countermeasure_name": "Verify that the game server checks the consistency/integrity of submitted parameters",
    "countermeasure_solution": "Use the following guidelines to verify that the game checks for parameter consistency:\n\n- Use a cheat engine or a similar tool to modify the value of some variables in the game. For example, alter the number of the coins or cards. Submit the data on behalf of the client and test that the server detects the tampering.\n \n- Verify that the server has a consistency measure that allows rejecting the manipulated data. For example, the game checks the total number of coins in the game or compares the high-scores against the breakdown of the player's actions.\n- If some important parameters and values are signed by the client, make sure the server has an integrity verification mechanism for verifying those important parameters and values. Verify that for such important data items, the signatures are checked on the server.\n    - If not, this test __fails__.\n    - This type of integrity checking is another layer of defense, in addition to using a secure channel such as an SSL channel.\n    - Not all the data submitted to the server needs to be signed, and the choice is a design decision.",
    "weakness_title_read_only": "Submission of altered data by game clients",
    "weakness_id_read_only": "P823",
    "weakness": "c0937aba-0c3a-4d7c-8fdf-53e26d850762",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2017-02-23T16:01:51.673000-05:00",
    "last_updated": "2021-06-25T14:47:53.978000-04:00",
    "custom": "False",
    "rules": "0b07fc15-1e13-4c03-b097-c7e222fc019a",
    "rules_read_only": "A718"
  },
  {
    "countermeasure_id": "T612",
    "universal_id": "45685725-c283-48b1-8019-c90034aeb22d",
    "countermeasure_name": "Detect rooted devices and assess the runtime environment with the aid of SafetyNet Attestation API",
    "countermeasure_solution": "At runtime in your application, check if the following requirements are satisfied for the Android environment that your application runs in:\n\n- The application is not running in an emulator. \n- The device running your application has passed Android compatibility tests.\n- Your application has not been modified by an unknown source.\n- Your application is not running on a rooted device or a device with a custom ROM.\n    - For more details on root detection, read the __Android: Root or Custom Build Detection__ Additional Requirements for this countermeasure.\n- Your application is not debuggable.\n\nFor checking whether the application is debuggable, use [FLAG_DEBUGGABLE](https://developer.android.com/reference/android/content/pm/ApplicationInfo.html#FLAG_DEBUGGABLE).\n\nFor the rest of the above items, use SafetyNet Attestation API. Android Framework provides a SafetyNet Attestation API that helps you assess the APK information of your application and the security and compatibility of the Android environment your application runs in. SafetyNet API examines both software and hardware information on the device.\n\nTo use SafetyNet API, follow these steps:\n\n1. Create a Google Play Services API client.\n2. Add SafetyNet API to the client.\n3. Connect to Google Play Services API.\n4. Obtain a single-use token (nonce).\n5. Request a compatibility check from SafetyNet API using the nonce.\n6. Read the compatibility check response.\n7. Verify the compatibility check response and react accordingly if the integrity of the device is not approved.\n\nFor more information about using SafetyNet API, as well as code samples, see [Android's SafetyNet documentation](https://developer.android.com/training/safetynet/index.html).",
    "weakness_title_read_only": "Not Checking Boot/Platform Integrity",
    "weakness_id_read_only": "P809",
    "weakness": "bedc2920-f931-4842-bbdd-1fc8062d9042",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "requirements",
    "created": "2017-02-24T01:23:02.220000-05:00",
    "last_updated": "2023-03-17T17:47:26.620000-04:00",
    "custom": "False",
    "rules": "64e2a4e5-efe8-4a19-8b5f-b835d963a40c",
    "rules_read_only": "A715"
  },
  {
    "countermeasure_id": "T613",
    "universal_id": "71fd1a84-24b9-416e-b7ea-dfabeab33376",
    "countermeasure_name": "Mitigate DDoS attacks with NGINX",
    "countermeasure_solution": "Mitigate DDoS attacks with NGINX using the following techniques:\n\n- Accept a limited number of incoming requests.\n    - Only allow each unique client IP address to make a login attempt every few seconds.\n\n- Limit the number of connections for a single client.\n    - Assign a value for accepting the incoming requests similar to that of a typical user.\n\n- Close slow connections that write data infrequently.\n    - These may be trying to keep connections open to reduce the server's capacity.\n\n- Blacklist IP addresses used for attacks.\n    - Do not accept connections from these IP addresses.\n\n- Whitelist IP addresses for specific sets of allowed users.\n\n- Set caching parameters to enable caching to offload requests from the backend.\n\n- Block requests that lead to attacks:\n    - Requests that limit connections to backend servers.\n    - Requests used for range-based attacks.\n    - Requests to handle high loads.\n\nPlease refer to the How-to section of this countermeasure for instructions on changing NGINX configurations.",
    "weakness_title_read_only": "Denial of Service (DoS)",
    "weakness_id_read_only": "P750",
    "weakness": "04f3a13f-c7ea-4824-bd73-086d61dd30ba",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2017-02-28T23:39:29.413000-05:00",
    "last_updated": "2022-09-01T11:02:12.336000-04:00",
    "custom": "False",
    "rules": "dad7e811-56b1-47b1-8e59-e0bb4d38958f AND cab80cea-1a20-433f-b78c-783b816b8d33",
    "rules_read_only": "A1149 AND A739"
  },
  {
    "countermeasure_id": "T614",
    "universal_id": "331fd777-6f6a-4427-a3b7-f15380edfdbb",
    "countermeasure_name": "Follow best practices to secure time in games",
    "countermeasure_solution": "Follow these best practices to mitigate the possibility of time spoofing in games:\n\n- Get the time from various sources on the client and server and check the game's tick (unit of time). Halt the game if the ticks don't match.\n- If the game uses a time server, use SSL connections to the server, and verify the server certificate.\n- Use SSL pinning to detect tampering attempts.\n- Decide on and enforce a maximum and minimum delay between the submitted actions, and between the submitted actions and current time:\n    - A minimum delay prevents cheating. No player can submit more than one action in the smallest unit of time for the game (tick of the game).\n    - A maximum delay relates to liveness tests. Devise a method to make sure a player is still in game and cut idle players from the game. \n- Reject very old messages.\n    - Consider the possibility of \"standby-ing\" attacks in which players slow or break their network connections to exploit a synchronization process.\n    - Reject old messages and cut idle players where possible, and when there is a large risk associated with letting those players return to the game.",
    "weakness_title_read_only": "Cheating through Time/State Spoofing in Games",
    "weakness_id_read_only": "P816",
    "weakness": "1ca0963f-8cc3-46e3-abe1-7e79d5c84e52",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "requirements",
    "created": "2017-03-03T12:22:36.632000-05:00",
    "last_updated": "2021-06-25T14:47:54.505000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T615",
    "universal_id": "5c115ee5-195e-40b4-b04e-9278fa72d27a",
    "countermeasure_name": "Check your mobile application's integrity and installation source",
    "countermeasure_solution": "Where possible inside your application, verify its installation source and integrity to make sure that the app runs only when it's installed from a trusted source and is tamper-free. In other words:\n\n1. Check the installation source for the application. For example, in an Android environment, check whether the application is installed from a permitted source such as _Google Play Store_.\n2. Create a certificate for the application (sign the application) during its release, and verify the installation certificate at runtime.",
    "weakness_title_read_only": "Missing support for integrity checks on important data and configuration files",
    "weakness_id_read_only": "P752",
    "weakness": "059f9863-6436-4841-b9fd-8b9febb4a1f6",
    "tags": "",
    "countermeasure_priority": "3",
    "phase": "requirements",
    "created": "2017-03-03T13:44:46.705000-05:00",
    "last_updated": "2022-11-02T14:44:06.793000-04:00",
    "custom": "False",
    "rules": "64e2a4e5-efe8-4a19-8b5f-b835d963a40c;3657f540-0b47-49b3-9a4d-69412ec692d6",
    "rules_read_only": "A715;A714"
  },
  {
    "countermeasure_id": "T616",
    "universal_id": "d36a4f3b-a1a0-4ec3-8f33-b0c26ba9c8b7",
    "countermeasure_name": "Keep user iOS device token private",
    "countermeasure_solution": "Use the following guidelines to protect iOS user privacy:\n\n- Do not use device tokens to identify user devices or a user's identity.\n- Do not include private user information that may reveal a user's identity in a push notification message if you are using push cloud services you do not trust.\n- Encrypt the device token.\n- Do not store device tokens in publicly accessible storage.",
    "weakness_title_read_only": "Privacy Issue due to Device Token Mishandling in Apple Push Notifications (APNs)",
    "weakness_id_read_only": "P818",
    "weakness": "ce7ab90d-0565-45a2-9349-36ed3c038a57",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "requirements",
    "created": "2017-03-05T17:08:58.566000-05:00",
    "last_updated": "2021-06-25T14:48:00.131000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T617",
    "universal_id": "a8dd8102-e8ac-416d-9a41-65ea859fb6fc",
    "countermeasure_name": "Do not rely on APN for delivering critical notifications",
    "countermeasure_solution": "When it is vital for messages to be received and acknowledged by the user, consider notification loss if APN is used as the sole delivery method.\n\n- Validate whether the user has received an important security notification on their device, such as with a custom notification action. Otherwise, resend the notification by other means such as email.\n\nThe following is adapted from _APNs Overview_: \n\n- Include a collapse identifier with the notification request to consolidate similar notifications.\n    - When a device is online, each notification you send is delivered to the device. However, when the `apns-collapse-id` key is present in your HTTP/2 request header, APNs consolidate requests when the value for that key is the same. For example, a news service that sends the same headline twice could use the same collapse identifier value for both notification requests. The APNs would then consolidate the two requests into a single notification for delivery.\n\n## References:\n\n- [APNs Overview](https://developer.apple.com/library/content/documentation/NetworkingInternet/Conceptual/RemoteNotificationsPG/APNSOverview.html#//apple_ref/doc/uid/TP40008194-CH8-SW1)",
    "weakness_title_read_only": "Reliance on Apple Push Notification (APN) for Mission Critical Applications",
    "weakness_id_read_only": "P819",
    "weakness": "ba24603d-8a35-4baa-adf3-ca783cdce13c",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "requirements",
    "created": "2017-03-05T17:51:13.187000-05:00",
    "last_updated": "2021-06-25T14:47:41.176000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T618",
    "universal_id": "fee29934-6982-411d-9191-c272e4f578f0",
    "countermeasure_name": "Check for iOS app notification settings changes after initial configuration",
    "countermeasure_solution": "Use the following guidelines for iOS notification settings:\n\n- Use the `getNotificationSettingsWithCompletionHandler:` method of the shared `UNUserNotificationCenter` object to get the most recent authorization status of your app. The method returns a `UNNotificationSettings` object whose contents reflect your app's current authorization status and the current notification environment.\n\nIf push notifications are considered critical to the nature of your application:\n\n- Check its to-user-device delivery status.\n- Communicate its importance to the user using in-app pop-up messages.",
    "weakness_title_read_only": "Reliance on Apple Push Notification (APN) for Mission Critical Applications",
    "weakness_id_read_only": "P819",
    "weakness": "ba24603d-8a35-4baa-adf3-ca783cdce13c",
    "tags": "",
    "countermeasure_priority": "3",
    "phase": "development",
    "created": "2017-03-05T17:54:57.708000-05:00",
    "last_updated": "2021-06-25T14:47:41.269000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T619",
    "universal_id": "c1a16a90-67a0-46be-a461-f80e37fc4e46",
    "countermeasure_name": "Check authorization status before handling iOS app notification's custom action",
    "countermeasure_solution": "Perform authorization status checks while handling a notification's custom action. Use the same degree of authentication and authorization for the application's security requirements.",
    "weakness_title_read_only": "Apple Push Notification (APN) Unauthorized Custom Actions",
    "weakness_id_read_only": "P820",
    "weakness": "26882735-bcb3-4e96-928b-3bc38c6bb6c5",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "development",
    "created": "2017-03-05T18:18:57.487000-05:00",
    "last_updated": "2021-06-25T14:47:44.899000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T620",
    "universal_id": "fe547db9-638f-4e90-bc97-8ba75d12a36d",
    "countermeasure_name": "Use SSL/TLS offloading, encryption and certificates with NGINX",
    "countermeasure_solution": "Use the following guidelines to free your backend servers from CPU-intensive SSL/TLS processing:\n\n- Install SSL/TLS certificates and security patches on NGINX and use it as a **proxy** server.\n\n- Configure NGINX to proxy to \"https\" and automatically encrypt traffic. This minimizes the number of SSL/TLS handshakes and uses a limited number of *keepalive* connections to backend servers.\n\n- Use HTTPS between an NGINX and backend servers.\n    - Especially if the backend servers are not located in the same data center as the backend servers. Such as when the backend servers are in the cloud.\n    - Clients will communicate with NGINX over HTTPS, which decrypts the requests and re-encrypts them before passing them to the backend server.\n\n- Restrict access to your system by configuring NGINX to validate the SSL/TLS client certificates.",
    "weakness_title_read_only": "Clear Text and Unencrypted Transmission of Information",
    "weakness_id_read_only": "P216",
    "weakness": "b1d166d6-8ca7-415f-9cd9-8c2d745d3d01",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2017-03-07T15:41:11.977000-05:00",
    "last_updated": "2021-06-25T14:47:37.434000-04:00",
    "custom": "False",
    "rules": "dad7e811-56b1-47b1-8e59-e0bb4d38958f AND cab80cea-1a20-433f-b78c-783b816b8d33",
    "rules_read_only": "A1149 AND A739"
  },
  {
    "countermeasure_id": "T622",
    "universal_id": "1bc41c79-7d5f-475f-905d-eeb190929d0c",
    "countermeasure_name": "Assign a random revocable token to actions and achievements in the game",
    "countermeasure_solution": "Generate and pass a unique, random code/token when a user performs an action, wins something, or receives rewards. Do this as opposed to assigning a single unchanging code to items, rewards or actions. Follow these guidelines to generate and handle these codes/tokens:\n\n- Use a random generator to generate the code.\n- Tie the random number to the session information, such as a session ID.\n- Revoke the code after it is used.\n- Verify that the session information matches the code when it is submitted for any reason.\n\nAlso make sure the link for submitting these codes, does not return any information about the codes assigned to a session ID. For example, there might be a link that people submit their received tokens or promo codes to, so that they get rewards or currencies in the game.",
    "weakness_title_read_only": "Resubmission of tokens and code words in games",
    "weakness_id_read_only": "P822",
    "weakness": "96518c70-4740-4ac0-9037-b2f592f72236",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "requirements",
    "created": "2017-03-17T12:22:57.999000-04:00",
    "last_updated": "2021-06-25T14:47:54.623000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T623",
    "universal_id": "3aca3eba-6381-42ad-9ddb-1a2746e78484",
    "countermeasure_name": "Verify that assigned game tokens are secure",
    "countermeasure_solution": "Work with developers to verify that the codes and tokens associated with actions, items, or rewards received are:\n\n- Random. Use secure random generators.\n- Revoked after use and cannot be resubmitted. Use the designated link to submit a token a few times and check whether the game accepts the token.\n- Tied to the session IDs. Use the link to submit a token belonging to another session ID and check if the game accepts it.\n\nAdditionally, verify the links for submitting such codes and tokens and make sure that it is not possible to submit a value to find out about all the tokens associated with a session ID.",
    "weakness_title_read_only": "Resubmission of tokens and code words in games",
    "weakness_id_read_only": "P822",
    "weakness": "96518c70-4740-4ac0-9037-b2f592f72236",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2017-03-17T12:33:49.670000-04:00",
    "last_updated": "2021-06-25T14:47:54.309000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T624",
    "universal_id": "1c12873f-b020-4d87-90d6-44a8b124d0dc",
    "countermeasure_name": "Implement a verifiable log for the game",
    "countermeasure_solution": "Use the following guidelines for implementing a verifiable log for a game on the client and server side:\n\nOn the client side:\n\n- Instead of just one value, collect and send a log of actions, scores or achievements to the server (or other clients) to facilitate consistency checks. Here are a few scenarios:\n\n    - For high-score games, send a list of all the actions that are completed, such as the number of hits, and all the goals that are achieved.\n    - For adventure and strategy games, log the steps along the way and send them to the server. This will be the path or trajectory that shows the evolution of the player's state.\n\nOn the server side:\n\n- Calculate the high-score and reject false scores based on the received log of actions.\n- Devise methods to check the consistency of submitted logs. Reject any impossible and inconsistent data.",
    "weakness_title_read_only": "Submission of altered data by game clients",
    "weakness_id_read_only": "P823",
    "weakness": "c0937aba-0c3a-4d7c-8fdf-53e26d850762",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "requirements",
    "created": "2017-03-17T14:57:21.672000-04:00",
    "last_updated": "2021-06-25T14:47:57.731000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T625",
    "universal_id": "39bc3045-a2e3-4b11-a936-631af35f9175",
    "countermeasure_name": "Sign and encrypt important parameters sent to the game server",
    "countermeasure_solution": "Sign and encrypt important parameters sent to the game server, then verify the signature on the server. \n\n__Note:__ Do not merely rely on the security provided by a secure channel, such as an SSL channel. SSL libraries can be easily intercepted on the client platform, such as on an Android or iOS device. Encrypt, sign, and verify important data. This adds an additional layer of defense to the game.",
    "weakness_title_read_only": "Submission of altered data by game clients",
    "weakness_id_read_only": "P823",
    "weakness": "c0937aba-0c3a-4d7c-8fdf-53e26d850762",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "requirements",
    "created": "2017-03-17T15:18:09.998000-04:00",
    "last_updated": "2021-06-25T14:47:39.293000-04:00",
    "custom": "False",
    "rules": "088e2318-7522-439a-a136-d43260a729da",
    "rules_read_only": "A717"
  },
  {
    "countermeasure_id": "T626",
    "universal_id": "7ae7a40f-d041-41e3-8912-dcd9bbd95ccd",
    "countermeasure_name": "Verify that the game is not vulnerable to time cheats",
    "countermeasure_solution": "Use the following guidelines to verify that a game's time cannot be exploited:\n\n- Use a game engine or a similar method to change the game tick or time.\n- Verify that the client or the server detects the cheat.\n    - This test __fails__ if the client/server does not detect the time cheat.",
    "weakness_title_read_only": "Cheating through Time/State Spoofing in Games",
    "weakness_id_read_only": "P816",
    "weakness": "1ca0963f-8cc3-46e3-abe1-7e79d5c84e52",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2017-03-17T16:10:48.944000-04:00",
    "last_updated": "2021-06-25T14:47:53.472000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T627",
    "universal_id": "4a1aacc3-ad18-4bfa-9f48-6716ec0f5d3c",
    "countermeasure_name": "Follow best practices for secure transactional processing in games",
    "countermeasure_solution": "Follow these guidelines to implement secure transactions in games:\n\n- Perform all related actions in a transaction in the game. For example, a trade is a sell and a buy.\n    - If any step of a transaction fails, fail the entire transaction.\n\n- If the transaction is time-dependent, check that the entire transaction is performed within a time period.\n    - ___Game Example___: If bets or votes need to be submitted before a certain time, do not allow the users to open a session for betting and leave it open until some other information is gained. If part of the transaction fails, roll back the entire transaction.\n \n- If the network connection is lost within a trade in the game, roll back the entire trade.\n    - ___Game Example___: Performing half of the transaction without a rollback can create duplicates in games.\n\n- Resume the data to a previous state if a transaction fails.\n\n- Hide the state, data, and time of the transaction from other entities until it is complete. Unless the transaction is complete, it has not happened outside its process.",
    "weakness_title_read_only": "Lack of Secure Transactional Processing in Games",
    "weakness_id_read_only": "P817",
    "weakness": "25fc1ea6-bfee-4c4d-96da-85a2c7c31154",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "requirements",
    "created": "2017-03-17T16:18:38.089000-04:00",
    "last_updated": "2021-06-25T14:47:53.554000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T628",
    "universal_id": "773164cd-3789-4e87-87aa-10cd8ae3ef85",
    "countermeasure_name": "Test for dupes and other transactional inconsistencies in games",
    "countermeasure_solution": "Test the game for the presence of duplicates (dupes) and other inconsistencies created by unreliable transactional processing:\n\n- Try to stop the game in the middle of a transaction. For example, try to slow or break the network connection in the middle of a trade.\n    - Test for any duplicate items that appear as a result.\n\n- Try to open a session for a long time beyond a certain deadline, such as during a bet or vote. Test that the game terminates your session after that deadline.\n    - This test __fails__ if the system accepts your bet, vote, or similar submission.\n\n- Test more than one player at a time. Test that the data from one player is not visible to another player before the transaction is complete and before the data should become visible.",
    "weakness_title_read_only": "Lack of Secure Transactional Processing in Games",
    "weakness_id_read_only": "P817",
    "weakness": "25fc1ea6-bfee-4c4d-96da-85a2c7c31154",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2017-03-17T17:05:56.990000-04:00",
    "last_updated": "2021-06-25T14:47:54.401000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T629",
    "universal_id": "fbf4dac0-7490-45e0-8a50-50d21d4cf35a",
    "countermeasure_name": "Authenticate the game server to the clients before logging in",
    "countermeasure_solution": "To verify the authenticity of the game server:\n\n- Design a protocol for the interaction between the game client and the server.\n- Do not send any non-public information to the server before the client properly authenticates the server. For example, do not send a player's login credentials to the server.\n\nDepending on the capabilities of your game client device, implement authentication that uses:\n\n- __Digital signatures:__\n    - Using a combination of a public key encryption and hash function, the game client sends a challenge to the server.\n    - The server calculates a digital signature on the challenge using its private key and sends it back to the client.\n    - The client can verify the digital signature using the public key of the server already stored on the client. For more information, see the How-to for this countermeasure.\n\n- __Challenge/response with keyed hash message authentication (HMAC)__:\n    - This method requires that the client and server use the same encryption key.\n    - The client challenges the server with a random value.\n    - The server calculates HMAC on the challenge with the symmetric key and sends it back to the client.\n    - The client verifies the HMAC. For more information, see the How-to for this countermeasure.\n\n__Notes:__\n\n- HMAC is usually faster than digital signatures.\n- Since the client and server share the same key in HMAC, do not share a single key with all clients to authenticate the game server. Otherwise, a malicious client may be able to retrieve the key and use it in a fake game server.\n- Use a secure standard random number generator to generate the challenges.\n- Use only tested known implementations for digital signature generation/verification HMAC calculation. Never try to develop a homemade cryptographic algorithm or write a new implementation of a known algorithm.\n- Ensure that the algorithms and key lengths adhere to required and strict standards.\n- Use a key management system that provides features for secure generation, distribution, storage, change, and retirement/revocation of cryptographic keys.",
    "weakness_title_read_only": "Lack of Game Server Authentication",
    "weakness_id_read_only": "P824",
    "weakness": "6b9932f0-f917-4413-84c7-b9e516ab53c8",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "requirements",
    "created": "2017-03-17T18:26:49.950000-04:00",
    "last_updated": "2022-08-24T14:55:03.961000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T630",
    "universal_id": "b4734fe2-4f71-4087-bdc8-a323af273486",
    "countermeasure_name": "Use a reliable game bot detection technique",
    "countermeasure_solution": "Use the following guidelines to detect the presence of cheat bots or non-human activities:\n\n- Use recognized cheat detection systems to scan the entire memory space of the game client to look for signatures of known malicious library and cheat programs.\n- Define normal player behavior in a game precisely, and monitor their activity and performance.\n    - If an activity is __impossible for a human player__ to perform, then immediately warn or ban the player.\n    - If an activity is doable by a human, but is __considered abnormal or highly unlikely__, then throw the player a challenge to solve, such as a CAPTCHA, or report the player to the game server admin so they can verify the player and act accordingly.\n\n- Identify abnormal activities by considering player parameters:\n    - Amount of ammo, health, and virtual currency.\n    - Gameplay performance attributes, including accuracy, speed, and gameplay continuance. These parameters manifest as aiming accuracy, number of actions per hour, number of levels completed per hour, and duration of continuous game play.\n\nConsider the following notes if you use CAPTCHAs to challenge players:\n\n- Do not implement and rely on an in-house CAPTCHA system.\n- Always use the latest version of recognized CAPTCHA services.\n- Make sure the server or the CAPTCHA service does not send the correct answer to the client and does not verify the user's answer on the client side.\n- Make sure the CAPTCHA challenge procedure does not significantly impact another player's gameplay experience. For example, if suspicious activity is detected during a multiplayer game, you may challenge the suspicious player during a break or after the current round instead of interrupting everyone.",
    "weakness_title_read_only": "Lack of robust game bot detection and mitigation mechanisms",
    "weakness_id_read_only": "P825",
    "weakness": "c506417f-9a67-4df9-bd0e-2aaeedd4c512",
    "tags": "",
    "countermeasure_priority": "3",
    "phase": "requirements",
    "created": "2017-03-17T18:33:51.680000-04:00",
    "last_updated": "2021-06-25T14:47:53.996000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T631",
    "universal_id": "b9657d24-f56f-48e3-a07f-c19fe4b194bb",
    "countermeasure_name": "Do not provide game client applications with unnecessary state changes",
    "countermeasure_solution": "Use the following guidelines to prevent malicious players from accessing the game's states for an unfair advantage:\n\n- Only send each game client the necessary game states, including maps and other player information such as location. For example, do not send the location of the enemies to the game client application unless the game server determines that an individual enemy is in sight of the player according to the game's logic.\n\n- If you need to preload the excessive game state information for performance purposes, make sure the information is encrypted using a key that is only accessible to the client application. Decrypt and use the information only when necessary, such as when an enemy's location and skin are required when they are in sight of the player.",
    "weakness_title_read_only": "Game Wall and Camouflage Hacks",
    "weakness_id_read_only": "P826",
    "weakness": "bff9d403-b346-4179-a640-969594e6fe1f",
    "tags": "",
    "countermeasure_priority": "3",
    "phase": "development",
    "created": "2017-03-17T18:39:22.978000-04:00",
    "last_updated": "2021-06-25T14:47:38.767000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T632",
    "universal_id": "27032d1d-e07b-42a3-b624-3805644c3e57",
    "countermeasure_name": "Test your executables using publicly available reverse engineering tools",
    "countermeasure_solution": "Use publicly available decompilers to reverse your executables to make sure you have hardened your code against reverse engineering to a fair degree.",
    "weakness_title_read_only": "Easy-to-Reverse Executable",
    "weakness_id_read_only": "P814",
    "weakness": "d1f8b198-2f4b-4fcd-8755-cba4f64584d0",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2017-03-21T10:33:43.702000-04:00",
    "last_updated": "2021-06-25T14:47:38.842000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T633",
    "universal_id": "dfbe0ba6-b709-4c32-b933-67041cd8b291",
    "countermeasure_name": "Mitigate Deadlock and Recursion in Services",
    "countermeasure_solution": "Use the following best practices to mitigate deadlock and recursion:\n\n- Use execution flow diagrams to mitigate service deadlock and recursion, especially within the domain of single application.\n\n- At the design level, use asynchronous service-to-service calls and message buffering. These are two of the most effective anti-deadlock and anti-recursion mechanisms.",
    "weakness_title_read_only": "Service Deadlock and Recursion",
    "weakness_id_read_only": "P827",
    "weakness": "2046841c-ca26-46b3-9b20-6056c2802cc2",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "architecture-design",
    "created": "2017-03-21T15:44:20.524000-04:00",
    "last_updated": "2023-03-07T10:43:03.017000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T634",
    "universal_id": "6d40a3a0-bb12-4bf4-a600-93e0e8315c72",
    "countermeasure_name": "Replicate UDDI registry to avoid single point of failure",
    "countermeasure_solution": "Replicate the UDDI registry to prevent it from becoming the single point of failure:\n\n- Replicate several nodes from the UDDI registry.\n- Cover for the primary UDDI registry in the event of a DoS attack.",
    "weakness_title_read_only": "UDDI Registry as the Single Point of Failure",
    "weakness_id_read_only": "P828",
    "weakness": "7a3c5356-a62c-45c8-b434-fb7a7f379019",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "architecture-design",
    "created": "2017-03-21T16:47:20.103000-04:00",
    "last_updated": "2021-06-25T14:47:39.553000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T635",
    "universal_id": "0657eafa-99de-4d0f-ae90-ab0ad7d361ee",
    "countermeasure_name": "Reject profane and indecent content in games",
    "countermeasure_solution": "Follow these guidelines to reduce the chance of publishing any profane material through a game application:\n\n- Research applicable laws and understand the requirements of the content-rating that the software is published under.\n- Develop profanity filters for chatrooms based on the above requirements.\n- Develop content filters for any images, audio files and artwork that are uploaded by users.\n- Prevent profanity in usernames or any similar IDs by restricting the use of selected words and phrases.\n- Develop features that allow users to submit complaints or notes about the profane material.\n\n__Note:__ You may also need to devise operational procedures for the control and removal of profane material.",
    "weakness_title_read_only": "Liability Issues Related to Obscenity and Profanity in Games",
    "weakness_id_read_only": "P829",
    "weakness": "fdfb725c-bca2-40fa-a23e-7c28e03b23a8",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "requirements",
    "created": "2017-03-24T16:46:53.546000-04:00",
    "last_updated": "2021-06-25T14:47:59.941000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T636",
    "universal_id": "2f910bf9-a905-4a0c-9f38-82c9add22bef",
    "countermeasure_name": "Test that the game rejects profane and indecent content",
    "countermeasure_solution": "Follow these guidelines to test that the software has adequate features to reject indecent content:\n\n- Identify the type and extent of profanity that needs to be filtered based on applicable laws and ratings.\n\n- Try to post vulgar or obscene words and phrases in chat rooms or public forums.\n    - This test __fails__ if the content is posted.\n\n- Try to choose a username with indecent words in it.\n    - This test __fails__ if the username can be created.\n\n- Identify other places that users can upload content, and test that (if necessary) filters are developed to restrict the uploading of inappropriate content.\n\n- If necessary and required by law, test that the software offers features for informing the operators of the existence of profane and indecent content. For example, include a feature for users to report inappropriate content posted by other users.",
    "weakness_title_read_only": "Liability Issues Related to Obscenity and Profanity in Games",
    "weakness_id_read_only": "P829",
    "weakness": "fdfb725c-bca2-40fa-a23e-7c28e03b23a8",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2017-03-24T16:52:08.788000-04:00",
    "last_updated": "2021-06-25T14:48:00.634000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T637",
    "universal_id": "3a5e61b7-af56-4c8e-9c8c-c04fef88ee30",
    "countermeasure_name": "Protect against network disruption and proxy attacks",
    "countermeasure_solution": "Follow these guidelines to detect and mitigate any network disruption and packet manipulation attacks:\n\n- Monitor the rate of game commands received from a player. Set a reasonable limit depending on the type of game.\n\n- Implement a server-side heuristics-based detection mechanism to flag repeated packet delay and invalid client data as possible cheating attempts.\n\n- On the server side, complete a __transaction__ only if __all transaction steps__ are validated and taken in the expected order.\n    - __Transactions__ include game actions or virtual currency transfers.\n    - __All transaction steps__ can be thought of as a batch of individual commands forming the transaction. For example, a gambling cheater should not be able to send a bet command after the betting window is closed.\n\n- Verify the validity and integrity of the received messages on the server.\n    - Do not trust the data sent from a game client by default. For example, if a player claims a certain amount of virtual currency, verify the amount with server data and respond accordingly.\n\n- Invalidate authorization tokens once used, and reject them next time.",
    "weakness_title_read_only": "Network disruption and proxy attacks on games",
    "weakness_id_read_only": "P830",
    "weakness": "decd9214-98b9-4aa1-8612-a5482d05768d",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "requirements",
    "created": "2017-03-24T17:09:06.379000-04:00",
    "last_updated": "2021-06-25T14:47:54.376000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T638",
    "universal_id": "437bb339-a73f-4889-be8e-13016767437c",
    "countermeasure_name": "Protect critical game variables in memory",
    "countermeasure_solution": "Follow these instructions to protect critical game variables against tampering:\n\n- Use recognized obfuscation methods and tools to conceal sensitive game variables. \n\n- Use recognized anti-debug and scanner detection tools to protect against, or reduce the possibility of, attaching a debugger to the game's executables, dumping the memory, and turning off the Address Space Layout Randomization (ASLR) process.\n\n- Use recognized game engine emulator detection methods to prevent attackers from running game executables using game engine emulator. Otherwise, the attacker may access critical game variables if the game relies on the game engine's security mechanisms.\n\n- Periodically verify the integrity of the game engine's API function bodies.\n\n- Perform integrity checks on game variables on the server side.\n\n- Use obfuscation techniques such as \"differential storage\" to split game variables into two separate values. This makes it harder for the attacker to locate the variable and modify it to their advantage. For example, instead of storing an ammo amount as is in a single variable, you can XOR (exclusive or) it with a random value and keep the result along with the random value in the memory, neither of which are useful to the attacker.",
    "weakness_title_read_only": "Game client's memory scanning and manipulation attacks",
    "weakness_id_read_only": "P831",
    "weakness": "32c4a989-47ae-4a04-bf53-78a753d4e203",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "requirements",
    "created": "2017-03-24T17:13:03.217000-04:00",
    "last_updated": "2021-06-25T14:47:46.855000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T639",
    "universal_id": "9b3b3eaa-21e0-46d6-b566-6af11b46c768",
    "countermeasure_name": "Use secure functions to load DLL files",
    "countermeasure_solution": "Use the following guidelines for secure functions that load DLL files:\n\n- Never call the function `SearchPath()` to identify the location of the DLL when using the `LoadLibrary()` family of functions. Instead, specify the DLL location by calling [SetDllDirectory()](http://msdn.microsoft.com/en-us/library/windows/desktop/ms686203%28v=vs.85%29.aspx) with the required path.\n- Do this before calling `LoadLibrary()`.\n- Additional DLL locations can be specified with the [AddDllDirectory()](http://msdn.microsoft.com/en-us/library/windows/desktop/hh310513%28v=vs.85%29.aspx) function.\n\nFor more information, see the Microsoft documentation on [LoadLibrary](http://msdn.microsoft.com/en-us/library/windows/desktop/ms684175%28v=vs.85%29.aspx) and [LoadLibraryEx](http://msdn.microsoft.com/en-us/library/windows/desktop/ms684179%28v=vs.85%29.aspx).",
    "weakness_title_read_only": "DLL Injection",
    "weakness_id_read_only": "P832",
    "weakness": "69fb5841-7fba-46c3-ba74-83ff5fb01b18",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "development",
    "created": "2017-03-30T18:18:16.642000-04:00",
    "last_updated": "2021-06-25T14:47:53.427000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T640",
    "universal_id": "9dfcba4f-4084-42c1-827d-2d3ab7a8f2e7",
    "countermeasure_name": "Design and implement some rootkit detection techniques",
    "countermeasure_solution": "Take advantage of existing rootkit scanning tools that are available.\n\n- A popular free scanner for Windows systems is the __RootkitRevealer__ from Sysinternal. It works by comparing the services running at the Windows API level with what's showing up at the raw data level on the computer's hard drive (read more [here](https://technet.microsoft.com/en-us/sysinternals/rootkitrevealer.aspx)).\n- There are also various other rootkit scanners including BlackLight, Sophos Anti-Rootkit, and Rootkit Hook Analyzer. You can find more options on the Internet. Choose one that suits your needs.\n\n- Rootkit detection is difficult, and there are no commercial products available that can find and remove all types of rootkits. Some famous rootkit detection tools can use various techniques such as behavioral-based methods that look for strange behavior on a system, signature scanning, and memory dump analysis to reduce the probability of rootkit infection.",
    "weakness_title_read_only": "Not Checking Kernel Integrity",
    "weakness_id_read_only": "P833",
    "weakness": "6035efaa-5bc4-457f-86da-4d86fe26d846",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "architecture-design",
    "created": "2017-04-03T13:26:43.107000-04:00",
    "last_updated": "2023-03-17T17:46:48.290000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T641",
    "universal_id": "0edbb2d2-64e2-43ed-9fa7-d76fa3d27192",
    "countermeasure_name": "Limit resource consumption of WebSocket connections",
    "countermeasure_solution": "A malicious web client can exhaust a WebSocket server's recourses by initiating a **large number of long-lived connections**. The possibility of denial of service (DoS) attacks with WebSockets is higher than with HTTP since WebSockets usually have higher connection time limits.\n\nFollow these instructions according to your server's capabilities and application's requirements to protect your WebSocket connection against DoS attacks:\n\n- Follow the general guidelines from [T260](/library/tasks/T260/).\n- Limit the number of concurrent connections per account.\n- Set a limit on the size of messages.\n- Limit the rate of WebSocket initial handshakes for each account/IP.\n    - Since opening (initial handshake) and closing a WebSocket connection usually require more resources than keeping the connection open, a malicious client can exhaust a server's resources with a high rate of connection initialization-destruction without exceeding the limit on the number of concurrent connections.\n- Close connections that write data too infrequently, such as when delays are abnormal for your application.",
    "weakness_title_read_only": "Uncontrolled Resource Consumption (Resource Exhaustion)",
    "weakness_id_read_only": "P293",
    "weakness": "1bee9747-5d60-43f1-8e0f-e261388a5c25",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "requirements",
    "created": "2017-04-10T15:34:21.788000-04:00",
    "last_updated": "2021-06-25T14:47:39.874000-04:00",
    "custom": "False",
    "rules": "b814b6b6-aa92-47ff-8d8b-ab1e72a9858d",
    "rules_read_only": "A793"
  },
  {
    "countermeasure_id": "T642",
    "universal_id": "3153023a-47bc-4a22-b428-ac153ba850cc",
    "countermeasure_name": "Verify limits on resource consumption of WebSocket connections",
    "countermeasure_solution": "Use the following guidelines for verifying limits on resource consumption with WebSocket connections. According to your server's capabilities and application's requirements, check the WebSocket configurations and properties on your web server to verify that:\n\n- Each account is allowed to maintain only a limited number of simultaneous connections.\n- There is a limit on the size of each WebSocket message.\n- The rate of WebSocket initial handshakes is properly limited.\n- The server is set to terminate idle connections after a certain timeout period.",
    "weakness_title_read_only": "Uncontrolled Resource Consumption (Resource Exhaustion)",
    "weakness_id_read_only": "P293",
    "weakness": "1bee9747-5d60-43f1-8e0f-e261388a5c25",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2017-04-10T16:27:05.005000-04:00",
    "last_updated": "2021-06-25T14:47:41.073000-04:00",
    "custom": "False",
    "rules": "b814b6b6-aa92-47ff-8d8b-ab1e72a9858d",
    "rules_read_only": "A793"
  },
  {
    "countermeasure_id": "T643",
    "universal_id": "73f165b4-5e8f-4f98-9200-99ce494e28ee",
    "countermeasure_name": "Implement certificate pinning in a hostile environment",
    "countermeasure_solution": "Adopt certificate or public key pinning to build a security sensitive communication medium resilient to any form of the man-in-the-middle attack in a hostile environment.\n\nStore and ship a hard copy of certification or public key in the client application. As a part of TLS connection initiation, the retrieved certification from connection has to match against the embedded certification in the application's bundle while trust chain validation is taking place.\n\nCertificate Pinning can occur at a different depth of the trust chain. In a case of any change to the pinned certificate due to security concerns (e.g. weak encryption keys), recompilation or update of the installed client application is necessary.",
    "weakness_title_read_only": "Lack of Certificate/Public Key Pinning",
    "weakness_id_read_only": "P834",
    "weakness": "86cc6de5-daca-4e45-8c03-7c1560702a23",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "requirements",
    "created": "2017-04-11T13:24:24.691000-04:00",
    "last_updated": "2021-06-25T14:47:44.631000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T644",
    "universal_id": "15296c05-8b56-4ed0-8607-2c7360acb46a",
    "countermeasure_name": "Verify that TLS certificate pinning is implemented for iOS application",
    "countermeasure_solution": "Use the following guidelines for verifying that you implement TLS certificate pinning for iOS applications:\n\nInspect the code (within the `URLSession:didReceiveChallenge:completionHandler:delegate` method) and verify that the application validates a server's certificate against certificates locally stored in the application's bundle.",
    "weakness_title_read_only": "Lack of Certificate/Public Key Pinning",
    "weakness_id_read_only": "P834",
    "weakness": "86cc6de5-daca-4e45-8c03-7c1560702a23",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2017-04-11T13:30:00.283000-04:00",
    "last_updated": "2021-06-25T14:47:44.705000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T645",
    "universal_id": "0e3cfa1f-9030-4a55-8eea-4fff5aad0945",
    "countermeasure_name": "Check for authentication before handling iOS Siri intent",
    "countermeasure_solution": "Upon detection of the type of intent to be handled in intent extension (drive from `INExtension`), check if the user is authenticated before returning the appropriate intent handler. Otherwise, communicate the authentication status to the user via a custom UI feedback.",
    "weakness_title_read_only": "SiriKit unauthorized intent handling",
    "weakness_id_read_only": "P835",
    "weakness": "ce911f51-ff9a-43ed-83c6-4513bae2c5db",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "development",
    "created": "2017-04-11T13:43:38.999000-04:00",
    "last_updated": "2021-06-25T14:47:49.925000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T646",
    "universal_id": "7cfba389-bbd0-4b91-88f0-ebd02a01a426",
    "countermeasure_name": "Verify that your iOS application checks for authentication before handling Siri intent",
    "countermeasure_solution": "Use the following guidelines for verifying that your iOS application checks for authentication before handling Siri intents:\n\nInspect the code and find handler methods. If a handler method returns a sensitive intent handler without checking for authentication and communicating the authentication status (if necessary) to the user, this test __fails__.",
    "weakness_title_read_only": "SiriKit unauthorized intent handling",
    "weakness_id_read_only": "P835",
    "weakness": "ce911f51-ff9a-43ed-83c6-4513bae2c5db",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2017-04-11T13:45:03.159000-04:00",
    "last_updated": "2021-06-25T14:47:49.065000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T647",
    "universal_id": "5b547ca6-ceb2-4c90-b2c1-9f1c42d5eef2",
    "countermeasure_name": "Verify that game client authenticates the server before logging in",
    "countermeasure_solution": "Use the following guidelines for verifying that the game client authenticates the server before logging in:\n\nInspect the client application's code and verify that it authenticates the game server before submitting the user credentials and sensitive information.",
    "weakness_title_read_only": "Lack of Game Server Authentication",
    "weakness_id_read_only": "P824",
    "weakness": "6b9932f0-f917-4413-84c7-b9e516ab53c8",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2017-04-11T16:13:56.339000-04:00",
    "last_updated": "2021-06-25T14:47:42.355000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T648",
    "universal_id": "4315b52b-3d9a-49c2-a84f-44b6f70cb4c8",
    "countermeasure_name": "Verify that a reliable game bot detection technique is implemented",
    "countermeasure_solution": "To verify implementation and performance of a bot detection technique:\n\n- Run the game client and a known cheat program side by side on a test machine. If you are able to use the cheat program to have an unfair advantage in the game without being warned or banned, this test fails.\n- If your bot detection technique works based on any abnormal player behavior:\n    - Run a cheat program to play the game and perform an unusual activity that is not doable by a human.\n    - If the game continues without warning, banning, flagging, or challenging the player, this test __fails__.\n    - If the detection technique challenges the cheat bot with a non-standard or weak CAPTCHA challenge (which is easy to be solved by bots), this test __fails__.",
    "weakness_title_read_only": "Lack of robust game bot detection and mitigation mechanisms",
    "weakness_id_read_only": "P825",
    "weakness": "c506417f-9a67-4df9-bd0e-2aaeedd4c512",
    "tags": "",
    "countermeasure_priority": "3",
    "phase": "testing",
    "created": "2017-04-11T16:43:52.030000-04:00",
    "last_updated": "2021-06-25T14:47:54.672000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T649",
    "universal_id": "6254689b-22dc-4bc0-85c9-5eb9627dd5ed",
    "countermeasure_name": "Verify that game server does not send unnecessary game state information to clients",
    "countermeasure_solution": "Use the following guidelines for verifying that a game server does not send unnecessary game state information to clients:\n\nVerify that the game server only sends the game state information necessary for each player to know. If excessive data is sent to the game client applications, this test __fails__.",
    "weakness_title_read_only": "Game Wall and Camouflage Hacks",
    "weakness_id_read_only": "P826",
    "weakness": "bff9d403-b346-4179-a640-969594e6fe1f",
    "tags": "",
    "countermeasure_priority": "3",
    "phase": "testing",
    "created": "2017-04-11T17:20:59.726000-04:00",
    "last_updated": "2021-06-25T14:47:38.579000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T650",
    "universal_id": "bb4a464a-a456-481d-b653-0e58304533e2",
    "countermeasure_name": "Verify that the game server is protected against network disruption and proxy attacks",
    "countermeasure_solution": "To verify proper implementation of defense techniques against network attacks, verify that the game server:\n\n- detects an input command rate higher than normal (a rate determined based on the type of the game).\n- detects and flags unusual network packet delays.\n- executes the commands received from a remote client in the correct order, not in the order received.\n- validates the data, commands, and claims received from the clients before taking an action.\n- invalidates authorization tokens after the first use and rejects them in the future.",
    "weakness_title_read_only": "Network disruption and proxy attacks on games",
    "weakness_id_read_only": "P830",
    "weakness": "decd9214-98b9-4aa1-8612-a5482d05768d",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2017-04-12T15:13:58.631000-04:00",
    "last_updated": "2021-06-25T14:47:53.485000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T651",
    "universal_id": "5d5569f9-1486-4852-9f94-81b19502eec2",
    "countermeasure_name": "Verify that critical game variables in memory are protected",
    "countermeasure_solution": "Use the following guidelines for verifying the protection of critical game variables in memory:\n\nIf you can use any of the existing debugger or memory scanner tools to read or manipulate game application's internal variables (e.g. variables storing game state or player properties), this test fails.\n\nIf applicable, try running the game application on an unofficial game engine emulator. If the application runs without any halting or warning, this test __fails__.",
    "weakness_title_read_only": "Game client's memory scanning and manipulation attacks",
    "weakness_id_read_only": "P831",
    "weakness": "32c4a989-47ae-4a04-bf53-78a753d4e203",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2017-04-12T16:14:31.443000-04:00",
    "last_updated": "2021-06-25T14:47:48.811000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T652",
    "universal_id": "d7c705a8-da21-4a7a-81fc-21ded1c649c8",
    "countermeasure_name": "Test that secure functions are used to load DLL files",
    "countermeasure_solution": "Use the following guidelines for verifying that secure functions are used to load DLL files:\n\nVerify that the function `SearchPath()` is **not** used to identify the location of a DLL when loading libraries.",
    "weakness_title_read_only": "DLL Injection",
    "weakness_id_read_only": "P832",
    "weakness": "69fb5841-7fba-46c3-ba74-83ff5fb01b18",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2017-04-12T16:24:35.031000-04:00",
    "last_updated": "2021-06-25T14:47:54.796000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T655",
    "universal_id": "e2a08859-74cf-43e1-bc68-56c948396de1",
    "countermeasure_name": "Test that your application can detect debuggers",
    "countermeasure_solution": "Use the following guidelines for testing that your application can detect debuggers:\n\nUse an open source or an available debugger to debug your application and test that your anti-debugger module can detect the presence of the debugger and changes your application's behavior according to the requirements.",
    "weakness_title_read_only": "Easy-to-Reverse Executable",
    "weakness_id_read_only": "P814",
    "weakness": "d1f8b198-2f4b-4fcd-8755-cba4f64584d0",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2017-04-30T01:04:50.286000-04:00",
    "last_updated": "2021-06-25T14:47:38.828000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T656",
    "universal_id": "8ffc9e22-b697-4fc5-9606-230914daf550",
    "countermeasure_name": "Test that your Android application checks for rooted devices and security/compatibility of the environment",
    "countermeasure_solution": "Follow these steps to test that your application checks the runtime parameters and security requirements of the environment:\n\n- Install your application on a rooted Android device and test if the application detects it.\n- Run the application in an emulator and test that your application can detect the emulator.\n- Run the application in a debuggable mode, and test if the application detects it.",
    "weakness_title_read_only": "Not Checking Boot/Platform Integrity",
    "weakness_id_read_only": "P809",
    "weakness": "bedc2920-f931-4842-bbdd-1fc8062d9042",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2017-04-30T01:15:15.146000-04:00",
    "last_updated": "2021-06-25T14:47:39.377000-04:00",
    "custom": "False",
    "rules": "64e2a4e5-efe8-4a19-8b5f-b835d963a40c",
    "rules_read_only": "A715"
  },
  {
    "countermeasure_id": "T657",
    "universal_id": "09645a49-f7d7-4b4a-a9d3-88dc28116548",
    "countermeasure_name": "Test that your mobile application checks its integrity and installation source",
    "countermeasure_solution": "Use the following guidelines for testing that your mobile app checks its integrity and installation source:\n\n1. Install your application on a mobile device without using the default application store. Test that your application detects that it is not installed from the default source and changes its behavior according to the requirements.\n2. Change the application slightly and create a new installation file. Install the application on a mobile device, and try to run it. If the application runs normally and there are no runtime integrity check errors, this test fails.",
    "weakness_title_read_only": "Missing support for integrity checks on important data and configuration files",
    "weakness_id_read_only": "P752",
    "weakness": "059f9863-6436-4841-b9fd-8b9febb4a1f6",
    "tags": "",
    "countermeasure_priority": "3",
    "phase": "testing",
    "created": "2017-04-30T01:31:03.768000-04:00",
    "last_updated": "2021-06-25T14:47:39.004000-04:00",
    "custom": "False",
    "rules": "64e2a4e5-efe8-4a19-8b5f-b835d963a40c;3657f540-0b47-49b3-9a4d-69412ec692d6",
    "rules_read_only": "A715;A714"
  },
  {
    "countermeasure_id": "T658",
    "universal_id": "2a0cfbd2-af61-490d-854d-b0e54ef03a2e",
    "countermeasure_name": "Test that your application detects common rootkits",
    "countermeasure_solution": "Use the following guidelines for testing that your app detects common rootkits:\n\nInstall a common rootkit on your test device or on a virtual machine and then install your application on the same device/VM. Test that your scanning tool can detect the presence of the known rootkit and can change your application's behavior according to the requirements.",
    "weakness_title_read_only": "Not Checking Kernel Integrity",
    "weakness_id_read_only": "P833",
    "weakness": "6035efaa-5bc4-457f-86da-4d86fe26d846",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2017-04-30T01:37:39.919000-04:00",
    "last_updated": "2021-06-25T14:47:39.429000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T659",
    "universal_id": "24c1f144-3d9d-435b-8dd4-9c44b551bcd4",
    "countermeasure_name": "Test that user-supplied inputs are validated before being passed to OS commands",
    "countermeasure_solution": "Follow these steps to test that invalid user input is not passed to OS-level commands:\n\n- Identify all places where user-supplied input (such as forms, HTTP headers, cookies, URL parameters) are passed as parameters to OS-level commands such as setting firewall rules, configuring service settings, network interface configuration.\n- For each instance, identify the acceptance criteria of the input value (such as types of the input, allowed characters, length).\n- Try to pass an invalid value (such as a string where a number is expected, over-sized string, forbidden special characters). If your application does not properly reject the value, this test __fails__.",
    "weakness_title_read_only": "Improper Neutralization of Special Elements used in a Command ('Command Injection')",
    "weakness_id_read_only": "P610",
    "weakness": "13c3474a-60d9-4769-b55b-1f7ba6b19a55",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "testing",
    "created": "2017-05-10T19:03:21.635000-04:00",
    "last_updated": "2021-06-25T14:47:53.935000-04:00",
    "custom": "False",
    "rules": "2755cb65-8e21-4b7c-9c1b-e084d2d31414",
    "rules_read_only": "A9"
  },
  {
    "countermeasure_id": "T663",
    "universal_id": "a51c3f6b-0d7c-4cab-a67d-3798da4e0a1f",
    "countermeasure_name": "Avoid the use of the 'root' account (AWS)",
    "countermeasure_solution": "Avoid the use of the \"root\" account and remove all \"Access Keys\" associated with the root account. Amazon Web Services (AWS) access keys provide programmatic access to a given AWS account.\n\nThe root account is the most privileged AWS account, which has unrestricted access to all resources in the AWS account. Minimizing the use of this account and adopting the principle of least privilege for access management will reduce the risk of accidental changes and unintended disclosure of highly privileged credentials.",
    "weakness_title_read_only": "Running With Unnecessary Privileges",
    "weakness_id_read_only": "P150",
    "weakness": "07093262-3118-48ab-911f-86160f3ae8e2",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2017-06-12T09:21:30.101000-04:00",
    "last_updated": "2022-06-03T03:55:07.201000-04:00",
    "custom": "False",
    "rules": "a5bb6d04-111c-4fd1-ab43-b8aed799e105 AND cab80cea-1a20-433f-b78c-783b816b8d33",
    "rules_read_only": "A1159 AND A739"
  },
  {
    "countermeasure_id": "T664",
    "universal_id": "19ab8bed-056a-4ade-9ab7-051e5edc9300",
    "countermeasure_name": "Enable multi-factor authentication (MFA) for all IAM users that have a console password (AWS)",
    "countermeasure_solution": "Enable Multi-Factor Authentication (MFA) for all accounts that have a console password. MFA adds an extra layer of protection on top of a username and password. With MFA enabled, when a user signs in to an Amazon Web Services (AWS) website, they will be prompted for their username and password as well as for an authentication code from their AWS MFA device.\n\nEnabling MFA provides increased security for console access as it requires the authenticating principal to possess a device that emits a time-sensitive key and have knowledge of a credential.",
    "weakness_title_read_only": "Single-factor Authentication",
    "weakness_id_read_only": "P205",
    "weakness": "a7e94b75-c246-4c06-89de-710f3f7d34aa",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2017-06-12T09:21:30.186000-04:00",
    "last_updated": "2022-06-03T03:55:07.230000-04:00",
    "custom": "False",
    "rules": "a5bb6d04-111c-4fd1-ab43-b8aed799e105 AND cab80cea-1a20-433f-b78c-783b816b8d33",
    "rules_read_only": "A1159 AND A739"
  },
  {
    "countermeasure_id": "T665",
    "universal_id": "9e47d766-e387-4f0a-ac08-3e4fc8afe627",
    "countermeasure_name": "Disable credentials unused for 90 days or greater (AWS)",
    "countermeasure_solution": "Deactivate all credentials (passwords or access keys) that have been unused in 90 or greater days.\n\nDisabling or removing unnecessary credentials will reduce the window of opportunity for credentials associated with a compromised or abandoned account to be used.",
    "weakness_title_read_only": "Not disabling inactive user accounts (AWS)",
    "weakness_id_read_only": "P840",
    "weakness": "ad9db827-a05d-44bf-a8fb-49de147b3650",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2017-06-12T09:21:30.216000-04:00",
    "last_updated": "2023-03-17T17:07:56.905000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T666",
    "universal_id": "8175b25a-4bbb-4631-91be-541cdb8afc72",
    "countermeasure_name": "Rotate access keys every 90 days or less (AWS)",
    "countermeasure_solution": "Rotate access keys regularly. Access keys consist of an access key ID and secret access key, which are used to sign programmatic requests that you make to AWS. AWS users need their own access keys to make programmatic calls to AWS from the AWS Command Line Interface (AWS CLI), Tools for Windows PowerShell, the AWS SDKs, or direct HTTP calls using the APIs for individual AWS services.\n\nRotating access keys will reduce the window of opportunity for an access key that is associated with a compromised or terminated account to be used.",
    "weakness_title_read_only": "Password Aging with Long Expiration",
    "weakness_id_read_only": "P161",
    "weakness": "dcb04a77-f85b-410d-8431-e105bc816785",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2017-06-12T09:21:30.245000-04:00",
    "last_updated": "2023-03-07T10:36:57.409000-05:00",
    "custom": "False",
    "rules": "a5bb6d04-111c-4fd1-ab43-b8aed799e105 AND cab80cea-1a20-433f-b78c-783b816b8d33",
    "rules_read_only": "A1159 AND A739"
  },
  {
    "countermeasure_id": "T667",
    "universal_id": "44199731-deaf-42de-a81f-619f119186df",
    "countermeasure_name": "Apply minimum IAM password policy requirements (AWS)",
    "countermeasure_solution": "Set a password complexity policy to increase account resiliency against brute force login attempts. Password policies are, in part, used to enforce password complexity requirements. IAM password policies can be used to ensure passwords are comprised of different character sets or are at least a given length. The policies can also be used to prevent the reuse of a given password by the same user or to require passwords to be rotated or expired after a given number of days.\n\n- It is recommended that the password policy:\n    - requires at least one uppercase letter.\n    - requires at least one lowercase letter.\n    - requires at least one symbol.\n    - requires at least one number.\n    - requires a minimum password length of 14.\n    - prevents the reuse of passwords.\n    - expires passwords after 90 days or less.",
    "weakness_title_read_only": "Password Requirements Are Weak",
    "weakness_id_read_only": "P408",
    "weakness": "e4138dde-9a0c-43d1-b721-ab4945beaaf6",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2017-06-12T09:21:30.290000-04:00",
    "last_updated": "2022-06-03T03:55:07.306000-04:00",
    "custom": "False",
    "rules": "a5bb6d04-111c-4fd1-ab43-b8aed799e105 AND cab80cea-1a20-433f-b78c-783b816b8d33",
    "rules_read_only": "A1159 AND A739"
  },
  {
    "countermeasure_id": "T671",
    "universal_id": "b25df4c6-f643-47e9-a722-3be9741fc5e9",
    "countermeasure_name": "Enable multi-factor authentication for the 'root' account (AWS)",
    "countermeasure_solution": "Enable multi-factor authentication (MFA) for the \"root\" account. The root account is the most privileged user on an AWS account. MFA adds an extra layer of protection on top of a username and password. With MFA enabled, when a user signs in to an AWS website, they will be prompted for their username and password as well as for an authentication code from their AWS MFA device.\n\nEnabling MFA provides increased security for console access as it requires the authenticating principal to possess a device that emits a time-sensitive key and have knowledge of a credential.\n\n**Note:**\n\nWhen virtual MFA is used for root accounts, it is recommended that the device used is NOT a personal device, but rather a dedicated mobile device (tablet or phone) that is managed to be kept charged and secured independent of any individual personal devices (\"non-personal virtual MFA\"). This reduces the risks of losing access to the MFA due to device loss, device trade-in or if the individual owning the device is no longer employed at the company.",
    "weakness_title_read_only": "Single-factor Authentication",
    "weakness_id_read_only": "P205",
    "weakness": "a7e94b75-c246-4c06-89de-710f3f7d34aa",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2017-06-12T09:21:30.407000-04:00",
    "last_updated": "2022-06-03T03:55:07.331000-04:00",
    "custom": "False",
    "rules": "a5bb6d04-111c-4fd1-ab43-b8aed799e105 AND cab80cea-1a20-433f-b78c-783b816b8d33",
    "rules_read_only": "A1159 AND A739"
  },
  {
    "countermeasure_id": "T672",
    "universal_id": "d90e315b-6a58-419b-886f-d5c879984365",
    "countermeasure_name": "Register security questions in the AWS account (AWS)",
    "countermeasure_solution": "Establish security questions for your AWS accounts. The AWS support portal allows account owners to establish security questions that can be used to authenticate individuals calling AWS customer service for support.\n\nDuring events in which the root password is no longer accessible or the MFA token associated with root is lost/destroyed, it is possible to recover root login access through authentication using the secret questions and the associated answers.",
    "weakness_title_read_only": "No backup of passwords and no secondary ways of accessing accounts (AWS)",
    "weakness_id_read_only": "P847",
    "weakness": "1bdeb1d9-5ba6-4602-b63c-2d77c25038e2",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2017-06-12T09:21:30.436000-04:00",
    "last_updated": "2022-06-03T03:55:07.356000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T673",
    "universal_id": "7d664478-3a3c-4841-adde-b2f77b45ed79",
    "countermeasure_name": "Attach IAM policies only to groups or roles (AWS)",
    "countermeasure_solution": "Apply IAM policies directly to groups and roles instead of users. \n\nIAM policies are the means by which privileges are granted to users, groups, or roles. By default, IAM users, groups, and roles have no access to AWS resources.",
    "weakness_title_read_only": "Improper Access Control (Authorization)",
    "weakness_id_read_only": "P182",
    "weakness": "e488cdc5-3c91-4d2b-bcec-5c651b000d8b",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2017-06-12T09:21:30.463000-04:00",
    "last_updated": "2022-06-03T03:55:07.380000-04:00",
    "custom": "False",
    "rules": "a5bb6d04-111c-4fd1-ab43-b8aed799e105 AND cab80cea-1a20-433f-b78c-783b816b8d33",
    "rules_read_only": "A1159 AND A739"
  },
  {
    "countermeasure_id": "T676",
    "universal_id": "2614dd46-cf11-4762-83e3-63780a8b10c4",
    "countermeasure_name": "Maintain current contact details (AWS)",
    "countermeasure_solution": "Update contact email and telephone details for AWS accounts and map to more than one individual in your organization:\n\n- Set email contact details that point to a mail alias which forwards an email to multiple individuals within the organization as circumstances may arise where that a person is unavailable.\n- Where feasible, set phone contact details that point to a PABX hunt group or another call-forwarding system.",
    "weakness_title_read_only": "Improper contact details associated to account (AWS)",
    "weakness_id_read_only": "P856",
    "weakness": "eb491cd4-d1b1-469b-b0ae-758f08f10923",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2017-06-12T09:21:30.562000-04:00",
    "last_updated": "2022-06-03T03:55:07.404000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T677",
    "universal_id": "f12f1a77-40b2-48df-8b40-e9f1bae63dda",
    "countermeasure_name": "Register security contact information (AWS)",
    "countermeasure_solution": "Register the contact information for the account's security team in your AWS account.\n\n**Note:** Consider specifying an internal email distribution list to ensure emails are regularly monitored by more than one individual.",
    "weakness_title_read_only": "Lack of registered security contact information (AWS)",
    "weakness_id_read_only": "P857",
    "weakness": "87be5979-a3a4-4e5f-837b-5cc0d31278f3",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2017-06-12T09:21:30.593000-04:00",
    "last_updated": "2022-06-03T03:55:07.428000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T678",
    "universal_id": "e1e9260e-1055-4907-8a56-d7c489561ae1",
    "countermeasure_name": "Create a support role to manage incidents with AWS Support (AWS)",
    "countermeasure_solution": "Create an IAM Role to allow authorized users to manage incidents with AWS Support.\n\nAWS provides a support center that can be used for incident notification and response, as well as technical support and customer services.",
    "weakness_title_read_only": "No support role or insufficient permissions to manage incidents (AWS)",
    "weakness_id_read_only": "P844",
    "weakness": "b0d8f42d-7269-400e-8744-91d34d7d1796",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2017-06-12T09:21:30.620000-04:00",
    "last_updated": "2022-06-03T03:55:07.452000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T679",
    "universal_id": "d41879a5-a678-49a9-96a4-68c1f0145f97",
    "countermeasure_name": "Do not set up access keys during initial IAM user setup (AWS)",
    "countermeasure_solution": "Do not setup access keys during initial user setup for all IAM users that have a console password.\n\n**Note:** Even if it is known the user will need access keys, require them to create the keys themselves or put in a support ticket to have them created as a separate step from user creation.\n\nRequiring that additional steps be taken by the user after their profile has been created will give a stronger indication of intent that access keys are:\n\n1. Necessary for their work and, \n2. Once an access key is established on an account, that key may be used somewhere in the organization.",
    "weakness_title_read_only": "Generating unnecessary access keys during initial IAM user setup (AWS)",
    "weakness_id_read_only": "P845",
    "weakness": "6b6e9c04-b51c-4700-a240-31cb6fd2b769",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2017-06-12T09:21:30.649000-04:00",
    "last_updated": "2022-06-03T03:55:07.477000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T680",
    "universal_id": "fd670828-a2f0-4a42-b2c4-a0f3c595629b",
    "countermeasure_name": "Do not create IAM policies that allow full administrative privileges (AWS)",
    "countermeasure_solution": "Follow these best practices:\n\n1. Always grant _least privilege_.\n\n    It means granting only the permissions required to perform a task. Determine what users need to do and then craft policies for them that let the users perform _only_ those tasks, instead of allowing full administrative privileges.\n\n2. Always start with a minimum set of permissions and grant additional permissions as necessary, rather than starting with permissions that are too lenient and then trying to tighten them later.\n\n3. Remove IAM policies that have a statement with `\"Effect\": \"Allow\"` and `\"Action\": \"*\"` over `\"Resource\": \"*\"`.\n\n    IAM policies are the means by which privileges are granted to users, groups, or roles.",
    "weakness_title_read_only": "Running With Unnecessary Privileges",
    "weakness_id_read_only": "P150",
    "weakness": "07093262-3118-48ab-911f-86160f3ae8e2",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2017-06-12T09:21:30.679000-04:00",
    "last_updated": "2022-06-03T03:55:07.501000-04:00",
    "custom": "False",
    "rules": "a5bb6d04-111c-4fd1-ab43-b8aed799e105 AND cab80cea-1a20-433f-b78c-783b816b8d33",
    "rules_read_only": "A1159 AND A739"
  },
  {
    "countermeasure_id": "T681",
    "universal_id": "04c04c81-4d52-4bf4-8390-e3688bdd8d1a",
    "countermeasure_name": "Enable CloudTrail in all regions (AWS)",
    "countermeasure_solution": "Enable *CloudTrail* for **all regions**.\n\n###What is CloudTrail?\n\nAWS CloudTrail is a web service that records AWS API calls for your account and delivers log files to you. The recorded information includes the identity of the API caller, the time of the API call, the source IP address of the API caller, the request parameters, and the response elements returned by the AWS service. CloudTrail provides a history of AWS API calls for an account, including API calls made via the Management Console, SDKs, command line tools, and higher-level AWS services (such as CloudFormation).",
    "weakness_title_read_only": "Lack of CloudTrail logs for all regions (AWS)",
    "weakness_id_read_only": "P846",
    "weakness": "f7463aa3-04a7-4ea1-aaab-e71d9fc7ba31",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2017-06-12T09:21:30.710000-04:00",
    "last_updated": "2022-06-03T03:55:07.528000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T682",
    "universal_id": "cba0ad9c-39f3-4b9c-8507-d6e5209e7993",
    "countermeasure_name": "Make S3 bucket CloudTrail logs publicly inaccessible (AWS)",
    "countermeasure_solution": "CloudTrail logs a record of every API call made in your AWS account. These logs file are stored in an S3 bucket. It is recommended that the bucket policy or access control list (ACL) applied to the S3 bucket that CloudTrail logs to prevents public access to the CloudTrail logs.",
    "weakness_title_read_only": "Unauthorized access to CloudTrail log content (AWS)",
    "weakness_id_read_only": "P848",
    "weakness": "f477ea90-d1a4-4d5f-b71e-91814e19ea23",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2017-06-12T09:21:30.740000-04:00",
    "last_updated": "2022-06-03T03:55:07.553000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T683",
    "universal_id": "1aced193-a8a4-4dec-bafd-4400a4590c07",
    "countermeasure_name": "Integrate CloudTrail logs with CloudWatch Logs for real-time analysis (AWS)",
    "countermeasure_solution": "Configure CloudTrail to send logs to CloudWatch Logs for realtime analysis.\n\n###CloudTrail and CloudWatch\n\nAWS CloudTrail is a web service that records AWS API calls made in a given AWS account. The recorded information includes the identity of the API caller, the time of the API call, the source IP address of the API caller, the request parameters, and the response elements returned by the AWS service. CloudTrail uses Amazon S3 for log file storage and delivery, so log files are stored durably. In addition to capturing CloudTrail logs within a specified S3 bucket for long term analysis, realtime analysis can be performed by configuring CloudTrail to send logs to CloudWatch Logs. For a trail that is enabled in all regions in an account, CloudTrail sends log files from all those regions to a CloudWatch Logs log group.\n\n**Note:** The intent of this countermeasure is to ensure AWS account activity is being captured, monitored, and appropriately alarmed. CloudWatch Logs is a native way to accomplish this using AWS services but does not preclude the use of an alternate solution.",
    "weakness_title_read_only": "Nonintegrated CloudTrail trails with CloudWatch Logs (AWS)",
    "weakness_id_read_only": "P849",
    "weakness": "9519f2e8-ceb5-446a-b035-bc53924fd572",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2017-06-12T09:21:30.775000-04:00",
    "last_updated": "2022-08-24T15:02:34.955000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T684",
    "universal_id": "760e10b7-5508-4eb6-a578-197984169b8c",
    "countermeasure_name": "Enable AWS Config in all regions (AWS)",
    "countermeasure_solution": "Enable AWS Config in all regions.\n\n### What is AWS Config?\n\nAWS Config is a web service that performs configuration management of supported AWS resources within your account and delivers log files to you. The recorded information includes the configuration item (AWS resource), relationships between configuration items (AWS resources), any configuration changes between resources.",
    "weakness_title_read_only": "Disabled AWS Config (AWS)",
    "weakness_id_read_only": "P851",
    "weakness": "c48266a8-1622-4bdd-9ba1-3b367639efc1",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2017-06-12T09:21:30.806000-04:00",
    "last_updated": "2022-06-03T03:55:07.608000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T685",
    "universal_id": "13521d85-8ec4-4112-900a-46c5d2341bee",
    "countermeasure_name": "Enable S3 bucket access logging on the CloudTrail S3 bucket (AWS)",
    "countermeasure_solution": "Enable bucket access logging on the CloudTrail S3 bucket.\n\n###About S3 Bucket Logging\n\nS3 Bucket Access Logging generates a log that contains access records for each request made to your S3 bucket. An access log record contains details about the request, such as the request type, the resources specified in the request worked, and the time and date the request was processed.",
    "weakness_title_read_only": "Disabled S3 bucket logging on target S3 buckets (AWS)",
    "weakness_id_read_only": "P852",
    "weakness": "cbb1fc07-0a30-47c6-9535-48f3544a0d11",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2017-06-12T09:21:30.838000-04:00",
    "last_updated": "2022-06-03T03:55:07.636000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T686",
    "universal_id": "814b9c17-5076-4e4b-a0ed-d573d84f327a",
    "countermeasure_name": "Create log metrics and alarms (AWS)",
    "countermeasure_solution": "Real-time monitoring of API calls can be achieved by directing CloudTrail Logs to CloudWatch Logs and establishing corresponding metric filters and alarms:\n\n- Establish a metric filter and alarm for unauthorized API calls.\n\n    Monitoring unauthorized API calls will help reveal application errors and may reduce time to detect malicious activity.\n\n- Establish a metric filter and alarm for console logins that are not protected by multi-factor authentication (MFA).\n\n    Monitoring for single-factor console logins will increase visibility into accounts that are not protected by MFA.\n\n- Establish a metric filter and alarm for root login attempts.\n\n    Monitoring for root account logins will provide visibility into the use of a fully privileged account and an opportunity to reduce the use of it.\n\n- Establish a metric filter and alarm for changes made to Identity and Access Management (IAM) policies.\n\n    Monitoring changes to IAM policies will help ensure authentication and authorization controls remain intact.\n\n- Establish a metric filter and alarm for detecting changes to CloudTrail's configurations.\n\n    Monitoring changes to CloudTrail's configuration will help ensure sustained visibility to activities performed in the AWS account.\n\n- Establish a metric filter and alarm for changes to S3 bucket policies.\n\n    Monitoring changes to S3 bucket policies may reduce time to detect and correct permissive policies on sensitive S3 buckets.\n\n- Establish a metric filter and alarm for changes to network gateways. Network gateways are required to send/receive traffic to a destination outside of a VPC.\n\n    Monitoring changes to network gateways will help ensure that all ingress/egress traffic traverses the VPC border via a controlled path.\n\n- Establish a metric filter and alarm for changes to route tables.\n\n    Monitoring changes to route tables will help ensure that all VPC traffic flows through an expected path.\n\n- Establish a metric filter and alarm for changes made to VPCs.\n\n    It is possible to have more than 1 VPC within an account, in addition, it is also possible to create a peer connection between 2 VPCs enabling network traffic to route between VPCs.",
    "weakness_title_read_only": "Insufficient Logging or Insufficient Protection of Logs",
    "weakness_id_read_only": "P619",
    "weakness": "9a42301f-ed6c-42cb-a85d-a5134b76b701",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2017-06-12T09:21:30.868000-04:00",
    "last_updated": "2022-06-03T03:55:07.660000-04:00",
    "custom": "False",
    "rules": "a5bb6d04-111c-4fd1-ab43-b8aed799e105 AND cab80cea-1a20-433f-b78c-783b816b8d33",
    "rules_read_only": "A1159 AND A739"
  },
  {
    "countermeasure_id": "T687",
    "universal_id": "4f67ca5a-5f3e-4f20-8d54-19f2eb5f7748",
    "countermeasure_name": "Review the appropriateness of subscribers to each SNS topic (AWS)",
    "countermeasure_solution": "Periodically review the appropriateness of the list of subscribers to each Simple Notification Service (SNS) topic.\n\n###What is SNS?\n\nAWS SNS is a web service that can publish messages from an application and immediately deliver them to subscribers or other applications. Subscribers are clients interested in receiving notifications from topics of interest; they can subscribe to a topic or be subscribed by the topic owner. When publishers have information or updates to notify their subscribers about, they can publish a message to the topic, which immediately triggers Amazon SNS to deliver the message to all applicable subscribers.",
    "weakness_title_read_only": "Inappropriate subscribers to an SNS topic (AWS)",
    "weakness_id_read_only": "P853",
    "weakness": "eec1b29f-b89f-41a9-a9a4-de5790f5041e",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2017-06-12T09:21:30.972000-04:00",
    "last_updated": "2021-06-25T14:47:46.437000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T688",
    "universal_id": "e4cfc299-002f-4f53-8e64-aa93e6f362a9",
    "countermeasure_name": "Apply security group requirements (AWS)",
    "countermeasure_solution": "Set security group configurations in a way that does not allow unrestricted ingress access to __port 22 and 3389__. Security groups provide stateful filtering of ingress/egress network traffic to AWS resources.",
    "weakness_title_read_only": "Unrestricted connectivity to remote console services (AWS)",
    "weakness_id_read_only": "P839",
    "weakness": "ddbb8608-2bc4-4273-92c9-64109b1ec827",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2017-06-12T09:21:31-04:00",
    "last_updated": "2022-06-03T03:55:07.685000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T689",
    "universal_id": "bdc3ad9d-e90e-4ba4-a870-87e26af0453d",
    "countermeasure_name": "Enable hardware multi-factor authentication (MFA) for the 'root' account (AWS)",
    "countermeasure_solution": "Protect the root account with a hardware multi-factor authentication (MFA). The root account is the most privileged user in an AWS account. MFA adds an extra layer of protection on top of a user name and password. With MFA enabled, when a user signs in to an AWS website, they will be prompted for their user name and password as well as for an authentication code from their AWS MFA device.\n\n__Note__: Using hardware MFA for many, many AWS accounts may create a logistical device management issue. If this is the case, consider implementing this Level 2 recommendation selectively to the highest security AWS accounts and the Level 1 recommendation applied to the remaining accounts.",
    "weakness_title_read_only": "Missing hardware multi-factor authentication (MFA) (AWS)",
    "weakness_id_read_only": "P841",
    "weakness": "7f015572-eeb3-4ac7-a8c0-8c5c76111345",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "deployment",
    "created": "2017-06-12T09:33:08.687000-04:00",
    "last_updated": "2022-06-03T03:55:07.710000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T690",
    "universal_id": "39b46811-e86a-47cd-92b1-b0ecdcc6d942",
    "countermeasure_name": "Use IAM instance roles for resource access from instances (AWS)",
    "countermeasure_solution": "Use IAM instance roles for resource access from instances. AWS access from within AWS instances can be done by either encoding AWS keys into AWS API calls or by assigning the instance to a role which has an appropriate permissions policy for the required access. \"AWS Access\" means accessing the APIs of AWS in order to access AWS resources or manage AWS account resources.",
    "weakness_title_read_only": "Failing to properly use AWS IAM roles (AWS)",
    "weakness_id_read_only": "P842",
    "weakness": "817be480-b4cd-4532-9848-664b630a05fb",
    "tags": "",
    "countermeasure_priority": "3",
    "phase": "deployment",
    "created": "2017-06-12T09:33:08.756000-04:00",
    "last_updated": "2022-06-03T03:55:07.734000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T691",
    "universal_id": "8a462dd8-b510-4e4a-bf28-b1ebf1b160f9",
    "countermeasure_name": "Enable CloudTrail log file validation (AWS)",
    "countermeasure_solution": "Enable file validation on all CloudTrails. CloudTrail log file validation creates a digitally signed digest file containing a hash of each log that CloudTrail writes to S3. These digest files can be used to determine whether a log file was changed, deleted, or unchanged after CloudTrail delivered the log.",
    "weakness_title_read_only": "Unsecure use of CloudTrail logs (AWS)",
    "weakness_id_read_only": "P843",
    "weakness": "9a203917-bf79-4b85-80c9-645cf4a6363d",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "deployment",
    "created": "2017-06-12T09:33:08.793000-04:00",
    "last_updated": "2022-06-03T03:55:07.758000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T692",
    "universal_id": "a1da2997-a2d6-43b7-a4e5-f993ab7aaeb6",
    "countermeasure_name": "Encrypt CloudTrail logs at rest using KMS CMKs (AWS)",
    "countermeasure_solution": "Configure CloudTrail to use SSE-KMS (server side encryption-Key Management Service as described hereafter). AWS CloudTrail is a web service that records AWS API calls for an account and makes those logs available to users and resources in accordance with IAM policies. AWS Key Management Service (KMS) is a managed service that helps create and control the encryption keys used to encrypt account data, and uses Hardware Security Modules (HSMs) to protect the security of encryption keys. CloudTrail logs can be configured to leverage server side encryption (SSE) and KMS customer created master keys (CMK) to further protect CloudTrail logs.",
    "weakness_title_read_only": "Unsecure use of CloudTrail logs (AWS)",
    "weakness_id_read_only": "P843",
    "weakness": "9a203917-bf79-4b85-80c9-645cf4a6363d",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "deployment",
    "created": "2017-06-12T09:33:08.829000-04:00",
    "last_updated": "2022-06-03T03:55:07.784000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T693",
    "universal_id": "958b7ff7-e496-4668-9cac-24d2f09cce0b",
    "countermeasure_name": "Enable rotation for customer created CMKs (AWS)",
    "countermeasure_solution": "Enable customer master key (CMK) rotation. AWS Key Management Service (KMS) allows customers to rotate the backing key which is key material stored within the KMS which is tied to the key ID of the customer created customer master key (CMK). It is the backing key that is used to perform cryptographic operations such as encryption and decryption. Automated key rotation currently retains all prior backing keys so that decryption of encrypted data can take place transparently.",
    "weakness_title_read_only": "Missing rotation for encryption keys (AWS)",
    "weakness_id_read_only": "P850",
    "weakness": "623b7a3e-0ac2-4f32-a9d6-b2ab814d569b",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "deployment",
    "created": "2017-06-12T09:33:08.858000-04:00",
    "last_updated": "2022-06-03T03:55:07.810000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T694",
    "universal_id": "04ca3b67-d173-4abf-bde1-84f135d2905c",
    "countermeasure_name": "Enable VPC flow logging in all VPCs (AWS)",
    "countermeasure_solution": "Enable VPC Flow Logs for packet \"Rejects\" for VPCs. VPC Flow Logs is a feature that enables you to capture information about the IP traffic going to and from network interfaces in your VPC. After you've created a flow log, you can view and retrieve its data in Amazon CloudWatch Logs.\n\nVPC Flow Logs provide visibility into network traffic that traverses the VPC and can be used to detect anomalous traffic or insight during security workflows.",
    "weakness_title_read_only": "Insufficient Logging or Insufficient Protection of Logs",
    "weakness_id_read_only": "P619",
    "weakness": "9a42301f-ed6c-42cb-a85d-a5134b76b701",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "deployment",
    "created": "2017-06-12T09:33:08.891000-04:00",
    "last_updated": "2022-06-03T03:55:07.835000-04:00",
    "custom": "False",
    "rules": "a5bb6d04-111c-4fd1-ab43-b8aed799e105 AND cab80cea-1a20-433f-b78c-783b816b8d33 AND ac5f73c4-566a-4e69-975a-c497b00c10ee",
    "rules_read_only": "A1159 AND A739 AND A1161"
  },
  {
    "countermeasure_id": "T695",
    "universal_id": "c66ead11-3a54-4d79-a906-0ce4eafe0acc",
    "countermeasure_name": "Restrict all traffic in the default security group of every VPC (AWS)",
    "countermeasure_solution": "Restrict all traffic in the default security group of every VPC. A VPC comes with a default security group whose initial settings deny all inbound traffic, allow all outbound traffic, and allow all traffic between instances assigned to the security group. If you don't specify a security group when you launch an instance, the instance is automatically assigned to this default security group. Security groups provide stateful filtering of ingress/egress network traffic to AWS resources.  \n\nConfiguring all VPC default security groups to restrict all traffic will encourage least privilege security group development and mindful placement of AWS resources into security groups which will in-turn reduce the exposure of those resources.\n\n__Note:__\n\nThe default VPC in every region should have its default security group updated to comply. Any newly created VPCs will automatically contain a default security group that will need remediation to comply with this recommendation.\n\nWhen implementing this recommendation, VPC flow logging is invaluable in determining the least privilege port access required by systems to work properly because it can log all packet acceptances and rejections occurring under the current security groups. This dramatically reduces the primary barrier to least privilege engineering - discovering the minimum ports required by systems in the environment. Even if the VPC flow logging recommendation in this benchmark is not adopted as a permanent security measure, it should be used during any period of discovery and engineering for least privileged security groups.",
    "weakness_title_read_only": "Running With Unnecessary Privileges",
    "weakness_id_read_only": "P150",
    "weakness": "07093262-3118-48ab-911f-86160f3ae8e2",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "deployment",
    "created": "2017-06-12T09:33:08.920000-04:00",
    "last_updated": "2022-06-03T03:55:07.861000-04:00",
    "custom": "False",
    "rules": "a5bb6d04-111c-4fd1-ab43-b8aed799e105 AND cab80cea-1a20-433f-b78c-783b816b8d33 AND ac5f73c4-566a-4e69-975a-c497b00c10ee",
    "rules_read_only": "A1159 AND A739 AND A1161"
  },
  {
    "countermeasure_id": "T696",
    "universal_id": "340b5d1a-415f-4b1d-977a-bb6edb667e8d",
    "countermeasure_name": "Change routing tables for VPC peering to 'least access' (AWS)",
    "countermeasure_solution": "Once a VPC peering connection is established, update routing tables to establish any connections between the peered VPCs. These routes can be as specific as desired, even peering a VPC to only a single host on the other side of the connection.\n\nBeing highly selective in peering routing tables is a very effective way of minimizing the impact of a breach as resources outside of these routes are inaccessible to the peered VPC.",
    "weakness_title_read_only": "Running With Unnecessary Privileges",
    "weakness_id_read_only": "P150",
    "weakness": "07093262-3118-48ab-911f-86160f3ae8e2",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "deployment",
    "created": "2017-06-12T09:33:08.949000-04:00",
    "last_updated": "2022-06-03T03:55:07.891000-04:00",
    "custom": "False",
    "rules": "a5bb6d04-111c-4fd1-ab43-b8aed799e105 AND cab80cea-1a20-433f-b78c-783b816b8d33 AND ac5f73c4-566a-4e69-975a-c497b00c10ee",
    "rules_read_only": "A1159 AND A739 AND A1161"
  },
  {
    "countermeasure_id": "T697",
    "universal_id": "b5d57028-a2fc-4496-85c3-1fe8c6df605f",
    "countermeasure_name": "Test that 'root' account is not used (AWS)",
    "countermeasure_solution": "Execute the following commands to determine the last time the root account was used:\n\n```\naws iam generate-credential-report\naws iam get-credential-report --query 'Content' --output text | base64 -d | cut -d, -f1,5,11,16 | grep -B1 '<root_account>'\n```\n\n__Note:__ There are a few conditions under which the use of the root account is required, such as requesting a penetration test or creating a CloudFront private key.\n\nAlso, perform the following to determine if the root account has any access keys:\n\n__Via the AWS Console:__\n\n1. Login to the AWS Management Console.\n2. Click Services.\n3. Click IAM.\n4. Click on Credential Report.\n5. This will download an .xls file which contains credential usage for all IAM users within an AWS Account. Open this file.\n6. For the <root_account> user, ensure the access_key_1_active and access_key_2_active fields are set to FALSE.\n\n__Using the Command Line Interface:__\n\n* Run the following commands:\n\n        aws iam generate-credential-report\n        aws iam get-credential-report --query 'Content' --output text | base64 -d | cut -d, -f1,9,14 | grep -B1 '<root_account>'\n\n* For the <root_account> user, ensure the access_key_1_active and access_key_2_active fields are set to FALSE.",
    "weakness_title_read_only": "Running With Unnecessary Privileges",
    "weakness_id_read_only": "P150",
    "weakness": "07093262-3118-48ab-911f-86160f3ae8e2",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2017-06-12T09:33:08.985000-04:00",
    "last_updated": "2022-06-03T03:55:07.911000-04:00",
    "custom": "False",
    "rules": "a5bb6d04-111c-4fd1-ab43-b8aed799e105 AND cab80cea-1a20-433f-b78c-783b816b8d33",
    "rules_read_only": "A1159 AND A739"
  },
  {
    "countermeasure_id": "T698",
    "universal_id": "5442950d-e790-4b29-ad8a-0069b0ca3a4b",
    "countermeasure_name": "Test that multi-factor authentication (MFA) is enabled for all IAM users that have a console password (AWS)",
    "countermeasure_solution": "Perform the following to determine if an multi-factor authentication (MFA) device is enabled for all IAM users having a console password:\n\n__Using the Management Console:__\n\n1. Open the IAM console at [https://console.aws.amazon.com/iam/](https://console.aws.amazon.com/iam/).\n2. In the left pane, select Users.\n3. If the MFA Device or Password columns are not visible in the table, click the gear icon at the upper right corner of the table and ensure a checkmark is next to both, then click Close.\n4. Ensure that each user with a checkmark in the Password column also has a value in the MFA Device column.\n\n__Using the Command Line Interface:__\n\n- Run the following command (OSX/Linux/UNIX) to generate a list of all IAM users along with their password and MFA status:\n\n        aws iam generate-credential-report\n        aws iam get-credential-report --query 'Content' --output text | base64 -d | cut -d, -f1,4,8\n\n- The output of this command will produce a table similar to the following:\n\n        user,password_enabled,mfa_active  \n        elise,false,false  \n        brandon,true,true  \n        rakesh,false,false  \n        helene,false,false  \n        paras,true,true  \n        anitha,false,false  \n\n- For any column having password_enabled set to true, ensure `mfa_active` is also set to true.",
    "weakness_title_read_only": "Single-factor Authentication",
    "weakness_id_read_only": "P205",
    "weakness": "a7e94b75-c246-4c06-89de-710f3f7d34aa",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2017-06-12T09:33:08.994000-04:00",
    "last_updated": "2022-06-03T03:55:07.933000-04:00",
    "custom": "False",
    "rules": "a5bb6d04-111c-4fd1-ab43-b8aed799e105 AND cab80cea-1a20-433f-b78c-783b816b8d33",
    "rules_read_only": "A1159 AND A739"
  },
  {
    "countermeasure_id": "T699",
    "universal_id": "ff45e266-9b14-4cec-8e0b-a6612f474878",
    "countermeasure_name": "Test that credentials unused for 90 days or greater are disabled (AWS)",
    "countermeasure_solution": "Perform the following to determine if unused credentials exist:\n\n1. Login to the AWS Management Console.\n2. Click Services.\n3. Click IAM.\n4. Click on Credential Report.\n5. This will download an .xls file which contains credential usage for all users within an AWS Account. Open this file.\n6. For each user having password_enabled set to TRUE, ensure password_last_used is less than 90 days ago.\n7. For each user having access_key_1_active or access_key_2_active to TRUE, ensure the corresponding access_key_n_last_used_date is less than 90 days ago.\n\n__Via the CLI:__\n\n* Run the following commands:\n\n        aws iam generate-credential-report\n        aws iam get-credential-report --query 'Content' --output text | base64 -d | cut -d, -f1,9,10,11,14,15,16\n\n* For each user having password_enabled set to TRUE, ensure password_last_used_date is less than 90 days ago.\n* For each user having an access_key_1_active or access_key_2_active to TRUE, ensure the corresponding access_key_n_last_used_date is less than 90 days ago.",
    "weakness_title_read_only": "Not disabling inactive user accounts (AWS)",
    "weakness_id_read_only": "P840",
    "weakness": "ad9db827-a05d-44bf-a8fb-49de147b3650",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2017-06-12T09:33:09.003000-04:00",
    "last_updated": "2022-06-03T03:55:07.955000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T700",
    "universal_id": "4dbee1b6-db94-45f2-b20e-6e520de87c48",
    "countermeasure_name": "Test that access keys are rotated every 90 days or less (AWS)",
    "countermeasure_solution": "Perform the following to determine if access keys are rotated as prescribed:\n\n1. Login to the AWS Management Console.\n2. Click Services.\n3. Click IAM.\n4. Click on Credential Report.\n5. This will download an .xls file which contains Access Key usage for all IAM users within an AWS Account. Open this file.\n6. Focus on the following columns (where x = 1 or 2).\n    * access_key_X_active\n    * access_key_X_last_rotated\n    * access_key_X_last_used_date\n\n* Ensure all active keys have been rotated within 90 days.\n* Ensure all active keys have been used since last rotation.\n    * Keys not in use since last rotation should be disabled/deleted.\n\n__Via the CLI:__\n\nRun these commands:\n\n    aws iam generate-credential-report\n    aws iam get-credential-report --query 'Content' --output text | base64 -d",
    "weakness_title_read_only": "Password Aging with Long Expiration",
    "weakness_id_read_only": "P161",
    "weakness": "dcb04a77-f85b-410d-8431-e105bc816785",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2017-06-12T09:33:09.012000-04:00",
    "last_updated": "2022-06-03T03:55:07.976000-04:00",
    "custom": "False",
    "rules": "a5bb6d04-111c-4fd1-ab43-b8aed799e105 AND cab80cea-1a20-433f-b78c-783b816b8d33",
    "rules_read_only": "A1159 AND A739"
  },
  {
    "countermeasure_id": "T701",
    "universal_id": "fd3e7788-0ba1-40b3-a8af-d0c2f592ae54",
    "countermeasure_name": "Test that minimum IAM password policy requirements are applied (AWS)",
    "countermeasure_solution": "Perform the following to ensure the password policy is configured as required:\n\n__Via the AWS Console:__\n\n* Login to AWS Console (with appropriate permissions to View Identity Access Management Account Settings).\n* Go to IAM Service in the AWS Console.\n* Click on Account Settings on the Left Pane.\n* Ensure \"Requires at least one uppercase letter\" is checked under \"Password Policy\".\n* Ensure \"Requires at least one lowercase letter\" is checked under \"Password Policy\".\n* Ensure \"Require at least one non-alphanumeric character\" is checked under \"Password Policy\"\n* Ensure \"Require at least one number \" is checked under \"Password Policy\"\n* Ensure \"Minimum password length\" is set to 14 or greater.\n* Ensure \"Prevent password reuse\" is checked.\n* Ensure \"Number of passwords to remember\" is set to 24.\n* Ensure \"Enable password expiration\" is checked.\n* Ensure \"Password expiration period (in days):\" is set to 90 or less.\n\n__Via the CLI:__\n\n- `aws iam get-account-password-policy`\n    - Ensure the output of the above command includes `\"RequireUppercaseCharacters\": true`\n    - Ensure the output of the above command includes `\"RequireLowercaseCharacters\": true`\n    - Ensure the output of the above command includes `\"RequireSymbols\": true`\n    - Ensure the output of the above command includes `\"RequireNumbers\": true`\n    - Ensure the output of the above command includes `\"MinimumPasswordLength\": 14 (or higher)`\n    - Ensure the output of the above command includes `\"PasswordReusePrevention\": 24`\n    - Ensure the output of the above command includes `\"MaxPasswordAge\": 90 or less`",
    "weakness_title_read_only": "Password Requirements Are Weak",
    "weakness_id_read_only": "P408",
    "weakness": "e4138dde-9a0c-43d1-b721-ab4945beaaf6",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2017-06-12T09:33:09.021000-04:00",
    "last_updated": "2022-06-03T03:55:07.996000-04:00",
    "custom": "False",
    "rules": "a5bb6d04-111c-4fd1-ab43-b8aed799e105 AND cab80cea-1a20-433f-b78c-783b816b8d33",
    "rules_read_only": "A1159 AND A739"
  },
  {
    "countermeasure_id": "T705",
    "universal_id": "8e9111cb-ebca-489d-8e14-e6684dd51af0",
    "countermeasure_name": "Test that multi-factor authentication is enabled for the 'root' account (AWS)",
    "countermeasure_solution": "Perform the following to determine if the root account has multi-factor authentication (MFA) set up:\n\n* Run the following command:\n        aws iam get-account-summary | grep \"AccountMFAEnabled\"\n\n* Ensure the AccountMFAEnabled property is set to 1",
    "weakness_title_read_only": "Single-factor Authentication",
    "weakness_id_read_only": "P205",
    "weakness": "a7e94b75-c246-4c06-89de-710f3f7d34aa",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2017-06-12T09:33:09.061000-04:00",
    "last_updated": "2022-06-03T03:55:08.017000-04:00",
    "custom": "False",
    "rules": "a5bb6d04-111c-4fd1-ab43-b8aed799e105 AND cab80cea-1a20-433f-b78c-783b816b8d33",
    "rules_read_only": "A1159 AND A739"
  },
  {
    "countermeasure_id": "T706",
    "universal_id": "8fc65b6e-9c16-465d-9972-f7a7ad38027d",
    "countermeasure_name": "Test that security questions are registered in the AWS account (AWS)",
    "countermeasure_solution": "Perform the following in the AWS Management Console:\n\n1. Login to the AWS account as root.\n2. On the top right, you will see the _<Root_Account_Name>_.\n3. Click on the _<Root_Account_Name>_.\n4. From the drop-down menu Click My Account.\n5. In the Configure Security Challenge Questions section on the Personal Information page, configure three security challenge questions.\n6. Click Save questions.",
    "weakness_title_read_only": "No backup of passwords and no secondary ways of accessing accounts (AWS)",
    "weakness_id_read_only": "P847",
    "weakness": "1bdeb1d9-5ba6-4602-b63c-2d77c25038e2",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2017-06-12T09:33:09.070000-04:00",
    "last_updated": "2022-06-03T03:55:08.037000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T707",
    "universal_id": "9e15f6d9-ec81-4954-b546-8f88b2d32e61",
    "countermeasure_name": "Test that IAM policies are attached only to groups or roles (AWS)",
    "countermeasure_solution": "Perform the following to determine if policies are attached directly to users:\n\n1. Run the following to get a list of IAM users:\n\n        aws iam list-users --query 'Users[*].UserName' --output text\n\n2. For each user returned, run the following command to determine if any policies are attached to them:\n\n        aws iam list-attached-user-policies --user-name <_iam_user_>\n        aws iam list-user-policies --user-name _<iam_user>_\n\n3. If any policies are returned, the user has a direct policy attachment.",
    "weakness_title_read_only": "Improper Access Control (Authorization)",
    "weakness_id_read_only": "P182",
    "weakness": "e488cdc5-3c91-4d2b-bcec-5c651b000d8b",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2017-06-12T09:33:09.079000-04:00",
    "last_updated": "2022-06-03T03:55:08.057000-04:00",
    "custom": "False",
    "rules": "a5bb6d04-111c-4fd1-ab43-b8aed799e105 AND cab80cea-1a20-433f-b78c-783b816b8d33",
    "rules_read_only": "A1159 AND A739"
  },
  {
    "countermeasure_id": "T710",
    "universal_id": "69550b2e-e7f6-4b1b-9dab-ffc1277438ea",
    "countermeasure_name": "Verify that contact details are current (AWS)",
    "countermeasure_solution": "This activity can only be performed via the AWS Console, with a user who has permission to read and write Billing information (`aws-portal:*Billing`).\n\n1. Sign in to the AWS Management Console and open the Billing and Cost Management console at [https://console.aws.amazon.com/billing/home#/](https://console.aws.amazon.com/billing/home#/).\n2. On the navigation bar, choose your account name, and then choose My Account.\n3. On the Account Settings page, review and verify the current details.\n4. Under Contact Information, review and verify the current details.\n5. Verify that the contact details point to multiple individuals.",
    "weakness_title_read_only": "Improper contact details associated to account (AWS)",
    "weakness_id_read_only": "P856",
    "weakness": "eb491cd4-d1b1-469b-b0ae-758f08f10923",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2017-06-12T09:33:09.112000-04:00",
    "last_updated": "2022-06-03T03:55:08.078000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T711",
    "universal_id": "dd783d67-60e0-45aa-b7de-1b16ce4eefe7",
    "countermeasure_name": "Verify that security contact information is registered (AWS)",
    "countermeasure_solution": "Perform the following in the AWS Management Console to determine if security contact information is present:\n\n1. Click on your account name at the top right corner of the console.\n2. From the drop-down menu Click My Account.\n3. Scroll down to the Alternate Contacts section.\n4. Verify that contact information is specified in the Security section.\n5. Verify that the specified contact information is an internal email distribution list to ensure emails are regularly monitored by more than one individual.",
    "weakness_title_read_only": "Lack of registered security contact information (AWS)",
    "weakness_id_read_only": "P857",
    "weakness": "87be5979-a3a4-4e5f-837b-5cc0d31278f3",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2017-06-12T09:33:09.121000-04:00",
    "last_updated": "2022-06-03T03:55:08.098000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T712",
    "universal_id": "fbd234dc-adb7-4e74-a9fc-27f744476b87",
    "countermeasure_name": "Test if a support role has been created to manage incidents with AWS Support (AWS)",
    "countermeasure_solution": "Perform the following steps using the Amazon unified command line interface:\n\n1. List IAM policies, filter for the 'AWSSupportAccess' managed policy, and note the \"Arn\" element value:\n\n    * `aws iam list-policies --query \"Policies[?PolicyName == 'AWSSupportAccess']\"`\n\n2. Check if the 'AWSSupportAccess' is attached to any IAM user, group or role:\n\n    * `aws iam list-entities-for-policy --policy-arn <iam_policy_arn>`\n\n3. If such IAM user, group or role does not exist, then the test __fails__.",
    "weakness_title_read_only": "No support role or insufficient permissions to manage incidents (AWS)",
    "weakness_id_read_only": "P844",
    "weakness": "b0d8f42d-7269-400e-8744-91d34d7d1796",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2017-06-12T09:33:09.130000-04:00",
    "last_updated": "2022-06-03T03:55:08.118000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T713",
    "universal_id": "0c2612ce-1f93-4e39-9819-61a4b4e98484",
    "countermeasure_name": "Test if access keys have been created during initial IAM user setup (AWS)",
    "countermeasure_solution": "Perform the following to determine if access keys are rotated as prescribed:\n\n1. Login to the AWS Management Console\n2. Click Services\n3. Click IAM\n4. Click on a User\n5. Compare the user creation date to the key 1 creation date.\n6. For any that match, the key was created during initial user setup.\n7. Keys that were created at the same time as the user profile and do not have a last used date should be deleted. And, the test fails at this point.\n\n__Via the Command-Line Interface:__\n\n* Run the following command (OSX/Linux/UNIX) to generate a list of all IAM users along with their access keys utilization:\n\n`aws iam generate-credential-report`\n\n`aws iam get-credential-report --query 'Content' --output text | base64 -d | cut -d, -f1,4,9,11,14,16`\n\n* The output of this command will produce a table similar to the following:\n```\nuser,password_enabled,access_key_1_active,access_key_1_last_used_date,access_key_2_active,access_key_2_last_used_date\nelise,false,true,2015-04-16T15:14:00+00:00,false,N/A\nbrandon,true,true,N/A,false,N/A\nrakesh,false,false,N/A,false,N/A\nhelene,false,true,2015-11-18T17:47:00+00:00,false,N/A\nparas,true,true,2016-08-28T12:04:00+00:00,true,2016-03-04T10:11:00+00:00\nanitha,true,true,2016-06-08T11:43:00+00:00,true,N/A\n```\n* If there is any user with access_key_last_used_date set to N/A then the test __fails__.",
    "weakness_title_read_only": "Generating unnecessary access keys during initial IAM user setup (AWS)",
    "weakness_id_read_only": "P845",
    "weakness": "6b6e9c04-b51c-4700-a240-31cb6fd2b769",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2017-06-12T09:33:09.139000-04:00",
    "last_updated": "2022-06-03T03:55:08.140000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T714",
    "universal_id": "c6371d95-6287-46e8-a1b6-5b51a639bf21",
    "countermeasure_name": "Test if any IAM policy exists that allows full administrative privileges (AWS)",
    "countermeasure_solution": "Perform the following to determine what policies are created:\n\n* Run the following to get a list of IAM policies managed by you:\n\n        aws iam list-policies --scope Local --output text\n\n* For each policy returned, run the following command to determine if any policies is allowing full administrative privileges on the account:\n\n        aws iam get-policy-version --policy-arn _<policy_arn>_ --version _<policy_version>_ --query \"PolicyVersion.Document.Statement[?Effect == 'Allow' && contains(Resource, '*') && contains (Action, '*')]\"\n\n* If the output of the command returns any policies, the test fails.",
    "weakness_title_read_only": "Running With Unnecessary Privileges",
    "weakness_id_read_only": "P150",
    "weakness": "07093262-3118-48ab-911f-86160f3ae8e2",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2017-06-12T09:33:09.148000-04:00",
    "last_updated": "2022-06-03T03:55:08.161000-04:00",
    "custom": "False",
    "rules": "a5bb6d04-111c-4fd1-ab43-b8aed799e105 AND cab80cea-1a20-433f-b78c-783b816b8d33",
    "rules_read_only": "A1159 AND A739"
  },
  {
    "countermeasure_id": "T715",
    "universal_id": "f77533b5-bf8b-43a0-8454-22df342caec1",
    "countermeasure_name": "Test if CloudTrail is enabled in all regions (AWS)",
    "countermeasure_solution": "Perform the following to determine if CloudTrail is enabled for all regions:\n\n__Via the Management Console:__\n\n1. Sign in to the AWS Management Console and open the CloudTrail console at [https://console.aws.amazon.com/cloudtrail](https://console.aws.amazon.com/cloudtrail)\n2. Click on Trails on the left navigation pane\n3. You will be presented with a list of trails across all regions\n4. The test fails if *no* trail has All specified in the Region column\n5. Click on a trail via the link in the _Name_ column\n6. The test fails if Logging is *not* set to **ON**\n7. The test fails, if Apply trail to all regions is *not* set to **Yes**\n\n__Via the Command-Line Interface:__\n\nRun the following command:\n\n`aws cloudtrail describe-trails` \n\nThe test __fails__, if \"IsMultiRegionTrail\" is *not* set to **true**.",
    "weakness_title_read_only": "Lack of CloudTrail logs for all regions (AWS)",
    "weakness_id_read_only": "P846",
    "weakness": "f7463aa3-04a7-4ea1-aaab-e71d9fc7ba31",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2017-06-12T09:33:09.157000-04:00",
    "last_updated": "2022-06-03T03:55:08.181000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T716",
    "universal_id": "347e33aa-69b4-43e4-b076-611e70bac30f",
    "countermeasure_name": "Test if S3 bucket CloudTrail logs are not publicly accessible (AWS)",
    "countermeasure_solution": "Perform the following to determine if any public access is granted to an S3 bucket via an ACL or S3 bucket policy:\n\n__Via the Management Console:__\n\n1. Go to the Amazon CloudTrail console at [https://console.aws.amazon.com/cloudtrail/home](https://console.aws.amazon.com/cloudtrail/home).\n2. In the API activity history pane on the left, click Trails.\n3. In the Trails pane, note the bucket names in the S3 bucket column .\n4. Go to Amazon S3 console at [https://console.aws.amazon.com/s3/home](https://console.aws.amazon.com/s3/home).\n5. For each bucket noted in step 3, right-click on the bucket and click Properties.\n6. In the Properties pane, click the Permissions tab.\n7. The tab shows a list of grants, one row per grant, in the bucket ACL. Each row identifies the grantee and the permissions granted.\n8. If there exists a row that has the Grantee set to Everyone or the Grantee set to Any Authenticated User then the test fails.\n9. If the Edit bucket policy button is present, click it to review the bucket policy.\n10. If the policy contains a Statement having an Effect set to Allow and a Principal set to \\* then the test fails.\n\n__Via the Command-Line Interface:__\n\n* Get the name of the S3 bucket that CloudTrail is logging to:\n\n`aws cloudtrail describe-trails --query 'trailList[*].S3BucketName`\n\n* If the AllUsers principal is granted privileges to that _<bucket>_ then the test fails:\n\n```\naws s3api get-bucket-acl --bucket <s3_bucket_for_cloudtrail> --query 'Grants[?Grantee.URI==`http://acs.amazonaws.com/groups/global/AllUsers`]'\n```\n* If the AuthenticatedUsersprincipal is granted privileges to that _<bucket>_ then the test fails:\n\n```\naws s3api get-bucket-acl --bucket <s3_bucket_for_cloudtrail> --query 'Grants[?Grantee.URI==`http://acs.amazonaws.com/groups/global/Authenticated Users`]'\n```\n* Get the S3 Bucket Policy\n\n`aws s3api get-bucket-policy --bucket <s3_bucket_for_cloudtrail>`\n\n* If the policy contains a Statement having an Effect set to Allow and a Principal set to \\* then the test __fails__.",
    "weakness_title_read_only": "Unauthorized access to CloudTrail log content (AWS)",
    "weakness_id_read_only": "P848",
    "weakness": "f477ea90-d1a4-4d5f-b71e-91814e19ea23",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2017-06-12T09:33:09.166000-04:00",
    "last_updated": "2022-06-03T03:55:08.202000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T717",
    "universal_id": "496e56dd-e894-41e3-96c9-4cb16eb95d50",
    "countermeasure_name": "Test that CloudTrail trails are integrated with CloudWatch Logs (AWS)",
    "countermeasure_solution": "Perform the following to ensure CloudTrail is configured as prescribed:\n\n__Via the AWS Management Console:__\n\n1. Sign in to the AWS Management Console and open the CloudTrail console at  [https://console.aws.amazon.com/cloudtrail/](https://console.aws.amazon.com/cloudtrail/)\n2. Under All Buckets, click on the target bucket you wish to evaluate\n3. Click Properties on the top right of the console\n4. Click Trails in the left menu\n5. If a CloudWatch Logs log group is not configured or does not have a recent (~one day old) Last log file delivered timestamp then the test fails.\n\n__Via the Command-Line Interface:__\n\n* Run the following command to get a listing of existing trails:\n\n`aws cloudtrail describe-trails`\n\n* If `CloudWatchLogsLogGroupArn` is empty then the test fails. If it is not empty note the value of the Name property.\n\n* Using the noted value of the Name property, run the following command:\n\n`aws cloudtrail get-trail-status --name _<trail_name>_`\n\n* If the `LatestcloudwatchLogdDeliveryTime` property is not set to a recent (~one day old) timestamp then the test __fails__.",
    "weakness_title_read_only": "Nonintegrated CloudTrail trails with CloudWatch Logs (AWS)",
    "weakness_id_read_only": "P849",
    "weakness": "9519f2e8-ceb5-446a-b035-bc53924fd572",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2017-06-12T09:33:09.175000-04:00",
    "last_updated": "2022-06-03T03:55:08.223000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T718",
    "universal_id": "535dfd68-1027-46d6-bc93-92c042f12a9a",
    "countermeasure_name": "Test if AWS Config is enabled in all regions (AWS)",
    "countermeasure_solution": "Process to evaluate AWS Config configuration per region.\n\n__Via the AWS Management Console:__\n\n1. Sign in to the AWS Management Console and open the AWS Config console at [https://console.aws.amazon.com/config/](https://console.aws.amazon.com/config/).\n2. On the top right of the console select target Region.\n3. If presented with Setup AWS Config, follow remediation procedure:\n4. On the Resource inventory page, Click on edit (the gear icon). The Set Up AWS Config page appears.\n5. If 1 or both check-boxes under \"All Resources\" are not checked then the test __fails__.\n6. Include global resources related to IAM resources, which needs to be enabled in 1 region only\n7. If the correct S3 bucket has not been defined then the test __fails__.\n8. If the correct SNS topic has not been defined then the test __fails__.\n9. Repeat steps 2 to 7 for each region.",
    "weakness_title_read_only": "Disabled AWS Config (AWS)",
    "weakness_id_read_only": "P851",
    "weakness": "c48266a8-1622-4bdd-9ba1-3b367639efc1",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2017-06-12T09:33:09.184000-04:00",
    "last_updated": "2022-06-03T03:55:08.244000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T719",
    "universal_id": "5bfec59a-f4bf-4b75-a5a9-09ec0abafd52",
    "countermeasure_name": "Test if S3 bucket access logging is enabled on the CloudTrail S3 bucket (AWS)",
    "countermeasure_solution": "Perform the following to ensure the CloudTrail S3 bucket has access logging enabled: \n\n__Via the Management Console:__\n\n1. Go to the Amazon CloudTrail console at [https://console.aws.amazon.com/cloudtrail/home](https://console.aws.amazon.com/cloudtrail/home).\n2. In the API activity history pane on the left, click Trails.\n3. In the Trails pane, note the bucket names in the S3 bucket column .\n4. Sign in to the AWS Management Console and open the S3 console at  [https://console.aws.amazon.com/s3](https://console.aws.amazon.com/s3).\n5. Under All Buckets click on a target S3 bucket.\n6. Click on Properties in the top right of the console.\n7. Under Bucket:_<bucket_name>_ click on Logging.\n8. Test __fails__ if Enabled is checked. \n\n__Via the Command-Line Interface:__\n\n`aws s3api get-bucket-logging --bucket <s3_bucket_for_cloudtrail>`",
    "weakness_title_read_only": "Disabled S3 bucket logging on target S3 buckets (AWS)",
    "weakness_id_read_only": "P852",
    "weakness": "cbb1fc07-0a30-47c6-9535-48f3544a0d11",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2017-06-12T09:33:09.193000-04:00",
    "last_updated": "2022-06-03T03:55:08.264000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T720",
    "universal_id": "93a880a7-c83c-424a-869d-71475c27b98a",
    "countermeasure_name": "Test that log metrics and alarms are created (AWS)",
    "countermeasure_solution": "Perform the following to determine if the account is configured as required:\n\n1. Identify the log group name configured for use with CloudTrail:\n\n        aws cloudtrail describe-trails\n\n2. Note the <cloudtrail_log_group_name> value associated with *CloudWatchLogsLogGroupArn*:\n\n        \"arn:aws:logs:eu-west-1:<aws_account_number>:log-group:<cloudtrail_log_group_name>:*\"\n\n3. Get a list of all associated metric filters for this <cloudtrail_log_group_name>:\n\n        aws logs describe-metric-filters --log-group-name \"<cloudtrail_log_group_name>\"\n\n4. Ensure the output from the above command contains the following items:\n\n        \"filterPattern\": \"{ ($.errorCode = \\\"*UnauthorizedOperation\\\") || ($.errorCode = \\\"AccessDenied*\\\") }\"\n\n    <!-- -->\n\n        \"filterPattern\": \"{ ($.eventName = \\\"ConsoleLogin\\\") && ($.additionalEventData.MFAUsed != \\\"Yes\\\") }\"\n\n    <!-- -->\n\n        \"filterPattern\": \"{ $.userIdentity.type = \\\"Root\\\" && $.userIdentity.invokedBy NOT EXISTS && $.eventType != \\\"AwsServiceEvent\\\" }\"\n\n    <!-- -->\n\n        \"filterPattern\": \"{($.eventName=DeleteGroupPolicy) || ($.eventName=DeleteRolePolicy) || ($.eventName=DeleteUserPolicy) || ($.eventName=PutGroupPolicy) || ($.eventName=PutRolePolicy) || ($.eventName=PutUserPolicy) || ($.eventName=CreatePolicy) || ($.eventName=DeletePolicy) || ($.eventName=CreatePolicyVersion) || ($.eventName=DeletePolicyVersion) || ($.eventName=AttachRolePolicy) || ($.eventName=DetachRolePolicy) || ($.eventName=AttachUserPolicy) || ($.eventName=DetachUserPolicy) || ($.eventName=AttachGroupPolicy) || ($.eventName=DetachGroupPolicy)}\"\n\n    <!-- -->\n\n        \"filterPattern\": \"{ ($.eventName = CreateTrail) || ($.eventName = UpdateTrail) || ($.eventName = DeleteTrail) || ($.eventName = StartLogging) || ($.eventName = StopLogging) }\"\n\n    <!-- -->\n\n        \"filterPattern\": \"{ ($.eventSource = s3.amazonaws.com) && (($.eventName = PutBucketAcl) || ($.eventName = PutBucketPolicy) || ($.eventName = PutBucketCors) || ($.eventName = PutBucketLifecycle) || ($.eventName = PutBucketReplication) || ($.eventName = DeleteBucketPolicy) || ($.eventName = DeleteBucketCors) || ($.eventName = DeleteBucketLifecycle) || ($.eventName = DeleteBucketReplication)) }\"\n\n    <!-- -->\n\n        \"filterPattern\": \"{ ($.eventName = CreateCustomerGateway) || ($.eventName = DeleteCustomerGateway) || ($.eventName = AttachInternetGateway) || ($.eventName = CreateInternetGateway) || ($.eventName = DeleteInternetGateway) || ($.eventName = DetachInternetGateway) }\"\n\n    <!-- -->\n\n        \"filterPattern\": \"{ ($.eventName = CreateRoute) || ($.eventName = CreateRouteTable) || ($.eventName = ReplaceRoute) || ($.eventName = ReplaceRouteTableAssociation) || ($.eventName = DeleteRouteTable) || ($.eventName = DeleteRoute) || ($.eventName = DisassociateRouteTable) }\"\n\n    <!-- -->\n\n        \"filterPattern\": \"{ ($.eventName = CreateVpc) || ($.eventName = DeleteVpc) || ($.eventName = ModifyVpcAttribute) || ($.eventName = AcceptVpcPeeringConnection) || ($.eventName = CreateVpcPeeringConnection) || ($.eventName = DeleteVpcPeeringConnection) || ($.eventName = RejectVpcPeeringConnection) || ($.eventName = AttachClassicLinkVpc) || ($.eventName = DetachClassicLinkVpc) || ($.eventName = DisableVpcClassicLink) || ($.eventName = EnableVpcClassicLink) }\"\n\n5. Note following: \n\n    - Note the _<unauthorized_api_calls_metric>_ value associated with the filterPattern found in step 4.\n    - Note the _<no_mfa_console_signin_metric>_ value associated with the filterPattern found in step 4.\n    - Note the _<root_usage_metric>_ value associated with the filterPattern found in step 4.\n    - Note the _<iam_changes_metric>_ value associated with the filterPattern found in step 4.\n    - Note the _<cloudtrail_cfg_changes_metric>_ value associated with the filterPattern found in step 4.\n    - Note the _<s3_bucket_policy_changes_metric>_ value associated with the filterPattern found in step 4.\n    - Note the _<network_gw_changes_metric>_ value associated with the filterPattern found in step 4.\n    - Note the _<route_table_changes_metric>_ value associated with the filterPattern found in step 4.\n    - Note the _<vpc_changes_metric>_ value associated with the filterPattern found in step 4.\n\n6. Get a list of CloudWatch alarms and filter on the following:\n\n    - Get a list of CloudWatch alarms and filter on the _<unauthorized_api_calls_metric>_ captured in step 5.\n\n            aws cloudwatch describe-alarms --query 'MetricAlarms[?MetricName==`_<unauthorized_api_calls_metric>_`]'\n\n    - Get a list of CloudWatch alarms and filter on the _<no_mfa_console_signin_metric>_ captured in step 5.\n\n            aws cloudwatch describe-alarms --query 'MetricAlarms[?MetricName==`_<no_mfa_console_signin_metric>_`]'\n\n    - Get a list of CloudWatch alarms and filter on the _<root_usage_metric>_ captured in step 5.\n\n            aws cloudwatch describe-alarms --query 'MetricAlarms[?MetricName==`_<root_usage_metric>_`]'\n\n    - Get a list of CloudWatch alarms and filter on the _<iam_changes_metric>_ captured in step 5.\n\n            aws cloudwatch describe-alarms --query 'MetricAlarms[?MetricName==`_<iam_changes_metric>_`]'\n\n    - Get a list of CloudWatch alarms and filter on the _<cloudtrail_cfg_changes_metric>_ captured in step 5.\n\n            aws cloudwatch describe-alarms --query 'MetricAlarms[?MetricName==`_<cloudtrail_cfg_changes_metric>_`]'\n\n    - Get a list of CloudWatch alarms and filter on the _<s3_bucket_policy_changes_metric>_ captured in step 5.\n\n            aws cloudwatch describe-alarms --query 'MetricAlarms[?MetricName==`_<s3_bucket_policy_changes_metric>_`]'\n\n    - Get a list of CloudWatch alarms and filter on the _<network_gw_changes_metric>_ captured in step 5.\n\n            aws cloudwatch describe-alarms --query 'MetricAlarms[?MetricName==`_<network_gw_changes_metric>_`]'\n\n    - Get a list of CloudWatch alarms and filter on the _<route_table_changes_metric>_ captured in step 5.\n\n            aws cloudwatch describe-alarms --query 'MetricAlarms[?MetricName==`_<route_table_changes_metric>_`]'\n\n    - Get a list of CloudWatch alarms and filter on the _<vpc_changes_metric>_ captured in step 5.\n\n            aws cloudwatch describe-alarms --query 'MetricAlarms[?MetricName==`_<vpc_changes_metric>_`]'\n\n7. Note the AlarmActions value, as this will provide the SNS topic ARN value.\n8. Ensure there is at least one subscriber to the SNS topic:\n\n        aws sns list-subscriptions-by-topic --topic-arn _<sns_topic_arn>_",
    "weakness_title_read_only": "Insufficient Logging or Insufficient Protection of Logs",
    "weakness_id_read_only": "P619",
    "weakness": "9a42301f-ed6c-42cb-a85d-a5134b76b701",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2017-06-12T09:33:09.203000-04:00",
    "last_updated": "2022-06-03T03:55:08.288000-04:00",
    "custom": "False",
    "rules": "a5bb6d04-111c-4fd1-ab43-b8aed799e105 AND cab80cea-1a20-433f-b78c-783b816b8d33",
    "rules_read_only": "A1159 AND A739"
  },
  {
    "countermeasure_id": "T721",
    "universal_id": "7f85326d-3c35-4b17-a324-87958ea5619c",
    "countermeasure_name": "Test the appropriateness of the subscribers to each SNS topic (AWS)",
    "countermeasure_solution": "Perform the following to test the appropriateness of subscribers: \n\n__Via the AWS Management Console:__\n\n1. Sign in to the AWS Management Console and open the SNS console at [https://console.aws.amazon.com/sns/](https://console.aws.amazon.com/sns/)\n2. Click on Topics in the left navigation pane\n3. Evaluate Topics by clicking on the value within the ARN column\n4. Within a selected Topic evaluate:\n    - Topic owner\n    - Region\n7. Within the Subscriptions section evaluate:\n    - _Subscription ID_\n    - _Protocol_\n    - _Endpoint_\n    - _Subscriber_ (Account ID)\n11. If in any of the above steps an appropriate subscriber is found, then this test __fails__.\n\n__Via the Command-Line Interface:__\n\n```\naws sns list-topics\naws sns list-subscriptions-by-topic --topic-arn _<topic_arn>_\n```",
    "weakness_title_read_only": "Inappropriate subscribers to an SNS topic (AWS)",
    "weakness_id_read_only": "P853",
    "weakness": "eec1b29f-b89f-41a9-a9a4-de5790f5041e",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2017-06-12T09:33:09.213000-04:00",
    "last_updated": "2021-06-25T14:47:45.313000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T722",
    "universal_id": "3c315447-9c1b-43d2-b1ec-9cf482d7ac4a",
    "countermeasure_name": "Test Security Group requirements (AWS)",
    "countermeasure_solution": "Perform the following to determine if the account is configured as prescribed:\n\n1. Login to the AWS Management Console at [https://console.aws.amazon.com/vpc/home](https://console.aws.amazon.com/vpc/home).\n2. In the left pane, click Security Groups.\n3. For each security group, perform the following:\n    - Select the security group.\n    - Click the Inbound Rules tab.\n    - Ensure no rule exists that has a port range that includes port __22__ and has a Source of 0.0.0.0/0.\n \nRepeat the same steps for port __3389__ and Source of 0.0.0.0/0.\n\n__Note:__ A Port value of ALL or a port range such as 0-1024 are inclusive of port 22. A Port value of ALL or a port range such as 1024-4098 are inclusive of port 3389.\n\nOr using AWS Command-line Interface:\n\n    aws ec2 describe-security-groups --filters Name=ip-permission.cidr,Values='0.0.0.0/0' Name=ip-permission.to-port,Values='22' --query 'SecurityGroups[*].GroupId'\n\n<!--  -->\n\n    aws ec2 describe-security-groups --filters Name=ip-permission.cidr,Values='0.0.0.0/0' Name=ip-permission.to-port,Values='3389' --query 'SecurityGroups[*].GroupId'",
    "weakness_title_read_only": "Unrestricted connectivity to remote console services (AWS)",
    "weakness_id_read_only": "P839",
    "weakness": "ddbb8608-2bc4-4273-92c9-64109b1ec827",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2017-06-12T09:33:09.222000-04:00",
    "last_updated": "2022-06-03T03:55:08.312000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T723",
    "universal_id": "a84730a4-31eb-432c-9520-5efa6186418a",
    "countermeasure_name": "Test that hardware multi-factor authentication (MFA) is enabled for the 'root' account (AWS)",
    "countermeasure_solution": "Perform the following to determine if the root account has a hardware multi-factor authentication (MFA) setup:\n\n* Run the following command to list all virtual MFA devices: `aws iam list-virtual-mfa-devices` \n* If the output contains one MFA with the following Serial Number, it means the MFA is virtual (not hardware) and the account is not compliant with this recommendation:\n\n` \"SerialNumber\": \"arn:aws:iam::_<aws_account_number>_:mfa/root-account-mfa-device\"`",
    "weakness_title_read_only": "Missing hardware multi-factor authentication (MFA) (AWS)",
    "weakness_id_read_only": "P841",
    "weakness": "7f015572-eeb3-4ac7-a8c0-8c5c76111345",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2017-06-12T09:36:39.071000-04:00",
    "last_updated": "2022-06-03T03:55:08.333000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T724",
    "universal_id": "a2552714-3b24-473c-9643-7eddb575d459",
    "countermeasure_name": "Test that IAM instance roles are used for resource access from instances (AWS)",
    "countermeasure_solution": "__If an instance is associated with a role:__\n\nFor instances that are known to perform AWS actions, ensure that they belong to an instance role that has the necessary permissions:\n\n1. Login to AWS Console (with appropriate permissions to View Identity Access Management Account Settings)\n2. Open the EC2 Dashboard and choose \"Instances\"\n3. Click the EC2 instance that performs AWS actions, in the lower pane details find \"IAM Role\"\n4. If the Role is blank, the instance is not assigned to one.\n5. If the Role is filled in, it does not mean the instance might not *also* have credentials encoded on it for some activities.\n\n__If an instance contains embedded credentials:__\n\nOn the instance that is known to perform AWS actions, audit all scripts and environment variables to ensure that none of them contain AWS credentials.\n\n__If an instance application contains embedded credentials:__\n\nApplications that run on an instance may also have credentials embedded. This is a bad practice, but even worse if the source code is stored in a public code repository such as github. When an application contains credentials can be determined by eliminating all other sources of credentials and if the application can still access AWS resources - it likely contains embedded credentials. Another method is to examine all source code and configuration files of the application.",
    "weakness_title_read_only": "Failing to properly use AWS IAM roles (AWS)",
    "weakness_id_read_only": "P842",
    "weakness": "817be480-b4cd-4532-9848-664b630a05fb",
    "tags": "",
    "countermeasure_priority": "3",
    "phase": "testing",
    "created": "2017-06-12T09:38:22.565000-04:00",
    "last_updated": "2022-06-03T03:55:08.353000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T725",
    "universal_id": "c6ed81b9-d5f4-4dcd-826b-03f434bc7cd5",
    "countermeasure_name": "Test that log file validation is enabled (AWS)",
    "countermeasure_solution": "Perform the following on each trail to determine if log file validation is enabled:\n\n__Via the Management Console:__\n\n1. Sign in to the AWS Management Console and open the IAM console at [https://console.aws.amazon.com/cloudtrail](https://console.aws.amazon.com/cloudtrail).\n2. Click on Trails on the left navigation pane.\n3. You will be presented with a list of trails across all regions.\n4. Ensure at least one Trail has All specified in the Region column.\n5. Click on a trail via the link in the _Name_ column.\n6. Under the S3 section, ensure Enable log file validation is set to Yes.\n\n__Via the CLI:__\n\nEnsure LogFileValidationEnabled is set to true for each trail:\n\n    aws cloudtrail describe-trails",
    "weakness_title_read_only": "Unsecure use of CloudTrail logs (AWS)",
    "weakness_id_read_only": "P843",
    "weakness": "9a203917-bf79-4b85-80c9-645cf4a6363d",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2017-06-12T09:38:22.605000-04:00",
    "last_updated": "2022-06-03T03:55:08.373000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T726",
    "universal_id": "a3f2b631-1c6d-4367-aa6f-e989a24dd080",
    "countermeasure_name": "Test that CloudTrail logs are encrypted at rest using KMS CMKs (AWS)",
    "countermeasure_solution": "Perform the following to determine if CloudTrail is configured to use SSE-KMS:\n\n__Via the Management Console:__\n\n1. Sign in to the AWS Management Console and open the CloudTrail console at [https://console.aws.amazon.com/cloudtrail](https://console.aws.amazon.com/cloudtrail).\n2. In the left navigation pane, choose Trails.\n3. Select a Trail.\n4. Under the S3 section, ensure Encrypt log files is set to Yes and a KMS key ID is specified in the KSM Key Id field.\n\n__Via the CLI:__\n\nRun the following command:\n\n    aws cloudtrail describe-trails\n\nFor each trail listed, SSE-KMS is enabled if the trail has a `KmsKeyId` property defined.",
    "weakness_title_read_only": "Unsecure use of CloudTrail logs (AWS)",
    "weakness_id_read_only": "P843",
    "weakness": "9a203917-bf79-4b85-80c9-645cf4a6363d",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2017-06-12T09:38:22.620000-04:00",
    "last_updated": "2022-06-03T03:55:08.395000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T727",
    "universal_id": "f959c5ce-30d8-4e9b-a698-2337877e4eda",
    "countermeasure_name": "Test that rotation is enabled for customer created CMKs (AWS)",
    "countermeasure_solution": "__Via the Management Console:__\n\n1. Sign in to the AWS Management Console and open the IAM console at [https://console.aws.amazon.com/iam](https://console.aws.amazon.com/iam).\n2. In the left navigation pane, choose Encryption Keys.\n3. Select a customer created master key (CMK).\n4. Under the Key Policy section, move down to Key Rotation.\n5. Ensure the Rotate this key every year checkbox is checked.\n\n__Via the CLI:__\n\n1. Run the following command to get a list of all keys and their associated KeyIds:\n\n        aws kms list-keys\n\n2. For each key, note the KeyId and run the following command:\n\n        aws kms get-key-rotation-status --key-id <kms_key_id>\n\n3. Ensure KeyRotationEnabled is set to true.",
    "weakness_title_read_only": "Missing rotation for encryption keys (AWS)",
    "weakness_id_read_only": "P850",
    "weakness": "623b7a3e-0ac2-4f32-a9d6-b2ab814d569b",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2017-06-12T09:38:22.630000-04:00",
    "last_updated": "2022-06-03T03:55:08.415000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T728",
    "universal_id": "22c3f6cb-33f9-4589-99e1-21cd4d2d3066",
    "countermeasure_name": "Test that VPC flow logging is enabled in all VPCs (AWS)",
    "countermeasure_solution": "Perform the following to determine if VPC Flow logs are enabled:\n\n__Via the Management Console:__\n\n1. Sign into the management console.\n2. Select Services then VPC.\n3. In the left navigation pane, select Your VPCs.\n4. Select a VPC.\n5. In the right pane, select the Flow Logs tab.\n6. Ensure a Log Flow exists that has Active in the Status column.",
    "weakness_title_read_only": "Insufficient Logging or Insufficient Protection of Logs",
    "weakness_id_read_only": "P619",
    "weakness": "9a42301f-ed6c-42cb-a85d-a5134b76b701",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2017-06-12T09:38:22.644000-04:00",
    "last_updated": "2022-06-03T03:55:08.434000-04:00",
    "custom": "False",
    "rules": "a5bb6d04-111c-4fd1-ab43-b8aed799e105 AND cab80cea-1a20-433f-b78c-783b816b8d33 AND ac5f73c4-566a-4e69-975a-c497b00c10ee",
    "rules_read_only": "A1159 AND A739 AND A1161"
  },
  {
    "countermeasure_id": "T729",
    "universal_id": "ff90dfda-9d7f-4fd9-9b6a-44adc4295be4",
    "countermeasure_name": "Test that the default security group of every VPC restricts all traffic (AWS)",
    "countermeasure_solution": "Perform the following to determine if the account is configured as required:\n\n__Security Group State__\n\n1. Login to the AWS Management Console at [https://console.aws.amazon.com/vpc/home](https://console.aws.amazon.com/vpc/home).\n2. Repeat the next steps for all VPCs, including the default VPC in each AWS region:\n    * In the left pane, click Security Groups.\n    * For each default security group, perform the following:\n        * Select the default security group.\n        * Click the Inbound Rules tab.\n        * Ensure no rule exists.\n        * Click the Outbound Rules tab.\n        * Ensure no rule exists.\n\n__Security Group Members__\n\n1. Login to the AWS Management Console at [https://console.aws.amazon.com/vpc/home](https://console.aws.amazon.com/vpc/home).\n2. Repeat the next steps for all default groups in all VPCs, including the default VPC in each AWS region:\n    * In the left pane, click Security Groups.\n    * Copy the id of the default security group.\n    * Change to the EC2 Management Console at [https://console.aws.amazon.com/ec2/v2/home](https://console.aws.amazon.com/ec2/v2/home).\n    * In the filter column type `Security Group ID : <security group id from #4>`.",
    "weakness_title_read_only": "Running With Unnecessary Privileges",
    "weakness_id_read_only": "P150",
    "weakness": "07093262-3118-48ab-911f-86160f3ae8e2",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2017-06-12T09:38:22.654000-04:00",
    "last_updated": "2022-06-03T03:55:08.454000-04:00",
    "custom": "False",
    "rules": "a5bb6d04-111c-4fd1-ab43-b8aed799e105 AND cab80cea-1a20-433f-b78c-783b816b8d33 AND ac5f73c4-566a-4e69-975a-c497b00c10ee",
    "rules_read_only": "A1159 AND A739 AND A1161"
  },
  {
    "countermeasure_id": "T730",
    "universal_id": "70530c5b-2300-43e4-a78c-f94190c99453",
    "countermeasure_name": "Test that routing tables for VPC peering are 'least access' (AWS)",
    "countermeasure_solution": "Review routing tables of peered VPCs for whether they route all subnets of each VPC and whether that is necessary to accomplish the intended purposes for peering the VPCs.\n\n__Via the CLI:__\n\n* List all the route tables from a VPC and check if \"GatewayId\" is pointing to a _<peering_connection_id>_ (e.g. pcx-1a2b3c4d) and if \"DestinationCidrBlock\" is as specific as desired.\n\n        aws ec2 describe-route-tables --filter \"Name=vpc-id,Values=_<vpc_id>_\" --query \"RouteTables[*].{RouteTableId:RouteTableId, VpcId:VpcId, Routes:Routes, AssociatedSubnets:Associations[*].SubnetId}\"",
    "weakness_title_read_only": "Running With Unnecessary Privileges",
    "weakness_id_read_only": "P150",
    "weakness": "07093262-3118-48ab-911f-86160f3ae8e2",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2017-06-12T09:38:22.663000-04:00",
    "last_updated": "2022-06-03T03:55:08.474000-04:00",
    "custom": "False",
    "rules": "a5bb6d04-111c-4fd1-ab43-b8aed799e105 AND cab80cea-1a20-433f-b78c-783b816b8d33 AND ac5f73c4-566a-4e69-975a-c497b00c10ee",
    "rules_read_only": "A1159 AND A739 AND A1161"
  },
  {
    "countermeasure_id": "T733",
    "universal_id": "e7ffabfe-b1ed-4b77-b957-91720ad70517",
    "countermeasure_name": "Secure the PayPal Instant Payment Notification handlers",
    "countermeasure_solution": "To secure PayPal Instant Payment Notification handlers, always check the receiver's email address (merchant's email address) in the Instant Payment Notification handler.",
    "weakness_title_read_only": "Insecure PayPal Instant Payment Notification Handlers",
    "weakness_id_read_only": "P838",
    "weakness": "a2f78da8-bd26-40f0-b7a7-9819f9fedb7b",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "requirements",
    "created": "2017-06-23T17:19:02.561000-04:00",
    "last_updated": "2021-06-25T14:47:54.550000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T734",
    "universal_id": "1371a9f2-46f4-4924-9988-ff4c19d99668",
    "countermeasure_name": "Test if PayPal Instant Payment Notification handlers are secure",
    "countermeasure_solution": "Use the following guidelines for testing if PayPal Instant Payment Notification handlers are secure:\n\nTest if the receiver's email address in the IPN is the same as merchant's email address when validating a payment. Test __fails__ if they are different.",
    "weakness_title_read_only": "Insecure PayPal Instant Payment Notification Handlers",
    "weakness_id_read_only": "P838",
    "weakness": "a2f78da8-bd26-40f0-b7a7-9819f9fedb7b",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2017-07-13T15:59:53.182000-04:00",
    "last_updated": "2021-06-25T14:47:53.389000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T735",
    "universal_id": "e4ac5f6f-30cd-40b5-94b5-9575fc8fc780",
    "countermeasure_name": "Verify that personal information is removed when it is no longer needed",
    "countermeasure_solution": "Follow the steps below to check that all instances of personal information are removed when they are no longer needed: \n \n- Check the scheduled retention period and verify whether all information reaching the end of their retention period is removed from the system. \n- Check that personal information is removed from all backup servers. \n- Check whether all other parties with copies of the information are notified.\n- Check for evidence such as certificates of destruction, and retention schedule as proof of completing this countermeasure.",
    "weakness_title_read_only": "Privacy Violation",
    "weakness_id_read_only": "P257",
    "weakness": "b0418f1b-bf92-45ba-845f-abfb9735f1cf",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2017-07-18T16:54:33.080000-04:00",
    "last_updated": "2022-08-23T18:02:48.198000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T738",
    "universal_id": "282fdc70-ac29-40ee-aba6-f6ecdefdff17",
    "countermeasure_name": "Determine the legal basis for transferring personal information",
    "countermeasure_solution": "[Controllers](/library/glossary/G33) must provide instructions to [processors](/library/glossary/G34). Processors must verify their responsibilities by following the controller's instructions.\n\nIf your application transfers personal information internationally: \n \n- Make sure transferring to third countries is mentioned in the consent or privacy notice of your application.  \n\n- Where relevant, obtain consent or acknowledgement of the transfer to another jurisdiction, particularly where legal protections may not be the same as the originating jurisdiction. \n- Identify location details of the data servers that store personal information. \n- Implement a mechanism to check the data flow, such as a feature to enable an admin user to query the geographical location of the data objects. For example, given the type of personal information (e.g. user employment information), the system admin can get a report on where (e.g. which countries and which servers) any instances of such data type is stored. \n- Check with the privacy officer or [DPO](/library/glossary/G59/) and determine the countries to which each information type can be transferred. \n- Assign an allowlist of permitted locations and servers to each information type.  \n- Implement a mechanism to check the allowlist before every information transfer.",
    "weakness_title_read_only": "Privacy Violation",
    "weakness_id_read_only": "P257",
    "weakness": "b0418f1b-bf92-45ba-845f-abfb9735f1cf",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "requirements",
    "created": "2017-07-18T16:59:03.778000-04:00",
    "last_updated": "2023-05-25T13:09:49.046000-04:00",
    "custom": "False",
    "rules": "e6048769-8712-4d60-9ffb-e6bf2f3e4d55",
    "rules_read_only": "A1148"
  },
  {
    "countermeasure_id": "T739",
    "universal_id": "3569001c-8a7a-4a62-b221-eebb10d7f011",
    "countermeasure_name": "Verify if transferring personal information is legitimate and in compliance with applicable privacy regulations",
    "countermeasure_solution": "To verify if your process for transferring personal information is in compliance with privacy regulations (e.g. GDPR, LGPD, PIPEDA), check whether personal information is only transferred to permitted locations in an allowlist derived from an assessment of the lawfulness of transfer to those locations, or as permitted by contract (where relevant), and that necessary safeguards such as Standard Contractual Clauses, encryption, pseudonymization or anonymization, are implemented to mitigate possible risks to personal information.  \n\nThis test __fails__ if these steps are not taken.",
    "weakness_title_read_only": "Privacy Violation",
    "weakness_id_read_only": "P257",
    "weakness": "b0418f1b-bf92-45ba-845f-abfb9735f1cf",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "testing",
    "created": "2017-07-18T17:00:23.052000-04:00",
    "last_updated": "2023-05-11T12:48:31.109000-04:00",
    "custom": "False",
    "rules": "e6048769-8712-4d60-9ffb-e6bf2f3e4d55",
    "rules_read_only": "A1148"
  },
  {
    "countermeasure_id": "T740",
    "universal_id": "d53049d9-62f8-4e82-8b50-978425f4eb41",
    "countermeasure_name": "Provide personal information and its processing information to users in an appropriate format",
    "countermeasure_solution": "[Controllers](/library/glossary/G33) have the primary responsibility to respond to users about their processing information. If they are delegating this responsibility to their [processors](/library/glossary/G34), they must provide them with written instructions. Processors who have been assigned such a job must ensure that information is provided in compliance with the controller's written instructions.\n \n\n Provide users with required personal information about them that is held in your application:\n \n\n - Review the [Privacy Impact Assessment (PIA)](/library/glossary/G60/) document and consult your [DPO](/library/glossary/G52/) to identify different types of personal information your application collects and the purposes for which your application uses the data.\n - Implement a function to query all records of personal information associated with a user along with all necessary metadata including:\n  - The recipients to whom the data have been or will be disclosed.\n  - Envisaged time the data will be retained.\n  - The source of the data (if it was not collected from the user).\n  - If automated decision making or profiling was conducted, provide meaningful information about the logic involved.\n  - If the data was transferred to another country.\n  - If you redact or remove the personal information of an individual, provide an explanation for why the information was not provided.\n - Implement a user or admin interface to export the fetched data in a structured, machine readable format such as XML or JSON so that a user can transfer that data to another company if they want to. See the related amendment below.\n  \n __Notes:__ \n \n\n - There are limitations and exceptions to this requirement that will be determined by the business and its legal counsel. (GDPR Article 20). There may be circumstances where the release of certain types of personal information would be harmful to the individual, where it may be required to refuse access.  \n  \n - Authenticate the user via a 2-factor authentication mechanism, or rely on identity validation proportionate to the sensitivity of the information, before exporting any data.",
    "weakness_title_read_only": "Lack of features that allow access and modification of personal data",
    "weakness_id_read_only": "P815",
    "weakness": "29803852-9820-4cbb-9363-406b6cb24fa7",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "requirements",
    "created": "2017-07-18T17:01:50.412000-04:00",
    "last_updated": "2023-05-25T13:09:49.159000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T741",
    "universal_id": "78c45b0d-219b-4589-a8d7-646420d6aba9",
    "countermeasure_name": "Verify if users are provided with their personal data and its processing information in an appropriate format",
    "countermeasure_solution": "Verify that users have secure access to their personal data in your system in a machine readable format. Review the Privacy Impact Assessment (PIA) document and consult your Data Protection Officer (DPO) to identify different types of personal data that your application collects, and the purposes for which your application uses it. Based on this information, check whether you have a page in your application that shows all of the required information about processing personal data to users. If not, this test __fails__.",
    "weakness_title_read_only": "Lack of features that allow access and modification of personal data",
    "weakness_id_read_only": "P815",
    "weakness": "29803852-9820-4cbb-9363-406b6cb24fa7",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2017-07-18T17:02:46.681000-04:00",
    "last_updated": "2021-06-25T14:48:00.484000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T742",
    "universal_id": "5768e687-2e05-4b80-b474-b761350d4097",
    "countermeasure_name": "Implement technical measures to ensure the accuracy of personal information",
    "countermeasure_solution": "To ensure the accuracy of personal information and mitigate integrity risks: \n \n- Implement self-serve interfaces for users to maintain their own personal information. \n- Validate all forms of input as instructed in [T31](/library/tasks/T31/). \n- Ensure that if personal information is updated in one location (e.g. a System of Record), it is propagated throughout all systems so that there is no inconsistency between different datastores. \n- Check for and remove information duplicates.",
    "weakness_title_read_only": "Privacy Violation",
    "weakness_id_read_only": "P257",
    "weakness": "b0418f1b-bf92-45ba-845f-abfb9735f1cf",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "requirements",
    "created": "2017-07-18T17:03:54.874000-04:00",
    "last_updated": "2023-05-25T13:09:48.552000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T743",
    "universal_id": "2911a7d4-d862-4b57-ae7a-bb452b0f48f1",
    "countermeasure_name": "Verify accuracy of personal information",
    "countermeasure_solution": "Verify the accuracy of personal information by :\n- Checking if users can view and update their personal information on your system. \n- Checking whether input validation and consistency checks are in place for this information. \n- Checking the evidence such as intranet or policy centre; scripts for employees; automated mechanisms for implementing data quality checks.\n\nThis test __fails__ if the accuracy cannot be verified or inadequate validation and consistency check are in place.",
    "weakness_title_read_only": "Privacy Violation",
    "weakness_id_read_only": "P257",
    "weakness": "b0418f1b-bf92-45ba-845f-abfb9735f1cf",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2017-07-18T17:05:01.232000-04:00",
    "last_updated": "2023-05-11T12:48:32.657000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T744",
    "universal_id": "5ea8078a-045b-4c32-a4b4-df1d04f5df46",
    "countermeasure_name": "Protect pseudonymized personal information",
    "countermeasure_solution": "If you are a [controller](/library/glossary/G33/) or a service provider, implement pseudonymization before giving the data to the [processor](/library/glossary/G34/).\n\nIf your application pseudonymizes personal information, follow these guidelines to protect the identity of individuals associated with that information: \n \n- Review the [Privacy Impact Assessment (PIA)](/library/glossary/G60/) document and consult your [DPO](/library/glossary/G59/) to specify the identifying fields within a data record to be replaced by artificial identifiers. \n    - This is to make sure personal information cannot be attributed to an individual by using identifying techniques such as singling out. \n- Keep the relation between the identifying fields and the artificial identifiers protected. \n- Keep additional information that can be combined with personal information to identify a natural person in a separate location. \n- Limit access to this information only to privileged admin roles on a need-to-know basis.",
    "weakness_title_read_only": "Privacy Violation",
    "weakness_id_read_only": "P257",
    "weakness": "b0418f1b-bf92-45ba-845f-abfb9735f1cf",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "requirements",
    "created": "2017-07-18T17:06:51.719000-04:00",
    "last_updated": "2023-05-25T13:09:48.843000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T745",
    "universal_id": "f92a805f-9695-477b-8079-181037508697",
    "countermeasure_name": "Verify if pseudonymized personal information is protected",
    "countermeasure_solution": "Verify whether pseudonymized personal information is protected in your system by checking whether it can be combined with other information in the same location/database to identify an individual. \n\nThis test __fails__ if pseudonymized information can be combined with other information in the same location/database.",
    "weakness_title_read_only": "Privacy Violation",
    "weakness_id_read_only": "P257",
    "weakness": "b0418f1b-bf92-45ba-845f-abfb9735f1cf",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2017-07-18T17:07:59.563000-04:00",
    "last_updated": "2023-05-11T12:48:34.007000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T750",
    "universal_id": "88baa1e3-2a7c-4621-bd23-321e14c2dacf",
    "countermeasure_name": "Limit personal information collection and processing to the specified purpose",
    "countermeasure_solution": "Follow these guidelines to minimize Personal Data collection and processing:\n\n- Review the [Privacy Impact Assessment (PIA)](/library/glossary/G60/) document and consult with your [DPO](/library/glossary/G59/) to ensure that the collected personal data and designed software features are consistent with the business requirements, and that they are all described in the PIA. Change the design or update the PIA if necessary.\n- Review optional personal data that your application collects. If collecting an optional piece of data is not strictly necessary for the purpose, do not collect it.\n    - This Countermeasure's purpose is to review collected optional personal data and decide what is not required for the purpose of collection, not that it is prohibited to use reasonable optional fields.\n    - Identify data that is collected and not used later in the workflow/process. This may indicate that it is excessive.\n    - Although the default is to collect as little data as possible, give the user the option to choose otherwise (data reduction/minimization).\n    - Provide the data subject with the option to provide additional data voluntarily to improve the service (such as product recommendations, personalized advertisements) with the possibility to opt out.\n    - Specify the purpose for collecting personal data no later than at the time of data collection.",
    "weakness_title_read_only": "Collecting more personal information than is required for specified purposes",
    "weakness_id_read_only": "P859",
    "weakness": "cc6f9f91-e921-4d05-9319-3e79f892b2e1",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "requirements",
    "created": "2017-07-19T10:44:40.317000-04:00",
    "last_updated": "2023-05-25T13:09:49.279000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T751",
    "universal_id": "b4a2a099-3cb6-488c-abdc-b918ad9baa72",
    "countermeasure_name": "Provide users with a notification of personal information processing",
    "countermeasure_solution": "[Controllers](/library/glossary/G33) have the primary responsibility to notify users about processing activities that affect their personal information. If they are delegating this responsibility to their [processors](/library/glossary/G34), they must provide them with written instructions. Processors who have been assigned such a job must ensure that notification is provided in compliance with the controller's written instructions.\n\nFollow these guidelines:\n\n- Provide the notification in multiple formats and places, and make it accessible. A link on every page and website, supplemented with clear notification at all points of data collection (such as on forms) or on web-pages or other input mechanisms,with content and length appropriate to the nature of the data being collected, used or disclosed, as well as the device being used  (‘just in time notification’). \n- Use clear, concise, and easy to understand language. This may require translation to multiple languages.\n- The notification must be sent within a reasonable timeframe (see amendments for regulation-specific requirements)\n- Include the following information in the notice:\n    - The purpose of the processing.\n    - The categories of personal information involved.\n    - The recipients or categories of recipients the personal information has been or will be disclosed to.\n    - The intended period personal information will be stored for, and the criteria used to determine that period.",
    "weakness_title_read_only": "Lack of features that allow access and modification of personal data",
    "weakness_id_read_only": "P815",
    "weakness": "29803852-9820-4cbb-9363-406b6cb24fa7",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "requirements",
    "created": "2017-07-19T10:49:16.463000-04:00",
    "last_updated": "2022-02-25T15:31:52.093000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T752",
    "universal_id": "452f3d97-395e-44ae-b43c-05fd08e9bb10",
    "countermeasure_name": "Verify if users are notified about processing their personal information",
    "countermeasure_solution": "Ensure that users are provided with a notification regarding processing activities on their Personal Data. Follow these guidelines:\n\n- Provide the notification in multiple formats and places, and make it accessible. A link on every page and website, supplemented with clear notification at all points of data collection (such as on forms) on web pages or other input mechanisms, with content and length appropriate to the nature of the data being collected, used or disclosed, as well as the device being used  (‘just in time notification’).. \n- Use clear, concise, and easy to understand language. This may require translation to multiple languages.\n- The notification must be sent within a reasonable timeframe (see amendments for regulation-specific requirements)\n- Include the following information in the notice:\n    - The purpose of the processing.\n    - The categories of personal information involved.\n    - The recipients or categories of recipients the personal information has been or will be disclosed to.\n    - The intended period personal information will be stored for, and the criteria used to determine that period.\n\nThis test __fails__ if user-accessible notifications are not provided within a reasonable timeframe.\n\nCheck for the evidence such as website, other electronic communications, signage, posters, email, flyers, campaign copies, contracts, versioning, scripts, recordings, etc. as proof of completing this countermeasure.",
    "weakness_title_read_only": "Lack of features that allow access and modification of personal data",
    "weakness_id_read_only": "P815",
    "weakness": "29803852-9820-4cbb-9363-406b6cb24fa7",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2017-07-19T11:37:51.759000-04:00",
    "last_updated": "2022-08-23T18:07:47.071000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T753",
    "universal_id": "ffdf22df-4661-43bb-a617-c2c65b516315",
    "countermeasure_name": "Verify whether personal information is collected only for specified purposes",
    "countermeasure_solution": "To verify if personal data was collected only for the specified purpose, review the Privacy Impact Assessment (PIA) document and consult your Data Protection Officer (DPO) to identify different types of personal data your application collects and the purposes for which your application uses the data. identify the business need for all data collected from a user. If the data cannot be linked to the original purpose of data collection, and there is no business need for it, then it is collected in excess.",
    "weakness_title_read_only": "Collecting more personal information than is required for specified purposes",
    "weakness_id_read_only": "P859",
    "weakness": "cc6f9f91-e921-4d05-9319-3e79f892b2e1",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2017-07-19T11:38:55.710000-04:00",
    "last_updated": "2023-05-11T12:48:36.425000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T754",
    "universal_id": "28791aa0-024b-408d-a6ed-23fcc9be019e",
    "countermeasure_name": "Enable the restriction of processing personal information of an individual for a specific purpose",
    "countermeasure_solution": "[Controllers](/library/glossary/G33) have the primary responsibility to respond to users. If they delegate this responsibility to their [processors](/library/glossary/G34), they must provide them with written instructions. Processors who are assigned such a responsibility must ensure that the functionality for restricting the processing of personal information is in compliance with the controller's written instructions.\n\nFollow these guidelines to restrict personal information that must no longer be processed: \n \n- Review the PIA and/or Data Processing Register to determine any activity a user can object to because it uses their personal data. \n- Assign a checklist of allowed activities to each user account. \n- Flag the target activities as restricted for the target user. \n- Check if a certain activity on a user's personal information is allowed before performing the activity. \n- Move the restricted information to another server for temporary storage and stop any processing on it. \n \nFor example, if a user unsubscribes from marketing emails, the user's email on the system should be flagged to make sure the user won't receive the emails again. Alternatively, if suppression is not possible, the information should be removed from the system.",
    "weakness_title_read_only": "Privacy Violation",
    "weakness_id_read_only": "P257",
    "weakness": "b0418f1b-bf92-45ba-845f-abfb9735f1cf",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "requirements",
    "created": "2017-07-19T11:40:11.130000-04:00",
    "last_updated": "2023-05-25T13:09:48.880000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T755",
    "universal_id": "939c1258-84c5-47e4-8bad-cd88abca2cb8",
    "countermeasure_name": "Maintain a Data Processing Register or Record of Business Processing Activities",
    "countermeasure_solution": "Follow these steps to record personal data processing activities:\n\n- Maintain an enterprise-wide inventory of personal information holdings by providing the URI of the project's data source to the Data Protection Officer.    \n- Provide evidence for audits with a database, specialized inventory system, or intranet form repository.\n- Include the following information in the record:\n    - The name and contact details of the [controllers](/library/glossary/G33/) or [processors](/library/glossary/G34/), their representatives, and the Data Protection Officer.\n    - The categories of processing carried out on behalf of each controller (on the processors' records).\n    - The purpose of the processing.\n    - Descriptions of data subject categories and their personal information.\n    - The categories of [recipients](/library/glossary/G35/) to whom the personal information has been or will be disclosed.\n    - The identification of countries outside the EU that the data will be transferred to (if applicable), and the documentation of suitable safeguards in effect.\n    - The retention period for relevant categories of data (where possible).\n    - The general description of technical or organizational security measures that are in effect.\n- Maintain a list in the database of activities together with associated personal data for each user.\n- Implement a profile/settings page for each user to access all activities together with the processed personal information associated with themselves.",
    "weakness_title_read_only": "Inadequate documentation of data processing activities",
    "weakness_id_read_only": "P861",
    "weakness": "e484a447-479f-453b-8b9f-61df0975c425",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "requirements",
    "created": "2017-07-19T11:41:41.332000-04:00",
    "last_updated": "2023-05-25T13:09:49.240000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T756",
    "universal_id": "5fd1464d-5d31-4583-94a4-e55d1bad45de",
    "countermeasure_name": "Verify if personal data processing activities are recorded and maintained",
    "countermeasure_solution": " - Verify whether your systems maintain appropriate documentation in the jurisdictions in which you operate for personal information processing activities. Check whether: \n    - The register contains all necessary information.\n    - Register activities are associated with the personal data of each user in the database.\n    - There exists a profile page to list the activities and processed personal data for individuals.\n \n- Verify the existence of evidence that can prove the implementation of this activity, such as:\n    - Notices to provide transparency regarding the use of AI in processing personal information\n    - Procedures to explain AI-based decisions\n    - Reviews of process policies\n    - Records or logs of monitoring\n    - Signage\n\nThis test __fails__ if the activities are not recorded or maintained or if no evidence exists to prove the implementation of such measures.",
    "weakness_title_read_only": "Inadequate documentation of data processing activities",
    "weakness_id_read_only": "P861",
    "weakness": "e484a447-479f-453b-8b9f-61df0975c425",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "testing",
    "created": "2017-07-19T11:43:07.326000-04:00",
    "last_updated": "2023-05-11T12:48:44.808000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T757",
    "universal_id": "7051d719-550f-47ba-9c63-1428cb3fc8c8",
    "countermeasure_name": "Verify if personal information processing stops when user objects to it",
    "countermeasure_solution": "Verify that processing of a user’s personal information stops when they object to it. Users might only object to part of the processing, such as marketing emails. Check whether the processing of personal information of the user is flagged as being limited on your system and that objected processing on that information is stopped. If the objection is not to be honored, for instance, where an employee benefit cannot be provided without the personal information, or if an organization is legally required to collect and process the personal information, the objection should be noted, and the reasons for its rejection document. \nThis test __fails__ if user objections do not prevent their personal information from being processed.\n\nYou can also check for the evidence of completing this countermeasure, such as:\n- Cookies, consent and preference management mechanism\n- Calling scripts, automated voice messages; unsubscribe or opt-out process\n- Contracts with third parties, emails\n- NDA or confidentiality agreement\n- Privacy impact assessment, procedures relating to e-discovery, retention schedule\n- Integration of data privacy into conducting internal investigations (HR Policy)\n- Integration of data privacy into practices for disclosure to and for law enforcement purposes (Policy and procedures relating to disclosures, warrants and subpoenas, court decisions)\n- Integration of data privacy into research practices (Privacy impact assessments, research policy)",
    "weakness_title_read_only": "Privacy Violation",
    "weakness_id_read_only": "P257",
    "weakness": "b0418f1b-bf92-45ba-845f-abfb9735f1cf",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2017-07-19T11:46:23.476000-04:00",
    "last_updated": "2023-05-11T12:48:38.798000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T764",
    "universal_id": "2bef7f16-d91e-475f-bb6f-3df89e12d91a",
    "countermeasure_name": "Avoid displaying sensitive information through iOS widgets",
    "countermeasure_solution": "To protect user privacy and information security:\n\n1. Do not display sensitive information using an iOS widget. \n2. If an iOS widget is required, educate the user to disable widget access from the lock screen using **Allow Access When Locked** from the Settings menu.",
    "weakness_title_read_only": "Information leak through iOS widget",
    "weakness_id_read_only": "P860",
    "weakness": "d78a32cf-a421-4fa4-8c2e-d8c686f054c3",
    "tags": "",
    "countermeasure_priority": "2",
    "phase": "requirements",
    "created": "2017-07-19T19:07:13.847000-04:00",
    "last_updated": "2021-06-25T14:47:37.965000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T765",
    "universal_id": "e9ca2abe-843f-47f9-9542-ec3d23e8f81c",
    "countermeasure_name": "Authorize user before launching the iOS app via a widget",
    "countermeasure_solution": "Perform authorization status check while handling application launch through the widget's openURL call. Use the same authentication and authorization procedure matching the application's security requirements.",
    "weakness_title_read_only": "iOS widget unauthorized view navigation",
    "weakness_id_read_only": "P863",
    "weakness": "8c28524c-d6a8-480e-9054-8a298e1e658e",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "requirements",
    "created": "2017-07-28T16:23:44.578000-04:00",
    "last_updated": "2021-06-25T14:47:48.720000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T766",
    "universal_id": "844b129f-4787-4e83-ab0b-a6f52b83347d",
    "countermeasure_name": "Configure the relational database service correctly (AWS)",
    "countermeasure_solution": "Perform the following best practices in the Relational Database Service (RDS) configuration:\n\n- Enable the encryption at rest for databases running on RDS.\n- Enable the RDS Multi-AZ.\n- Enable the Auto Minor Version Upgrade in the RDS Instances if the database engine used by your application supports it.\n- Set the RDS backup retention policy.\n- Configure the RDS Database to use the Data-tier Security Group.\n\n__Note__:\nRDS is a managed relational database service that handles routine database tasks, such as provisioning, patching, backup, recovery, failure detection, and repair.\n\nThere are 6 database engines available for customer to run their database workloads on:\n\n* Amazon Aurora (MySQL Compatible)\n* MySQL\n* MariaDB\n* Oracle\n* Microsoft SQL Server\n* PostgreSQL\n\nAmazon RDS instances and snapshots can be encrypted at rest by enabling the encryption option on the Amazon RDS DB instance.\n\n- Data that is encrypted at rest includes the underlying storage for a DB instance, its automated backups, read replicas, and snapshots.\n- It is recommended that you enable encryption at rest.\n\nCustomers can deploy RDS databases within an Amazon Virtual Private Cloud (VPC) through the configuration of:\n\n* A subnet Group for RDS that will be used for deployment of single or Multi-AZ RDS instances\n* Network access through configuration of Security Groups for RDS\n* Access from outside the VPC hosting the DB instance by enabling/disabling a Public IP address",
    "weakness_title_read_only": "Relational Database Service Misconfigured (AWS)",
    "weakness_id_read_only": "P866",
    "weakness": "04f942b6-187b-4ad6-978b-a094e4acf94f",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2017-07-31T07:55:54.903000-04:00",
    "last_updated": "2022-06-03T03:55:08.498000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T767",
    "universal_id": "940b0fb0-4c1a-4048-a0a5-281b36e213b6",
    "countermeasure_name": "Encrypt the sensitive Elastic Block Storage volumes (AWS)",
    "countermeasure_solution": "Perform the following best practices:\n\n- Ensure all Elastic Block Storage (EBS) volumes for the Web tier are encrypted.\n- Ensure all EBS volumes for the App tier are encrypted.\n\n__Note__:\n\n- EBS volumes can be encrypted using AWS Key Management Service (KMS).\n    - In this configuration, encryption and decryption are handled transparently and require no additional action from the user, an Amazon Elastic Compute Cloud (Amazon EC2) instance, or application.\n    - When an encrypted Amazon EBS volume is attached to a supported Amazon EC2 instance type, the data stored at rest on the volume, disk I/O, and snapshots created from the volume are all encrypted.\n\n- Encryption occurs on the servers that host Amazon EC2 instances.\n    - Additionally, snapshots of encrypted volumes are automatically encrypted, and volumes that are created from encrypted snapshots are also automatically encrypted.\n    - It is recommended that you encrypt all EBS volumes for the Web and App tier.",
    "weakness_title_read_only": "Encryption on the sensitive Elastic Block Storage volumes is disabled (AWS)",
    "weakness_id_read_only": "P867",
    "weakness": "cb46ee11-dd6b-4811-a5c6-13c0c26ccd03",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2017-07-31T07:55:54.935000-04:00",
    "last_updated": "2022-06-03T03:55:08.523000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T768",
    "universal_id": "fb7a46cc-316c-4554-95d1-0ddb7fc7f432",
    "countermeasure_name": "Do not share sensitive Amazon Machine Images publicly (AWS)",
    "countermeasure_solution": "Perform the following best practices:\n\n- Ensure all Customer-owned Amazon Machine Images (AMI) for the Web tier are not shared publicly.\n- Ensure all Customer-owned Amazon Machine Images for the App tier are not shared publicly.\n\n__Note__:\n\n- Amazon Machine Images (AMI) are an exact duplicate of the instance they were created from, and will allow anyone with access to create a complete replica of the original instance.\n    - The original instance may contain intellectual property, proprietary applications, and configuration information that can be used to exploit or compromise any running instance in the Web tier.",
    "weakness_title_read_only": "Public Access to sensitive Amazon Machine Images (AWS)",
    "weakness_id_read_only": "P868",
    "weakness": "c5e4166a-e9ee-4418-8418-0861722451e7",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2017-07-31T07:55:54.954000-04:00",
    "last_updated": "2022-06-03T03:55:08.548000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T769",
    "universal_id": "b53fb9be-4f7b-49de-aa79-6ca720c7af1c",
    "countermeasure_name": "Configure Web- and App-tier ELB correctly (AWS)",
    "countermeasure_solution": "Perform the following best practices for configuring ELB:\n\n- Attach an Secure Socket Layer/Transfer Layer Security (SSL/TLS) Certificate to your Web-tier ELB:\n    - When you use HTTPS for your frontend listener, you must deploy an SSL/TLS certificate on your load balancer.\n    - The load balancer uses the certificate to terminate the connection and then decrypt requests from clients before sending them to the backend instances.\n\n- The TLS protocol uses an X.509 certificate (SSL/TLS server certificate) to authenticate both the client and the backend application.\n    - An X.509 certificate is a digital form of identification issued by a trusted certificate authority (CA) and contains identification information, a validity period, a public key, a serial number, and the digital signature of the issuer.\n    - You can create a certificate using a Third Party Certificate Authority or AWS Certificate Manager.\n\n- Configure latest SSL Security Policies on your Web-tier ELBs:\n    - Elastic Load Balancing uses an SSL negotiation configuration, known as a security policy, to negotiate SSL/TLS connections between a client and the load balancer.\n    - A security policy is a combination of SSL/TLS protocols, ciphers, and the Server Order Preference option.\n    - Elastic Load Balancing supports configuring your load balancer to use either predefined or custom security policies.\n\n- SSL and TLS are cryptographic protocols that are used to encrypt confidential data over insecure networks such as the Internet.\n    - The TLS protocol is a newer version of the SSL protocol.\n    - SSL and TLS protocols are referred to as the SSL protocol.\n\n- Configure the application layer Health Check on both Web- and App-tier ELBs:\n    - By default, an Auto Scaling Group periodically uses the results of the Amazon Elastic Compute Cloud (Amazon EC2) instance status checks to determine the health status of each instance.\n    - If an instance fails the EC2 instance status checks, Auto Scaling marks the instance as unhealthy and replaces the instance.\n        - However, if you have attached one or more load balancers to your Auto Scaling Group and the instance fails the ELB health checks, Auto Scaling does not replace the instance.\n    - Amazon ELB periodically sends pings, attempts connections, or sends requests to test the EC2 instances.\n        - These tests are called health checks.\n    - The status of the instances that are healthy at the time of the health check is `InService`.\n    - The status of any instances that are unhealthy at the time of the health check is `OutOfService`.\n        - The load balancer performs health checks on all registered instances, whether the instance is in a healthy state or an unhealthy state.\n    - The load balancer only routes requests to the healthy instances.\n    - When the load balancer determines that an instance is unhealthy, it stops routing requests to that instance.\n    - The load balancer resumes routing requests to the instance when it has been restored to a healthy state.\n\n- Create App-tier ELB as Internal:\n    - An internal load balancer routes traffic to your EC2 instances in private subnets using private IP addresses.\n    - Create an internal load balancer and register the database servers with it.\n        - The web servers receive requests from the Internet-facing load balancer and send requests for the database servers to the internal load balancer.\n    - The database servers receive requests from the internal load balancer.\n        - When an internal load balancer is created, it receives a public DNS name with the following form:\n\n        internal-_name_-_123456789_._region_.elb.amazonaws.com\n\n    - The DNS servers resolve the DNS name of your load balancer to the private IP addresses of the load balancer nodes for your internal load balancer.\n        - Each load balancer node is connected to the private IP addresses of the backend instances that are in its Availability Zone using elastic network interfaces.\n\n__Note__: An SSL certificate configured on the ELB and an SSL Security Policy is not mandatory if you are terminating SSL connections directly on the Web-tier EC2 instances, and using a TCP listener on the ELB (TCP pass-through).",
    "weakness_title_read_only": "Misconfiguration of Web- or App-tier Elastic Load Balancing (AWS)",
    "weakness_id_read_only": "P869",
    "weakness": "1ae8a659-3d34-4855-a90a-d948d4b34d0a",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2017-07-31T07:55:54.972000-04:00",
    "last_updated": "2022-06-03T03:55:08.572000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T770",
    "universal_id": "bd2c41b4-0fb8-4e6f-a2be-84001695a5bf",
    "countermeasure_name": "Configure S3 buckets correctly (AWS)",
    "countermeasure_solution": "Perform the following while configuring S3 buckets:\n\n- Assign a policy that requires server-side and in-transit encryption for all objects to each S3 bucket.\n- Enable versioning for all S3 buckets, as Amazon S3 can further protect data using versioning.\n- Create a \"lifecycle policy\" for each S3 bucket to customize your data retention needs.\n\n__Notes__:\n\n### On Encryption\n\nData in transit is accessed over the network and can be intercepted by someone else on the network, or by someone with access to the physical media the network uses. On an Ethernet network, that could be someone with the ability to tap a cable, configure a switch to mirror traffic, or fool your client or router into directing traffic to them before it moves on to the final destination.\n\nServer-side encryption (SSE) is about data encryption at rest. Amazon S3 encrypts your data at the object level as it writes it to disks in its data centers, and decrypts it for you when you access it. Amazon S3 offers 3 options for encrypting data at rest, depending on how you choose to manage the encryption keys:\n\n* Use SSE with Amazon S3-Managed Keys\n* Use SSE with AWS Key Management Service-Managed Keys\n* Use SSE with Customer-Provided Keys\n\nAt the time of object creation, when you are uploading a new object or making a copy of an existing object, you can specify if you want Amazon S3 to encrypt your data by adding `x-amz-server-side-encryption` header to the request.\n\n- Set the value of the header to the encryption algorithm **AES256** that Amazon S3 supports.\n- Amazon S3 confirms that your object is stored using server-side encryption by returning the response header `x-amz-server-side-encryption`.\n\nNo matter which of the three options you choose, you can create and attach an S3 bucket policy that will deny any object creation S3 API:\n    - If the request does not include the `x-amz-server-side-encryption` header requesting server-side encryption.\n    - If the request was not done using SSL/TLS.    \nThis applies to objects such as PUT Object, PUT Object - Copy, POST Object, and Initiate Multipart Upload.\n\n### On Versioning\n\nVersioning is a means of keeping multiple variants of an object in the same bucket. You can use versioning to preserve, retrieve, and restore every version of every object stored in your Amazon S3 bucket. You can easily recover from both unintended user actions and application failures. By default, requests retrieve the most recently written version. You can retrieve older versions of an object by specifying a version of the object in a request.\n\n### On Lifecycle Policy\n\nObject versioning can be used in combination with Object Lifecycle Management, allowing you to customize your data retention needs while controlling your related storage costs. Lifecycle policies can ensure that your data is moved to Glacier for longer term storage or is cleanly deleted once it is no longer required.\n\nFor information about creating lifecycle policies using the AWS Management Console, see [How Do I Create a Lifecycle Policy for an S3 Bucket?](http://docs.aws.amazon.com/AmazonS3/latest/user-guide/create-lifecycle.html) in the Amazon Simple Storage Service Console User Guide.",
    "weakness_title_read_only": "Misconfiguring S3 buckets (AWS)",
    "weakness_id_read_only": "P870",
    "weakness": "34562e6b-fa1c-4173-bc82-4673019511cd",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2017-07-31T07:55:54.990000-04:00",
    "last_updated": "2022-06-03T03:55:08.600000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T771",
    "universal_id": "51b8f2ca-8447-4e81-986a-c08ce20ec9f8",
    "countermeasure_name": "Create IAM roles and policies correctly for Amazon EC2 (AWS)",
    "countermeasure_solution": "Perform the following while creating IAM roles and policies for Amazon EC2:\n\n- Ensure that you create an IAM Role for Amazon EC2 for Web and App tiers.\n- Ensure that you configure an IAM Policy for EC2 [IAM Roles](/glossary/term/49/) for Web and App tiers.\n\nBy default, IAM users, groups, and roles have no access to AWS resources.\n\n__Notes__:\n\n####On IAM Roles\n\n- An IAM role is similar to a user in that it is an AWS identity with permission policies that determine what the identity can and cannot do in AWS.\n    - However, instead of being uniquely associated with one person, a role is intended to be assumable by anyone who needs it.\n\n- A role does not have any credentials (password or access keys) associated with it.\n    - Instead, if a user is assigned to a role, access keys are created dynamically and provided to the user.\n\n- You can use roles to delegate access to users, applications, or services that don't normally have access to your AWS resources.\n    - Applications must sign their API requests with AWS credentials.\n    - If you are an application developer, you need a strategy for managing credentials for your applications that run on EC2 instances.\n\n- IAM Roles for EC2 allow an application running within an EC2 instance assume the role applied to the instance.\n\n####On IAM Policies\n\n- IAM policies grant privileges to users, groups, or roles defined with AWS Identity Access Management.\n\n- An IAM policy is a document that formally states one or more permissions using the following structure:\n\n    * Actions: What actions are allowed (each AWS service has its own set of actions)\n    * Resources: Which resources will be affected by the action\n    * Effect: What occurs when the subject (user/group/roles) requests access\n\n- Policies are documents that are created using JSON.\n    - A policy consists of one or more statements, each of which describes one set of permissions.",
    "weakness_title_read_only": "IAM roles and policies are not created properly for Amazon EC2 (AWS)",
    "weakness_id_read_only": "P871",
    "weakness": "245731c8-a2dc-4ec9-8067-a6e098a4cb5c",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2017-07-31T07:55:55.007000-04:00",
    "last_updated": "2022-06-03T03:55:08.626000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T772",
    "universal_id": "f3641603-d8f1-4a2a-ac33-c906d1c9a903",
    "countermeasure_name": "Configure Auto Scaling Group Launch correctly (AWS)",
    "countermeasure_solution": "Perform the following to configure Auto Scaling Group Launch:\n\n- Ensure Auto Scaling Group Launch Configuration for the Web tier is configured to use a customer created Web-tier IAM Role.\n- Ensure Auto Scaling Group Launch Configuration for the App tier is configured to use a customer created App-tier IAM Role.\n- Ensure Auto Scaling Launch Configuration for the Web tier is configured to use the Web-tier Security Group.\n- Ensure Auto Scaling Launch Configuration for App tier is configured to use the App-tier Security Group.\n\n__Notes__:\n\n- An IAM role is similar to a user in that it is an AWS identity with permission policies that determine what the identity can and cannot do in AWS.\n    - However, instead of being uniquely associated with one person, a role is intended to be assumable by anyone who needs it.\n    - A role does not have any credentials (password or access keys) associated with it.\n        - Instead, if a user is assigned to a role, access keys are created dynamically and provided to the user.\n\n- You can use roles to delegate access to users, applications, or services that don't normally have access to your AWS resources. \n    - Applications must sign their API requests with AWS credentials.\n    - If you are an application developer, you need a strategy for managing credentials for your applications that run on EC2 instances.\n    - IAM Roles for EC2 allow an application running within an EC2 instance to assume the role applied to the instance.\n\n- Auto Scaling helps maintain application availability and allows you to scale your Amazon EC2 capacity up or down automatically according to conditions you define.\n    - You can use Auto Scaling to:\n        - Help ensure that you are running your desired number of Amazon EC2 instances.\n        - Automatically increase the number of Amazon EC2 instances during demand spikes to maintain performance.\n        - Decrease capacity during lulls to reduce costs.\n\nThese properties can be defined within the Auto Scaling Group configuration. Additional properties can be defined through the launch configuration, such as:\n\n* Instance Type\n* Amazon Machine Image (Pre-configured Operating System Images - allows for O.S Hardening)\n* IAM Role\n* Security Groups",
    "weakness_title_read_only": "Auto Scaling Group Launch is not configured correctly (AWS)",
    "weakness_id_read_only": "P872",
    "weakness": "cbb3f933-edee-4dba-b2a3-292af690a47e",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2017-07-31T07:55:55.030000-04:00",
    "last_updated": "2022-06-03T03:55:08.651000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T773",
    "universal_id": "58dc3134-5ba1-4f67-9c62-ea2aecabb590",
    "countermeasure_name": "Create separate IAM groups and policies for administration (AWS)",
    "countermeasure_solution": "Perform the following to create separate Identity and Access Management (IAM) groups and policies:\n\n- Ensure an IAM group for administration purposes is created.\n- Ensure an IAM policy that allows admin privileges for all services used is created.\n\n__Notes__:\n\n- An IAM group is a collection of IAM users.\n- You can use groups to specify permissions for a collection of users, which can make those permissions easier to manage for those users.\n    - For example, you could have a group called Admins and give that group the types of permissions that administrators typically need.\n    - Any user in that group automatically has the permissions that are assigned to the group.\n    - If a new user joins your organization and should have administrator privileges, you can assign the appropriate permissions by adding the user to that group.\n- If a person changes jobs in your organization, instead of editing that user's permissions, you can remove him or her from the old groups and add him or her to the appropriate new groups.\n\n- A policy is a document that formally states one or more permissions.\n    - Managed policies are standalone policies that you can attach to multiple users, groups, and roles in your AWS account.\n    - Managed policies apply only to identities (users, groups, and roles), and not to resources.\n    - You must ensure that you have an IAM managed policy created with admin permissions for all the AWS services used by the application.",
    "weakness_title_read_only": "No separate IAM groups and policies for administration (AWS)",
    "weakness_id_read_only": "P873",
    "weakness": "a537c070-a1fc-4432-bd22-ea96decf477d",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2017-07-31T07:55:55.048000-04:00",
    "last_updated": "2022-06-03T03:55:08.680000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T774",
    "universal_id": "36a36084-31dc-44fd-9dd8-2df6616c8ffb",
    "countermeasure_name": "Do not allow everyone to publish/subscribe to SNS topics (AWS)",
    "countermeasure_solution": "Ensure that Simple Notification Service (SNS) topics do not allow \"Everyone\" to publish or subscribe.\n\n__Notes__:\n\n- Amazon SNS is a web service that coordinates and manages the delivery or sending of messages to subscribing endpoints or clients.\n\n- In Amazon SNS, there are two types of clients, publishers and subscribers, who are also referred to as producers and consumers.\n    - Publishers communicate asynchronously with subscribers by producing and sending a message to a topic, which is a logical access point and communication channel.\n    - Subscribers consume or receive the message or notification over one of the supported protocols when they are subscribed to the topic.\n        - Subscribers include web servers, email addresses, Amazon SQS queues, and AWS Lambda functions.\n        - Protocols include Amazon Amazon Simple Queue Service (SQS), HTTP/S, email, SMS, and Lambda.\n\n- These are the entities that can subscribe to or publish messages to an SNS topic can be controlled by modifying the topic policy:\n    * The topic owner\n    * Everyone\n    * Specific AWS users or resources\n\n- From the message publisher/subscriber options above, you should make sure that \"Everyone\" is not used with any SNS topic in the AWS account.",
    "weakness_title_read_only": "Publish/Subscribe to SNS Topics is Allowed by Everyone (AWS)",
    "weakness_id_read_only": "P874",
    "weakness": "b074c432-9d48-459a-b416-e58d44097d76",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2017-07-31T07:55:55.066000-04:00",
    "last_updated": "2021-06-25T14:47:46.659000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T775",
    "universal_id": "c157d4e9-9d5d-42df-814a-bec11e6e0299",
    "countermeasure_name": "Associate an Elastic Load Balancer to each sensitive Auto Scaling Group (AWS)",
    "countermeasure_solution": "Perform the following best practices:\n\n- Ensure each Auto Scaling Group has an associated Elastic Load Balancer (ELB).\n- Ensure the Web-tier and App-tier Auto Scaling Group has an associated ELB.\n\n__Notes__:\n\n- Elastic Load Balancing automatically distributes incoming application traffic across multiple Amazon EC2 instances within a Virtual Private Cloud (VPC)\n    - It enables greater levels of fault tolerance in your applications, seamlessly providing the required amount of load balancing capacity needed to distribute application traffic across 1 or more Availability Zones within a VPC.\n- Elastic Load Balancing must be integrated with Auto Scaling Groups to ensure that you have computation resources available in the event of a failure.",
    "weakness_title_read_only": "An Elastic Load Balancer Is Not Associated to Each Sensitive Auto Scaling Group (AWS)",
    "weakness_id_read_only": "P875",
    "weakness": "05dc8fc6-addc-41ff-aa74-82da60bff97b",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2017-07-31T07:55:55.084000-04:00",
    "last_updated": "2022-06-03T03:55:08.705000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T776",
    "universal_id": "1fc51319-7773-4d90-875c-8bed1c51228a",
    "countermeasure_name": "Ensure each Auto Scaling Group is configured for multiple Availability Zones (AWS)",
    "countermeasure_solution": "Configure Auto Scaling to maintain application availability and scale your Amazon Elastic Compute Cloud (EC2) capacity up or down automatically according to conditions you define.\n\n__Notes__:\n\n- You can use Auto Scaling to help ensure that:\n    - You are running your desired number of Amazon EC2 instances.\n    - You can automatically increase the number of Amazon EC2 instances during demand spikes to maintain performance.\n    - You can decrease capacity during lulls to reduce costs.\n- These properties can be defined within the Auto Scaling Group configuration.",
    "weakness_title_read_only": "Auto Scaling Group Is Not Configured Correctly for Multiple Availability Zones (AWS)",
    "weakness_id_read_only": "P876",
    "weakness": "26ea751d-650e-47f4-9bcd-4f9598ba5939",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2017-07-31T07:55:55.102000-04:00",
    "last_updated": "2022-06-03T03:55:08.729000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T777",
    "universal_id": "97c6618f-dd97-4fa2-aad4-4f721137c0fc",
    "countermeasure_name": "Use an approved Amazon Machine Image in Auto Scaling Launch Configuration (AWS)",
    "countermeasure_solution": "Ensure Auto Scaling Launch Configuration for the Web- and App-tier is configured to use an approved AMI.\n\n__Notes__:\n\n- Auto Scaling helps maintain application availability and allows you to scale your Amazon Elastic Compute Cloud (EC2) capacity up or down automatically according to conditions you define.\n    - You can use Auto Scaling to help ensure that:\n        - You are running your desired number of Amazon EC2 instances.\n        - You can automatically increase the number of Amazon EC2 instances during demand spikes to maintain performance.\n        - You can decrease capacity during lulls to reduce costs.\n    - These properties can be defined within the Auto Scaling Group configuration.\n\n- Additional properties can be defined through the launch configuration such as:\n    * Instance Type\n    * Amazon Machine Image (preconfigured Operating System Images that allow for OS hardening)\n    * IAM Role\n    * Security Groups\n\n- Your Organization must maintain a list of approved AMIs.\n    - Use these when creating Auto Scaling Groups.",
    "weakness_title_read_only": "An Approved Amazon Machine Image Is Not Used in Auto Scaling Launch Configuration (AWS)",
    "weakness_id_read_only": "P877",
    "weakness": "eb5efead-df3a-4f0c-bf78-ca8c991c3ec2",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2017-07-31T07:55:55.119000-04:00",
    "last_updated": "2022-06-03T03:55:08.754000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T778",
    "universal_id": "5d5159ec-458e-48c9-9b51-fedc4f6488d6",
    "countermeasure_name": "Ensure required SNS topics are created (AWS)",
    "countermeasure_solution": "Perform the following to create required SNS topics:\n\n- Create an SNS topic for sending out notifications from Cloudwatch Alarms and Auto Scaling Groups:\n    - An SNS topic should be created so that the Cloudwatch alarms and Auto Scaling Groups can send out notifications.\n\n- Create an SNS topic for sending out notifications from RDS events:\n    - An SNS topic should be created so that the RDS event subscriptions can send out notifications.\n- Enable RDS event subscriptions for Instance level events.\n- Enable RDS event subscriptions for DB security groups.\n \n__Notes__:\n\n####On Amazon Simple Notification Service (SNS)\n\n- Amazon SNS is a web service that coordinates and manages the delivery or sending of messages to subscribing endpoints or clients.\n    - When using Amazon SNS as the owner, create a topic, and control access to it by defining policies that determine which publishers and subscribers can communicate with the topic.\n\n####On AWS Relational Database Services (RDS)\n\n- AWS RDS offers customers a managed database engine solution for hosting customer created databases that can allow for a reduction in operational burden on customers.\n    - RDS event subscriptions provide a notification of selected event changes at the Data Base engine level, such as:\n\n        * Deletion\n        * Failure\n        * Failover\n        * Low Storage\n        * Maintenance",
    "weakness_title_read_only": "Required SNS topics are not created (AWS)",
    "weakness_id_read_only": "P878",
    "weakness": "4fd6da91-0416-46db-904e-d6144014c85c",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2017-07-31T07:55:55.137000-04:00",
    "last_updated": "2021-06-25T14:47:58.744000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T779",
    "universal_id": "3935d0ca-a095-4ec8-8ea6-8e3abfe7ff0a",
    "countermeasure_name": "Ensure Billing Alerts are enabled for increments of X spend (AWS)",
    "countermeasure_solution": "Use AWS Billing and Cost Management to avoid unexpected costs.\n\n__Note__:\n\n- AWS Billing and Cost Management is the service that you use to pay your AWS bill, monitor your usage, and budget your costs.\n    - The Billing and Cost Management service provides features that you can use to estimate and plan your AWS costs, receive alerts if your costs exceed a threshold that you set, and assess your biggest investments in AWS resources.\n    - Once all resources are tagged, it becomes possible to perform a detailed billing analysis on a per tag basis.",
    "weakness_title_read_only": "Billing Alerts are disabled for increments of X spend (AWS)",
    "weakness_id_read_only": "P879",
    "weakness": "caf79064-7985-42e4-a6cd-972f7733c5f1",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "deployment",
    "created": "2017-07-31T07:55:55.154000-04:00",
    "last_updated": "2022-06-03T03:55:08.779000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T780",
    "universal_id": "66b1d459-56a0-4a93-a0c3-a96f6dc7ae2b",
    "countermeasure_name": "Enable AWS Elastic Load Balancer logging (AWS)",
    "countermeasure_solution": "Enable AWS Elastic Load Balancer (ELB) logging for all the ELBs you have.\n \n- Elastic Load Balancing automatically distributes incoming application traffic across multiple Amazon Elastic Compute Cloud (Amazon EC2) instances in the Amazon Virtual Private Cloud (VPC).\n    - It enables you to achieve greater levels of fault tolerance in your applications, seamlessly providing the required amount of load balancing capacity needed to distribute application traffic.\n\n- With logging enabled, AWS ELBs can record all incoming requests sent to the load balancer, and store it within logs stored on Amazon Simple Storage Service (S3).\n    - This allows for diagnosing application failures and the web traffic and security analysis of incoming traffic.",
    "weakness_title_read_only": "Inactive AWS Elastic Load Balancer logging (AWS)",
    "weakness_id_read_only": "P880",
    "weakness": "8db9ab37-cc87-469f-acc7-db276bfde06f",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2017-07-31T07:55:55.173000-04:00",
    "last_updated": "2022-06-03T03:55:08.803000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T781",
    "universal_id": "14ec7edb-a70b-401e-9160-0fc250545de9",
    "countermeasure_name": "Enable AWS CloudFront Logging (AWS)",
    "countermeasure_solution": "Enable logging for AWS CloudFront.\n    \n- Access logs are activity records that show you detailed information about each request made for your content.\n    - These logs can be used for security analysis regarding vulnerability and availability threats.\n\n- Amazon CloudFront is a web service that speeds up the distribution of your static and dynamic web content.\n    - For example, HTML, CSS, PHP, image, and media files to end users.\n- CloudFront delivers your content through a worldwide network of edge locations.\n    - When an end user requests content that you're serving with CloudFront, the user is routed to the edge location that provides the lowest latency, so content is delivered with the best possible performance.\n    - If the content is already in that edge location, CloudFront delivers it immediately.\n    - If the content is not currently in that edge location, CloudFront retrieves it from a customer defined Origin, such as AWS Simple Storage Service (S3), AWS Elastic Load Balancing (ELB) or Elastic Compute Cloud (EC2).",
    "weakness_title_read_only": "Insufficient Logging or Insufficient Protection of Logs",
    "weakness_id_read_only": "P619",
    "weakness": "9a42301f-ed6c-42cb-a85d-a5134b76b701",
    "tags": "",
    "countermeasure_priority": "2",
    "phase": "deployment",
    "created": "2017-07-31T07:55:55.192000-04:00",
    "last_updated": "2022-06-03T03:55:08.830000-04:00",
    "custom": "False",
    "rules": "a5bb6d04-111c-4fd1-ab43-b8aed799e105 AND cab80cea-1a20-433f-b78c-783b816b8d33 AND 3781bade-6558-4e51-8902-6760942208e1",
    "rules_read_only": "A1159 AND A739 AND A1175"
  },
  {
    "countermeasure_id": "T782",
    "universal_id": "33ff5543-2ff3-4448-847c-076927d1c53f",
    "countermeasure_name": "Create CloudWatch Log Groups (AWS)",
    "countermeasure_solution": " - Ensure a Cloudwatch Log Group is created for the Web tier:\n    - AWS CloudWatch Log Groups define groups of log streams that share the same retention, monitoring, and access control settings.\n    - Each log stream has to belong to one log group.\n\n- Ensure that the Cloudwatch Log Group for a Web tier has a retention period:\n    - The retention period should be used to specify how long log events are kept in CloudWatch Logs.\n    - Expired log events get deleted automatically.\n    - Just like metric filters, retention settings are also assigned to log groups, and the retention assigned to a log group is applied to their log streams.\n\n__Notes__:\n\n* You can also use any third party log management tools as long as the recommendation goal is achieved.\n    * These tools include Splunk, Loggly, and AlertLogic Log Manager.\n* The Audit and Remediation steps need to be modified for your specific log management tool, as they are only provided in the benchmark for Amazon Cloudwatch.",
    "weakness_title_read_only": "CloudWatch Log Groups have same settings (AWS)",
    "weakness_id_read_only": "P882",
    "weakness": "412c4bbc-ad73-43ea-86ba-5d4fba8b8b4d",
    "tags": "",
    "countermeasure_priority": "3",
    "phase": "deployment",
    "created": "2017-07-31T07:55:55.209000-04:00",
    "last_updated": "2022-06-03T03:55:08.855000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T783",
    "universal_id": "e70ab5dc-cc6d-436f-92ae-79dc27d7e483",
    "countermeasure_name": "Install an agent for AWS CloudWatch Logs within required Auto-Scaling Groups (AWS)",
    "countermeasure_solution": "Ensure an agent for AWS CloudWatch Logs is installed within the Auto Scaling Group for the Web and App tier:\n\n* You can use CloudWatch Logs to monitor, store, and access log files from an Amazon Elastic Compute Cloud (EC2) instance (application or system data).\n    - A CloudWatch agent needs to run within the Guest Operating System of each EC2 instance you wish to ship logs from.\n\n__Notes__:\n\n* You can also use any third party log management tools as long as the recommendation goal is achieved.\n    - Such as Splunk, Loggly, and AlertLogic Log Manager. \n* The Audit and Remediation steps need to be modified for your specific log management tool, as they are only provided in the benchmark for Amazon CloudWatch.",
    "weakness_title_read_only": "Insufficient monitoring of AWS logs within required Auto-Scaling Groups (AWS)",
    "weakness_id_read_only": "P883",
    "weakness": "3613a574-ee00-4668-b6fc-9330896315e7",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2017-07-31T07:55:55.228000-04:00",
    "last_updated": "2022-06-03T03:55:08.880000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T784",
    "universal_id": "66239d96-f31c-46af-9f5c-46e19a41f6c5",
    "countermeasure_name": "Create required AWS Managed Config Rules (AWS)",
    "countermeasure_solution": " - Ensure an AWS Managed Config Rule for encrypted volumes is applied to the Web-tier:\n    - AWS Config provides you with a detailed inventory of your AWS resources and their current configuration.\n    - AWS Config also continuously records configuration changes to these resources.\n    - You can evaluate these configurations and changes for compliance with ideal configurations defined by AWS Config Rules.\n\n- Ensure an AWS Managed Config Rule for encrypted volumes is applied to the App-tier:\n    - AWS Config provides you with a detailed inventory of your AWS resources and their current configuration.\n    - AWS Config also continuously records configuration changes to these resources.\n    - You can evaluate these configurations and changes for compliance with ideal configurations defined by AWS Config Rules.\n\n- Ensure an AWS Managed Config Rule for Elastic IP Addresses (EIPs) attached to Amazon Elastic Compute Cloud (EC2) instances within Amazon Virtual Private Cloud (VPC):\n    - AWS Config provides you with a detailed inventory of your AWS resources and their current configuration.\n    - AWS Config also continuously records configuration changes to these resources.\n    - You can evaluate these configurations and changes for compliance with ideal configurations defined by AWS Config Rules.",
    "weakness_title_read_only": "Failing to create required AWS Managed Config Rules (AWS)",
    "weakness_id_read_only": "P884",
    "weakness": "908a9f0e-52f0-4caa-b6ab-cd1eed0c6fe8",
    "tags": "",
    "countermeasure_priority": "3",
    "phase": "deployment",
    "created": "2017-07-31T07:55:55.245000-04:00",
    "last_updated": "2022-06-03T03:55:08.905000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T785",
    "universal_id": "40bbdbcc-d566-42e2-a552-a91b724ee0a6",
    "countermeasure_name": "Use CloudFront Content Distribution Network (AWS)",
    "countermeasure_solution": "Use Amazon CloudFront to deliver either the entire website, including dynamic, static, streaming, and interactive content using a global network of edge locations. \n\n- Requests for your content are automatically routed to the nearest edge location, so content is delivered with the best possible performance.\n- Amazon CloudFront is optimized to work with other Amazon Web Services:\n    - Such as Amazon Simple Storage Service (S3), Amazon Elastic Compute Cloud (EC2), Amazon Elastic Load Balancer (ELB), and Amazon Route 53.\n- Amazon CloudFront gives you three options for accelerating your entire website while delivering your content securely over HTTPS from all of CloudFront's edge locations.\n    - In addition to delivering securely from the edge, you can also configure CloudFront to use HTTPS connections for origin fetches so that your data is encrypted end-to-end from your origin to your end users.",
    "weakness_title_read_only": "Failing to use CloudFront Content Distribution Network (AWS)",
    "weakness_id_read_only": "P885",
    "weakness": "3e76789b-5873-45d3-ab8f-86396920e2f6",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2017-07-31T07:55:55.263000-04:00",
    "last_updated": "2022-06-03T03:55:08.930000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T786",
    "universal_id": "2944d848-0762-4e2b-941a-862d9ed8eab2",
    "countermeasure_name": "Create required subnets (AWS)",
    "countermeasure_solution": "Follow these steps to create required subnets:\n\n- Create at least one Amazon Virtual Private Cloud (VPC).\n\n- Create subnets for the Web-tier Elastic Load Balancer (ELB).\n    - At least 2 subnets in 2 different availability zones (AZ) should be created to have fault tolerance and high availability from the perspective of resource deployment.\n    - Create subnets for the Web tier.\n    - Create subnets for the App tier.\n    - Create subnets for the Data tier.\n\n- Create a route table for the public subnets.\n    - The route table should only contain the default route (0.0.0.0/0) pointing to the Internet Gateway (IGW).\n    - Associate all the subnets that should be public in the \"Web ELB\"-tier with this route table.\n\n- Create a route table for the private subnets.\n    - The route table should only contain the default route (0.0.0.0/0) pointing to the NAT Gateway.\n    - Associate all the subnets that should be private in the Web, App, and Data tier with this route table.\n\n- Define the default route (0.0.0.0/0) in the routing table associated with Web-tier ELB subnet to allow connectivity to the VPC IGW.\n    - This provides internet connectivity for the Web-tier ELB.\n- Define the default route (0.0.0.0/0) in the routing table associated with Web-tier subnet to allow connectivity to the VPC NAT Gateway.\n    - This provides internet connectivity for the Web-tier instances.\n- Define the default route (0.0.0.0/0) in the routing table associated with App-tier subnet to allow connectivity to the VPC NAT Gateway.\n    - This provides internet connectivity for the App-tier instances.\n- DO NOT define (remove) the default route (0.0.0.0/0) in the routing table associated with Data-tier subnet that points to the VPC NAT Gateway.\n    - This restricts internet connectivity for the Data-tier instances.\n\n- When you create a subnet, specify the Classless Inter-Domain Routing (CIDR) block for the subnet.\n    - The CIDR block of a subnet shouldn't be the same as the CIDR block for the VPC (for a single subnet in the VPC).\n    - The allowed block size is between a /28 netmask and a /16 netmask.\n    - If you create more than one subnet in a VPC, the CIDR blocks of the subnets must not overlap.\n\n__Notes__:\n\n- A _route table_ contains a set of rules, called _routes_ that are used to determine where network traffic is directed. Each subnet in your VPC must be associated with a route table. The table controls the routing for the subnet. A subnet can only be associated with one route table at a time, but you can associate multiple subnets with the same route table.\n\n- You can create a VPC that spans multiple Availability Zones.\n    - After creating a VPC, you can add one or more subnets in each Availability Zone.\n    - Each subnet must reside entirely within one Availability Zone and cannot span zones.\n        - Availability Zones are distinct locations that are engineered to be isolated from failures in other Availability Zones.\n    - By launching instances in separate Availability Zones, you can protect your applications from the failure of a single location.\n    - Some AWS regions have more than 2 availability zones and it is recommended to use more than 2 where possible.\n    - AWS assigns a unique ID to each subnet.",
    "weakness_title_read_only": "Misconfiguration of VPCs and subnets (AWS)",
    "weakness_id_read_only": "P886",
    "weakness": "8944efaf-cfd9-48c8-a674-d7f8acabbdeb",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2017-07-31T07:55:55.281000-04:00",
    "last_updated": "2022-06-03T03:55:08.954000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T787",
    "universal_id": "833501e7-3829-4981-99cb-1cf29d5953ff",
    "countermeasure_name": "Create NAT gateways (AWS)",
    "countermeasure_solution": "To enable instances in a private subnet to connect to the Internet or other AWS services, but prevent the Internet from initiating a connection with those instances, create Network Address Translation (NAT) gateways for each private subnet.\n\n- To create a NAT gateway, specify a public subnet the NAT gateway will reside in.\n    - You must also specify an Elastic IP address to associate with the NAT gateway when you create it.\n    - This enables instances in your private subnets to communicate with the Internet through the NAT gateway.\n\n- An Elastic IP address is a static, public IP address designed for dynamic cloud computing.\n    - You can associate an Elastic IP address with any instance, network interface for your VPC, or a NAT Gateway.\n    - With an Elastic IP address, you can mask the failure of an instance by rapidly remapping the address to another instance in your VPC.",
    "weakness_title_read_only": "Lack of NAT gateways (AWS)",
    "weakness_id_read_only": "P887",
    "weakness": "73d6a894-b21f-4293-9401-a640fc3acd27",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2017-07-31T07:55:55.298000-04:00",
    "last_updated": "2022-06-03T03:55:08.978000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T789",
    "universal_id": "302750fe-d3d2-47a8-bcfe-e63c91a03244",
    "countermeasure_name": "Create and configure ELB Security Groups (AWS)",
    "countermeasure_solution": "Follow these steps to create and configure your Elastic Load Balancer (ELB) Security Groups correctly:\n\n- Create a Web-tier ELB Security Group to accept only HTTP/HTTPS.\n    - The SG associated with the Web-tier ELB should allow connectivity from any source IP (0.0.0.0/0) only for the HTTP (TCP 80) and HTTPS (TCP 443) ports.\n- Restrict outbound security group rules for the Web-tier ELB to only the backend webserver instances for the appropriate application ports.\n\n- __Do not__ use the Web-tier ELB Security Group in the Auto Scaling launch configuration of any other tier (Web, App, Data).\n    - Associating the Web-tier ELB security group with any other instances that shouldn't be publicly accessible exposes them to unauthorized access.\n\n- Create the App-tier ELB Security Group to accept only HTTP/HTTPS.\n    - The SG associated with the App-tier ELB should allow connectivity from the security group associated with Web-tier instances only for the HTTP (TCP 80) and HTTPS (TCP 443) ports.\n\n__Note__:\nThe defaults for HTTP and HTTPS are used as an example. Any other port would apply depending on the application design.\n\n- A _security group_ acts as a virtual firewall for your instance to control inbound and outbound traffic.\n    - When you launch an instance in the AWS Virtual Private Cloud (VPC), you can assign the instance to up to five security groups.\n    - Security groups act at the instance level, not the subnet level.\n    - Each instance in a subnet in your VPC could be assigned to a different set of security groups.\n        - If you don't specify a particular group at launch time, the instance is automatically assigned to the default security group for the VPC.\n    - For each security group, you can add _rules_ that control the inbound traffic to instances, and a separate set of rules that control the outbound traffic.\n\n- When you use the AWS Management Console to create a load balancer in a VPC, you can choose an existing security group for the VPC or create a new security group for the VPC.\n    - If you choose an existing security group, it must allow traffic in both directions to the listener and health check ports for the load balancer.\n    - If you choose to create a security group, the console automatically adds rules to allow all traffic on these ports.\n        - When you delete your load balancer, this security group is not deleted automatically.\n    - If you add a listener to an existing load balancer, you must review your security groups to ensure they allow traffic on the new listener port in both directions.",
    "weakness_title_read_only": "Misconfiguration of Security Groups (AWS)",
    "weakness_id_read_only": "P889",
    "weakness": "c2fb91ee-1f3e-47d1-9a4d-cb521508e14d",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2017-07-31T07:55:55.340000-04:00",
    "last_updated": "2022-06-03T03:55:09.002000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T790",
    "universal_id": "9e41daac-51d0-49eb-9617-30c976dbf65b",
    "countermeasure_name": "Create and configure Security Groups (AWS)",
    "countermeasure_solution": "Follow these steps to create and configure Security Groups:\n\n- Create a Web-tier Security Group and allow inbound connections from the Web-tier Elastic Load Balancer (ELB) Security Group for explicit ports.\n    - This protects the Web-tier from unauthorized access, it is recommended to add inbound security group rules that allow traffic for the specific application protocol and ports by referencing as source the security group associated with the Web-tier ELB.\n- Ensure the Web-tier Security Group has no inbound rules for a Classless Inter-Domain Routing (CIDR) of 0 (Global Allow).\n\n- Create the App-tier Security Group and allow inbound connections from the App-tier ELB Security Group for explicit ports.\n    - This protects the App-tier from unauthorized access, it is recommended to add inbound security group rules that allow traffic for the specific application protocol and ports by referencing as source the security group associated with the App-tier ELB.\n- Ensure that the App-tier Security Group has no inbound rules for a CIDR of 0 (Global Allow).\n\n- Create the Data-tier Security Group and ensure it allows inbound connections from the App-tier Security Group for explicit ports.\n    - This protects the Data-tier from unauthorized access.\n        - It is recommended that you add inbound security group rules that allow traffic for the specific database protocols and ports by referencing the security group associated with the App-tier instances as source.\n        - The port for these inbound rules would depend on the Database engine used and the configured port. The default values are:\n            - MySQL - TCP 3306\n            - MSSQL - TCP 1433\n            - Oracle SQL - TCP 1521\n            - PostgreSQL - TCP 5432\n            - MariaDB - TCP 3306\n            - Amazon Aurora DB - TCP 3306\n\n- Ensure that the Data-tier Security Group has no inbound rules for CIDR of 0 (Global Allow).\n\n__Note__: Due to non-public tiers receiving requests either only from the upper tier or from resources inside the same Amazon Virtual Private Cloud (VPC), any inbound rules that allow traffic from any source (0.0.0.0/0) are not necessary and should be removed.",
    "weakness_title_read_only": "Misconfiguration of Security Groups (AWS)",
    "weakness_id_read_only": "P889",
    "weakness": "c2fb91ee-1f3e-47d1-9a4d-cb521508e14d",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2017-07-31T07:55:55.358000-04:00",
    "last_updated": "2022-06-03T03:55:09.028000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T791",
    "universal_id": "ba92c821-e903-46dd-b0bf-c50115a4d2cd",
    "countermeasure_name": "Remove redundant Elastic / Public IP addresses (AWS)",
    "countermeasure_solution": "Remove redundant Elastic / Public IP addresses by using the following guidelines:\n\n- Ensure EC2 instances within the Web tier have no Elastic / Public IP addresses associated with it.\n- Ensure EC2 instances within the App tier have no Elastic / Public IP addresses associated with it.\n- Ensure EC2 instances within the Data tier have no Elastic / Public IP addresses associated with it.\n\nWithout any Public or Elastic IP addresses associated with the EC2 instances in the Web, App, or Data tier, no inbound traffic can reach the instance from the Internet.\n\n### Note:\n- All subnets have an attribute that determines whether instances launched into that subnet receive a public IP address. The public IP address is assigned to the default network interface (eth0). By default, instances launched into a default subnet are assigned a public IP address. A public IP address is mapped to the primary private IP address through network address translation (NAT).\n\n- An Elastic IP address is a static, public IP address designed for dynamic cloud computing. You can associate an Elastic IP address with any instance or network interface for your Amazon Virtual Private Cloud (VPC). With an Elastic IP address, you can mask the failure of an instance by rapidly remapping the address to another instance in your VPC.",
    "weakness_title_read_only": "Redundant Elastic / Public IP addresses (AWS)",
    "weakness_id_read_only": "P891",
    "weakness": "712ecb6d-496d-4fb8-aa8b-da1658248eb5",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2017-07-31T07:55:55.376000-04:00",
    "last_updated": "2022-06-03T03:55:09.053000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T792",
    "universal_id": "a8dafe2d-ac15-4a06-b6c8-6600bae44353",
    "countermeasure_name": "Create required Customer Master Keys (AWS)",
    "countermeasure_solution": "Follow these steps to create the required CMKs:\n\n- Create a customer-managed Customer Master Key for the Web tier.\n- Create a customer-managed Customer Master Key for the App tier.\n- Create a customer-managed Customer Master Key for the Data tier.\n\nAWS KMS provides an AWS-managed CMK for each integrated service by default. Customers also have the ability to create extra CMKs, which allows for the configuration of key rotation and key policy that is applied to the customer-managed CMK.\n\nYou can use the key policy by itself to control who has access to the CMK and what actions each identity can perform. Controlling access this way specifies the full scope of access to the CMK in a single document (the key policy).\n\nCustomer created CMKs can be used for:\n\n* AWS Service level encryption\n    * Such as Elastic Block Storage (EBS), Amazon Relational Database Service (RDS), and Amazon Simple Storage Service (S3)\n* Key management for file/application level encryption",
    "weakness_title_read_only": "Lack of customer-managed Customer Master Keys (AWS)",
    "weakness_id_read_only": "P892",
    "weakness": "d40fb2af-129d-4496-89b7-081f1156372c",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2017-07-31T07:55:55.394000-04:00",
    "last_updated": "2022-06-03T03:55:09.078000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T794",
    "universal_id": "a2c3f398-f4ef-4926-b9e6-6ee5ce4a9954",
    "countermeasure_name": "Extend all public Web-tier SSL/TLS certificates if required (AWS)",
    "countermeasure_solution": "Extend all public Web-tier SSL/TLS certificates:\n\n- If required, make sure all public Web-tier SSL/TLS certificates are more than 30 days from expiration.\n\n- Renew public SSL/TLS certificates that are used for AWS resources, such as the ELB or CloudFront prior to expiration.\n    - Do this as a security best practice, and to ensure that the reputation of the web application is not impacted by an expired certificate.",
    "weakness_title_read_only": "Expired public SSL/TLS certificates (AWS)",
    "weakness_id_read_only": "P894",
    "weakness": "ad99ded1-c41a-4933-9e72-87954fb73cb2",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2017-07-31T07:55:58.400000-04:00",
    "last_updated": "2022-06-03T03:55:09.103000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T795",
    "universal_id": "ebc7cfdb-49dd-4ea0-b8df-183f04c1d814",
    "countermeasure_name": "Configure CloudFront correctly (AWS)",
    "countermeasure_solution": "Follow these best practices for configuring CloudFront:\n\n- Require HTTPS between CloudFront and your Web-tier ELB origin:\n\n    - CloudFront can connect to your origin using only HTTP, only HTTPS, or can connect by matching the protocol used by the viewer.\n    - Using HTTPS only is recommended.\n    - Configure the Origin Protocol Policy for the Web-tier ELB origin to require that CloudFront fetches objects from your origin by using HTTPS.\n\n    __Note__: To use HTTPS, an SSL/TLS certificate must be attached.\n\n- Ensure that the CloudFront to Origin connection is configured using TLS1.2+ as the SSL/TLS protocol:\n\n    - You can choose which SSL/TLS protocols CloudFront is allowed to use when establishing an HTTPS connection to your origin.\n    - Ensure that you are using only TLS1.2+ as the SSL/TLS protocol.\n\n    __Note__: The newer TLS versions, if properly configured, prevent the BEAST and other attack vectors and provide many stronger ciphers and encryption methods.\n\n- Configure HTTP to HTTPS Redirects with a CloudFront Viewer Protocol Policy:\n    - Configure the Viewer Protocol Policy for your CloudFront cache to redirect HTTP requests to HTTPS requests or to require that viewers use only the HTTPS protocol to access your objects in the CloudFront cache.\n\n    __Note__: To use HTTPS, an SSL/TLS certificate must be attached.\n\n- Enable Geo-Restriction within your Cloudfront distribution:\n    - Amazon CloudFront is a web service that speeds up distribution of your static and dynamic web content.\n        - Such as .html, .css, .php, image, and media files to end users.\n    - CloudFront delivers your content through a worldwide network of edge locations.\n        - When an end user requests content that you're serving with CloudFront, the user is routed to the edge location that provides the lowest latency, so content is delivered with the best possible performance.\n    - If the content is already in that edge location, CloudFront delivers it immediately.\n        - If the content is not currently in that edge location, CloudFront retrieves it from a customer defined Origin, such as AWS Simple Storage Service (S3), AWS Elastic Load Balancing (ELB) or Elastic Compute Cloud (EC2).",
    "weakness_title_read_only": "Misconfiguration of CloudFront (AWS)",
    "weakness_id_read_only": "P895",
    "weakness": "cbe4430b-2451-4212-b78e-b3aaec27c9f6",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2017-07-31T07:55:58.419000-04:00",
    "last_updated": "2022-06-03T03:55:09.127000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T796",
    "universal_id": "3a1d016d-64f5-4864-8673-54dfce22afd1",
    "countermeasure_name": "Configure DNS for Root Domain (AWS)",
    "countermeasure_solution": "Perform the following best practices for configuring DNS for the root domain:\n\n- Create a private hosted zone and specify the Amazon Virtual Private Clouds (VPCs) that you want to associate with the Root Domain:\n    - Amazon Route 53 translates friendly domains names like `www.example.com` into IP addresses like 192.0.2.1. \n    - Amazon Route 53 responds to DNS queries using a global network of authoritative DNS servers, which reduces latency.\n    \n    - When someone enters your domain name in a browser, a DNS request is forwarded to the nearest Amazon Route 53 DNS server in a global network of authoritative DNS servers.\n        - Amazon Route 53 responds with the IP address that you specified.\n\n    - Each domain has an associated hosted zone which contains the resource records pointing to each layer of the application.\n        - A private hosted zone is a container that holds information about how you want to route traffic for a domain and its subdomains within the VPC.\n\n    - To begin, you create a private hosted zone and specify the Amazon VPCs that you want to associate with the hosted zone.\n        - You then create resource record sets that determine how Amazon Route 53 responds to queries for your domain and subdomains within and among your Amazon VPCs.\n\n- Create a DNS Alias record for the Root Domain:\n\n    - Route53 provides special record type called Alias that allows to create an A record for the root domain and point it to the fully qualified domain of the Elastic Load Balancer (ELB) associated with the web-server layer or Amazon CloudFront.\n\n    - While ordinary Amazon Route 53 resource record sets are standard DNS resource record sets, _alias resource record sets_ provide an Amazon Route 53-specific extension to DNS functionality.\n        - Instead of an IP address or a domain name, an alias resource record set contains a pointer to a CloudFront distribution or an ELB load balancer.\n        - Alias resource record sets can save you time because Amazon Route 53 automatically recognizes changes in the resource record sets that the alias resource record set refers to.\n\n    - To point the root domain to a CloudFront distribution or an Elastic Load Balancer (ELB), an alias resource record set should be created.",
    "weakness_title_read_only": "Misconfiguration of DNS for Root Domain (AWS)",
    "weakness_id_read_only": "P896",
    "weakness": "7eb41f78-29d6-4557-8df0-c981797d3db2",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2017-07-31T07:55:58.437000-04:00",
    "last_updated": "2022-06-03T03:55:09.153000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T797",
    "universal_id": "f309f22d-657b-46ee-996d-27b79b24eba0",
    "countermeasure_name": "Make all RDS Databases private and ensure RDS instances are inside a VPC (AWS)",
    "countermeasure_solution": "Make all RDS Databases private:\n\n- Amazon Relational Database Service (RDS) is a managed relational database service.\n    - It handles routine database tasks, such as provisioning, patching, backup, recovery, failure detection, and repair.\n\n- There are 6 database engines available for customer to run their database workloads on:\n    * Amazon Aurora (MySQL Compatible)\n    * MySQL\n    * MariaDB\n    * Oracle\n    * Microsoft SQL Server\n    * PostgreSQL\n\n- Ensure Virtual Machines running RDS instances are inside a VPC. Depending on when your AWS account was created, two choices are available when deciding where to deploy an RDS DB instance in AWS: EC2-VPC and EC2-Classic. __It is best practice to choose EC2-VPC for RDS instances__ to ensure maximum control and security over databases: \n     - EC2-VPC allows control over virtual networking environments giving operators the ability to select details such as IP ranges, subnets, routing, and access control. \n     - EC2-Classic RDS instances are not placed into a VPC by default and are placed into a flat network that is shared with other AWS customers. This makes isolating RDS instances difficult.\n\n\n- Customers can deploy RDS databases within an Amazon Virtual Private Cloud (VPC) through the configuration of:\n    * A subnet Group for RDS used for the deployment of single or Multi-AZ RDS instances.\n    * Network access through the configuration of Security Groups for RDS.\n    * Access from outside the VPC hosting the DB instance by enabling/disabling a Public IP address.",
    "weakness_title_read_only": "Publicly accessible RDS Databases (AWS)",
    "weakness_id_read_only": "P897",
    "weakness": "d9bd715b-7fb6-4059-8834-a137311d4515",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2017-07-31T07:55:58.455000-04:00",
    "last_updated": "2022-06-03T03:55:09.178000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T798",
    "universal_id": "061552d9-d5a4-45fc-b93e-6c74fbb4bcd1",
    "countermeasure_name": "Don't use the default VPC (AWS)",
    "countermeasure_solution": "Ensure that applicable AWS workloads are operating inside a Virtual Private Cloud (VPC). However, don't use the default Amazon VPC and label it as \"Do Not Use\".\n\n### Note:\nA default VPC is ready for you to use. You can immediately start launching instances into your default VPC without any additional configuration. However, use it just for testing and development and avoid the the default VPC for the production environment.\n\nWhen a default VPC is created, AWS sets it up by:\n\n* Creating a default subnet in each Availability Zone.\n* Creating an Internet gateway and connecting it to your default VPC.\n* Creating the main route table for your default VPC with a rule that sends all traffic destined for the Internet to the Internet gateway.\n* Creating a default security group and associating it with your default VPC.\n* Creating a default network access control list (ACL) and associating it with your default VPC.\n* Associating the default DHCP options set for your AWS account with your default VPC.",
    "weakness_title_read_only": "Using the default VPC (AWS)",
    "weakness_id_read_only": "P898",
    "weakness": "725e16be-829b-44da-aed0-ba11eb857a79",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2017-07-31T07:55:58.472000-04:00",
    "last_updated": "2022-06-03T03:55:09.203000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T799",
    "universal_id": "d711ee2b-26fb-41c5-86ef-f4de1795b5df",
    "countermeasure_name": "Test if the Relational Database Service is configured correctly (AWS)",
    "countermeasure_solution": "Using the Amazon unified Command Line Interface:\n\n* List all current RDS instances and review the encryption status of the DB instance:\n\n```\naws rds describe-db-instances --query 'DBInstances[*].{DBName:DBName, EncryptionEnabled:StorageEncrypted, CMK:KmsKeyId}'\n```\n\nThis test __fails__ if they are **not** encrypted.\n\n* Check if your application's database (DB) instances are Multi-Availability Zone (Multi-AZ) enabled:\n\n```\naws rds describe-db-instances --filters Name=tag:_<data_tier_tag>_,Values=_<data_tier_tag_value>_ --query \"DBInstances[*].{MultiAZ:MultiAZ, DBInstanceIdentifier:DBInstanceIdentifier}\"\n```\n\nThis test __fails__ if they are **not** Multi-AZ enabled.\n\n* Check if your application's DB instances have Auto Minor Version Upgrade enabled:\n\n```\naws rds describe-db-instances --filters Name=tag:_<data_tier_tag>_,Values=_<data_tier_tag_value>_ --query \"DBInstances[*].{AutoMinorVersionUpgrade:AutoMinorVersionUpgrade, DBInstanceIdentifier:DBInstanceIdentifier}\"\n```\n\nThis test __fails__ if the DB instance does **not** have Auto Minor Version Upgrade enabled.\n\n* Check if your application's DB instances have a Backup Retention Period set.\n    * (0 = there is no backup retention in place, 7 = there are 7 daily backups retained):\n\n```\naws rds describe-db-instances --filters Name=tag:_<data_tier_tag>_,Values=_<data_tier_tag_value>_ --query \"DBInstances[*].{BackupRetentionPeriod:BackupRetentionPeriod, DBInstanceIdentifier:DBInstanceIdentifier}\"\n```\n\nThis test __fails__ if the retention periods are set to **0**.\n\n* Check if your application's DB instances are configured to use the Data-tier Security Group:\n\n```\naws rds describe-db-instances --filters Name=tag:_<data_tier_tag>_,Values=_<data_tier_tag_value>_ --query \"DBInstances[*].{VpcSecurityGroups:VpcSecurityGroups, DBInstanceIdentifier:DBInstanceIdentifier}\"\n```",
    "weakness_title_read_only": "Relational Database Service Misconfigured (AWS)",
    "weakness_id_read_only": "P866",
    "weakness": "04f942b6-187b-4ad6-978b-a094e4acf94f",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2017-07-31T07:55:58.490000-04:00",
    "last_updated": "2022-06-03T03:55:09.225000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T800",
    "universal_id": "7b8d0f1c-b10c-4731-8dd9-0f403c8d3475",
    "countermeasure_name": "Test if the sensitive Elastic Block Storage volumes are encrypted (AWS)",
    "countermeasure_solution": "Perform the following encryption test using the Amazon unified Command Line Interface:\n\n__Note__: Replace `<web_tier_tag>:<web_tier_tag_value>` with your own tag and value for the Web-tier.\n\n* Take note of the Elastic Block Storage (EBS) volume IDs, Instance IDs, Availability Zones, and check if Encrypted element is True or False.\n\nThis test __fails__ if it is **False**.\n\n```\naws ec2 describe-volumes --filters Name=tag:_<web_tier_tag>_,Values=_<web_tier_tag_value>_ --query 'Volumes[*].{VolumeId:VolumeId, Encrypted:Encrypted, AvailabilityZone:AvailabilityZone, InstanceId:Attachments[*].InstanceId}' --output table\n```\n__Note__: Replace `<app_tier_tag>:<app_tier_tag_value>` with your own tag and value for the App-tier.\n\n* Take note of the EBS volume IDs, Instance IDs, Availability Zones, and check if Encrypted element is True or False.\n\nThe test __fails__ if it is **False**.\n\n```\naws ec2 describe-volumes --filters Name=tag:_<app_tier_tag>_,Values=_<app_tier_tag_value>_ --query 'Volumes[*].{VolumeId:VolumeId, Encrypted:Encrypted, AvailabilityZone:AvailabilityZone, InstanceId:Attachments[*].InstanceId}' --output table\n```",
    "weakness_title_read_only": "Encryption on the sensitive Elastic Block Storage volumes is disabled (AWS)",
    "weakness_id_read_only": "P867",
    "weakness": "cb46ee11-dd6b-4811-a5c6-13c0c26ccd03",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2017-07-31T07:55:58.500000-04:00",
    "last_updated": "2022-06-03T03:55:09.246000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T801",
    "universal_id": "75d0bf04-6ac6-45d5-a111-4e37151e8f63",
    "countermeasure_name": "Test if the sensitive Amazon Machine Images are shared publicly (AWS)",
    "countermeasure_solution": "Using the Amazon unified Command Line Interface:\n\n__Note__: Replace `<web_tier_tag>:<web_tier_tag_value>` with your own tag and value for the Web tier.\n\n* Take note of the image IDs, Amazon Machine Images (AMI) name, and check if Public element is True or False:\n\n```\naws ec2 describe-images --owners self --filters Name=tag:_<web_tier_tag>_,Values=_<web_tier_tag_value>_ --query 'Images[*].{Name:Name, ImageId:ImageId, Public:Public}' --output table\n```\n\n__Note__: Replace `<app_tier_tag>:<app_tier_tag_value>` with your own tag and value for the App tier.\n\n* Take note of the image IDs, AMI name, and check if Public element is True or False:\n\n```\naws ec2 describe-images --owners self --filters Name=tag:_<app_tier_tag>_,Values=_<app_tier_tag_value>_ --query 'Images[*].{Name:Name, ImageId:ImageId, Public:Public}' --output table\n```",
    "weakness_title_read_only": "Public Access to sensitive Amazon Machine Images (AWS)",
    "weakness_id_read_only": "P868",
    "weakness": "c5e4166a-e9ee-4418-8418-0861722451e7",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2017-07-31T07:55:58.510000-04:00",
    "last_updated": "2022-06-03T03:55:09.268000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T802",
    "universal_id": "d1ebf101-13f7-4ac0-b9cf-549028284f6a",
    "countermeasure_name": "Test if Web- and App-tier Elastic Load Balancing is correctly configured (AWS)",
    "countermeasure_solution": "Using the Amazon unified Command Line Interface:\n\n- Ensure Web-tier ELBs have an SSL/TLS Certificate attached:\n\n```\naws elb describe-load-balancers --load-balancer-names _<web_tier_elb>_ --query \"LoadBalancerDescriptions[*].{LoadBalancerName:LoadBalancerName, DNSName:DNSName, Scheme:Scheme, ListenerDescriptions:ListenerDescriptions[?Listener.SSLCertificateId != null || Listener.Protocol == 'TCP']}\" --output table\n```\n\n__Note__: Replace `<web_tier_elb>` with your Web-tier ELB name.\n\n- If the `ListenerDescriptions` element is empty, the ELB does not have a listener configured with an SSL/TLS certificate, or a TCP listener (TCP pass-through).\n\n- Ensure Web-tier ELBs have the latest SSL Security Policies configured.\n    - Find all the SSL security policies associated with your load balancer listener.\n    - This test __fails__ if no such SSL security policies exist:\n\n```\naws elb describe-load-balancer-policies --load-balancer-name _<web_tier_elb>_ --query 'PolicyDescriptions[?PolicyTypeName==`SSLNegotiationPolicyType`].{PolicyName:PolicyName,ReferenceSecurityPolicy:PolicyAttributeDescriptions[0].AttributeValue}' --output table\n```\n\n__Note__: Replace `<web_tier_elb>` with your Web-tier ELB name.\n\n- Find which of the above policies is currently active, and check AWS documentation if it is the latest version available.\n    - For the TCP listeners the `PolicyNames` element will be empty, but the TCP listener is still compliant when using SSL certificates on the back-end EC2 instances:\n\n```\naws elb describe-load-balancers --load-balancer-name _<web_tier_elb>_ --query \"LoadBalancerDescriptions[*].{CompliantListeners:ListenerDescriptions[?Listener.SSLCertificateId != null || Listener.Protocol == 'TCP']}\" --output table\n```\n\n* Determine if healthcheck is in place on the Web-tier ELB.\n    * This test __fails__ if it is not:\n\n```\naws elb describe-load-balancers --load-balancer-names _<web_tier_elb>_ --query 'LoadBalancerDescriptions[*].{ELBName:LoadBalancerName,HealthCheck:HealthCheck}'\n```\n\n* Identify if healthcheck is in place on the App-tier ELB.\n    * This test __fails__ if it is not:\n\n```\naws elb describe-load-balancers --load-balancer-names _<app_tier_elb>_ --query 'LoadBalancerDescriptions[*].{ELBName:LoadBalancerName,HealthCheck:HealthCheck}'\n```\n\n* Check the Scheme of your App-tier ELB, and make sure it is \"internal\":\n\n```\naws elb describe-load-balancers --load-balancer-name _<app_tier_elb>_ --query \"LoadBalancerDescriptions[*].{LoadBalancerName:LoadBalancerName, Scheme:Scheme}\"\n```",
    "weakness_title_read_only": "Misconfiguration of Web- or App-tier Elastic Load Balancing (AWS)",
    "weakness_id_read_only": "P869",
    "weakness": "1ae8a659-3d34-4855-a90a-d948d4b34d0a",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2017-07-31T07:55:58.520000-04:00",
    "last_updated": "2022-06-03T03:55:09.291000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T803",
    "universal_id": "1e4d4d57-0d78-42be-a57e-6c0c87ada431",
    "countermeasure_name": "Test if S3 buckets are configured correctly (AWS)",
    "countermeasure_solution": "Using the Amazon unified Command Line Interface:\n\n* List all the S3 buckets from the AWS account:\n\n        aws s3api list-buckets --output table\n\n* For each S3 bucket:\n    * List the bucket policy and verify that:\n        1. A policy exists;\n        2. The policy contains a statement to deny `PutObject` calls that do not require server-side encryption; and \n        3. The policy denies requests that do not occur over a secure transport;\n\n        <!-- -->\n\n            aws s3api get-bucket-policy --bucket _<s3_bucket_name>_ --query 'Policy'\n            ...\n            {\n                \"Sid\": \"DenyUnEncryptedObjectUploads\",\n                \"Effect\": \"Deny\",\n                \"Principal\": \"*\",\n                \"Action\": \"s3:PutObject\",\n                \"Resource\": \"arn:aws:s3:::/*\",\n                \"Condition\": {\n                    \"Null\": { \"s3:x-amz-server-side-encryption\": \"true\",\n                    \"Bool\": { \"aws:SecureTransport\": \"false\" }\n                }\n            }\n\n    * Check if versioning is enabled:\n\n            aws s3api get-bucket-versioning --bucket _<s3_bucket_name>_\n\n        If the output is empty, then versioning is disabled.\n\n    * Verify the lifecycle policy rules:\n        - Log into your AWS Console and select \"S3\".\n        - Navigate to your Bucket where you want to verify the Lifecycle Policy.\n        - Click on \"Properties\" and then \"Lifecycle\".\n        - From here you can see the rules that make up your policy.\n        - Ensure the rules meet the retention requirements.",
    "weakness_title_read_only": "Misconfiguring S3 buckets (AWS)",
    "weakness_id_read_only": "P870",
    "weakness": "34562e6b-fa1c-4173-bc82-4673019511cd",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2017-07-31T07:55:58.530000-04:00",
    "last_updated": "2022-06-03T03:55:09.314000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T804",
    "universal_id": "4d9b533d-43bd-4269-8ad1-3cdca8584c25",
    "countermeasure_name": "Test if IAM roles and policies are created correctly for Amazon EC2 (AWS)",
    "countermeasure_solution": "Using the Amazon unified Command Line Interface:\n\n* List all the Web-tier EC2 instances, check which IAM instance profile is attached, and note the name of the instance profile:\n\n        aws ec2 describe-instances --filters Name=tag:_<web_tier_tag>_,Values=_<web_tier_tag_value>_ --query \"Reservations[*].Instances[*].{IamInstanceProfile:IamInstanceProfile, InstanceId:InstanceId}\"\n\n* Check and note the IAM role name used by the Web-tier instance profile:\n\n        aws iam get-instance-profile --instance-profile-name _<web_tier_instance_profile>_ --query \"InstanceProfile.Roles[*].RoleName\"\n\n* List all the App-tier EC2 instances, check which IAM instance profile they have attached, and note the name of the instance profile:\n\n        aws ec2 describe-instances --filters Name=tag:_<app_tier_tag>_,Values=_<app_tier_tag_value>_ --query \"Reservations[*].Instances[*].{IamInstanceProfile:IamInstanceProfile, InstanceId:InstanceId}\"\n\n* Check and note the IAM role name used by the App-tier instance profile:\n\n        aws iam get-instance-profile --instance-profile-name _<app_tier_instance_profile>_ --query \"InstanceProfile.Roles[*].RoleName\"\n\nThen:\n\n* Check and note the IAM role name used by the Web-tier instance profile:\n\n        aws iam get-instance-profile --instance-profile-name _<web_tier_instance_profile>_ --query \"InstanceProfile.Roles[*].RoleName\"\n\n* Check the managed policies attached to the IAM role, and take note of the policy's Amazon Resource Name:\n\n        aws iam list-attached-role-policies --role-name _<web_tier__iam_role>_\n\n* Check and note the version of the IAM policies attached to the IAM role:\n\n        aws iam get-policy --policy-arn _<iam_policy_arn>_ --query \"Policy.DefaultVersionId\"\n\n* Check the document policy:\n\n        aws iam get-policy-version --policy-arn _<iam_policy_arn>_ --version-id _<iam_policy_version>_\n\n* Check and note the IAM role name used by the App-tier instance profile:\n\n        aws iam get-instance-profile --instance-profile-name _<app_tier_instance_profile>_ --query \"InstanceProfile.Roles[*].RoleName\"\n\n* Check managed policies attached to the IAM role, and note the policies ARN:\n\n        aws iam list-attached-role-policies --role-name _<app_tier_iam_role>_\n\n* Check and note the version of the IAM policies attached to the IAM role:\n\n        aws iam get-policy --policy-arn _<iam_policy_arn>_ --query \"Policy.DefaultVersionId\"\n\n* Check the document policy:\n\n        aws iam get-policy-version --policy-arn _<iam_policy_arn>_ --version-id _<iam_policy_version>_",
    "weakness_title_read_only": "IAM roles and policies are not created properly for Amazon EC2 (AWS)",
    "weakness_id_read_only": "P871",
    "weakness": "245731c8-a2dc-4ec9-8067-a6e098a4cb5c",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2017-07-31T07:55:58.540000-04:00",
    "last_updated": "2022-06-03T03:55:09.334000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T805",
    "universal_id": "e038574f-eab6-487b-aa1c-044b5563e6f3",
    "countermeasure_name": "Test if Auto Scaling Group Launch is configured correctly (AWS)",
    "countermeasure_solution": "Using the Amazon unified Command Line Interface:\n\n* Check if your Web-tier auto scaling group is using a launch configuration with an IAM instance profile configured:\n\n```\naws autoscaling describe-launch-configurations --launch-configuration-names _<web_tier_launch_config>_ --query \"LaunchConfigurations[*].IamInstanceProfile\"\n```\n\n* Check and note the IAM role name used by the Web-tier instance profile:\n\n```\naws iam get-instance-profile --instance-profile-name _<web_tier_instance_profile>_ --query \"InstanceProfile.Roles[*].RoleName\"\n```\n\n* Check if your App-tier auto scaling group is using a launch configuration with an IAM instance profile configured:\n\n```\naws autoscaling describe-launch-configurations --launch-configuration-names _<app_tier_launch_config>_ --query \"LaunchConfigurations[*].IamInstanceProfile\"\n```\n\n* Check and note the IAM role name used by the Web-tier instance profile:\n\n```\naws iam get-instance-profile --instance-profile-name _<app_tier_instance_profile>_ --query \"InstanceProfile.Roles[*].RoleName\"\n```\n\n* List the associated Launch Configuration of the Web-tier Auto Scaling Group.\n    * Note the value of the `LaunchConfig` element:\n\n```\naws autoscaling describe-auto-scaling-groups --auto-scaling-group-names _<web_tier_autoscaling_group_name>_ --query 'AutoScalingGroups[*].{LaunchConfig:LaunchConfigurationName,ASG:AutoScalingGroupName}'\n```\n\n* Ensure that the actively used Launch Configuration found in the previous step is using the Web-tier Security Group.\n    * Replace _<web_tier_launch_config>_ with the Launch Configuration previously found:\n\n```\naws autoscaling describe-launch-configurations --launch-configuration-names _<web_tier_launch_config>_ --query 'LaunchConfigurations[*].{LaunchConfig:LaunchConfigurationName, SecurityGroups:SecurityGroups}'\n```\n\n* List the associated Launch Configuration of the App-tier Auto Scaling Group.\n    * Note the value of the `LaunchConfig` element:\n\n```\naws autoscaling describe-auto-scaling-groups --auto-scaling-group-names _<app_tier_autoscaling_group_name>_ --query 'AutoScalingGroups[*].{LaunchConfig:LaunchConfigurationName,ASG:AutoScalingGroupName}'\n```\n\n* Ensure that the actively used Launch Configuration found in the previous step is using the App-tier Security Group.\n    * Replace _<app_tier_launch_config>_ with the Launch Configuration previously found:\n\n```\naws autoscaling describe-launch-configurations --launch-configuration-names _<app_tier_launch_config>_ --query 'LaunchConfigurations[*].{LaunchConfig:LaunchConfigurationName, SecurityGroups:SecurityGroups}'\n```",
    "weakness_title_read_only": "Auto Scaling Group Launch is not configured correctly (AWS)",
    "weakness_id_read_only": "P872",
    "weakness": "cbb3f933-edee-4dba-b2a3-292af690a47e",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2017-07-31T07:55:58.550000-04:00",
    "last_updated": "2022-06-03T03:55:09.355000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T806",
    "universal_id": "efda5526-997a-4e5b-8f1e-e7e99135fbe2",
    "countermeasure_name": "Test if separate IAM groups and policies are created for administration (AWS)",
    "countermeasure_solution": "Using the Amazon unified Command Line Interface:\n\n* List the IAM groups created for administration purposes:\n\n```\naws iam list-groups --query \"Groups[?GroupName == '_<iam_admin_group_name>_']\"\n```\n\n* List the IAM admin policies, and note the policy ARN and `DefaultVersionId`:\n\n```\naws iam list-policies --query \"Policies[?PolicyName == '_<admin_policy_name>_']\"\n```\n\n* If the policy exists, check the policy document:\n\n```\naws iam get-policy-version --policy-arn _<admin_policy_arn>_ --version-id _<admin_policy_version>_\n```",
    "weakness_title_read_only": "No separate IAM groups and policies for administration (AWS)",
    "weakness_id_read_only": "P873",
    "weakness": "a537c070-a1fc-4432-bd22-ea96decf477d",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2017-07-31T07:55:58.560000-04:00",
    "last_updated": "2022-06-03T03:55:09.376000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T807",
    "universal_id": "ff03500b-1e82-4387-b89f-69a3a2756e6f",
    "countermeasure_name": "Test if everyone is not allowed to publish/subscribe to SNS topics (AWS)",
    "countermeasure_solution": "Using the Amazon unified Command Line Interface:\n\n* List all the SNS topics from your AWS account:\n\n```\naws sns list-topics\n```\n\n* For each topic in step 1, list the topic attributes:\n\n```\naws sns get-topic-attributes --topic-arn _<sns_topic_arn>_\n```\n\n* Check the Policy field for the presence of:\n\n```\n{\n \"Effect\":\"Allow\",\n \"Principal\":{\n \"AWS\":\"*\"\n },\n \"Action\":\"SNS:Publish\",\n \"Resource\":\"_<sns_topic_arn>_\"\n}\n```\n\nor\n\n```\n{\n \"Effect\":\"Allow\",\n \"Principal\":{\n \"AWS\":\"*\"\n },\n \"Action\":[\n \"SNS:Subscribe\",\n \"SNS:Receive\"\n ],\n \"Resource\":\"_<sns_topic_arn>_\"\n}\n```\n\n* The test __fails__ if such a loose permission exists.",
    "weakness_title_read_only": "Publish/Subscribe to SNS Topics is Allowed by Everyone (AWS)",
    "weakness_id_read_only": "P874",
    "weakness": "b074c432-9d48-459a-b416-e58d44097d76",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2017-07-31T07:55:58.571000-04:00",
    "last_updated": "2021-06-25T14:47:48.313000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T808",
    "universal_id": "38a1dfb3-8d78-42ec-939d-88b3356ffceb",
    "countermeasure_name": "Test if an Elastic Load Balancer is associated to each sensitive Auto Scaling Group (AWS)",
    "countermeasure_solution": "Using the Amazon unified Command Line Interface:\n\n* Identify the Auto Scaling Group Name and associated ELB name:\n\n```\naws autoscaling describe-auto-scaling-groups --query 'AutoScalingGroups[*].{ELB:LoadBalancerNames, ASGName:AutoScalingGroupName}'\n```\n\n* Identify the current status of the ELB:\n\n```\naws autoscaling describe-load-balancers --auto-scaling-group-name _<autoscaling_group_name>_\n```\n\n* Identify the current status of the Web-tier ELB:\n\n```\naws autoscaling describe-load-balancers --auto-scaling-group-name _<web_tier_autoscaling_group_name>_\n```\n\n* Identify the current status of the App-tier ELB:\n\n```\naws autoscaling describe-load-balancers --auto-scaling-group-name _<app_tier_autoscaling_group_name>_\n```",
    "weakness_title_read_only": "An Elastic Load Balancer Is Not Associated to Each Sensitive Auto Scaling Group (AWS)",
    "weakness_id_read_only": "P875",
    "weakness": "05dc8fc6-addc-41ff-aa74-82da60bff97b",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2017-07-31T07:55:58.581000-04:00",
    "last_updated": "2022-06-03T03:55:09.396000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T809",
    "universal_id": "4603fb72-4be2-4156-8d8d-3437cb801013",
    "countermeasure_name": "Test if each Auto Scaling Group is configured for multiple Availability Zones (AWS)",
    "countermeasure_solution": "Using the Amazon unified Command Line Interface:\n\n* List all Auto Scaling Groups and associated Availability Zones, and ensure there is more than one Availability Zone assigned to the Auto Scaling Group:\n\n```\naws autoscaling describe-auto-scaling-groups --query 'AutoScalingGroups[*].{AZs:AvailabilityZones, ASG:AutoScalingGroupName}'\n```",
    "weakness_title_read_only": "Auto Scaling Group Is Not Configured Correctly for Multiple Availability Zones (AWS)",
    "weakness_id_read_only": "P876",
    "weakness": "26ea751d-650e-47f4-9bcd-4f9598ba5939",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2017-07-31T07:55:58.592000-04:00",
    "last_updated": "2022-06-03T03:55:09.416000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T810",
    "universal_id": "714ab28a-351e-44e1-a624-13e0de1b1d2c",
    "countermeasure_name": "Test if an approved Amazon Machine Image is used in Auto Scaling Launch Configuration (AWS)",
    "countermeasure_solution": "Using the Amazon unified Command Line Interface:\n\n* List the associated Launch Configuration of the Web-tier Auto Scaling Group.\n    * Take note of the value of the `LaunchConfig` element:\n\n```\naws autoscaling describe-auto-scaling-groups --auto-scaling-group-names _<web_tier_autoscaling_group_name>_ --query 'AutoScalingGroups[*].{LaunchConfig:LaunchConfigurationName,ASG:AutoScalingGroupName}'\n```\n\n* Ensure that the actively used Launch Configuration found in the previous step is using an approved AMI from your organization's list.\n    * Replace _<web_tier_launch_config>_ with the Launch Configuration previously found:\n\n```\naws autoscaling describe-launch-configurations --launch-configuration-names _<web_tier_launch_config>_ --query 'LaunchConfigurations[*].{LaunchConfig:LaunchConfigurationName, AMI:ImageId, InstanceType:InstanceType}'\n```\n\n* List the associated Launch Configuration of the App-tier Auto Scaling Group.\n    * Note the value of the `LaunchConfig` element:\n\n```\naws autoscaling describe-auto-scaling-groups --auto-scaling-group-names _<app_tier_autoscaling_group_name>_ --query 'AutoScalingGroups[*].{LaunchConfig:LaunchConfigurationName,ASG:AutoScalingGroupName}'\n```\n\n* Ensure that the actively used Launch Configuration found in the previous step is using an approved AMI from your organization's list.\n    * Replace `<app_tier_launch_config>` with the Launch Configuration previously found:\n\n```\naws autoscaling describe-launch-configurations --launch-configuration-names _<app_tier_launch_config>_ --query 'LaunchConfigurations[*].{LaunchConfig:LaunchConfigurationName, AMI:ImageId, InstanceType:InstanceType}'\n```",
    "weakness_title_read_only": "An Approved Amazon Machine Image Is Not Used in Auto Scaling Launch Configuration (AWS)",
    "weakness_id_read_only": "P877",
    "weakness": "eb5efead-df3a-4f0c-bf78-ca8c991c3ec2",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2017-07-31T07:55:58.603000-04:00",
    "last_updated": "2022-06-03T03:55:09.436000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T811",
    "universal_id": "cf32bc4a-7810-4e71-8518-c2b27b34f421",
    "countermeasure_name": "Test if required SNS topics are created (AWS)",
    "countermeasure_solution": "Using the Amazon unified Command Line Interface:\n\n* List all Cloudwatch alarms and filter them by alarm action.\n    - Review \"AlarmActions\": [_<sns_topic_arn>_]:\n\n```\naws cloudwatch describe-alarms --query 'MetricAlarms[*].{AlarmName:AlarmName, AlarmActions:AlarmActions, Dimensions:Dimensions}'\n```\n\n* List SNS topic attributes:\n\n```\naws sns list-topic-attributes --topic-arn _<sns_topic_arn>_\n```\n\n* List SNS topic subscriptions.\n    - The endpoint that receives messages captured by the SNS topic:\n\n```\naws sns list-subscriptions-by-topic --topic-arn _<sns_topic_arn>_\n```\n\n* List all RDS event subscriptions to capture the topic-arn:\n\n```\naws rds describe-event-subscriptions --query 'EventSubscriptionsList[*].{SourceType:SourceType, SourceIdsList:SourceIdsList, EventCategoriesList:EventCategoriesList}'\n```\n\n* List SNS topic attributes:\n\n```\naws sns list-topic-attributes --topic-arn _<sns_topic_arn>_\n```\n\n* List SNS topic subscriptions.\n    - The endpoint that receives messages captured by the SNS topic:\n\n```\naws sns list-subscriptions-by-topic --topic-arn _<sns_topic_arn>_\n```\n\n* List all present event subscriptions and review the value of the `db-instance` associated with the `SourceType` element:\n\n```\naws rds describe-event-subscriptions --query 'EventSubscriptionsList[*].{SourceType:SourceType, SourceIdsList:SourceIdsList, EventCategoriesList:EventCategoriesList}'\n```\n\n* `EventCategoriesList` will list all event categories that will be reported on\n* `SourceIdsList` will list all RDS DB instances included (null=all instances)\n* List all present event subscriptions and review the value of the `db-security-group` associated with the `SourceType` element:\n\n```\naws rds describe-event-subscriptions --query 'EventSubscriptionsList[*].{SourceType:SourceType, SourceIdsList:SourceIdsList, EventCategoriesList:EventCategoriesList}'\n```\n\n* `EventCategoriesList` will list all event categories that will be reported on\n* `SourceIdsList` will list all RDS DB instances included (null=all instances)",
    "weakness_title_read_only": "Required SNS topics are not created (AWS)",
    "weakness_id_read_only": "P878",
    "weakness": "4fd6da91-0416-46db-904e-d6144014c85c",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2017-07-31T07:55:58.613000-04:00",
    "last_updated": "2021-06-25T14:47:58.657000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T812",
    "universal_id": "d7da7e1f-330c-4b12-acd4-ea6161804372",
    "countermeasure_name": "Test if Billing Alerts are enabled for increments of X spend (AWS)",
    "countermeasure_solution": "Check if billing alerts are enabled.\n\n1. Sign in to the AWS Management Console and open the [Billing and Cost Management console](https://console.aws.amazon.com/billing/home).\n2. On the navigation pane, choose __Preferences__.\n3. Make sure to select the __Receive Billing Alerts__ check box.\n\nUsing the Amazon unified Command Line Interface:\n\n- Check if the alarm for the AWS/Billing namespace is created:\n\n```\naws cloudwatch describe-alarms --region us-east-1 --alarm-names _<billing_alarm_name>_\n```",
    "weakness_title_read_only": "Billing Alerts are disabled for increments of X spend (AWS)",
    "weakness_id_read_only": "P879",
    "weakness": "caf79064-7985-42e4-a6cd-972f7733c5f1",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2017-07-31T07:55:58.622000-04:00",
    "last_updated": "2022-06-03T03:55:09.457000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T813",
    "universal_id": "ae44aea9-b07f-4b88-b4e4-e94ad8adb039",
    "countermeasure_name": "Test that AWS Elastic Load Balancer logging is enabled (AWS)",
    "countermeasure_solution": "Using the Amazon unified Command Line Interface:\n\n* List all ELBs:\n\n        aws elb describe-load-balancers --query 'LoadBalancerDescriptions[*].{LoadBalancerName:LoadBalancerName}'\n\n* Confirm that the correct ELB is selected by reviewing ELB tags:\n\n        aws elb describe-tags --load-balancer-names _<elb_name>_\n\n* Review selected ELB attributes and ensure Access Log is enabled:\n\n        aws elb describe-load-balancer-attributes --load-balancer-name _<elb_name>_",
    "weakness_title_read_only": "Inactive AWS Elastic Load Balancer logging (AWS)",
    "weakness_id_read_only": "P880",
    "weakness": "8db9ab37-cc87-469f-acc7-db276bfde06f",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2017-07-31T07:55:58.632000-04:00",
    "last_updated": "2022-06-03T03:55:09.477000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T814",
    "universal_id": "6ac52590-bca9-4af5-bb7a-17cd2b86fe5e",
    "countermeasure_name": "Test that AWS CloudFront Logging is enabled (AWS)",
    "countermeasure_solution": "Using the Amazon unified Command Line Interface:\n\n* List all Cloudfront distributions and identify your application Distribution and Origin IDs. Take note of the `Id:` element:\n\n        aws cloudfront list-distributions\n\n* Using the distribution ID from the previous step, display the distribution settings. Check if the \"Enabled\" element is True or False:\n\n        aws cloudfront get-distribution-config --id _<application_cfn_distribution_id>_ --query \"DistributionConfig.Logging\"",
    "weakness_title_read_only": "Insufficient Logging or Insufficient Protection of Logs",
    "weakness_id_read_only": "P619",
    "weakness": "9a42301f-ed6c-42cb-a85d-a5134b76b701",
    "tags": "",
    "countermeasure_priority": "2",
    "phase": "testing",
    "created": "2017-07-31T07:55:58.642000-04:00",
    "last_updated": "2022-06-03T03:55:09.497000-04:00",
    "custom": "False",
    "rules": "a5bb6d04-111c-4fd1-ab43-b8aed799e105 AND cab80cea-1a20-433f-b78c-783b816b8d33 AND 3781bade-6558-4e51-8902-6760942208e1",
    "rules_read_only": "A1159 AND A739 AND A1175"
  },
  {
    "countermeasure_id": "T815",
    "universal_id": "6b0ba9e6-564a-40f6-965c-e5edc9fed23e",
    "countermeasure_name": "Test that CloudWatch Log Groups are created (AWS)",
    "countermeasure_solution": "Using the Amazon unified Command Line Interface:\n\n- Search for your Web-tier CloudWatch Log Group:\n\n        aws logs describe-log-groups --query \"logGroups[?logGroupName == '_<web_tier_log_group>_']\"\n\n- Search for your App-tier CloudWatch Log Group:\n\n        aws logs describe-log-groups --query \"logGroups[?logGroupName == '_<app_tier_log_group>_']\"\n\n- Search for your Web-tier CloudWatch Log Group, and check for the presence of the `retentionInDays` element:\n\n        aws logs describe-log-groups --query \"logGroups[?logGroupName == '_<web_tier_log_group>_']\"\n\n- Search for your App-tier CloudWatch Log Group, and check for the presence of the `retentionInDays` element:\n\n        aws logs describe-log-groups --query \"logGroups[?logGroupName == '_<app_tier_log_group>_']\"",
    "weakness_title_read_only": "CloudWatch Log Groups have same settings (AWS)",
    "weakness_id_read_only": "P882",
    "weakness": "412c4bbc-ad73-43ea-86ba-5d4fba8b8b4d",
    "tags": "",
    "countermeasure_priority": "3",
    "phase": "testing",
    "created": "2017-07-31T07:55:58.652000-04:00",
    "last_updated": "2022-06-03T03:55:09.519000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T816",
    "universal_id": "3bbdb6ad-d624-45bb-84dc-a4790fe67e11",
    "countermeasure_name": "Test that AWS CloudWatch Logs agent is installed within required Auto-Scaling Groups (AWS)",
    "countermeasure_solution": " - Using the Amazon unified Command Line Interface (CLI):\n\n* Check if the CloudWatch Logs agent is installed through UserData in the **Web-tier** Auto Scaling Launch Configuration:\n\n        aws autoscaling describe-launch-configurations --launch-configuration-names _<web_tier_launch_config>_--query \"LaunchConfigurations[*].UserData\"\n\n* The output should be similar to:\n\n        #!/bin/bash\n        curl https://s3.amazonaws.com/aws-cloudwatch/downloads/latest/awslogs-agent-setup.py -O\n        chmod +x ./awslogs-agent-setup.py\n        ./awslogs-agent-setup.py -n -r us-east-1 -c s3://_<s3_bucket_name>_/_<cloudwatch_agent_config_file>_\n\n- Using the Amazon unified CLI:\n\n* Check if the CloudWatch Logs agent is installed through UserData in the **App-tier** Auto Scaling Launch Configuration:\n\n        aws autoscaling describe-launch-configurations --launch-configuration-names _<app_tier_launch_config>_ --query \"LaunchConfigurations[*].UserData\"\n\n* The output should be similar to:\n\n        #!/bin/bash\n        curl https://s3.amazonaws.com/aws-cloudwatch/downloads/latest/awslogs-agent-setup.py -O\n        chmod +x ./awslogs-agent-setup.py\n        ./awslogs-agent-setup.py -n -r us-east-1 -c s3://_<s3_bucket_name>_/_<cloudwatch_agent_config_file>_",
    "weakness_title_read_only": "Insufficient monitoring of AWS logs within required Auto-Scaling Groups (AWS)",
    "weakness_id_read_only": "P883",
    "weakness": "3613a574-ee00-4668-b6fc-9330896315e7",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2017-07-31T07:55:58.661000-04:00",
    "last_updated": "2022-06-03T03:55:09.539000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T817",
    "universal_id": "16224d02-6f85-4de3-a1de-72f934bc5a99",
    "countermeasure_name": "Test for required AWS Managed Config Rules (AWS)",
    "countermeasure_solution": "Using the Amazon unified Command Line Interface:\n\n* Search for a Config Rule that checks if the EBS volumes tagged with Web-tier tags are encrypted with a Web-tier Key Management Services (KMS) key:\n\n        aws configservice describe-config-rules --query \"ConfigRules[?Source.SourceIdentifier == 'ENCRYPTED_VOLUMES']|[?Scope.TagKey == '_<web_tier_tag>_']|[?Scope.TagValue == '_<web_tier_tag_value>_']|[?InputParameters == '{\\\"kmsId\\\":\\\"_<web_tier_kms_key>_\\\"}']\"\n\n* Search for a Config Rule that checks if the EBS volumes tagged with App-tier tags are encrypted with an App-tier KMS key:\n\n        aws configservice describe-config-rules --query \"ConfigRules[?Source.SourceIdentifier == 'ENCRYPTED_VOLUMES']|[?Scope.TagKey == '_<app_tier_tag>_']|[?Scope.TagValue == '_<app_tier_tag_value>_']|[?InputParameters == '{\\\"kmsId\\\":\\\"_<app_tier_kms_key>_\\\"}']\"\n\n* Search for a Config Rule that checks whether all Elastic IP (EIP) addresses allocated to a Virtual Private Cloud (VPC) are attached to EC2 instances or in-use Elastic Network Interfaces (ENIs):\n\n        aws configservice describe-config-rules --query \"ConfigRules[?Source.SourceIdentifier == 'EIP_ATTACHED']\"",
    "weakness_title_read_only": "Failing to create required AWS Managed Config Rules (AWS)",
    "weakness_id_read_only": "P884",
    "weakness": "908a9f0e-52f0-4caa-b6ab-cd1eed0c6fe8",
    "tags": "",
    "countermeasure_priority": "3",
    "phase": "testing",
    "created": "2017-07-31T07:55:58.671000-04:00",
    "last_updated": "2022-06-03T03:55:09.560000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T818",
    "universal_id": "771d943a-87b1-43a1-a656-fbd17274ecb4",
    "countermeasure_name": "Test that CloudFront Content Distribution Network is used (AWS)",
    "countermeasure_solution": "Using the Amazon unified Command Line Interface:\n\n* List the Cloudfront distributions present in the AWS account.\n   * Check in the aliases field for the presence of the domain name used by the application:\n\n        aws cloudfront list-distributions --query \"DistributionList.Items[*].{Id:Id, Status:Status, DomainName:DomainName, Aliases:Aliases.Items}\"",
    "weakness_title_read_only": "Failing to use CloudFront Content Distribution Network (AWS)",
    "weakness_id_read_only": "P885",
    "weakness": "3e76789b-5873-45d3-ab8f-86396920e2f6",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2017-07-31T07:55:58.681000-04:00",
    "last_updated": "2022-06-03T03:55:09.580000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T819",
    "universal_id": "1a190b46-35a5-4926-8834-7089f0389b94",
    "countermeasure_name": "Test the configuration of VPCs and subnets (AWS)",
    "countermeasure_solution": "Using the Amazon unified Command Line Interface:\n\n- List the subnets associated with the Web-tier ELB:\n\n        aws elb describe-load-balancers --load-balancer-name _<web_tier_elb>_ --query \"LoadBalancerDescriptions[*].Subnets\"\n\nOr:\n\n        aws ec2 describe-subnets --filters Name=tag:_<public_tier_tag>_,Values=_<public_tier_tag_value>_ --query \"Subnets[*].SubnetId\"\n\n- List the subnets associated with the Web tier:\n\n        aws ec2 describe-subnets --filters Name=tag:_<web_tier_tag>_,Values=_<web_tier_tag_value>_ --query \"Subnets[*].SubnetId\"\n\n- List the subnets associated with the App tier:\n\n        aws ec2 describe-subnets --filters Name=tag:_<app_tier_tag>_,Values=_<app_tier_tag_value>_ --query \"Subnets[*].SubnetId\"\n\n- List the subnets associated with the Data tier:\n\n        aws ec2 describe-subnets --filters Name=tag:_<data_tier_tag>_,Values=_<data_tier_tag_value>_ --query \"Subnets[*].SubnetId\"\n\n- List route tables attached to the public subnets, and check if they contain the default route (0.0.0.0/0) pointing to the Internet Gateway (IGW):\n\n        aws ec2 describe-route-tables --filters Name=association.subnet-id,Values=_<public_subnet1>,<public_subnet2>_ --query \"RouteTables[*].{RouteTableId:RouteTableId, Tags:Tags, Routes:Routes}\"\n\n- List route tables attached to the private subnets, and check if they contain the default route (0.0.0.0/0) pointing to the NAT Gateway:\n\n        aws ec2 describe-route-tables --filters Name=association.subnet-id,Values=_<private_subnet1>,<private_subnet2>_ --query \"RouteTables[*].{RouteTableId:RouteTableId, Tags:Tags, Routes:Routes}\"\n\n- List the subnets associated with the Web-tier ELB:\n\n        aws elb describe-load-balancers --load-balancer-name _<web_tier_elb>_ --query \"LoadBalancerDescriptions[*].Subnets\"\n\n- List the routes of the route tables associated with the above subnets, and check if the default route (0.0.0.0/0) has an IGW configured as a gateway:\n\n        aws ec2 describe-route-tables --filters Name=association.subnet-id,Values=_<web_tier_elb_subnet1>,<web_tier_elb_subnet2>_ --query \"RouteTables[*].{RouteTableId:RouteTableId, Routes:Routes}\"\n\n- List the subnets associated with the Web-tier:\n\n        aws ec2 describe-subnets --filters Name=tag:_<web_tier_tag>_,Values=_<web_tier_tag_value>_ --query \"Subnets[*].SubnetId\"\n\n- List the routes of the route tables associated with the above subnets, and check if the default route (0.0.0.0/0) has a NAT GW configured as a gateway:\n\n        aws ec2 describe-route-tables --filters Name=association.subnet-id,Values=_<web_tier_subnet1>,<web_tier_subnet2>_ --query \"RouteTables[*].{RouteTableId:RouteTableId, Routes:Routes}\"\n\n- List the subnets associated with the App tier:\n\n        aws ec2 describe-subnets --filters Name=tag:_<app_tier_tag>_,Values=_<app_tier_tag_value>_ --query \"Subnets[*].SubnetId\"\n\n- List the routes of the route tables associated with the above subnets, and check if the default route (0.0.0.0/0) has a NAT GW configured as gateway:\n\n        aws ec2 describe-route-tables --filters Name=association.subnet-id,Values=_<app_tier_subnet1>_,<app_tier_subnet2>_ --query \"RouteTables[*].{RouteTableId:RouteTableId, Routes:Routes}\"\n\n- List the subnets associated with the Data tier:\n\n        aws ec2 describe-subnets --filters Name=tag:_<data_tier_tag>_,Values=_<data_tier_tag_value>_ --query \"Subnets[*].SubnetId\"\n\n- List the routes of the route tables associated with the above subnets, and make sure the default route (0.0.0.0/0) does NOT have a NAT GW configured as a gateway:\n\n        aws ec2 describe-route-tables --filters Name=association.subnet-id,Values=_<data_tier_subnet1>,<data_tier_subnet2>_ --query \"RouteTables[*].{RouteTableId:RouteTableId, Routes:Routes}\"",
    "weakness_title_read_only": "Misconfiguration of VPCs and subnets (AWS)",
    "weakness_id_read_only": "P886",
    "weakness": "8944efaf-cfd9-48c8-a674-d7f8acabbdeb",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2017-07-31T07:55:58.691000-04:00",
    "last_updated": "2022-06-03T03:55:09.600000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T822",
    "universal_id": "63bd0aad-f6dc-4d4a-9a16-4c90ba06a3e0",
    "countermeasure_name": "Test the configuration of ELB Security Groups (AWS)",
    "countermeasure_solution": "Using the Amazon unified Command Line Interface:\n\n* List the security group associated with the Web-tier ELB:\n\n        aws elb describe-load-balancers --load-balancer-name _<web_tier_elb>_ --query \"LoadBalancerDescriptions[*].{DNSName:DNSName, WebTierELBSecurityGroups:SecurityGroups, SourceSecurityGroup:SourceSecurityGroup}\" --output table\n\n* Take note of the `WebTierELBSecurityGroups` from the output.\n* List the ingress rules for the above security group, and make sure that only HTTP (TCP 80) and HTTPS (TCP 443) traffic is allowed from any source IP (0.0.0.0/0):\n\n        aws ec2 describe-security-groups --group-ids _<security_group_id>_ --query \"SecurityGroups[*].{GroupName:GroupName, IpPermissions:IpPermissions}\" --output table\n\n* List the security groups associated with all Auto Scaling launch configurations and make sure that the above Web-tier ELB security group is not present:\n\n        aws autoscaling describe-launch-configurations --query \"LaunchConfigurations[*].{SecurityGroups:SecurityGroups, LaunchConfigurationName:LaunchConfigurationName}\"\n\n* List the security group associated with the App-tier ELB:\n\n        aws elb describe-load-balancers --load-balancer-name _<app_tier_elb>_ --query \"LoadBalancerDescriptions[*].{DNSName:DNSName, AppTierELBSecurityGroups:SecurityGroups, SourceSecurityGroup:SourceSecurityGroup}\" --output table \n\n* Take note of the `AppTierELBSecurityGroups` from the output.\n* List the ingress rules for the above security group, and make sure that only HTTP (TCP 80) and HTTPS (TCP 443) traffic is allowed from a Web-tier Security Group:\n\n        aws ec2 describe-security-groups --group-ids _<app_tier_elb_security_group>_ --query \"SecurityGroups[*].{GroupName:GroupName, IpPermissions:IpPermissions}\" --output table",
    "weakness_title_read_only": "Misconfiguration of Security Groups (AWS)",
    "weakness_id_read_only": "P889",
    "weakness": "c2fb91ee-1f3e-47d1-9a4d-cb521508e14d",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2017-07-31T07:55:58.722000-04:00",
    "last_updated": "2022-06-03T03:55:09.622000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T823",
    "universal_id": "8f631ac5-3d09-46de-a14f-462c4b623580",
    "countermeasure_name": "Test the configuration of Security Groups (AWS)",
    "countermeasure_solution": "Using the Amazon unified Command Line Interface:\n\n* List the ingress rules for the Web-tier security group, and make sure it only allows connections from Web-tier ELB security groups on specific ports:\n\n        aws ec2 describe-security-groups --filters Name=tag:_<web_tier_tag>_,Values=_<web_tier_tag_value>_ --query \"SecurityGroups[*].{GroupName:GroupName, IpPermissions:IpPermissions, WebTierSecurityGroup:GroupId}\" --output table\n* Make sure it has no inbound rules for a CIDR of 0.0.0.0/0.\n\n* List the ingress rules for the App-tier security group, and make sure it only allows connections from App-tier ELB security groups on specific ports:\n\n        aws ec2 describe-security-groups --filters Name=tag:_<app_tier_tag>_,Values=_<app_tier_tag_value>_ --query \"SecurityGroups[*].{GroupName:GroupName, IpPermissions:IpPermissions, AppTierSecurityGroup:GroupId}\" --output table\n* Make sure it has no inbound rules for a CIDR of 0.0.0.0/0.\n\n* Retrieve the Data-tier security group configured for your RDS DB instance:\n\n        aws rds describe-db-instances --db-instance-identifier _<your_db_instance>_ --query \"DBInstances[*].VpcSecurityGroups\"\n\n* List the ingress rules for the above security group, and make sure it only allows connections from App-tier security groups on specific ports:\n\n        aws ec2 describe-security-groups --group-ids _<data_tier_security_group>_ --query \"SecurityGroups[*].{GroupName:GroupName, IpPermissions:IpPermissions}\" --output table\n* Make sure it has no inbound rules for a CIDR of 0.0.0.0/0.",
    "weakness_title_read_only": "Misconfiguration of Security Groups (AWS)",
    "weakness_id_read_only": "P889",
    "weakness": "c2fb91ee-1f3e-47d1-9a4d-cb521508e14d",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2017-07-31T07:55:58.733000-04:00",
    "last_updated": "2022-06-03T03:55:09.642000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T824",
    "universal_id": "777bbcc7-6258-45e5-b65c-c3957556371c",
    "countermeasure_name": "Test that redundant Elastic / Public IP addresses are removed (AWS)",
    "countermeasure_solution": "Using the Amazon unified Command Line Interface:\n\n* List the instance IDs, tags, and public IPs of the EC2 instances from the application VPC that have a public IP associated with them.\n* Then check if there are any instances with Web-, App-, or Data-tier tags listed:\n\n        aws ec2 describe-instances --filters \"Name=vpc-id,Values=_<application_vpc>_\" --query \"Reservations[*].Instances[?PublicIpAddress != null].{InstanceId:InstanceId, PublicIpAddresses:NetworkInterfaces[*].Association, SubnetId:SubnetId, Tags:Tags}\"",
    "weakness_title_read_only": "Redundant Elastic / Public IP addresses (AWS)",
    "weakness_id_read_only": "P891",
    "weakness": "712ecb6d-496d-4fb8-aa8b-da1658248eb5",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2017-07-31T07:55:58.743000-04:00",
    "last_updated": "2022-06-03T03:55:09.663000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T825",
    "universal_id": "67acc11b-0266-4256-b547-01c7e20fe1e6",
    "countermeasure_name": "Test that required Customer Master Keys are created (AWS)",
    "countermeasure_solution": "Using the Amazon unified Command Line Interface:\n\n- Run the following commands to determine if a Web-, App-, or Data-tier KMS key exists:\n\n    aws kms list-aliases --query 'Aliases[?AliasName == `_<web_tier_kms_alias>_`]' \n\n    aws kms list-aliases --query 'Aliases[?AliasName == `_<app_tier_kms_alias>_`]' \n\n    aws kms list-aliases --query 'Aliases[?AliasName == `_<data_tier_kms_alias>_`]' \n\nIf such a key exists, an `AliasArn` property will be displayed in the output.",
    "weakness_title_read_only": "Lack of customer-managed Customer Master Keys (AWS)",
    "weakness_id_read_only": "P892",
    "weakness": "d40fb2af-129d-4496-89b7-081f1156372c",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2017-07-31T07:55:58.753000-04:00",
    "last_updated": "2022-06-03T03:55:09.683000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T827",
    "universal_id": "cb97e626-87a7-4a38-bdf8-75039ae18a72",
    "countermeasure_name": "Test that public Web-tier SSL/TLS certificates are more than 30 days from expiration (AWS)",
    "countermeasure_solution": "Using the Amazon unified Command Line Interface:\n\n* List all SSL/TLS certificates stored in IAM and check the Expiration field.\n\n        aws iam list-server-certificates \n\nFor Amazon Certificate Manager (ACM) users:\n\n* List ACM certificates and take note of the `CertificateArnvalue` of the certificates used by the app:\n\n        aws acm list-certificates \n\n* Get the details of the desired certificate and check the `ExpirationDatevalue`, which is the certificate expiration time as an Epoch timestamp:\n\n        aws acm describe-certificate --certificate-arn _<ssl_certificate_arn>_ --query \"Certificate.{ExpirationDate:NotAfter, Status:Status, SubjectAlternativeNames:SubjectAlternativeNames, DomainName:DomainName}\"",
    "weakness_title_read_only": "Expired public SSL/TLS certificates (AWS)",
    "weakness_id_read_only": "P894",
    "weakness": "ad99ded1-c41a-4933-9e72-87954fb73cb2",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2017-07-31T07:55:59.702000-04:00",
    "last_updated": "2022-06-03T03:55:09.703000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T828",
    "universal_id": "1b2f4a35-d9c9-456e-acca-b9c7e82651ca",
    "countermeasure_name": "Test that CloudFront is configured correctly (AWS)",
    "countermeasure_solution": "Using the Amazon unified Command Line Interface:\n\n* Check the `OriginProtocolPolicy` used by application Cloudfront distributions (it should be set as https-only):\n\n        aws cloudfront list-distributions --query \"DistributionList.Items[*].{Id:Id, OriginProtocolPolicy:Origins.Items[*].CustomOriginConfig.OriginProtocolPolicy}\"\n\n* Check the `OriginSslProtocols` used by application Cloudfront distributions (only TLSv1.2 should be present):\n\n        aws cloudfront list-distributions --query \"DistributionList.Items[*].{Id:Id, OriginSslProtocols:Origins.Items[*].CustomOriginConfig.OriginSslProtocols.Items[*]}\"\n\n* Check the `ViewerProtocolPolicy` used by application CloudFront distributions (it should be set as redirect-to-https):\n\n        aws cloudfront list-distributions --query \"DistributionList.Items[*].{Id:Id, ViewerProtocolPolicy:DefaultCacheBehavior.ViewerProtocolPolicy}\"\n\n* Check if geo restrictions are enabled on your application CloudFront distribution:\n\n        aws cloudfront get-distribution --id _<application_cfn_distribution_id>_ --query \"Distribution.DistributionConfig.Restrictions.GeoRestriction\"",
    "weakness_title_read_only": "Misconfiguration of CloudFront (AWS)",
    "weakness_id_read_only": "P895",
    "weakness": "cbe4430b-2451-4212-b78e-b3aaec27c9f6",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2017-07-31T07:55:59.712000-04:00",
    "last_updated": "2022-06-03T03:55:09.723000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T829",
    "universal_id": "8834789b-ebcf-4ba6-859a-920e91dedd61",
    "countermeasure_name": "Test that DNS for Root Domain is configured correctly (AWS)",
    "countermeasure_solution": "Using the Amazon unified Command Line Interface:\n\n* List all the hosted zones and check if the domain name used by the application is present among them:\n\n        aws route53 list-hosted-zones --query 'HostedZones[*].{Name:Name, Id:Id}' --output table\n\n* List only the Alias records of the hosted zone used by the application. Use the hosted zone ID from the previous recommendation. Check if an Alias record is created for the root domain:\n\n        aws route53 list-resource-record-sets --hosted-zone-id _<your_hosted_zone_id>_ --query 'ResourceRecordSets[?AliasTarget != null]'",
    "weakness_title_read_only": "Misconfiguration of DNS for Root Domain (AWS)",
    "weakness_id_read_only": "P896",
    "weakness": "7eb41f78-29d6-4557-8df0-c981797d3db2",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2017-07-31T07:55:59.722000-04:00",
    "last_updated": "2022-06-03T03:55:09.743000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T830",
    "universal_id": "946da274-7a81-40bf-a5cd-b997c2d8cc14",
    "countermeasure_name": "Test that RDS Databases are not publicly accessible and are defined in a VPC (AWS)",
    "countermeasure_solution": "Using the Amazon unified Command Line Interface:\n\n* Check if your application DB instances are publicly available. If they are, this test __fails__.\n\n        aws rds describe-db-instances --filters Name=tag:_<data_tier_tag>_,Values=_<data_tier_tag_value>_ --query \"DBInstances[*].{PubliclyAccessible:PubliclyAccessible, DBInstanceIdentifier:DBInstanceIdentifier}\"\n\nPerform the following to determine if the RDS instance is configured to run in a VPC:\n\n1. Login to the RDS Management Dashboard at [https://console.aws.amazon.com/rds/home](https://console.aws.amazon.com/rds/home).\n2. In the navigation pane on the left, click Databases.\n3. Choose the desired database.\n4. In the Connectivity & security pane of the summary ensure the RDS database is assigned a value under VPC.",
    "weakness_title_read_only": "Publicly accessible RDS Databases (AWS)",
    "weakness_id_read_only": "P897",
    "weakness": "d9bd715b-7fb6-4059-8834-a137311d4515",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2017-07-31T07:55:59.731000-04:00",
    "last_updated": "2022-06-03T03:55:09.766000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T831",
    "universal_id": "ead824a7-22d6-408d-9166-73699e106c88",
    "countermeasure_name": "Verify that the default VPC is not used (AWS)",
    "countermeasure_solution": "Using the Amazon unified Command Line Interface:\n\n* List the attributes of the VPCs in your account and take note of the value of the `IsDefault` attribute for the VPC where the application is deployed. Make sure you are not using the default VPC:\n\n        aws ec2 describe-vpcs --query \"Vpcs[*].{VpcId:VpcId, IsDefault:IsDefault, Tags:Tags}\" --output table",
    "weakness_title_read_only": "Using the default VPC (AWS)",
    "weakness_id_read_only": "P898",
    "weakness": "725e16be-829b-44da-aed0-ba11eb857a79",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2017-07-31T07:55:59.740000-04:00",
    "last_updated": "2022-06-03T03:55:09.786000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T835",
    "universal_id": "e8be47e0-8a48-40bc-9143-5839e6cd4664",
    "countermeasure_name": "Test that iOS widgets do not display sensitive information",
    "countermeasure_solution": "Follow these steps to test that your app's widget does not reveal sensitive user's information.\n\n1. Install the app on a device or emulator.\n2. Test that app's widget does not disclose any sensitive information on the lock screen; otherwise, this test fails.\n3. Test that the app notifies the user of the widget access from the lock screen and instruct them to disable the access via the settings menu unless they are aware of and take the risk.",
    "weakness_title_read_only": "Information leak through iOS widget",
    "weakness_id_read_only": "P860",
    "weakness": "d78a32cf-a421-4fa4-8c2e-d8c686f054c3",
    "tags": "",
    "countermeasure_priority": "2",
    "phase": "testing",
    "created": "2017-08-08T12:26:05.135000-04:00",
    "last_updated": "2021-06-25T14:47:38.015000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T836",
    "universal_id": "d8857799-0a56-4d8d-8097-48079212e9a8",
    "countermeasure_name": "Verify that the user is authorized before launching the iOS app via a widget",
    "countermeasure_solution": "Inspect the code and verify that it applies the same degree of authentication and authorization when the app is launched via an openURL call (that is used by widgets to open the application). \n\nFor this, verify that the ***application(_:didFinishLaunchingWithOptions:)*** method in Swift or the ***application:didFinishLaunchingWithOptions:*** method in Objective-C, handles authentication and authorization properly.",
    "weakness_title_read_only": "iOS widget unauthorized view navigation",
    "weakness_id_read_only": "P863",
    "weakness": "8c28524c-d6a8-480e-9054-8a298e1e658e",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2017-08-08T13:00:44.777000-04:00",
    "last_updated": "2021-06-25T14:47:46.293000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T837",
    "universal_id": "aa114ef6-901a-41bf-9b12-1e8981fd6b73",
    "countermeasure_name": "Adhere to HTTP DNT header",
    "countermeasure_solution": "Adhere to the HTTP `Do Not Track (DNT)` header if it is included in a user's HTTP request. Develop required features to disable user tracking based on the user's demand.\n\nThe header field name is `DNT` and it currently accepts two values:\n\n- `1`: in case the user does not want to be tracked (opt out); or\n- `0`: in case the user consents to be tracked (opt in);\n\nImplement a particular policy based on the value provided in the request. Your application should adapt its behavior depending on the user's preference:\n\n- If the value is `1`: Disable third party tracking for this request and delete all previously stored tracking data.\n- If the value is `0`: Your application may track the user.\n- If the value is `null` (no header sent): This happens if the user has not expressed any preference. Your application may track the user, but should not draw any definite conclusions on user's preferences as the user has not expressed it.",
    "weakness_title_read_only": "Insufficient consent for user tracking",
    "weakness_id_read_only": "P732",
    "weakness": "f4b8e089-29b2-450e-b619-3b279d903891",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "requirements",
    "created": "2017-08-10T17:43:14.558000-04:00",
    "last_updated": "2023-05-25T13:09:48.759000-04:00",
    "custom": "False",
    "rules": "b310a679-c006-4abb-a02b-5f1608d05ace AND !e6048769-8712-4d60-9ffb-e6bf2f3e4d55 AND !d5e78705-2a21-450b-b80b-a962363b4115",
    "rules_read_only": "A1080 AND !A1148 AND !A1255"
  },
  {
    "countermeasure_id": "T838",
    "universal_id": "f99ac76b-5ef0-4872-a679-50214e1d213d",
    "countermeasure_name": "Test if your application adheres to HTTP DNT header",
    "countermeasure_solution": "Use the following guidelines for testing that your application adheres to HTTP DNT header:\n\n- Use a commodity browser like \"Chrome\" to access your application.\n- Change the settings of your browser to send \"Do Not Track\" headers with your browsing traffic.\n- Now test that your application adheres to the included header and disables third party tracking and deletes all previously stored tracking data.",
    "weakness_title_read_only": "Insufficient consent for user tracking",
    "weakness_id_read_only": "P732",
    "weakness": "f4b8e089-29b2-450e-b619-3b279d903891",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2017-08-11T03:42:20.977000-04:00",
    "last_updated": "2023-05-11T12:48:51.254000-04:00",
    "custom": "False",
    "rules": "b310a679-c006-4abb-a02b-5f1608d05ace AND !e6048769-8712-4d60-9ffb-e6bf2f3e4d55 AND !d5e78705-2a21-450b-b80b-a962363b4115",
    "rules_read_only": "A1080 AND !A1148 AND !A1255"
  },
  {
    "countermeasure_id": "T839",
    "universal_id": "4260f02a-8b51-49fc-8d5b-2a946a3e8b57",
    "countermeasure_name": "Follow best practices for securely using Android autofill framework",
    "countermeasure_solution": "Autofill is a new framework introduced in Android O. In this framework, views provide autofill types and values to autofill services, and the autofill services send suggestions back to the view. The view handles the autofill values that the framework sends to it and provides suggestions back to the users.\n\nIf you are building an autofill service:\n\n- Securely store user data.\n    - Avoid using shared locations and storing data in `SharedPreferences` so that data is directly accessible to other applications, such as in `MODE_WORLD_READABLE` mode.\n- Encrypt values of sensitive data fields before storing them.\n- Require authentication before providing access to sensitive and important data fields.\n\nIf you are using autofill services, such as by having any views that could be autofilled or share data with autofill services:\n\n- Avoid enabling autofill on the view if the view mainly contains sensitive data.\n- If you enable autofill, set `.setDataIsSensitive(true)` on all the nodes with sensitive data.\n    - While the value is true by default, there is a chance that you set this to false in a loop or by a similar method.\n- For more information on setting the `.setDataIsSensitive(true)` value for custom views, click [here](https://developer.android.com/guide/topics/text/autofill.html).\n- For an example of setting the `.setDataIsSensitive(true)` value for custom views, click [here](https://github.com/googlesamples/android-AutofillFramework). Take note of `child.setDataIsSensitive(!item.sanitized);` in this example.",
    "weakness_title_read_only": "Information Leak Through Auto-Complete",
    "weakness_id_read_only": "P695",
    "weakness": "d4c60369-9b5f-4911-85eb-44421f54a08b",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "requirements",
    "created": "2017-08-22T15:29:34.045000-04:00",
    "last_updated": "2021-06-25T14:47:50.819000-04:00",
    "custom": "False",
    "rules": "64e2a4e5-efe8-4a19-8b5f-b835d963a40c",
    "rules_read_only": "A715"
  },
  {
    "countermeasure_id": "T840",
    "universal_id": "684359b6-bfcf-416d-b941-c6920653f21c",
    "countermeasure_name": "Verify that autofill framework is securely used",
    "countermeasure_solution": "Use the following guidelines if you are building an autofill service:\n \n- Verify where the data is stored.\n    - Verify that shared locations and `SharedPreferences` are not used to save autofill data.\n- Verify that sensitive data is encrypted before storing it.\n- Verify that authentication is required before providing access to sensitive and important data fields.\n\nIf you are using autofill services, such as by having any views that could be autofilled or share data with autofill services:\n\n- Verify that autofill is not enabled on the views with mainly sensitive data.\n- Verify that `.setDataIsSensitive(true)` is set on all the nodes with sensitive data.",
    "weakness_title_read_only": "Information Leak Through Auto-Complete",
    "weakness_id_read_only": "P695",
    "weakness": "d4c60369-9b5f-4911-85eb-44421f54a08b",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2017-08-22T15:34:46.076000-04:00",
    "last_updated": "2021-06-25T14:47:50.662000-04:00",
    "custom": "False",
    "rules": "64e2a4e5-efe8-4a19-8b5f-b835d963a40c",
    "rules_read_only": "A715"
  },
  {
    "countermeasure_id": "T841",
    "universal_id": "4f9a090d-a03e-4718-8dd6-7f9b0f072154",
    "countermeasure_name": "Validate iOS Drag and Drop at source and destination",
    "countermeasure_solution": "Follow these instructions to implement Drag and Drop functionality securely:\n\n- For **Drag**:\n    - Do not enable dragging for views (especially the ones containing sensitive information) unless necessary.\n    - In the ***dragInteraction(_:itemsForBeginning:)*** method, properly specify the type and representation of the draggable object your app provide to the destination. For example, if the draggable object (e.g., a Text Field) contains sensitive information specify the type and properly sanitize the data before passing it to the *UIDragItem* array as a data item.\n\n- For **Drop**:\n    - In the ***dropInteraction(_:canHandle:)*** method, reject a drop session if it contains data representations your app does not expect.\n    - If the data representations are acceptable, properly validate the received data in ***dropInteraction(_:sessionDidUpdate:)*** method. Perform the same standard input validation checks your app uses to validate data from other input sources. Reject the data if it does not pass the validation routine.\n\n## References\n\n- [UIDragInteractionDelegate](https://developer.apple.com/documentation/uikit/uidraginteractiondelegate)\n- [UIDropInteractionDelegate](https://developer.apple.com/documentation/uikit/uidropinteractiondelegate)\n- [Making a View into a Drop Destination](https://developer.apple.com/documentation/uikit/drag_and_drop/making_a_view_into_a_drop_destination)\n- [Making a View into a Drag Source](https://developer.apple.com/documentation/uikit/drag_and_drop/making_a_view_into_a_drag_source)",
    "weakness_title_read_only": "Lack of iOS Drag and Drop data validation",
    "weakness_id_read_only": "P935",
    "weakness": "a60192a9-5bfa-488a-a2b8-1d143be6d054",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "requirements",
    "created": "2017-09-01T15:52:41.560000-04:00",
    "last_updated": "2021-06-25T14:47:50.882000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T842",
    "universal_id": "ea073d99-9093-4d8a-b7f9-f27a0b01f9ed",
    "countermeasure_name": "Verify that iOS Drag and Drop validates data at source and destination",
    "countermeasure_solution": "Follow these steps to verify that your iOS app sanitizes dragged output and dropped input:\n\n- For **Drag**:\n    - Verify that *UIDropInteractionDelegate* interface is not implemented for any object unless it is required to handle drag or drop functionality.\n    - Verify that the ***dragInteraction(_:itemsForBeginning:)*** method does not provide an improper type and representation of the draggable object that contains sensitive information.\n- For **Drop**:\n    - Verify that the ***dropInteraction(_:canHandle:)*** method rejects a drop session if it contains data representations your app does not expect.\n    - Verify that the ***dropInteraction(_:sessionDidUpdate:)*** method performs the same standard input validation checks your app uses to validate data from other input sources, and rejects the data if it does not pass the validation routine.\n\n## References\n\n- [UIDragInteractionDelegate](https://developer.apple.com/documentation/uikit/uidraginteractiondelegate)\n- [UIDropInteractionDelegate](https://developer.apple.com/documentation/uikit/uidropinteractiondelegate)\n- [Making a View into a Drop Destination](https://developer.apple.com/documentation/uikit/drag_and_drop/making_a_view_into_a_drop_destination)\n- [Making a View into a Drag Source](https://developer.apple.com/documentation/uikit/drag_and_drop/making_a_view_into_a_drag_source)",
    "weakness_title_read_only": "Lack of iOS Drag and Drop data validation",
    "weakness_id_read_only": "P935",
    "weakness": "a60192a9-5bfa-488a-a2b8-1d143be6d054",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2017-09-01T15:56:13.492000-04:00",
    "last_updated": "2021-06-25T14:47:50.718000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T845",
    "universal_id": "6039af3e-7b1c-4123-8b60-af99853aef03",
    "countermeasure_name": "Use safe browsing service on Android",
    "countermeasure_solution": "Use safe browsing services on Android, and check whether a URL hosts malware or poses any threats that can compromise a user's privacy and security. To do this, use a Safe Browsing API such as SafetyNet developed by Google to identify unsafe URLs that have been marked as a known threat on Google's updated list. SafetyNet also provides user privacy and optimized levels of battery and bandwidth consumption.\n\nUse the following steps for the SafetyNet API:\n\n1. Request and register an Android API key\n2. Initialize the API\n3. Request a URL check\n4. Send the URL check request\n5. Read the URL check response\n\nFor more information about using the SafetyNet API, as well as code samples, see Android documentation about the [SafetyNet Safe Browsing API](https://developer.android.com/training/safetynet/safebrowsing.html).",
    "weakness_title_read_only": "Improper verification of source and content of URL schemes",
    "weakness_id_read_only": "P760",
    "weakness": "6743c7d1-e3d0-4b14-8fb4-c8ce3134a4b4",
    "tags": "",
    "countermeasure_priority": "3",
    "phase": "architecture-design",
    "created": "2017-09-25T14:18:30.939000-04:00",
    "last_updated": "2021-06-25T14:47:50.177000-04:00",
    "custom": "False",
    "rules": "64e2a4e5-efe8-4a19-8b5f-b835d963a40c",
    "rules_read_only": "A715"
  },
  {
    "countermeasure_id": "T846",
    "universal_id": "f14f68c7-99df-4101-bc01-8678bd88d3bf",
    "countermeasure_name": "Verify if safe browsing services are used in Android",
    "countermeasure_solution": "Use the following steps to verify whether you enable and use a safe browsing service on your Android device:\n\n1. Go to the [safe browsing test site](http://malware.testing.google.test/testing/malware/).\n2. This test __passes__ if you receive a warning message, or the page is blocked and cannot be accessed.\n\n    This test __fails__ if you do not receive a warning message or can access the page.",
    "weakness_title_read_only": "Improper verification of source and content of URL schemes",
    "weakness_id_read_only": "P760",
    "weakness": "6743c7d1-e3d0-4b14-8fb4-c8ce3134a4b4",
    "tags": "",
    "countermeasure_priority": "3",
    "phase": "testing",
    "created": "2017-09-26T16:09:39.431000-04:00",
    "last_updated": "2021-06-25T14:47:47.402000-04:00",
    "custom": "False",
    "rules": "64e2a4e5-efe8-4a19-8b5f-b835d963a40c",
    "rules_read_only": "A715"
  },
  {
    "countermeasure_id": "T847",
    "universal_id": "e8ce0037-e907-4c33-9776-a53e46f22bb3",
    "countermeasure_name": "Be careful about using goroutines on closures bound to loop iterator variable",
    "countermeasure_solution": "Be careful If you are using goroutines on closures bound to a loop iterator variable like this:\n\n```\nfor val := range values {\n\tgo func() {\n\t\tfmt.Println(val)\n\t}()\n}\n```\n\nIn this code, all closures get bound to a single variable and since most will not likely get started until end of the loop, they will all use the last value of the `val` variable.\n\nThe proper way to write that closure inside the loop is:\n\n```\nfor val := range values {\n\tgo func(val interface{}) {\n\t\tfmt.Println(val)\n\t}(val)\n}\n```\n\nOr:\n\n```\nfor val := range values {\n        govalue := val\n\tgo func() {\n\t\tfmt.Println(govalue)\n\t}()\n}\n```\n\nBy adding `val` as a parameter to the closure, or by defining `govalue` as a new variable inside the loop, the closures will be bound to a different variable at each iteration of the loop. The value assigned to that variable will be different at each iteration and that value will not be changed during the rest of the iterations. This way, the expected value will be available to the goroutine when it is eventually executed.\n\nIt is also important to note that variables declared within the body of a loop are not shared between iterations, and thus can be used separately in a closure.",
    "weakness_title_read_only": "Using Goroutines on Closures Bound to Loop Iterator Variables",
    "weakness_id_read_only": "P937",
    "weakness": "041541f5-6dcc-477e-90fe-cc16961bf5f7",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "development",
    "created": "2017-09-28T13:54:06.990000-04:00",
    "last_updated": "2021-06-25T14:47:58.833000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T848",
    "universal_id": "5a641bbe-4995-436d-aa0b-28b38059abb7",
    "countermeasure_name": "Verify that goroutines are not run on closures that are bound to loop iterator variables by mistake",
    "countermeasure_solution": "Find all instances of goroutines that are defined on closures inside a loop. Verify that the closure is not bound to the loop iterator variable by mistake as shown in this example:\n\n```\nfor val := range values {\n\tgo func() {\n\t\tfmt.Println(val)\n\t}()\n}\n```",
    "weakness_title_read_only": "Using Goroutines on Closures Bound to Loop Iterator Variables",
    "weakness_id_read_only": "P937",
    "weakness": "041541f5-6dcc-477e-90fe-cc16961bf5f7",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2017-09-28T13:59:16.924000-04:00",
    "last_updated": "2021-06-25T14:47:58.999000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T851",
    "universal_id": "e9a7fbf7-d9ef-4af0-b45a-506e816332ea",
    "countermeasure_name": "Synchronize goroutines properly using channels",
    "countermeasure_solution": "Follow these guidelines:\n\n- Group your worker goroutines into sets in a way that all goroutines in one set need to get shutdown together.\n- Create a channel for shutting down each set of worker goroutines.\n- Pass the __\"shutdown\"__ channel as a parameter to all the goroutines in that set during creation of goroutines.\n- Create a `sync.WaitGroup{}`  for each set of goroutines to let them signal the main routine when they are finished with cleaning up. We call this __\"done\"__ WaitGroup.\n- Pass the __\"done\"__ WaitGroup as a parameter to all the goroutines in that set during creation of goroutines.\n- Increment each set's \"done\" WaitGroup whenever you create a goroutine belonging to that set by calling the `Add()` method.\n- Close the \"shutdown\" channel of each set from the main routine when you need to shut them down.\n- Wait on that set's \"done\" WaitGroup to let all the goroutines do the cleanup.\n- Use `select` in a loop to check shutdown channel in each goroutine periodically.\n- Start cleaning up and return from each goroutine after receiving shutdown signal.\n- At the end of each goroutine decrement the \"done\" WaitGroup by calling the `Done()` method.\n\nIn this way, all the goroutines in one set can receive a shutdown signal at once from the main routine through the \"shutdown\" channel and the main routine would use the \"done\" WaitGroup to wait for all of the goroutines to clean up properly before returning the execution.",
    "weakness_title_read_only": "Improper Synchronization Between Goroutines",
    "weakness_id_read_only": "P939",
    "weakness": "0719b809-d97a-46d4-9532-c79204d8a24f",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "development",
    "created": "2017-09-29T15:54:43.860000-04:00",
    "last_updated": "2021-06-25T14:47:58.986000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T852",
    "universal_id": "6f27919a-c183-44fc-add1-1f00aec7a2f0",
    "countermeasure_name": "Verify that goroutines are synchronized correctly",
    "countermeasure_solution": "Verify that each goroutine either:\n\n1. Returns in an appropriate timeframe; or\n2. Has all the following conditions:    \n    - Has a __\"shutdown\"__ channel passed to it as a parameter during creation;\n    - Has a __\"done\"__ `sync.WaitGroup{}` passed to it as a parameter during creation;\n    - Its \"done\" WaitGroup is incremented before execution getting passed to it.\n    - Uses `select` in a loop to check shutdown channel in each goroutine periodically.\n    - Starts cleaning up and returns from each goroutine after receiving shutdown signal.\n    - Decrements its \"done\" WaitGroup at the end.\n\nAlso, verify that the main goroutine waits on the \"done\" WaitGroup to let all the goroutines do the cleanup.",
    "weakness_title_read_only": "Improper Synchronization Between Goroutines",
    "weakness_id_read_only": "P939",
    "weakness": "0719b809-d97a-46d4-9532-c79204d8a24f",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2017-09-29T15:57:33.241000-04:00",
    "last_updated": "2021-06-25T14:47:58.913000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T853",
    "universal_id": "a0ad6096-7a0d-4e47-8a3b-ab9245a9862c",
    "countermeasure_name": "Prevent tapjacking and UI misrepresentation in Android",
    "countermeasure_solution": "Use the following guidelines in Android for preventing tapjacking and other deceptions that misrepresent the UI:\n\n- Ensure that a user sees the current window instead of a covering layer for Views with sensitive information and critical actions when they click on a button. To do this:\n    - Use `.setFilterTouchesWhenObscured(true)` of [View](https://developer.android.com/reference/android/view/View.html#setFilterTouchesWhenObscured(boolean)) class to make sure that taps and touches are not passed to the View when the window is obscured by other dialogs, toasts, or visible layers.\n\n\n__Notes:__ \n\n- Be aware that covering or overlay windows can absorb clicks or pass them through, which allows for malicious applications to trick users into clicking on a button while the click is passed on to a lower layer.\n    - For more information, see [Security](https://developer.android.com/reference/android/view/View.html#Security) in the _View_ documentation for Android developers.\n\n- You can use [TYPE_APPLICATION_OVERLAY](https://developer.android.com/reference/android/view/WindowManager.LayoutParams.html#TYPE_APPLICATION_OVERLAY) in API level 26 to display important windows on top of most other windows.\n\n- Most 'cloak and dagger' and 'UI misrepresentation' vulnerabilities are fixed after Android 7.0. Android O has made changes to [the behavior of alert windows](https://developer.android.com/about/versions/oreo/android-8.0-changes.html#all-aw).\n\n- See the [Cloak and Dagger](http://cloak-and-dagger.org/) web page for more information about how this class of vulnerabilities is exploited in various versions of Android.",
    "weakness_title_read_only": "Tapjacking and UI Misrepresentation in Android",
    "weakness_id_read_only": "P341",
    "weakness": "7857fbce-08d7-42b4-a2eb-4a2bcb42d2d2",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "development",
    "created": "2017-10-06T11:54:45.036000-04:00",
    "last_updated": "2021-06-25T14:47:55.076000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T854",
    "universal_id": "62305831-be9b-4443-b7d7-bf686950db76",
    "countermeasure_name": "Verify that tapjacking and UI misrepresentation are prevented in Android",
    "countermeasure_solution": "Use the following guidelines in Android for verifying that tapjacking and UI misrepresentation is prevented:\n\n- Verify that `.setFilterTouchesWhenObscured()` is set to `true` on important [Views](https://developer.android.com/reference/android/view/View.html#setFilterTouchesWhenObscured(boolean)) with critical functions. \n\n__Note:__ \n\n- For a more advanced and elaborate test, you can create an application with an overlay window or toast that passes the taps through to a lower layer and test if the application accepts such taps. You will then be able to test the behavior in various versions of Android. \n\n- Set `android:clickable` and `android:focusable` to `false` for the overlay windows to pass the taps and touches.\n\n- For more information, see [android:clickable](https://developer.android.com/reference/android/view/View.html#attr_android:clickable) in the _View_ documentation for Android developers.",
    "weakness_title_read_only": "Tapjacking and UI Misrepresentation in Android",
    "weakness_id_read_only": "P341",
    "weakness": "7857fbce-08d7-42b4-a2eb-4a2bcb42d2d2",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2017-10-06T13:14:12.539000-04:00",
    "last_updated": "2021-06-25T14:47:55.058000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T855",
    "universal_id": "674fe933-e4d9-4ed4-ae17-ce74524aac8b",
    "countermeasure_name": "Do not reveal sensitive personnel information through WHOIS Domain information",
    "countermeasure_solution": "Use the following guidelines for staff information contained in your WHOIS domain information:\n\n- Ensure the WHOIS Domain information registered for your web presence does not reveal sensitive personnel information. This information can be taken advantage of in the following ways:\n    - Social engineering using individual POC names\n    - War dialing using phone numbers\n    - Brute force attacks using email addresses that match actual system usernames",
    "weakness_title_read_only": "Internal Employee Information Exposure",
    "weakness_id_read_only": "P940",
    "weakness": "7fe48711-e05d-47d5-81d7-949da9242b8c",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2017-10-13T15:16:58.725000-04:00",
    "last_updated": "2021-06-25T14:47:38.515000-04:00",
    "custom": "False",
    "rules": "b310a679-c006-4abb-a02b-5f1608d05ace",
    "rules_read_only": "A1080"
  },
  {
    "countermeasure_id": "T856",
    "universal_id": "d2b2e295-b933-457e-b08c-19ba5f5fb18e",
    "countermeasure_name": "Keep your web server separate from other services",
    "countermeasure_solution": "Limit the number of services and daemons executing on each web server to those necessary, so the only primary function of the server is a web server.\n\nDefault server configurations can expose a wide variety of services unnecessarily increasing the risk to the system. Just because a server can perform many services doesn't mean it is wise to do so. The more services that are exposed to an attacker, the more potential vectors an attacker has to exploit the system. This creates a higher risk for the server.\n\nMaintaining a server for a single purpose increases the security of your application and system. A web server should function only as a web server and should not be mixed with other primary functions where possible. For example, do not use a web server for combining the following functions:\n    \n- Mail\n- DNS\n- Databases\n- Middleware",
    "weakness_title_read_only": "Insufficient Compartmentalization",
    "weakness_id_read_only": "P540",
    "weakness": "90e5da29-378c-4620-adb4-f227791d35fe",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2017-10-16T10:09:18.995000-04:00",
    "last_updated": "2021-06-25T14:47:51.504000-04:00",
    "custom": "False",
    "rules": "b310a679-c006-4abb-a02b-5f1608d05ace",
    "rules_read_only": "A1080"
  },
  {
    "countermeasure_id": "T857",
    "universal_id": "29a73420-ccea-4a67-b7c6-a60fb457f470",
    "countermeasure_name": "Test that no other service is installed on your web server",
    "countermeasure_solution": "Use the following test to determine that no other service is installed on your wbe server:\n\nUse the package or services manager for your OS to list enabled services, then review them with the documented business needs of the server. On Red Hat systems, the following will produce the list of current services enabled:\n\n```\nchkconfig --list | grep ':on'\n```\n\nThis test __fails__ if you find extra services running on the web server.",
    "weakness_title_read_only": "Insufficient Compartmentalization",
    "weakness_id_read_only": "P540",
    "weakness": "90e5da29-378c-4620-adb4-f227791d35fe",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2017-10-16T10:16:14.060000-04:00",
    "last_updated": "2021-06-25T14:47:51.264000-04:00",
    "custom": "False",
    "rules": "b310a679-c006-4abb-a02b-5f1608d05ace",
    "rules_read_only": "A1080"
  },
  {
    "countermeasure_id": "T858",
    "universal_id": "ec2b218e-a288-4309-a379-ef4e3e3c17d8",
    "countermeasure_name": "Use the vendor supplied version of binaries",
    "countermeasure_solution": "Use the binary provided by your vendor for installing servers to reduce the effort and increase the effectiveness of maintenance and security patches.",
    "weakness_title_read_only": "Not using vendor supplied binaries",
    "weakness_id_read_only": "P941",
    "weakness": "3cc71ead-4f16-439a-9058-a29ac23fb319",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "deployment",
    "created": "2017-10-16T10:40:36.648000-04:00",
    "last_updated": "2021-06-25T14:47:56.934000-04:00",
    "custom": "False",
    "rules": "b310a679-c006-4abb-a02b-5f1608d05ace",
    "rules_read_only": "A1080"
  },
  {
    "countermeasure_id": "T859",
    "universal_id": "4e429d1c-888e-4a10-8ad8-f97fe8c6f2b4",
    "countermeasure_name": "Minimize Apache HTTP Server modules (Apache HTTP Server)",
    "countermeasure_solution": "Review and disable Apache modules if they are not required for business purposes. It is crucial to have a minimal and compact Apache installation based on documented business requirements. Pay special attention to the following modules:\n\n- Enable only necessary authentication and authorization modules:\n\n    The Apache 2.4 modules for authentication and authorization are grouped and named to provide both granularity and a consistent naming convention to simplify configuration. The `authn_*` modules provide authentication, while the `authz_*` modules provide authorization.\n\n    Apache provides two types of authentication: basic and digest. Review the [Apache Authentication and Authorization how-to documentation](https://httpd.apache.org/docs/2.4/howto/auth.html) and __only enable the modules that are required__.\n\n    Authentication and authorization are the front doors to the protected information in your website. Most installations only need a small subset of the modules available. By minimizing the enabled modules to those that are actually used, we reduce the number of \"doors\" and reduce the attack surface of the website. Likewise, having fewer modules means less software that could have vulnerabilities.\n\n- Enable the Log Config Module:\n\n    The `log_config` module provides flexible logging of client requests and the configuration of the information in each log. Logging is critical for monitoring usage and potential abuse of your web server. This module is required to configure web server logging using the `log_format` directive.\n\n- Disable WebDAV Modules:\n\n    The Apache `mod_dav` and `mod_dav_fs` modules support WebDAV (Web-based Distributed Authoring and Versioning) functionality for Apache. WebDAV is an extension to the HTTP protocol which allows clients to create, move, and delete files and resources on the web server. Disabling WebDAV modules will __improve the security posture of the web server__ by reducing the amount of potentially vulnerable code paths exposed to the network, and reducing the potential for unauthorized access to files using misconfigured WebDAV access controls.\n\n- Disable Status Module:\n\n    The Apache `mod_status` module provides current server performance statistics. When `mod_status` is loaded into the server, its handler capability is available in all configuration files, including per-directory files, such as `.htaccess`. The `mod_status` module may __provide an attacker with information that can be used to refine exploits__ that depend on measuring server load.\n\n- Disable Autoindex Module:\n\n    The Apache `autoindex` module automatically generates web pages listing the contents of directories on the server, typically used so that an `index.html` does not have to be generated. Automated directory listings __should not be enabled__ because they will also reveal information helpful to an attacker such as naming conventions and directory paths. Directory listings may also reveal files that were not intended to be revealed.\n\n- Disable Proxy Modules:\n\n    Apache proxy modules allow the server to act as either a forward or reverse proxy of HTTP and other protocols with additional proxy modules loaded. If the Apache installation is not intended to proxy requests to or from another network then the proxy module __should not be loaded__.\n\n    Proxy servers can act as an important security control when properly configured, however, a secure proxy server is not within the scope of this benchmark. A web server should be __primarily a web server or a proxy server but not both__, for the same reasons that other multi-use servers are not recommended. Scanning for web servers that will also proxy requests is a very common attack, as proxy servers are useful for anonymizing attacks on other servers, or possibly proxying requests into an otherwise protected network.\n\n- Disable User Directories Modules:\n\n    The `UserDir` directive __must be disabled__ so that user home directories are not accessed using the website with a tilde (~) preceding the username. The directive also sets the pathname of the directory that will be accessed. For example:\n\n    - [http://example.com/~ralph/]() might access a `public_html` sub-directory of `ralph` user's home directory.\n    - The directive `UserDir ./` might map `/~root` to the root directory (`/`).\n\n    The user directories should not be globally enabled since it allows anonymous access to anything users may want to share with other users on the network. Also consider that every time a new account is created on the system, there is potentially new content available using the website.\n\n- Disable Info Module:\n\n    The Apache `mod_info` module provides information on the server configuration using access to a `/server-info` URL location. While having server configuration information available as a web page may be convenient, it's recommended that this module is __not__ enabled.\n\n    Once `mod_info` is loaded into the server, its handler capability is available in per-directory `.htaccess` files and can leak sensitive information from the configuration directives of other Apache modules such as system paths, usernames/passwords, and database names.",
    "weakness_title_read_only": "Running with Excessive Functionalities and Capabilities",
    "weakness_id_read_only": "P782",
    "weakness": "d12bf8a0-ba19-497a-b53f-a0114737042d",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2017-10-16T10:55:38.191000-04:00",
    "last_updated": "2021-06-25T14:47:55.582000-04:00",
    "custom": "False",
    "rules": "94e38a7e-fc14-4152-9ff4-1201ac1c16d8",
    "rules_read_only": "A74"
  },
  {
    "countermeasure_id": "T860",
    "universal_id": "0916afc6-971a-4748-b4ef-63b68eb63b03",
    "countermeasure_name": "Test that unnecessary Apache HTTP Server modules are disabled (Apache HTTP Server)",
    "countermeasure_solution": "Use the following guidelines for testing whether unneeded Apache HTTP Server modules are disabled:\n\n- Consult Apache module documentation for descriptions of each module to determine the necessary modules for the specific installation: [Apache HTTP Server Project](http://httpd.apache.org/docs/2.4/mod/)\n\n- Use the `httpd -M` option as root to check which `auth*` modules are loaded.\n\n        # httpd -M | egrep 'auth._'\n\n    Also use the `httpd -M `option as root to check for any LDAP modules which don't follow the same naming convention.\n\n        # httpd -M | egrep 'ldap'\n\nThe above commands should generate a list of modules installed to `stdout`.\n\n- Perform the following to determine if the `log_config` has been loaded:\n\n    Use the `httpd -M` option as `root` to check that the module is loaded.\n\n        # httpd -M | grep log_config\n\n    **Note**: If the module is correctly enabled, the output will include the module name and whether it is loaded statically or as a shared module.\n\n- Perform the following to determine if the __WebDAV modules__ are disabled.\n\n    Run the `httpd` server with the `-M` option to list enabled modules:\n\n        # httpd -M | grep ' dav_[[:print:]]+module'\n\n    **Note:** If the WebDav modules are correctly disabled, there will be no output when executing the above command.\n\n- Perform the following to determine if the __Status module__ is disabled.\n\n    Run the `httpd` server with the `-M` option to list enabled modules:\n\n        # httpd -M | egrep 'status_module'\n\n    **Note**: If the modules are correctly disabled, there will be no output when executing the above command.\"\n\n- Perform the following to determine if the __AutoIndex module__ is disabled.\n\n    Run the `httpd` server with the `-M` option to list enabled modules:\n\n        # httpd -M | grep autoindex_module\n\n    **Note**: If the module is correctly disabled, there will be no output when executing the above command.\n\n- Perform the following to determine if the __Proxy modules__ are disabled.\n\n    Run the `httpd` server with the `-M` option to list enabled modules:\n\n        # httpd -M | grep proxy_\n\n    **Note**: If the modules are correctly disabled, there will be no output when executing the above command.\n\n- Perform the following to determine if the __UserDir modules__ are disabled.\n\n    Run the `httpd` server with the `-M` option to list enabled modules:\n\n        # httpd -M | grep userdir_\n\n    **Note**: If the modules are correctly disabled, there will be no output when executing the above command.\n\n- Perform the following to determine if the __Info module__ is disabled.\n\n    Run the `httpd` server with the `-M` option to list enabled modules:\n\n        # httpd -M | egrep 'info_module'\n\n    **Note**: If the module is correctly disabled, there will be no output when executing the above command.",
    "weakness_title_read_only": "Running with Excessive Functionalities and Capabilities",
    "weakness_id_read_only": "P782",
    "weakness": "d12bf8a0-ba19-497a-b53f-a0114737042d",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2017-10-16T11:16:25.053000-04:00",
    "last_updated": "2021-06-25T14:47:55.380000-04:00",
    "custom": "False",
    "rules": "94e38a7e-fc14-4152-9ff4-1201ac1c16d8",
    "rules_read_only": "A74"
  },
  {
    "countermeasure_id": "T861",
    "universal_id": "7729b191-dd4b-4b2e-8961-2f307735f7fb",
    "countermeasure_name": "Set up a non-root user account for running the Apache Web server (Apache HTTP Server)",
    "countermeasure_solution": "Use the following guidelines for setting up a non-root user account for running the Apache Web Server:\n\n- Run the Apache Web Server as a __non-root user__:\n\n    Although Apache is typically started with `root` privileges to listen on port `80` and `443`, it can and should run as another non-root user to perform the web services. The Apache User and Group directives are used to designate the user and group that the Apache worker processes will assume.\n\n    One of the best ways to reduce your exposure to attack when running a web server is to create a unique, unprivileged user and group for the server application. The `nobody` or `daemon` user and group that comes default on Unix variants should __not__ be used to run the web server since the account is commonly used for other separate daemon services. Instead, use an account strictly for the Apache software that does not give unnecessary access to other services.\n\n    Also, the identifier used for the apache user should be a unique system account. System user account UID numbers have lower values that are reserved for the special system accounts not used by regular users. Typically, system account numbers range from `1-999`, or `1-499` and are defined in the `/etc/login.defs` file.\n\n     As an even more secure alternative, if the Apache web server can be run on high unprivileged ports, then it is not necessary to start Apache as `root`, and all of the Apache processes may be run as the Apache-specific user.\n\n- Give the Apache User Account an __Invalid Shell__:\n\n     The apache account must not be used as a regular login account, and should be assigned an invalid or `nologin` shell to ensure that the account cannot be used to log in. Service accounts such as the apache account represent a risk if they can be used to get a login shell to the system.\n\n- Lock the __Apache User Account__:\n\n    The user account Apache runs under should not have a valid password and should be locked. As a defense-in-depth measure, the Apache user account should be locked to prevent logins, and to prevent a user from `su`'ing to apache using the password. In general, there should not be a need for anyone to use `su` as Apache. When there is a need, then `sudo` should be used instead, which does not require the Apache account password.",
    "weakness_title_read_only": "Running With Unnecessary Privileges",
    "weakness_id_read_only": "P150",
    "weakness": "07093262-3118-48ab-911f-86160f3ae8e2",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2017-10-16T15:47:53.644000-04:00",
    "last_updated": "2021-06-25T14:47:51.576000-04:00",
    "custom": "False",
    "rules": "94e38a7e-fc14-4152-9ff4-1201ac1c16d8",
    "rules_read_only": "A74"
  },
  {
    "countermeasure_id": "T862",
    "universal_id": "5ff691f2-bb9e-48c4-8741-68843d021632",
    "countermeasure_name": "Test that the web server user account is set up correctly (Apache HTTP Server)",
    "countermeasure_solution": "Use the following guidelines to test whether the web server user account is correctly set up:\n\n- Ensure the Apache account is unique and has been created with a UID less than the minimum normal user account with the Apache group, and is configured in the `httpd.conf` file.\n\n    1. Ensure the User and Group directives are present in the Apache configuration and are not commented out:\n\n            # grep -i '^User' $APACHE_PREFIX/conf/httpd.conf\n            User apache\n            # grep -i '^Group' $APACHE_PREFIX/conf/httpd.conf \n            Group apache\n\n    2. Ensure the Apache account UID is correct:\n\n            # grep '^UID_MIN' /etc/login.defs\n            # id apache \n\n        The UID must be less than the `UID_MIN` value in `/etc/login.defs`, and `apache` groups should be similar to the following entries:\n\n            UID_MIN 1000\n            uid=48(apache) gid=48(apache) groups=48(apache) \n\n    3. While the web server is running, check the user ID for the `httpd` processes. The username should match the configuration file.\n\n            # ps axu | grep httpd | grep -v '^root'\n\n- Check the Apache login shell in the `/etc/passwd` file:\n\n        # grep apache /etc/passwd\n\n    The `apache` account shell must be `/sbin/nologin` or `/dev/null`, similar to the following:\n\n        /etc/passwd:apache:x:48:48:Apache:/var/www:/sbin/nologin\n\n- Ensure the Apache account is locked using the following command:\n\n        # passwd -S apache\n\n    The results will be similar to the following:\n\n        apache LK 2010-01-28 0 99999 7 -1 (Password locked.)\n\n     or: \n\n        apache L 07/02/2012 -1 -1 -1 -1",
    "weakness_title_read_only": "Running With Unnecessary Privileges",
    "weakness_id_read_only": "P150",
    "weakness": "07093262-3118-48ab-911f-86160f3ae8e2",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2017-10-16T16:08:34.885000-04:00",
    "last_updated": "2021-06-25T14:47:51.787000-04:00",
    "custom": "False",
    "rules": "94e38a7e-fc14-4152-9ff4-1201ac1c16d8",
    "rules_read_only": "A74"
  },
  {
    "countermeasure_id": "T863",
    "universal_id": "470d92e9-420f-4577-8dcc-b429f95ea32c",
    "countermeasure_name": "Secure Apache directories and files (Apache HTTP Server)",
    "countermeasure_solution": "Use the following guidelines for securing Apache directories and files:\n\n- __Set Ownership__ on Apache Directories and Files:\n\n    The Apache directories and files should be owned by `root`. This applies to all of the Apache software directories and files installed.\n    \n    Restricting ownership of the Apache files and directories will reduce the probability of unauthorized modifications to those resources.\n\n- __Set Group Id__ on Apache Directories and Files:\n\n    The Apache directories and files should be set with a group Id of `root`, (or a root equivalent) group. This applies to all of the Apache software directories and files installed.\n    \n    The only expected exception is that the Apache web document root (`$APACHE_PREFIX/htdocs`) is likely to need a designated group to allow web content to be updated (such as `webupdate`) through a change management process.\n    \n    Securing Apache files and directories will reduce the probability of unauthorized modifications to those resources.\n\n- __Restrict Other Write Access__ on Apache Directories and Files:\n\n    Permissions on Apache directories should generally be `rwxr-xr-x` (755) and file permissions should be similar, but not executable where it is not appropriate. This applies to all of the Apache software directories and files installed with the possible exception of the web document root `$APACHE_PREFIX/htdocs`.\n     \n    The directories and files in the web document root may have a designated group with write access to allow web content to be updated. In summary, the minimum recommendation is to not allow write access by `other`.\n\n    None of the Apache files and directories, including the Web document root must allow other write access. Other write access is likely to be very useful for unauthorized modification of web content, configuration files or software for malicious attacks.\n\n- Secure __Core Dump Directory__:\n\n    The `CoreDumpDirectory` directive is used to specify the directory Apache attempts to switch to before creating the core dump. Core dumps will be disabled if the directory is not writable by the Apache user.\n\n    Also, core dumps will be disabled if the server is started as `root` and switches to a non-root user, as is typical. It is recommended that the `CoreDumpDirectory` directive be set to a directory that is owned by the `root` user, owned by the group the Apache HTTPD process executes as, and be unavailable to other users.\n\n    Core dumps are snapshots of memory and may contain sensitive information that should not be accessible by other accounts on the system.\n\n- Secure the __Lock File__:\n\n    The `Mutex` directive sets the locking mechanism used to serialize access to resources. It may be used to specify that a lock file is to be used as a mutex mechanism and may provide the path to the lock file that is used with the `fcntl(2)` or `flock(2)` system calls. Most Linux systems will default to using semaphores instead, so the directive may not apply. However, in the event a lock file is used, it is important for the lock file to be in a local directory that is not writable by other users.\n\n    If the lock file to be used as a mutex is placed in a writable directory, other accounts could create a denial of service attack and prevent the server from starting by creating a lock file with the same name.\n\n- Secure the __Pid File__:\n\n    The `PidFile` directive sets the file path to the process ID file to which the server records the process ID of the server, which is useful for sending a signal to the server process or for checking on the health of the process.\n\n    If the `PidFile` is placed in a writable directory, other accounts could create a denial of service attack and prevent the server from starting by creating a pid file with the same name.\n\n- Secure the __ScoreBoard File__:\n\n    The `ScoreBoardFile` directive sets a file path that the server will use for inter-process communication (IPC) among the Apache processes. On most Linux platforms, shared memory will be used instead of a file in the file system, so this directive is not generally needed and does not need to be specified. However, if the directive is specified, then Apache will use the configured file for the IPC. Therefore if it is specified, it needs to be located in a secure directory.\n\n    If the `ScoreBoardFile` is placed in a writable directory, other accounts could create a denial of service attack and prevent the server from starting by creating a file with the same name, or users could monitor and disrupt the communication between the processes by reading and writing to the file.\n\n- __Restrict Group Write Access__ for the Apache Directories and Files:\n\n    Group permissions on Apache directories should generally be `r-x` and file permissions should be similar, but not executable where it is not appropriate. This applies to all of the Apache software directories and files installed with the possible exception of the web document root `$DOCROOT` defined by Apache `DocumentRoot` and defaults to `$APACHE_PREFIX/htdocs`. The directories and files in the web document root may have a designated web development group with write access to allow web content to be updated.\n\n    Restricting write permissions on the Apache files and directories can help mitigate attacks that modify web content to provide unauthorized access, or to attack web clients.\n\n- __Restrict Group Write Access__ for the Document Root Directories and Files:\n\n    Group permissions on Apache Document Root directories `$DOCROOT` may need to be writable by an authorized group such as development, support, or a production content management tool. However, it is important that the Apache group used to run the server does not have write access to any directories or files in the document root.\n\n    Preventing Apache from writing to the web document root helps mitigate risk associated with web application vulnerabilities associated with file uploads or command execution. Typically, if an application hosted by Apache needs to write to a directory, it is best practice to have that directory live outside the web root.",
    "weakness_title_read_only": "File and directory information exposure",
    "weakness_id_read_only": "P426",
    "weakness": "fdf587c4-0809-4177-8bc7-018e6e750e92",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2017-10-16T16:15:25.721000-04:00",
    "last_updated": "2021-06-25T14:47:50.462000-04:00",
    "custom": "False",
    "rules": "94e38a7e-fc14-4152-9ff4-1201ac1c16d8",
    "rules_read_only": "A74"
  },
  {
    "countermeasure_id": "T864",
    "universal_id": "28aeb005-48a9-45f9-baf1-fbc471e48ef2",
    "countermeasure_name": "Test that Apache directories and files are secure (Apache HTTP Server)",
    "countermeasure_solution": "Use the following guidelines for testing the security of Apache directories and files:\n\n- Identify files in the Apache directory that are not owned by `root`:\n\n        # find $APACHE_PREFIX \\! -user root -ls\n\n- Identify files in the Apache directories other than `htdocs` with a group other than `root`:\n\n        # find $APACHE_PREFIX -path $APACHE_PREFIX/htdocs -prune -o \\! -group root -ls\n\n- Identify files or directories in the Apache directory with other write access, excluding symbolic links:\n\n        # find -L $APACHE_PREFIX \\! -type l -perm /o=w -ls\n\n- Verify that either the `CoreDumpDirectory` directive is not enabled in any of the Apache configuration files or that the configured directory meets the following requirements:\n\n    1. `CoreDumpDirectory` is not within the Apache web document root (`$APACHE_PREFIX/htdocs`)\n    2. The directory is owned by root and has a group ownership of the Apache group (as defined by the Group directive)\n    3. The directory does not have read-write-search access permission for other users, such as `o=rwx`.\n\n- Verify the configuration does __not__ include a `Mutex` directive with the mechanism of `fcntl`, `flock` or `file`.\n\n    - If one of the file locking mechanisms is configured, then find the directory in which the lock file would be created. The default value is the `ServerRoot/logs` directory.\n\n    1. Verify that the lock file directory is not a directory within the Apache `DocumentRoot`\n    2. Verify that the ownership and group of the directory is `root:root`, or the user under which Apache initially starts up if not root\n    3. Verify the permissions on the directory are only writable by root, or the startup user if not root\n    4. Check that the lock file directory is on a locally mounted hard drive rather than an NFS mounted file system\n\n- Perform the following: \n    1. Find the directory the `PidFile` is created in. The default value is the `ServerRoot/logs` directory\n    2. Verify that the process ID file directory is not a directory within the Apache `DocumentRoot`\n    3. Verify that the ownership and group of the directory is `root:root`, or the user under which Apache initially starts up if not root\n    4. Verify the permissions on the directory are only writable by root, or the startup user if not root\n\n- Perform the following:\n    1. Check to see if the `ScoreBoardFile` is specified in any of the Apache configuration files. If it is not present, the configuration is compliant\n    2. Find the directory in which the `ScoreBoardFile` would be created. The default value is the `ServerRoot/logs` directory\n    3. Verify that the scoreboard file directory is not a directory within the Apache `DocumentRoot`\n    4. Verify that the ownership and group of the directory is `root:root`, or the user under which Apache initially starts up if not root\n    5. Change the permissions so that the directory is only writable by `root`, or the startup user if not `root`\n    6. Check that the scoreboard file directory is on a locally mounted hard drive rather than an NFS mounted file system\n\n- Identify files or directories in the Apache directory with group write access, excluding symbolic links:\n\n        # find -L $APACHE_PREFIX \\! -type l -perm /g=w -ls\n\n- Identify files or directories in the Apache Document Root directory with Apache group write access.\n\n        ## Define $GRP to be the Apache group configured\n        # GRP=$(grep '^Group' $APACHE_PREFIX/conf/httpd.conf | cut -d' ' -f2)\n        find -L $DOCROOT -group $GRP -perm /g=w -ls",
    "weakness_title_read_only": "File and directory information exposure",
    "weakness_id_read_only": "P426",
    "weakness": "fdf587c4-0809-4177-8bc7-018e6e750e92",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2017-10-17T16:38:56.038000-04:00",
    "last_updated": "2021-06-25T14:47:50.431000-04:00",
    "custom": "False",
    "rules": "94e38a7e-fc14-4152-9ff4-1201ac1c16d8",
    "rules_read_only": "A74"
  },
  {
    "countermeasure_id": "T865",
    "universal_id": "d3ad7d6d-294f-4e8a-9a1c-74f4bc0a51e0",
    "countermeasure_name": "Secure Apache access control (Apache HTTP Server)",
    "countermeasure_solution": "Use the following guidelines for securing Apache access control:\n\n- __Deny Access__ to OS Root Directory:\n\n    The Apache `Directory` directive allows for directory-specific configuration of access controls and many other features and options. One important usage is to create a default deny policy that does not allow access to Operating system directories and files, except for those specifically allowed. This is done by denying access to the OS root directory.\n\n    The default access feature is an aspect of Apache that can be misunderstood. Unless you take steps to change it, if the server can find its way to a file through normal URL mapping rules, it can and will serve it to clients. Having a default deny is a predominate security principal that helps prevent the unintended access. In this case, you can do this by denying access to the OS root directory using either of two methods but not both:\n\n    1. Using the Apache `Deny` directive along with an `Order` directive.\n    2. Using the Apache `Require` directive.\n\n    Either method is effective.\n    \n    The `Order/Deny/Allow` combination is now deprecated. They provide three passes where all the directives are processed in the specified order. In contrast, the `Require` directive works on the first match similar to firewall rules. The `Require` directive is the default for Apache 2.4 and is demonstrated in the remediation procedure as it may be less likely to be misunderstood.\n\n- Allow __Appropriate Access__ to Web Content:\n\n    To serve web content, you can use either the Apache `Allow` directive or the `Require` directive to allow for appropriate access to directories, locations, and virtual hosts that contain web content. Either the `Allow` or `Require` directives may be used within a directory, a location, or other context to allow appropriate access. \n\n    Access may be allowed to all, or to specific networks, or hosts, or users as appropriate. The `Allow/Deny/Order` directives are deprecated and should be replaced by the `Require` directive. It is also recommended that either the `Allow` directive or the `Require` directive be used, but not both in the same context.\n\n- __Restrict Override__ for the OS Root Directory:\n\n    The Apache `AllowOverRide` directive and the new `AllowOverrideList` directive allow for `.htaccess` files to be used to override much of the configuration, including authentication, handling of document types, auto generated indexes, access control, and options. When the server finds an `.htaccess` file as specified by `AccessFileName`, it needs to know which directives declared in that file can override earlier access information.\n\n    When this directive is set to `None`, then `.htaccess` files are completely ignored. In this case, the server will not even attempt to read `.htaccess` files in the filesystem. When this directive is set to `All`, then any directive which has the `.htaccess` Context is allowed in the `.htaccess` files.\n\n    While the functionality of `htaccess` files is sometimes convenient, usage decentralizes the access controls and increases the risk of configurations being changed or viewed inappropriately by an unintended or rogue `.htaccess` file. Consider that some of the more common vulnerabilities in web servers and web applications allow web files to be viewed or to be modified, so it is wise to keep the configuration out of the web server from being placed in `.htaccess` files.\n\n- __Restrict Override__ for All Directories:\n\n    The Apache `AllowOverride` directive and the new `AllowOverrideList` directive allow for `.htaccess` files to be used to override much of the configuration, including authentication, handling of document types, auto generated indexes, access control, and options. When the server finds an `.htaccess` file, as specified by `AccessFileName`, it needs to know which directives declared in that file can override earlier access information.\n \n    When this directive is set to `None`, then `.htaccess` files are completely ignored. In this case, the server will not even attempt to read `.htaccess` files in the filesystem. When this directive is set to `All`, then any directive that has the `.htaccess` context is allowed in `.htaccess` files. `.htaccess` files decentralize access control and increase the risk of server configuration being changed inappropriately.\n\n- __Restrict Access__ to .ht* files:\n\n    Restrict access to any files beginning with `.ht` using the `FilesMatch` directive. `.htaccess` is the default name for access filenames, and allows files in web directories to override the Apache configuration.\n\n    Using access files should not be allowed, but as a defense in depth a `FilesMatch` directive is recommended to prevent web clients from viewing those files in case they are created. A common name for web password and group files are `.htpasswd` and `.htgroup`. Neither of these files should be placed in the document root, but in the event they are, the `FilesMatch` directive can be used to prevent them from being viewed by web clients.",
    "weakness_title_read_only": "Direct Request ('Forced Browsing')",
    "weakness_id_read_only": "P317",
    "weakness": "c331d52e-0833-4d02-8b17-2399f8e0c8ca",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2017-10-17T19:50:10.677000-04:00",
    "last_updated": "2021-06-25T14:47:48.615000-04:00",
    "custom": "False",
    "rules": "94e38a7e-fc14-4152-9ff4-1201ac1c16d8",
    "rules_read_only": "A74"
  },
  {
    "countermeasure_id": "T866",
    "universal_id": "1571332e-e076-4bae-8d1e-bcb97970dfea",
    "countermeasure_name": "Verify Apache access control (Apache HTTP Server)",
    "countermeasure_solution": "Use the following four guidelines to determine if the recommended state of Apache access control is implemented:\n\n__One__\n\n1. Search the Apache configuration files `httpd.conf`, and any included configuration files, to find a root `<Directory>` element.\n\n    The following may be useful in extracting root directory elements from the Apache configuration for auditing.\n\n        $ perl -ne 'print if /^ *<Directory *\\/>/../<\\/Directory>/' $APACHE_PREFIX/conf/httpd.conf\n\n2. Ensure that either of the following two methods is configured:\n\n    **Using the deprecated Order/Deny/Allow method:**\n\n    1. Ensure there is a single `Order` directive with the value of `deny, allow`\n    2. Ensure there is a `Deny` directive, and with the value of `from all`.\n    3. Ensure there are no `Allow` or `Require` directives in the root `<Directory>` element.\n\n     **Using the Require method:**\n\n    1. Ensure there is a single `Require` directive with the value of `all denied`\n    2. Ensure there are no `Allow` or `Deny` directives in the root `<Directory>` element.\n\n__Two__\n\n1. Search the Apache configuration files `httpd.conf`, and any included configuration files, to find all `<Directory>` elements.\n2. Ensure that either of the following two methods is configured:\n\n    **Use the deprecated Order/Deny/Allow method:**\n\n    1. Ensure there is a single `Order` directive with the value of `Deny,Allow` for each.\n    2. Ensure the `Allow` and `Deny` directives, have values that are appropriate for the purposes of the directory.\n\n    **Use the Require method:**\n\n    1. Ensure that the `Order/Deny/Allow` directives are **NOT** used for the directory.\n    2. Ensure the Require directives have values that are appropriate for the purposes of the directory.\n\nThe following command may be useful to extract `<Directory>` and `<Location>` elements and `Allow` directives from the Apache configuration files.\n\n    # perl -ne 'print if /^ *<Directory *>/../<\\/Directory>/' $APACHE_PREFIX/conf/httpd.conf $APACHE_PREFIX/conf.d/*.conf\n    # perl -ne 'print if /^ *<Location *>/../<\\/Location>/' $APACHE_PREFIX/conf/httpd.conf $APACHE_PREFIX/conf.d/*.conf\n    # grep -i -C 6 -i 'Allow[[:space:]]from' $APACHE_PREFIX/conf/httpd.conf $APACHE_PREFIX/conf.d/*.conf\n\n__Three__\n\n1. Search the Apache configuration files `httpd.conf`, and any included configuration files, to find a root `<Directory>` element.\n\n    The following may be useful for extracting root directory elements from the Apache configuration for auditing.\n\n        $ perl -ne 'print if /^ *<Directory *\\/>/../<\\/Directory>/' $APACHE_PREFIX/conf/httpd.conf\n\n2. Ensure there is a single `AllowOverride` directive with the value of `None`.\n3. Ensure there are no `AllowOverrideList` directives present.\n\n__Four__\n\n1. Search the Apache configuration files `httpd.conf`, and any included configuration files, to find any `AllowOverride` directives.\n2. Ensure that the value for `AllowOverride` is `None`.\n\n        grep -i AllowOverride $APACHE_PREFIX/conf/httpd.conf\n\n3. Ensure there are no `AllowOverrideList` directives present.\n\n- Verify that a `FilesMatch` directive similar to the one below is present in the Apache configuration and not commented out. The deprecated `Deny from All` directive may be used instead of the Require directive.\n\n        <FilesMatch \"\"^\\.ht\"\">\n            Require all denied\n        </FileMatch>",
    "weakness_title_read_only": "Direct Request ('Forced Browsing')",
    "weakness_id_read_only": "P317",
    "weakness": "c331d52e-0833-4d02-8b17-2399f8e0c8ca",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2017-10-17T21:39:59.967000-04:00",
    "last_updated": "2021-06-25T14:47:48.969000-04:00",
    "custom": "False",
    "rules": "94e38a7e-fc14-4152-9ff4-1201ac1c16d8",
    "rules_read_only": "A74"
  },
  {
    "countermeasure_id": "T867",
    "universal_id": "94604692-05a1-46b2-8cd1-6aebd260ba9f",
    "countermeasure_name": "Restrict Apache options and disable default content (Apache HTTP Server)",
    "countermeasure_solution": "Use the following guidelines to restrict Apache options and disable default content:\n\n- __Restrict Options__ for the OS Root Directory:\n\n    The Apache `Options` directive allows for the specific configuration of options that include:\n        - CGI execution\n        - Symbolic link following\n        - Server-side includes\n        - Content negotiation\n\n    The `Options` directive for the root OS level is used to create a default minimal options policy that allows only the minimal options at the root directory level. Then for specific websites or portions of the website, options may be enabled as needed and appropriate.\n\n    No options should be enabled, and the value for the `Options` directive should be `None`.\n\n- __Restrict Options__ for the Web Root Directory:\n\n    The `Options` directive at the web root or document root level also needs to be restricted to the minimal options required. A setting of `None` is highly recommended. However, it is recognized that this level of content negotiation may be needed if multiple languages are supported.\n    No other options should be enabled.\n\n- __Minimize Options__ for Other Directories accepted:\n\n    Likewise, the options for other directories and hosts need to be restricted to the minimal options required. A setting of `None` is recommended. However, it is recognized that other options may be needed in some cases:\n\n    - `Multiviews`:\n        Appropriate if content negotiation is required, such as when multiple languages are supported.\n\n    - `ExecCGI`:\n        Only appropriate for special directories dedicated to executable content such as a `cgi-bin/` directory. That way, you will know what is executed on the server. It is possible to enable CGI script execution based on the file extension or permission settings. However, this makes script control and management almost impossible as developers may install scripts without your knowledge. This may become a factor in a hosting environment.\n    \n    - `FollowSymLinks` and `SymLinksIfOwnerMatch`:\n        The following symbolic links are not recommended and should be disabled if possible. The usage of symbolic links opens up additional risk for possible attacks that may use inappropriate symbolic links to access content outside of the document root of the web server. Also, consider that it could be combined with a vulnerability that allowed an attacker or insider to create an inappropriate link. The option `SymLinksIfOwnerMatch` is much safer in that the owner must match for the link to be used. However, keep in mind there is additional overhead created by requiring Apache to check the ownership.\n    \n    - `Includes` and `IncludesNOEXEC`:\n        The `IncludesNOEXEC` option should only be needed when server side includes are required. The full `Includes` option should not be used as it also allows execution of arbitrary shell commands. See [Apache Mod Include](https://httpd.apache.org/docs/2.2/mod/mod_include.html) for details.\n    \n    - `Indexes`:\n        This option causes the automatic generation of indexes if the default index page is missing and should be disabled unless required.\n\n- __Remove__ Default HTML Content:\n\n    Apache installations have default content that is not needed or appropriate for production use. The primary function of this sample content is to provide a default website, provide user manuals, or demonstrate special features of the web server. All content that is not needed should be removed.\n    \n    Historically this sample content and features have been remotely exploited and can provide different levels of access to the server. In the Microsoft arena, Code Red exploited a weakness in the index service provided by the Internet Information Service. Usually, these routines are not written for production, so their development lacks strong security.\n\n- __Remove__ Default CGI Content `printenv`\n\n    Most Web Servers, including Apache installations, have default CGI content which is not needed or appropriate for production use. The primary function for these sample programs is to demonstrate the capabilities of the web server. One common default CGI content for Apache installations is the script `printenv`. This script will print back to the requester all of the CGI environment variables which include many server configuration details and system paths.\n\n    CGI programs have a long history of security bugs and weaknesses associated with improperly accepting user-input. Since these programs are often targets of attackers, we need to make sure that there are no unnecessary CGI programs that could potentially be used for malicious purposes. Usually, these programs are not written for production so their development lacks strong security. The `printenv` script, in particular, will disclose inappropriate information about the web server, including directory paths and detailed version and configuration information.\n\n- __Remove__ Default CGI Content `test-cgi`:\n\n    A common default CGI content for Apache installations is the script `test-cgi`. This script will print back to the requester CGI environment variables which include many server configuration details.\n\n    The `test-cgi` script, in particular, will disclose inappropriate information about the web server, including directory paths and detailed version and configuration information.",
    "weakness_title_read_only": "Running with Excessive Functionalities and Capabilities",
    "weakness_id_read_only": "P782",
    "weakness": "d12bf8a0-ba19-497a-b53f-a0114737042d",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2017-10-18T11:38:53.804000-04:00",
    "last_updated": "2023-03-07T12:33:07.982000-05:00",
    "custom": "False",
    "rules": "94e38a7e-fc14-4152-9ff4-1201ac1c16d8",
    "rules_read_only": "A74"
  },
  {
    "countermeasure_id": "T868",
    "universal_id": "68f166b1-627d-470a-8f0d-3eb8a5b90f50",
    "countermeasure_name": "Verify that Apache options are restricted and the default content is removed (Apache HTTP Server)",
    "countermeasure_solution": "Use the following guidelines to determine if the recommended state is implemented by restricting options and removing default content. \n\nPerform these six items:\n\n__One__\n\n1. Search the Apache configuration files `httpd.conf`, and any included configuration files, to find a root `<Directory>` element.\n\n2. Ensure there is a single `Options` directive with the value of `None`.\n\n__Two__\n\n1. Search the Apache configuration files `httpd.conf`, and any included configuration files, to find the document root `<Directory>` elements.\n2. Ensure there is a single `Options` directive with the value of `None` or `Multiviews`.\n\n__Three__\n\n1. Search the Apache configuration files `httpd.conf`, and any included configuration files, to find the all `Directory` elements.\n2. Ensure that the `Options` directives do not enable `Includes`.\n\n__Four__\n\n1. Verify the document root directory and the configuration files do not provide for default `index.html` or welcome page,\n2. Ensure the Apache User Manual content is not installed by checking the configuration files for manual location directives.\n3. Verify the Apache configuration files do not have the Server Status handler configured.\n4. Verify that the Server Information handler is not configured.\n5. Verify that any other handler configurations such as `perl-status` is not enabled.\"\n\n__Five__\n\n1. Locate cgi-bin files and directories enabled in the Apache configuration using `Script`, `ScriptAlias` or `ScriptAliasMatch` or `ScriptInterpreterSource` directives.\n2. Ensure the `printenv` CGI is not installed in any configured cgi-bin directory.\n\n__Six__\n\n1. Locate cgi-bin files and directories enabled in the Apache configuration using `Script`, `ScriptAlias` or `ScriptAliasMatch` other `ScriptInterpreterSource` directives.\n2. Ensure the `test-cgi` script is not installed in any configured `cgi-bin` directory.\n\n### Note:\nThe following may be useful for extracting directory elements from the Apache configuration for auditing.\n\n    perl -ne 'print if /^ *<Directory *>/../<\\/Directory>/' $APACHE_PREFIX/conf/httpd.conf\n\nor\n\n    grep -i -A 12 '<Directory[[:space:]]' $APACHE_PREFIX/conf/httpd.conf",
    "weakness_title_read_only": "Running with Excessive Functionalities and Capabilities",
    "weakness_id_read_only": "P782",
    "weakness": "d12bf8a0-ba19-497a-b53f-a0114737042d",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2017-10-18T12:12:35.981000-04:00",
    "last_updated": "2023-03-07T12:33:52.896000-05:00",
    "custom": "False",
    "rules": "94e38a7e-fc14-4152-9ff4-1201ac1c16d8",
    "rules_read_only": "A74"
  },
  {
    "countermeasure_id": "T869",
    "universal_id": "0cd2fec5-5b94-4556-bfd0-2296cb7129de",
    "countermeasure_name": "Limit Apache HTTP methods and versions (Apache HTTP Server)",
    "countermeasure_solution": "Use the following guidelines for limiting Apache HTTP methods and versions:\n\n- Limit __HTTP Request Methods__:\n\n    Use the Apache `<LimitExcept>` directive to restrict unnecessary HTTP request methods of the web server to only accept and process the `GET`, `HEAD`, `POST` and `OPTIONS` HTTP request methods.\n\n    The HTTP 1.1 protocol supports several request methods that are rarely used and potentially high risk. For example, methods such as `PUT` and `DELETE` are rarely used and should be disabled in keeping with the primary security principal of minimizing features and options. Additionally, since the usage of these methods is typically to modify resources on the web server, they should be explicitly disallowed.\n\n    For typical normal web server operation, only allow only the `GET`, `HEAD` and `POST` request methods for downloading web pages and submitting information to web forms. The `OPTIONS` request method is also be allowed because it used to request which HTTP request methods are permitted. The Apache `<LimitExcept>` directive does not deny the `TRACE` request method and should be disallowed separately.\n\n- Disable __HTTP TRACE Method__:\n\n    Use the Apache `TraceEnable` directive to disable the HTTP `TRACE` request method. The HTTP 1.1 protocol requires support for the `TRACE` request method, which reflects the request back as a response and was intended for diagnostics purposes. The `TRACE` method is not needed and is easily subjected to abuse and should be disabled.\n\n- Restrict __HTTP Protocol Versions__:\n\n    The Apache modules `mod_rewrite` or `mod_security` can be used to disallow old and invalid HTTP protocols versions. The HTTP version 1.1 RFC is dated June 1999 and has been supported by Apache since version 1.2. It should no longer be necessary to allow old versions of HTTP such as 1.0 and prior.\n\n    Many malicious automated programs, vulnerability scanners, and fingerprinting tools send abnormal HTTP protocol versions to see how the web server responds. These requests are usually part of the attacker's enumeration process and therefore it is important to respond by denying these requests.",
    "weakness_title_read_only": "HTTP Verb Tampering",
    "weakness_id_read_only": "P700",
    "weakness": "abef344f-a439-4d09-88c9-31f33980a3fb",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2017-10-18T14:47:12.939000-04:00",
    "last_updated": "2021-06-25T14:47:55.783000-04:00",
    "custom": "False",
    "rules": "94e38a7e-fc14-4152-9ff4-1201ac1c16d8",
    "rules_read_only": "A74"
  },
  {
    "countermeasure_id": "T870",
    "universal_id": "5d148f5d-c30d-4efd-8045-4502f611fcc2",
    "countermeasure_name": "Verify that Apache HTTP methods and versions are limited (Apache HTTP Server)",
    "countermeasure_solution": "Use the following three guidelines to determine if the recommended state is implemented by limiting Apache HTTP methods and versions:\n\n__One__\n\n1. Locate the Apache configuration files and included configuration files.\n2. Search for all `<Directory>` directives that are not on the OS root directory.\n3. Ensure that either one of the following two methods are configured:\n\n    **Using the deprecated Order/Deny/Allow method:**\n\n    1. Ensure that group contains a single `Order` directive within the `<Directory>` directive with a value of `deny, allow`.\n    2. Verify that the `<LimitExcept>` directive does not include any HTTP methods other than `GET`, `POST`, and `OPTIONS`. It may contain fewer methods.\n\n    **Using the Require method:**\n\n    1. Ensure there is a single `Require` directive with the value of `all denied`.\n    2. Ensure there are no `Allow` or `Deny` directives in the root element.\n\n__Two__\n\n1. Locate the Apache configuration files and included configuration files.\n2. Verify there is a single `TraceEnable` directive configured with a value of `off.`\n\n__Three__\n\n1. Locate the Apache configuration files and included configuration files.\n2. Verify there is a rewrite condition within the global server context that disallows requests that do not include the HTTP/1.1 header as shown below.\n\n        RewriteEngine On\n        RewriteCond %{THE_REQUEST} !HTTP/1\\.1$\n        RewriteRule .* - [F]\n\n3. Verify the following directives are included in each section so that the main server settings will be inherited.\n\n        RewriteEngine On\n        RewriteOptions Inherit",
    "weakness_title_read_only": "HTTP Verb Tampering",
    "weakness_id_read_only": "P700",
    "weakness": "abef344f-a439-4d09-88c9-31f33980a3fb",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2017-10-18T14:56:53.440000-04:00",
    "last_updated": "2021-06-25T14:47:55.551000-04:00",
    "custom": "False",
    "rules": "94e38a7e-fc14-4152-9ff4-1201ac1c16d8",
    "rules_read_only": "A74"
  },
  {
    "countermeasure_id": "T871",
    "universal_id": "c704b3ce-7ff7-4129-b58d-ab09ae1b596e",
    "countermeasure_name": "Log Apache errors and access (Apache HTTP Server)",
    "countermeasure_solution": "Use the following guidelines for logging Apache errors and access:\n\n- Configure the __Error Log__:\n\n    The `LogLevel` directive is used to configure the severity level for the error logs, while the `ErrorLog` directive configures the error log file name. The log level values are the standard syslog levels of `emerg`, `alert`, `crit`, `error`, `warn`, `notice`, `info` and `debug`. The recommended level is `notice` for most modules, so that all errors from the `emerg` level through `notice` level will be logged. The recommended setting for the `core` module is `info` so that any `not found` requests will be included in the error logs.\n\n    The server error logs are invaluable because they can also be used to spot any potential weaknesses before they become serious. Most importantly, they can be used to watch for anomalous behavior.\n    \n    For example, the presence of many `not found` or `unauthorized` errors may be an indication that an attack is pending or has occurred. Starting with Apache 2.4, the error log does not include `not found` errors except at the `info` logging level. Therefore, it is important that the log level is set to `info` for the `core` module. `not found` requests need to be included in the error log for both forensics investigation and host intrusion detection purposes. Monitoring the access logs may not be practical for many web servers with high volume traffic.\n\n- Configure the __Access Log__:\n\n    The `LogFormat` directive defines the format and information that should be included in the access log entries. The `CustomLog` directive specifies the log file, syslog facility or piped logging utility.\n\n    The server access logs are also invaluable for a variety of reasons, such as determining what resources are being used most. Most importantly, they can be used to investigate anomalous behavior that may be an indication that an attack is pending or has occurred. If the server only logs errors and does not log successful access, then it is very difficult to investigate incidents. You may see that the errors stop, and wonder if the attacker gave up, or was successful.\n\n- Log __Storage and Rotation__:\n\n    It is important that there is adequate disk space on the partition that will hold all log files, and that log rotation is configured to retain at least 3 months or 13 weeks if central logging is not used for storage. Retaining logs for this long is necessary for investigating incidents.\n\n    Keep in mind that the generation of logs is under a potential attacker's control, so do not hold any Apache log files on the root partition of the OS. This could result in a denial of service against your web server host by filling up the root partition and causing the system to crash. For this reason, it is recommended that the log files should be stored on a dedicated partition.\n\n    Likewise, consider that attackers sometimes put information into your logs which is intended to attack your log collection or log analysis processing software. As a result, it is important that they are not vulnerable. Two common log rotation utilities include `rotatelogs(8)`, which is bundled with Apache, and `logrotate(8)` commonly bundled on Linux distributions are described in the remediation section.",
    "weakness_title_read_only": "Insufficient Logging or Insufficient Protection of Logs",
    "weakness_id_read_only": "P619",
    "weakness": "9a42301f-ed6c-42cb-a85d-a5134b76b701",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2017-10-18T15:55:23.403000-04:00",
    "last_updated": "2022-08-22T15:42:13.859000-04:00",
    "custom": "False",
    "rules": "94e38a7e-fc14-4152-9ff4-1201ac1c16d8 AND cab80cea-1a20-433f-b78c-783b816b8d33",
    "rules_read_only": "A74 AND A739"
  },
  {
    "countermeasure_id": "T872",
    "universal_id": "e3a68a3a-53f5-431c-96e9-00bc2242660c",
    "countermeasure_name": "Verify Apache logging (Apache HTTP Server)",
    "countermeasure_solution": "Use the following guidelines to determine if the recommended state is implemented by configuring Apache logging:\n\n__One__\n\n1. Verify the `LogLevel` in the Apache server configuration has a value of `info` or lower for the core module, and `notice` or lower for other modules.\n    - It is also compliant to have a value of `info` or `debug` if there is a need for a more verbose log, and if the storage and monitoring processes are capable of handling the extra load. The recommended value is `notice core:info`.\n2. Verify the `ErrorLog` directive is configured to an appropriate log file or syslog facility.\n3. Verify there is a similar `ErrorLog` directive for each virtual host configured if the virtual host will have different people responsible for the website.\n\n__Two__\n\n1. Verify the `LogFormat` directive in the Apache server configuration has the recommended information parameters.\n2. Verify the `CustomLog` directive is configured to an appropriate log file, syslog facility, or piped logging utility, and uses the combined format.\n3. Verify there is a similar `CustomLog` directive for each virtual host configured if the virtual host will have different people responsible for the website.\n\n__Three__\n\n1. Verify the web log rotation configuration matches the Apache configured log files.\n2. Verify the rotation period and number of logs to retain is at least 13 weeks or 3 months.\n3. For each virtual host configured with its own log files, ensure that those log files are also included in a similar log rotation.",
    "weakness_title_read_only": "Insufficient Logging or Insufficient Protection of Logs",
    "weakness_id_read_only": "P619",
    "weakness": "9a42301f-ed6c-42cb-a85d-a5134b76b701",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2017-10-18T16:11:57.468000-04:00",
    "last_updated": "2021-06-25T14:47:57.705000-04:00",
    "custom": "False",
    "rules": "94e38a7e-fc14-4152-9ff4-1201ac1c16d8 AND cab80cea-1a20-433f-b78c-783b816b8d33",
    "rules_read_only": "A74 AND A739"
  },
  {
    "countermeasure_id": "T873",
    "universal_id": "4ae2aa19-c554-42f2-9e8b-d7c591b6c628",
    "countermeasure_name": "Apply applicable patches (Apache HTTP Server)",
    "countermeasure_solution": "Use the following guidelines for applying applicable Apache patches:\n\nApply available Apache patches within one month of availability. While being aware of weaknesses is helpful, ensure that there is a process in place where patches are tested and installed. These patches fix diverse problems, including security issues.\n\nUse Apache packages and updates provided by the Linux platform vendor rather than building from source when possible to minimize the disruption and work of keeping the software up-to-date.",
    "weakness_title_read_only": "Insufficient patching or use of insecure third party software/libraries",
    "weakness_id_read_only": "P728",
    "weakness": "659effab-aba7-464d-8760-f30eed4d032c",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2017-10-19T11:58:00.873000-04:00",
    "last_updated": "2022-08-22T15:45:37.851000-04:00",
    "custom": "False",
    "rules": "94e38a7e-fc14-4152-9ff4-1201ac1c16d8",
    "rules_read_only": "A74"
  },
  {
    "countermeasure_id": "T874",
    "universal_id": "612c8320-7c3f-4d33-9476-a83350e8072a",
    "countermeasure_name": "Verify that all applicable patches are applied (Apache HTTP Server)",
    "countermeasure_solution": "Use the following guidelines to determine if the recommended state is implemented by applying all applicable patches:\n\n1. When Apache is built from source:\n    1. Check the Apache website for latest versions, dates of releases, and any security patches:\n[2.4 Vulnerabilities - The Apache Server Project](https://httpd.apache.org/security/vulnerabilities_24.html)\n\n        Apache patches are available here: [Official Patches for publicly released versions of Apache](https://www.apache.org/dist/httpd/patches)\n\n    2. If newer versions with security patches more than one month old and are not installed, then the installation is not sufficiently up-to-date.\n\n2. When using platform packages:\n    1. Check for vendor supplied updates from the vendor website.\n    2. If newer versions with security patches more than one month old are not installed, then the installation is not sufficiently up-to-date.",
    "weakness_title_read_only": "Insufficient patching or use of insecure third party software/libraries",
    "weakness_id_read_only": "P728",
    "weakness": "659effab-aba7-464d-8760-f30eed4d032c",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2017-10-19T12:07:04.877000-04:00",
    "last_updated": "2021-06-25T14:47:56.633000-04:00",
    "custom": "False",
    "rules": "94e38a7e-fc14-4152-9ff4-1201ac1c16d8",
    "rules_read_only": "A74"
  },
  {
    "countermeasure_id": "T875",
    "universal_id": "a5e466c9-6cbd-41af-803c-247412da0ebc",
    "countermeasure_name": "Secure Apache SSL/TLS (Apache HTTP Server)",
    "countermeasure_solution": "Use the following guidelines for securing Apache SSL/TLS:\n\n- Install `mod_ssl` and/or `mod_nss`:\n\n    Secure Sockets Layer (SSL) was developed by Netscape and turned into an open standard before it was renamed Transport Layer Security (TLS) as part of the process. TLS is important for protecting communication and can provide authentication of the server and even the client. SSL is used to encrypt traffic and provides confidentiality of private information and user credentials, but implementing SSL does __not__ directly make your web server more secure.\n\n    Having encrypted data in transit does not mean that the data provided by the client is secure while it is on the server. Also, SSL does not protect the web server, as attackers can easily target SSL-Enabled web servers, and the attack can be hidden in the encrypted channel.\n\n    The `mod_ssl` module is the standard that implements SSL/TLS for Apache. A newer module found on Red Hat systems can be a compliment or replacement for `mod_ssl`, and provides the same functionality with additional security services. The `mod_nss` module is an Apache module implementation of the Network Security Services (NSS) software from Mozilla, which implements a wide range of cryptographic functions in addition to TLS.\n\n    It is best to plan for SSL/TLS implementation from the beginning of any new web server because most web servers have some need for SSL/TLS due to:\n\n    - Non-public information submitted that should be protected as it is transmitted to the web server.\n    - Non-public information that is downloaded from the web server.\n    - Users that need to be authenticated to at least a portion of the web server\n    - The need to authenticate the web server to ensure users that they have reached the real web server, and have not been phished or redirected to a fake site.\n\n- Install a __Valid Trusted Certificate__:\n\n    The default SSL certificate is self-signed and is not trusted. Install a valid certificate signed by a commonly trusted certificate authority. To be valid, the certificate must satisfy each of the following requirements:\n\n    - Signed by a trusted certificate authority\n    - Not expired\n    - Have a common name that matches the hostname of the web server, such as www.example.com.\n\n    A digital certificate on your server automatically communicates your site's authenticity to a visitor's web browser. If a trusted authority signs your certificate, it confirms for the visitor they are actually communicating with you and not with a fraudulent site stealing personal information.\n\n- Protect the __Server's Private Key__:\n\n    It is critical to protect the server's private key. The server's private key is encrypted by default as a means of protecting it. However, having it encrypted means that the passphrase is required each time the server is started up, and now it is necessary to protect the passphrase as well. The passphrase may be typed in when it is manually started up, or provided by an automated program.\n\n    To summarize, the options are:\n\n    1. Use `SSLPassPhraseDialog builtin`, which requires a passphrase to be manually entered.\n    2. Use `SSLPassPhraseDialog |/path/to/program` to provide the passphrase.\n    3. Use `SSLPassPhraseDialog exec:/path/to/program` to provide the passphrase,\n    4. Store the private key in clear text so that a passphrase is not required.\n\n    Any of the above options 1-4 are acceptable as long as the key and passphrase are protected as described below.\n    \n    Option 1 has the additional security benefit of not storing the passphrase, but is not generally acceptable for most production web servers, since it requires the web server to be manually started.\n    \n    Options 2 and 3 can provide additional security if the programs providing them are secure.\n    \n    Option 4 is the simplest, is widely used, and is acceptable as long as the private key is appropriately protected. If the private key were to be disclosed, it could be used to decrypt all of the SSL communications with the web server, and could also be used to impersonate the web server.\n\n- __Disable__ the SSL v3.0 Protocol:\n\n    The Apache `SSLProtocol` directive specifies the SSL and TLS protocols that are allowed. The SSLv3 protocol should be disabled in this directive because it is outdated and vulnerable to information disclosure. Only TLS protocols should be enabled.\n\n    The SSLv3 protocol was discovered to be vulnerable to the POODLE attack (Padding Oracle On Downgraded Legacy Encryption) in October 2014. The attack allows decryption and extraction of information from the server's memory. Due to this vulnerability disabling the SSLv3 protocol is highly recommended.\n\n- __Restrict__ Weak SSL Ciphers:\n\n    Disable weak SSL ciphers using the `SSLCipherSuite`, and `SSLHonorCipherOrder` directives. The `SSLCipherSuite` directive specifies which ciphers are allowed in the negotiation with the client. While the `SSLHonorCipherOrder` causes the server's preferred ciphers to be used instead of the clients' specified preferences.\n\n    The SSL/TLS protocols support a large number of encryption ciphers including many weak ciphers that are subject to man-in-the-middle attacks and information disclosure. Some implementations even support the NULL cipher that allows a TLS connection without any encryption. As a result, it is critical to ensure that the configuration only allows strong ciphers greater than or equal to 128-bit to be negotiated with the client. Stronger 256-bit ciphers should be allowed and preferred.\n\n    In addition, enabling the `SSLHonorCipherOrder` further protects the client from man-in-the-middle downgrade attacks by ensuring the server's preferred ciphers will be used rather than a client's preferences.\n\n- __Disable__ SSL Insecure Renegotiation:\n\n    A man-in-the-middle renegotiation attack was discovered in SSLv3 and TLSv1 in November, 2009 ([CVE-2009-3555](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CAN-2009-3555 )). A workaround and fix was approved as an Internet Standard as RFC 574, Feb 2010. The workaround, which removes the renegotiation, is available from OpenSSL as of version 0.9.8l and later. For more information, see [OpenSSL Security Advisory [11-Nov-2009]](https://www.openssl.org/news/secadv_20091111.txt).\n\n    The `SSLInsecureRenegotiation` directive was added in Apache 2.2.15, for web servers linked with OpenSSL version 0.9.8m or later, to provide backward compatibility to clients with the older, unpatched SSL implementations. Enabling the `SSLInsecureRenegotiation` directive leaves the server vulnerable to man-in-the-middle renegotiation attack. Therefore, the `SSLInsecureRenegotiation` directive should not be enabled.\n\n- Ensure __SSL Compression is not Enabled__:\n\n    The `SSLCompression` directive controls whether SSL compression is used by Apache when serving content over HTTPS. It is recommended that the `SSLCompression` directive be set to `off`.\n\n    If SSL compression is enabled, HTTPS communication between the client and the server may be at increased risk of the CRIME attack. The CRIME attack increases a malicious actor's ability to derive the value of a session cookie, which commonly contains an authenticator. If the authenticator in a session cookie is derived, it can be used to impersonate the account associated with the authenticator.",
    "weakness_title_read_only": "Clear Text and Unencrypted Transmission of Information",
    "weakness_id_read_only": "P216",
    "weakness": "b1d166d6-8ca7-415f-9cd9-8c2d745d3d01",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2017-10-19T12:30:05.439000-04:00",
    "last_updated": "2021-06-25T14:47:36.345000-04:00",
    "custom": "False",
    "rules": "94e38a7e-fc14-4152-9ff4-1201ac1c16d8 AND cab80cea-1a20-433f-b78c-783b816b8d33",
    "rules_read_only": "A74 AND A739"
  },
  {
    "countermeasure_id": "T876",
    "universal_id": "32e66482-ddc8-4cea-bd83-f12f0d20346b",
    "countermeasure_name": "Verify Apache SSL/TLS configuration (Apache HTTP Server)",
    "countermeasure_solution": "Perform the following:\n\n- Ensure the `mod_ssl` and/or `mod_nss`is loaded in the Apache configuration:\n\n        # httpd -M | egrep 'ssl_module|nss_module'\n\n    Results should show either or both of the modules.\n\n- Perform either or both of the following steps to determine if the recommended state is implemented:\n\n    1. OpenSSL can also be used to validate a certificate as a valid trusted certificate, using a trusted bundle of CA certificate. It is important that the CA bundle of certificates be an already validated and trusted file in order for the test to be valid.\n\n            $ openssl verify -CAfile /etc/pki/tls/certs/ca-bundle.crt -purpose sslserver /etc/pki/tls/certs/example.com.crt\n            /etc/pki/tls/certs/example.com.crt: OK\n\n        A specific error message and code will be reported in addition to the `OK` if the certificate is not valid, For example:\n\n            error 10 at 0 depth lookup:certificate has expired\n            OK\n\n    2. Testing can also be done by connecting to a running web server. This may be done with your favorite browser, a command line web client or with `openssl s_client`. Of course, it is important here as well to be sure of the integrity of the trusted certificate authorities used by the web client. Visit the OWASP testing SSL web page for additional suggestions: [https://www.owasp.org/index.php/Testing_for_SSL-TLS_%28OWASP-CM-001%29](http://www.owasp.org/index.php/Testing_for_SSL-TLS_%28OWASP-CM-001%29)\n\n- Perform the following steps to determine if the recommended state is implemented:\n\n    1. For each certificate file referenced in the Apache configuration files with the `SSLCertificateFile` directive, examine the file for a private key, clearly identified by the string `PRIVATE KEY--`\n    2. For each file referenced in the Apache configuration files with the `SSLCertificateKeyFile` directive, verify the ownership is `root:root` and the permission `0400`.\n\n- Search the Apache configuration files for the `SSLProtocol` directive. Verify that the directive exists and has either:\n\n    - a minus `-SSLv3` value included\n    - an explicit list of only TLS protocols without any plus (+) or minus (-) symbols\n\n- Perform the following steps to determine if the recommended state is implemented:\n\n    1. Verify the `SSLCipherSuite` directive disables weak ciphers in the Apache server level configuration and every virtual host that is SSL enabled.\n    2. Alternately the SSL protocols and ciphers supported can be easily tested by connecting to a running web server with `openssl s_client` such as shown in [https://www.owasp.org/index.php/Testing_for_SSL-TLS_%28OWASP-CM-001%29](http://www.owasp.org/index.php/Testing_for_SSL-TLS_%28OWASP-CM-001%29)\n\n- Search the Apache configuration files for the `SSLInsecureRenegotiation` directive and verify that the directive is either not present or has a value of `off`.\n\n- Perform the following steps to determine if the recommended state is implemented:\n\n    1. Search the Apache configuration files for the `SSLCompression `directive.\n    2. Verify that the directive either does not exist or exists and is set to `off`.",
    "weakness_title_read_only": "Clear Text and Unencrypted Transmission of Information",
    "weakness_id_read_only": "P216",
    "weakness": "b1d166d6-8ca7-415f-9cd9-8c2d745d3d01",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2017-10-19T16:00:46.045000-04:00",
    "last_updated": "2021-06-25T14:47:36.309000-04:00",
    "custom": "False",
    "rules": "94e38a7e-fc14-4152-9ff4-1201ac1c16d8 AND cab80cea-1a20-433f-b78c-783b816b8d33",
    "rules_read_only": "A74 AND A739"
  },
  {
    "countermeasure_id": "T877",
    "universal_id": "f3495c26-f691-4407-8e52-ac15d4674f99",
    "countermeasure_name": "Limit information exposed by Apache (Apache HTTP Server)",
    "countermeasure_solution": "Use the following guidelines for limiting information exposed by Apache.\n\n- Set ServerToken to 'Prod':\n\n    Configure the Apache `ServerTokens` directive to provide minimal information. By setting the value to `Prod` or `ProductOnly`. The only version information given in the server HTTP response header will be `Apache` rather than providing details on modules and versions installed.\n\n    Identifying web server details greatly increases the efficiency of any attack, as security vulnerabilities are extremely dependent upon specific software versions and configurations. Excessive probing and requests may cause too much \"noise\" being generated and may tip off an administrator. If an attacker can accurately target their exploits, the chances of successful compromise prior to detection increase dramatically. Script Kiddies are constantly scanning the Internet and documenting the version information openly provided by web servers. The purpose of this scanning is to accumulate a database of software installed on those hosts, which can be used when new vulnerabilities are released.\n\n- Set ServerSignature to 'Off':\n\n    Disable the server signatures that generate a signature line as a trailing footer at the bottom of server-generated documents such as error pages.\n\n    Server signatures are helpful when the server is acting as a proxy because it helps the user distinguish errors from the proxy rather than the destination server. However, in this context, there is no need for the additional information and we want to limit leakage of unnecessary information.",
    "weakness_title_read_only": "Information Exposure",
    "weakness_id_read_only": "P96",
    "weakness": "5caa926a-86e4-498d-97f8-5d2f5c5ddd7b",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2017-10-19T16:30:21.376000-04:00",
    "last_updated": "2021-06-25T14:47:38.786000-04:00",
    "custom": "False",
    "rules": "94e38a7e-fc14-4152-9ff4-1201ac1c16d8 AND cab80cea-1a20-433f-b78c-783b816b8d33",
    "rules_read_only": "A74 AND A739"
  },
  {
    "countermeasure_id": "T878",
    "universal_id": "2736d201-7bc3-4b67-982e-aa6a96ad9119",
    "countermeasure_name": "Verify that information exposed by Apache is restricted (Apache HTTP Server)",
    "countermeasure_solution": "Use the following guidelines for verifying that Apache restricts the information that it can expose:\n\n- Verify the `ServerTokens` directive is present in the Apache configuration and has a value of `Prod` or `ProductOnly`.\n\n- Verify the `ServerSignature` directive is either __not__ present in the Apache configuration or has a value of `Off`.",
    "weakness_title_read_only": "Information Exposure",
    "weakness_id_read_only": "P96",
    "weakness": "5caa926a-86e4-498d-97f8-5d2f5c5ddd7b",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2017-10-19T16:34:36.381000-04:00",
    "last_updated": "2021-06-25T14:47:38.370000-04:00",
    "custom": "False",
    "rules": "94e38a7e-fc14-4152-9ff4-1201ac1c16d8 AND cab80cea-1a20-433f-b78c-783b816b8d33",
    "rules_read_only": "A74 AND A739"
  },
  {
    "countermeasure_id": "T879",
    "universal_id": "7b5b7c4d-4bad-4439-9e12-c64fd79472e5",
    "countermeasure_name": "Protect Apache against DoS attacks (Apache HTTP Server)",
    "countermeasure_solution": "Use the following guidelines for protecting Apache against DoS attacks.\n\n- Set __TimeOut__ to 10 or less:\n\n    Denial of Service (DoS) is an attack technique with the intent of preventing a website from serving normal user activity. DoS attacks, which are normally applied to the network layer, are also possible at the application layer. These malicious attacks can succeed by starving a system of critical resources, exploiting a vulnerability, or abusing functionality.\n\n    Although there is no 100% solution for preventing DoS attacks, the following recommendation uses the `Timeout` directive to mitigate some of the risks by requiring more effort for a successful DoS attack. DoS attacks can happen in rather unintentional ways as well as intentional, and these directives can help in many of those situations.\n\n    One common technique for DoS is to initiate many connections to the server. By decreasing the timeout for old connections, the server can free up resources more quickly and be more responsive. By making the server more efficient, it will be more resilient to DoS conditions. The `Timeout` directive affects several timeout values for Apache, so review the [Timeout Apache documentation](http://httpd.apache.org/docs/2.4/mod/core.html#timeout) carefully.\n\n- Set the __KeepAlive directive__ to On:\n\n    The `KeepAlive` directive controls whether Apache will reuse the same TCP connection per client to process subsequent HTTP requests from that client. It is recommended that the `KeepAlive` directive be set to `On`. Allowing per-client reuse of TCP sockets reduces the amount of system and network resources required to serve requests. This efficiency gain may improve a server's resiliency to DoS attacks.\n\n- Set __MaxKeepAliveRequests__ to 100 or greater:\n\n    The `MaxKeepAliveRequests` directive limits the number of requests allowed per connection when `KeepAlive` is on. If it is set to `0`, unlimited requests will be allowed. The `MaxKeepAliveRequests` directive mitigates the risk of Denial of Service (DoS) attacks by reducing the overhead imposed on the server.\n\n    The `KeepAlive` directive must be enabled before it is effective. Enabling `KeepAlive` allows for multiple HTTP requests to be sent while keeping the same TCP connection alive. This reduces the overhead of having to set up and tear down TCP connections for each request. By making the server more efficient, it will be more resilient to DoS conditions.\n\n- Set __KeepAliveTimeout__ Low to Mitigate Denial of Service:\n\n    The `KeepAliveTimeout` directive specifies the number of seconds Apache will wait for a subsequent request before closing a connection that is being kept alive. The `KeepAliveTimeout` directive is used mitigate some of the risks, by requiring more effort for a successful DoS attack. By enabling `KeepAlive` and keeping the timeout relatively low for old connections, we allow the server to free up resources more quickly and be more responsive.\n\n- Set Timeout Limits for __Request Headers__:\n\n    The `RequestReadTimeout` directive allows configuration of timeout limits for client requests. The header portion of the directive provides for an initial timeout value, a maximum timeout, and a minimum rate. The minimum rate specifies that after the initial timeout, the server will wait an additional 1 second for every N bytes received. The recommended setting is a maximum timeout of `40` seconds or less. Keep in mind that for SSL/TLS virtual hosts the time for the TLS handshake must fit within the timeout.\n\n    Setting a request header timeout is vital for mitigating Denial of Service attacks based on slow requests. The slow request attacks are particularly lethal and relatively easy to perform because they require very little bandwidth and can easily be done through anonymous proxies. In June 2009 Robert Hansen (RSnake) published the Slow Loris DoS attack, which used a slow `GET` request. Later, in November 2010 at the OWASP App Sec DC conference, Wong Onn Chee demonstrated a slow `POST` request attack that was even more effective. For more information, see the OWASP article [H.....t.....t....p.......p....o....s....t](https://www.owasp.org/index.php/H.....t.....t....p.......p....o....s....t).\n\n- Set Timeout Limits for the __Request Body__:\n\n    The `RequestReadTimeout` directive also allows setting timeout values for the body portion of a request. The directive provides for an initial timeout value, and a maximum timeout and minimum rate. The minimum rate specifies that after the initial timeout, the server will wait an additional 1 second for every N bytes are received. The recommended setting is a maximum timeout of `20` seconds or less. The default value is `body=20,MinRate=500`.\n\n    It is not sufficient to only use timeouts on the header portion of the request, because the server will still be vulnerable to attacks like the OWASP Slow `POST` attack, which provides the body of the request very slowly. As a result, the body portion of the request must have a timeout as well. A timeout of `20` seconds or less is recommended.",
    "weakness_title_read_only": "Denial of Service (DoS)",
    "weakness_id_read_only": "P750",
    "weakness": "04f3a13f-c7ea-4824-bd73-086d61dd30ba",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2017-10-19T16:50:15.800000-04:00",
    "last_updated": "2021-06-25T14:47:40.673000-04:00",
    "custom": "False",
    "rules": "94e38a7e-fc14-4152-9ff4-1201ac1c16d8",
    "rules_read_only": "A74"
  },
  {
    "countermeasure_id": "T880",
    "universal_id": "dddedcd4-7891-4457-b37d-4a62a416a5a2",
    "countermeasure_name": "Verify that Apache is protected against DoS attacks (Apache HTTP Server)",
    "countermeasure_solution": "Use the following guidelines for verifying that Apache is not vulnerable to DoS attacks:\n\n- Verify that the `Timeout` directive is specified in the Apache configuration files and has a value of `10` seconds or shorter.\n\n- Verify that the `KeepAlive` directive in the Apache configuration has a value of `On`, or is not present. If the directive is not present the default value is `On`.\n\n- Verify that the `MaxKeepAliveRequests` directive in the Apache configuration has a value of `100` or more. If the directive is not present the default value is `100`.\n\n- Verify that the `KeepAliveTimeout` directive in the Apache configuration has a value of `15` or less. If the directive is not present the default value is `5` seconds.\n\n- Perform the following 2 items to verify that Apache is protected against DoS attacks:\n\n__One__\n\n    1. Locate the Apache configuration files and included configuration files.\n    2. Locate any `RequestReadTimeout` directives and verify that they have a maximum header request timeout of `40` seconds or less.\n    3. If the configuration does not contain any `RequestReadTimeout` directives, and the `mod_reqtimeout` module is being loaded, then the default value of `40` seconds is compliant with the benchmark recommendation.\n\n            RequestReadTimeout header=XXX-**40**,MinRate=XXX body=XXXXXXXXXX\n\n__Two__\n\n    1. Locate the Apache configuration files and included configuration files.\n    2. Locate any `RequestReadTimeout` directives and verify the configuration has a maximum body request timeout of `20` seconds or less.\n    3. If the configuration does not contain any `RequestReadTimeout` directives, and the `mod_reqtimeout` module is being loaded, then the default value of `20` seconds is compliant with the benchmark recommendation.\n\n            RequestReadTimeout header=XXXXXX body=**20**,MinRate=XXXXXXXXXX",
    "weakness_title_read_only": "Denial of Service (DoS)",
    "weakness_id_read_only": "P750",
    "weakness": "04f3a13f-c7ea-4824-bd73-086d61dd30ba",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2017-10-19T18:37:14.369000-04:00",
    "last_updated": "2021-06-25T14:47:39.786000-04:00",
    "custom": "False",
    "rules": "94e38a7e-fc14-4152-9ff4-1201ac1c16d8",
    "rules_read_only": "A74"
  },
  {
    "countermeasure_id": "T890",
    "universal_id": "d2817012-db8a-446a-8474-56c7717d041a",
    "countermeasure_name": "Limit the size of Apache's request parameters (Apache HTTP Server)",
    "countermeasure_solution": "Use the following guidelines for limiting the size of Apache's request parameters:\n\n- Set the __LimitRequestLine__ directive to 512 or less:\n\n    Buffer Overflow attacks attempt to exploit an application by providing more data than the application buffer can contain. If the application allows copying data to the buffer to overflow the boundaries of the buffer, then the application is vulnerable to a buffer overflow. The results of Buffer overflow vulnerabilities vary, and may result in the application crashing, or may allow the attacker to execute instructions provided in the data. The Apache `LimitRequest*` directives allow the Apache web server to limit the sizes of requests and request fields and can be used to help protect programs and applications processing those requests. Specifically, the `LimitRequestLine` directive limits the allowed size of a client's HTTP request-line, which consists of the HTTP method, URI, and protocol version.\n\n    The limiting of the size of request line is helpful so that the web server can prevent an unexpectedly long or large request from being passed to a potentially vulnerable CGI program, module or application that would have attempted to process the request. Of course, the underlying dependency is that we need to set the limits high enough to not interfere with any one application on the server while setting them low enough to be of value in protecting the applications. Since the configuration directive is available only at the server configuration level, it is not possible to tune the value for different portions of the same web server. Please read the Apache documentation carefully, as these requests may interfere with the expected functionality of some web applications.\n\n- Set the __LimitRequestFields__ directive to 100 or less:\n\n    The `LimitRequestFields` directive limits the number of fields allowed in an HTTP request. Limiting the number of fields is helpful so that the web server can prevent an unexpectedly high number of fields from being passed to a potentially vulnerable CGI program, module or application that would have attempted to process the request. Of course, the underlying dependency is that we need to set the limits high enough to not interfere with any one application on the server while setting them low enough to be of value in protecting the applications. Since the configuration directives are available only at the server configuration level, it is not possible to tune the value for different portions of the same web server. Please read the Apache documentation carefully, as these requests may interfere with the expected functionality of some web applications.\n\n- Set the __LimitRequestFieldsize__ directive to 1024 or less:\n\n    The `LimitRequestFieldSize` limits the number of bytes that will be allowed in an HTTP request header. It is recommended that the `LimitRequestFieldSize` directive be set to `1024` or less. Limiting the size of request headers is helpful so that the web server can prevent an unexpectedly long or large value from being passed to exploit a potentially vulnerable program. Of course, the underlying dependency is that we need to set the limits high enough to not interfere with any one application on the server while setting them low enough to be of value in protecting the applications. Since the configuration directives are available only at the server configuration level, it is not possible to tune the value for different portions of the same web server. Please read the Apache documentation carefully, as these requests may interfere with the expected functionality of some web applications.\n\n- Set the __LimitRequestBody__ directive to 102400 or less:\n\n    The `LimitRequestBody` directive limits the number of bytes that are allowed in a request body. Size of requests may vary greatly. For example, during a file upload, the size of the file must fit within this limit.\n\n    The limiting of the size of the request body is helpful so that the web server can prevent an unexpectedly long or large request from being passed to a potentially vulnerable program. Of course, the underlying dependency is that we need to set the limits high enough to not interfere with any one application on the server while setting them low enough to be of value in protecting the applications. The `LimitRequestBody` may be configured on a per directory, or per location context. Please read the Apache documentation carefully, as these requests may interfere with the expected functionality of some web applications.",
    "weakness_title_read_only": "Denial of Service (DoS)",
    "weakness_id_read_only": "P750",
    "weakness": "04f3a13f-c7ea-4824-bd73-086d61dd30ba",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2017-10-24T14:31:56.777000-04:00",
    "last_updated": "2021-06-25T14:47:40.301000-04:00",
    "custom": "False",
    "rules": "94e38a7e-fc14-4152-9ff4-1201ac1c16d8 AND ac5f73c4-566a-4e69-975a-c497b00c10ee",
    "rules_read_only": "A74 AND A1161"
  },
  {
    "countermeasure_id": "T891",
    "universal_id": "c6760b6c-b6c5-4673-aeb4-438218dbc7c0",
    "countermeasure_name": "Verify the size of Apache's request parameters (Apache HTTP Server)",
    "countermeasure_solution": "Use the following guidelines to verify the size of Apache request parameters:\n\n- Verify that the `LimitRequestline` directive is in the Apache configuration and has a value of `512` or less.\n\n- Verify that the `LimitRequestFields` directive is in the Apache configuration and has a value of `100` or less.\n\n- Verify that the `LimitRequestFieldsize` directive is in the Apache configuration and has a value of `1024` or less.\n\n- Verify that the `LimitRequestBody` directive in in the Apache configuration and has a value of `102400` (100K) or less.",
    "weakness_title_read_only": "Denial of Service (DoS)",
    "weakness_id_read_only": "P750",
    "weakness": "04f3a13f-c7ea-4824-bd73-086d61dd30ba",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2017-10-24T14:53:09.971000-04:00",
    "last_updated": "2021-06-25T14:47:40.655000-04:00",
    "custom": "False",
    "rules": "94e38a7e-fc14-4152-9ff4-1201ac1c16d8 AND ac5f73c4-566a-4e69-975a-c497b00c10ee",
    "rules_read_only": "A74 AND A1161"
  },
  {
    "countermeasure_id": "T892",
    "universal_id": "de4b97a5-2526-4eba-801f-480c292d2f81",
    "countermeasure_name": "Configure SELinux to restrict Apache processes (Apache HTTP Server)",
    "countermeasure_solution": "Use the following guidelines for configuring SELinux to restrict Apache processes:\n\n- Enable SELinux in __Enforcing Mode__:\n\n    SELinux (Security-Enhanced Linux) is a Linux kernel security module that provides mandatory access control security policies with type enforcement that are checked after the traditional discretionary access controls. It was created by the US National Security Agency and can enforce rules on files and processes in a Linux system, and restrict actions, based on defined policies.\n\n    Web applications and services continue to be one of the leading attack vectors for black-hat criminals to gain access to information and servers. The threat is high because web servers are often externally accessible and typically have the greatest share of server-side vulnerabilities. The SELinux mandatory access controls provide a much stronger security model which can be used to implement a deny-by-default model which only allows what is explicitly permitted.\n\n- Run Apache Processes in the __httpd_t Confined Context__:\n\n    SELinux includes customizable targeted policies that may be used to confine the Apache httpd server to enforce least privileges so that the httpd server has only the minimal access to specified directories, files and network ports. Access is controlled by process types (domains) defined for the httpd process. There are over a hundred individual httpd related types defined in a default Apache SELinux policy which includes many of the common Apache add-ons and applications such as php, nagios, smokeping and many others. The default SELinux policies work well for a default Apache installation, but an implementation of SELinux targeted policies on a complex or highly customized web server requires a rather significant development and testing effort which comprehends both the workings of SELinux and the detailed operations and requirements of the web application. All directories and files accessed by the web server process must have security labels with appropriate types.\n\n    The following is a sample of the most commonly used types:\n\n    - `http_port_t` - Network ports allowed for listening\n    - `httpd_sys_content_t` - Read access to directories and files with web content\n    - `httpd_log_t` - Directories and files to be used for writable log data\n    - `httpd_sys_script_exec_t` - Directories and files for executable content\n\n    With the proper implementation of SELinux, vulnerabilities in the web application may be prevented from being exploited due to the additional restrictions. For example, a vulnerability that allows an attacker to read to inappropriate system files may be prevented from execution by SELinux because the inappropriate files are not labeled as `httpd_sys_content_t`. Likewise writing to an unexpected directory or execution of unexpected content can be prevented by similar mandatory security labels enforced by SELinux.\n\n- Ensure the __httpd_t Type is Not in Permissive Mode__:\n\n    In addition to setting the entire SELinux configuration in permissive mode, it is possible to set individual process types (domains) such as `httpd_t` into a permissive mode as well. The permissive mode will not prevent any access or actions, instead, any actions that would have been denied are simply logged.\n\n    Usage of the permissive mode is helpful for testing and ensuring that SELinux will not prevent access that is necessary for the proper function of a web application. However, all access is allowed in permissive mode by SELinux.\n\n- Ensure Only the __Necessary SELinux Booleans are Enabled__:\n\n    SELinux booleans allow or disallow behavior specific to the Apache web server. Common examples include whether CGI execution is allowed, or if the httpd server is allowed to communicate with the current terminal (`tty`). Communication with the terminal may be necessary for entering a passphrase during startup to decrypt a private key. Enabling only the necessary httpd related booleans provides a defense in depth approach, that will deny actions that are not in use or expected.",
    "weakness_title_read_only": "Improper Access Control (Authorization)",
    "weakness_id_read_only": "P182",
    "weakness": "e488cdc5-3c91-4d2b-bcec-5c651b000d8b",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2017-10-24T16:02:21.059000-04:00",
    "last_updated": "2021-06-25T14:47:48.178000-04:00",
    "custom": "False",
    "rules": "94e38a7e-fc14-4152-9ff4-1201ac1c16d8 AND cab80cea-1a20-433f-b78c-783b816b8d33 AND ac5f73c4-566a-4e69-975a-c497b00c10ee AND 275cddcd-273f-4f90-a382-f98b76e4462f",
    "rules_read_only": "A74 AND A739 AND A1161 AND A1180"
  },
  {
    "countermeasure_id": "T893",
    "universal_id": "e1e3f9be-a2a7-4fee-875e-d3d994a6e991",
    "countermeasure_name": "Configure AppArmor to restrict Apache processes (Apache HTTP Server)",
    "countermeasure_solution": "Use the following guidelines for configuring AppArmor to restrict Apache processes:\n\n- Enable the __AppArmor Framework__:\n\n    AppArmor is a Linux kernel security module that provides a named based mandatory access control with security policies. AppArmor can enforce rules on programs for file access and network connections and restrict actions based on defined policies.\n\n    Web applications and web services continue to be one of the leading attack vectors for black-hat criminals to gain access to information and servers. The threat is high because web servers are often externally accessible and typically have the greatest share of server-side vulnerabilities. The AppArmor mandatory access controls provide a much stronger security model which can be used to implement a deny-by-default model which only allows what is explicitly permitted.\n\n- Customize the __Apache AppArmor Profile__:\n\n    AppArmor includes customizable profiles that may be used to confine the Apache web server to enforce least privileges so that the server has only the minimal access to specified directories, files and network ports. Access is controlled by a profile defined for the apache2 process. The default AppArmor profile is typically a very permissive profile that allows read-write access to all system files. Therefore, it's important that the default profile be customized to enforce least privileges. The AppArmor utilities such as `aa-autodep`, `aa-complain`, and `aa-logprof` can be used to generate an initial profile based on actual usage. However, thorough testing, review, and customization, it will be necessary to ensure that the Apache profile restrictions allow necessary functionality while implementing least privilege.\n\n    With the proper implementation of AppArmor profile, vulnerabilities in the web application may be prevented from being exploited due to the additional restrictions. For example, a vulnerability that allows an attacker to read inappropriate system files may be prevented from execution by AppArmor because the inappropriate files are not allowed by the profile. Likewise writing to an unexpected directory or execution of unexpected content can be prevented by similar mandatory security controls enforced by AppArmor.\n\n- Ensure __Apache AppArmor Profile is in Enforce Mode__:\n\n    AppArmor profiles may be in one of three modes: disabled, complain or enforce. In the complain mode, any violations of the access controls are logged, but the restrictions are not enforced. Also, once a profile mode has been changed, it is recommended to restart the Apache server, otherwise the currently running process may not be confined by the policy.\n\n    The complain mode is useful for testing and debugging a profile, but is not appropriate for production. Only the confined process running in enforce mode will prevent attacks that violate the configured access controls.",
    "weakness_title_read_only": "Improper Access Control (Authorization)",
    "weakness_id_read_only": "P182",
    "weakness": "e488cdc5-3c91-4d2b-bcec-5c651b000d8b",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2017-10-24T16:02:59.128000-04:00",
    "last_updated": "2021-06-25T14:47:48.088000-04:00",
    "custom": "False",
    "rules": "94e38a7e-fc14-4152-9ff4-1201ac1c16d8 AND cab80cea-1a20-433f-b78c-783b816b8d33 AND ac5f73c4-566a-4e69-975a-c497b00c10ee AND 9feb9d61-e787-4f14-bf64-373819a5695b",
    "rules_read_only": "A74 AND A739 AND A1161 AND A1181"
  },
  {
    "countermeasure_id": "T894",
    "universal_id": "1b78df24-f81c-4ed2-bae7-a084a2572946",
    "countermeasure_name": "Verify that SELinux is configured to restrict Apache processes (Apache HTTP Server)",
    "countermeasure_solution": "Use the following guidelines for verifying that SELinux is configured to restrict Apache processes:\n\n- Use the `sestatus` command to check that SELinux is enabled and that both the current mode and the configured mode are set to `enforcing`.\n\n        $ sestatus | grep -i mode\n        Current mode: enforcing\n        Mode from config file: enforcing\n\n- Check that all of the Apache httpd processes are confined to the `httpd_t` SELinux context. The type (the third colon separated field) for each process should be `httpd_t`. On some platforms, such as Ubuntu, the Apache executable is named apache2 instead of httpd.\n\n        $ ps -eZ | grep httpd\n        unconfined_u:system_r:**httpd_t**:s0 1366 ? 00:00:00 httpd\n        unconfined_u:system_r:**httpd_t**:s0 1368 ? 00:00:00 httpd\n        . . .\n\n- Check that the `httpd_t` process type (domain) is not in permissive mode with the `semodule` command. There should be no output if the type is not set to permissive.\n\n        # semodule -l | grep permissive_httpd_t\n\n- Review the SELinux httpd booleans that are enabled to ensure only the necessary booleans are enabled for the current and the configured state. Due to the variety and complexity of web server usages and organizational needs, a preset recommendation of enabled booleans is not practical. Run either of the two commands below to show only the enabled httpd related booleans. The `getsebool` command is installed with the core SELinux, while the `semanage` command is an optional package. However, the `semanage` output includes descriptive text.\n\n        # **getsebool -a | grep httpd_ | grep '> on'**\n        httpd_builtin_scripting --> on\n        httpd_dbus_avahi --> on\n        httpd_tty_comm --> on\n        httpd_unified --> on\n\n    Alternative using the `semanage` command.\n\n        # **semanage boolean -l | grep httpd_ | grep -v '(off , off)'**\n        httpd_enable_cgi (on , on) Allow httpd cgi support\n        httpd_dbus_avahi (on , on) Allow Apache to communicate with avahi service via dbus\n        httpd_unified (on , on) Unify HTTPD handling of all content files.\n        httpd_builtin_scripting (on , on) Allow httpd to use built in scripting (usually php)\n        httpd_tty_comm (on , on) Unify HTTPD to communicate with the terminal...",
    "weakness_title_read_only": "Improper Access Control (Authorization)",
    "weakness_id_read_only": "P182",
    "weakness": "e488cdc5-3c91-4d2b-bcec-5c651b000d8b",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2017-10-24T16:42:05.399000-04:00",
    "last_updated": "2021-06-25T14:47:46.253000-04:00",
    "custom": "False",
    "rules": "94e38a7e-fc14-4152-9ff4-1201ac1c16d8 AND cab80cea-1a20-433f-b78c-783b816b8d33 AND ac5f73c4-566a-4e69-975a-c497b00c10ee AND 275cddcd-273f-4f90-a382-f98b76e4462f",
    "rules_read_only": "A74 AND A739 AND A1161 AND A1180"
  },
  {
    "countermeasure_id": "T895",
    "universal_id": "fa2d1a44-714d-4911-b02e-1cff508d5e61",
    "countermeasure_name": "Verify that AppArmor is configured to restrict Apache processes",
    "countermeasure_solution": "Use the following guidelines for verifying that AppArmor is configured to restrict Apache processes:\n\n- Use the `aa-status` command with the `--enabled` option to check that AppArmor is enabled. If AppArmor is enabled the command will return a zero (0) exit code for success. The `&& echo Enabled` is added to the command below to provide positive feedback. If no text is echoed, then AppArmor is not enabled.\n\n        # aa-status --enabled && echo Enabled\n        Enabled\n\n- Perform the following steps:\n    - Find the Apache AppArmor profile typically found in `/etc/apparmor.d/usr.sbin.apache2` along with any files included by the profile such as `/etc/apparmor.d/apache2.d/*` and files in the `/etc/apparmor.d/abstractions/` directory.\n    - Review the capabilities and permissions granted to ensure that the profile implements least privileges for the web application. Wild-card paths such as `/**` which grant access to all files and directories starting with the root level directory, and should not be present in the profile. Instead, read only access to specific necessary system files such as `/etc/group` and to the web content files such as `/var/www/html/**` should be given.\n\n        Refer to the `apparmor.d` main page for additional details. Shown below are some possible example capabilities and path permissions.\n\n            capability dac_override,\n            capability dac_read_search,\n            capability net_bind_service,\n            capability setgid,\n            capability setuid,\n            capability kill,\n            capability sys_tty_config,\n            . . .\n\n            /usr/sbin/apache2 mr,\n            /etc/gai.conf r,\n            /etc/group r,\n            /etc/apache2/** r,\n            /var/www/html/** r,\n            /run/apache2/** rw,\n            /run/lock/apache2/** rw,\n            /var/log/apache2/** rw,\n            /etc/mime.types r,\n\n- Use the `aa-unconfined` command to check that the apache2 policy is enforced, and that the currently running apache2 processes are confined. The output should include both `confined by` and `(enforce)`\n\n        # aa-unconfined --paranoid | grep apache2\n        1899 /usr/sbin/apache2 confined by '/usr/sbin/apache2 (enforce)'\n        1902 /usr/sbin/apache2 confined by '/usr/sbin/apache2 (enforce)'\n        1903 /usr/sbin/apache2 confined by '/usr/sbin/apache2 (enforce)'\n        . . .\n\n    Non-compliant results may include `not confined` or `(complain)` such as the following:\n\n        3304 /usr/sbin/apache2 not confined\n        2502 /usr/sbin/apache2 confined by '/usr/sbin/apache2 (complain)'\n        4004 /usr/sbin/apache2 confined by '/usr/sbin/apache2//HANDLING_UNTRUSTED_INPUT (complain)'",
    "weakness_title_read_only": "Improper Access Control (Authorization)",
    "weakness_id_read_only": "P182",
    "weakness": "e488cdc5-3c91-4d2b-bcec-5c651b000d8b",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2017-10-24T16:42:55.502000-04:00",
    "last_updated": "2021-06-25T14:47:49.310000-04:00",
    "custom": "False",
    "rules": "94e38a7e-fc14-4152-9ff4-1201ac1c16d8 AND cab80cea-1a20-433f-b78c-783b816b8d33 AND ac5f73c4-566a-4e69-975a-c497b00c10ee AND 9feb9d61-e787-4f14-bf64-373819a5695b",
    "rules_read_only": "A74 AND A739 AND A1161 AND A1181"
  },
  {
    "countermeasure_id": "T896",
    "universal_id": "998bebae-b237-408b-8ef5-4afc94feffeb",
    "countermeasure_name": "Design a secure architecture for AWS deployment (AWS)",
    "countermeasure_solution": "Design an architecture for deploying your application in AWS. Here, we provide a default domain-agnostic architecture design and all SD Elements AWS-related countermeasures would be based on that. If you need to change the architecture based on your business and domain requirements, customize other SD Elements countermeasures accordingly.\n\nThe following diagram shows the default architecture we have considered for threat modeling:\n\n![AWS Architecture]({{ USE_CONTENT_URL }}screenshots/T896-AWS_Arch.png) \n\n- Everything falls under an __AWS Account__ and you should secure the account in the first place.\n- __VPC__ (Amazon Virtual Private Cloud) Amazon is a virtual network that connects your AWS resources and should be hardened based on de facto network security best practices.\n- The __Internet Gateway__ is a VPC component that connects your AWS resources to the Internet. To enable access to or from the Internet for instances in your VPC, you must attach an Internet gateway to your VPC.\n- __Availability Zones__ are distinct locations that are engineered to be isolated from failures in other Availability Zones. By launching instances in separate Availability Zones, you can protect your applications from the failure of a single location. The default architecture shown above creates a VPC that spans two Availability Zones. After creating a VPC, you can add one or more subnets in each Availability Zone. Each subnet must reside entirely within one Availability Zone and cannot span zones. SD Elements breaks the instances into three layers (Web, App, and Data) and also creates a fourth layer for the NAT gateways, bastion hosts and the instances that are required to be publicly accessible from the Internet.\n- __ELB__ (Elastic Load Balancing) automatically distributes incoming application traffic across multiple targets, such as Amazon EC2 instances. It can handle the varying load of your application traffic. SD Elements considers one ELB instance for each layer, which needs to be configured securely. \n- The __NAT Gateways__ provide _Network Address Translation_ to enable instances in a private subnet to connect to the Internet or other AWS services but prevent the Internet from initiating a connection with those instances.\n- __Bastion hosts__ are required for administrative access to your AWS instances through the Internet. Including bastion hosts in your VPC environment enables you to securely connect to your AWS instances without exposing your environment to the Internet. After you set up your bastion hosts, you can access the other instances in your VPC through Secure Shell (SSH) connections. Bastion hosts need to be configured with security groups to provide fine-grained ingress control.\n- __CloudTrail__, __CloudWatch__ and __AWS Config__ are different AWS services that are considered in the above architecture. If they get configured appropriately, they can extensively improve the security posture of your application.",
    "weakness_title_read_only": "Lack of Security Architecture",
    "weakness_id_read_only": "P942",
    "weakness": "f60abdcc-20f7-4dbc-ad2a-e64c98cdd374",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "deployment",
    "created": "2017-11-18T16:08:17.720000-05:00",
    "last_updated": "2023-06-23T15:27:19.493000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T897",
    "universal_id": "16dbc39d-e4f8-41a0-b881-c63d800aff36",
    "countermeasure_name": "Test if the unmanaged code is used securely",
    "countermeasure_solution": "Perform the following two steps:\n\n1. Make sure the unmanaged API prevent the callers from performing dangerous functions. For example, if the API exposes protected information, uses files, interfaces, or threading then the managed code wrapping must require the necessary permissions before entering the unmanaged code. This test fails if The unmanaged code exposes dangerous functions (API) and managed code does not prevent the caller from accessing those functions.\n\n2. The unmanaged code must not consume parameters with untrusted sources. This can be exploited to launch buffer overflow attacks. The underlying managed wrapper must also perform the parameter validation to ensure no unintended calls can be performed. Again, if the unmanaged code consumes parameters from untrusted sources and the managed wrapper does not perform parameter validation then this test fails.\n\nFor more information see the [**secure coding guidelines for unmanaged code**](https://docs.microsoft.com/en-us/dotnet/framework/security/secure-coding-guidelines-for-unmanaged-code) by Microsoft.",
    "weakness_title_read_only": "Direct Use of Unsafe Unmanaged Code",
    "weakness_id_read_only": "P730",
    "weakness": "d320a266-07f8-4d63-9bfa-31db424fef25",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2017-11-19T21:59:35.038000-05:00",
    "last_updated": "2021-06-25T14:47:57.348000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T898",
    "universal_id": "d214168e-fc4b-4b44-9246-4f7b27654dfe",
    "countermeasure_name": "Create bastion hosts for administrative access to the resources (AWS)",
    "countermeasure_solution": "Create bastion hosts for your AWS infrastructure:\n\n- The bastion hosts provide secure access to other AWS instances located in the private and public subnets of your VPC.\n- The bastion hosts should be deployed into the public subnets to provide administrative access to the environment through the Internet.\n- Deploy at least two bastion hosts in different Availability Zones to provide redundancy and high availability for your administrative access environment.",
    "weakness_title_read_only": "Improper Access Control (Authorization)",
    "weakness_id_read_only": "P182",
    "weakness": "e488cdc5-3c91-4d2b-bcec-5c651b000d8b",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "deployment",
    "created": "2017-11-20T02:32:01.647000-05:00",
    "last_updated": "2021-06-25T14:47:53.209000-04:00",
    "custom": "False",
    "rules": "a5bb6d04-111c-4fd1-ab43-b8aed799e105 AND cab80cea-1a20-433f-b78c-783b816b8d33 AND 7b826030-0888-4b55-8d37-9ef5725ed59c;a5bb6d04-111c-4fd1-ab43-b8aed799e105 AND c942552c-0d31-41c5-bba7-795ba0e8d88d AND 7b826030-0888-4b55-8d37-9ef5725ed59c",
    "rules_read_only": "A1159 AND A739 AND A1177;A1159 AND A736 AND A1177"
  },
  {
    "countermeasure_id": "T899",
    "universal_id": "fce51c7c-2e06-4acf-aee7-97234138527e",
    "countermeasure_name": "Test that bastion hosts are created for administrative access to the resources (AWS)",
    "countermeasure_solution": "Perform the following:\n\n- Test that bastion hosts are created for your AWS infrastructure.\n- Test that bastion hosts are accessible through SSH from the Internet.\n- Verify that there are at least two bastion hosts in different Availability Zones.\n- Test that you can access other AWS instances in the public or private subnets through the bastion hosts.\n- Verify that no unnecessary services other than SSH are running on the bastion hosts.",
    "weakness_title_read_only": "Improper Access Control (Authorization)",
    "weakness_id_read_only": "P182",
    "weakness": "e488cdc5-3c91-4d2b-bcec-5c651b000d8b",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2017-11-20T03:03:34.871000-05:00",
    "last_updated": "2021-06-25T14:47:52.679000-04:00",
    "custom": "False",
    "rules": "a5bb6d04-111c-4fd1-ab43-b8aed799e105 AND c942552c-0d31-41c5-bba7-795ba0e8d88d AND 7b826030-0888-4b55-8d37-9ef5725ed59c;a5bb6d04-111c-4fd1-ab43-b8aed799e105 AND cab80cea-1a20-433f-b78c-783b816b8d33 AND 7b826030-0888-4b55-8d37-9ef5725ed59c",
    "rules_read_only": "A1159 AND A736 AND A1177;A1159 AND A739 AND A1177"
  },
  {
    "countermeasure_id": "T900",
    "universal_id": "20780648-3e70-44ca-8387-181615f23375",
    "countermeasure_name": "Seek user consent before updating your application or installing other software in the background",
    "countermeasure_solution": "Use the following guidelines for seeking express consent under Canada's Anti-Spam Legislation (CASL):\n\n- Ask for express consent before updating your application or installing other software in the background in the course of commercial activity. Specify the following in a form that requests consent:\n\n    1. Reason for seeking consent.\n    2. Name of the company.\n    3. Mailing address of the company and one other piece of contact information (such as telephone number, email address, or webpage).\n    4. A statement indicating that the person whose consent is sought can withdraw their consent.\n    5. A description of the functions and purpose of the computer program to be installed. Additional information about the purpose and impact of the software must be provided for features that collect personal information or perform actions that affect the device or communicate with other devices without the user's knowledge or authorization. This information must be provided separately from the user and license agreements.\n        - For more information, see paragraphs 28 and 29 of the [Compliance and Enforcement Information Bulletin CRTC 2012-548](https://www.crtc.gc.ca/eng/archive/2012/2012-548.htm).\n\n- In many cases, you do not need consent, such as for self-installed software or when acting in accordance with a court order, or using Javascript, HTML, and cookies (although there are other regulations that require cookie consent). For a list of each type of software that does not require consent, see parts 1 and 2 of [Canada's Anti-Spam Legislation Requirements for Installing Computer Programs](http://crtc.gc.ca/eng/internet/install.htm).\n\n- Allow consent withdrawal and provide features to uninstall the software. Only in rare cases would you need to provide assistance for uninstalling the software. If a user withdraws consent, you can no longer perform background updates.\n\n- Ask for consent if you are updating an application or library on a user's machine. You can seek consent for all future updates.\n\n- Store and track express user consent for installing/upgrading software. It is the responsibility of the person who seeks consent to keep a record of it.\n\n##Resources \n\n- [Canada's Anti-Spam Legislation](http://laws-lois.justice.gc.ca/eng/acts/E-1.6/index.html)\n- Overview of [Canada's Anti-Spam Legislation and Regulations](http://fightspam.gc.ca/eic/site/030.nsf/eng/00285.html)\n- [Express consent versus implied consent](https://www.crtc.gc.ca/pubs/CASL_Infograph3_Eng.pdf)",
    "weakness_title_read_only": "Insufficient User Consent",
    "weakness_id_read_only": "P943",
    "weakness": "a22c3b47-ce49-4ade-ba7b-8f117e913c61",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "requirements",
    "created": "2018-01-04T01:18:34.317000-05:00",
    "last_updated": "2021-06-25T14:48:00.701000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T901",
    "universal_id": "962b215a-5b96-44b6-84c2-0208654aa218",
    "countermeasure_name": "Verify that you follow CASL requirements about seeking user consent",
    "countermeasure_solution": "Use the following guidelines for ensuring that you follow Canadian Anti-Spam Legislation (CASL) requirements for seeking user consent before installing and upgrading software and libraries.\n\n- Verify that you request express consent for updating your application or installing other software in the background.\n    - See [Express consent versus implied consent](https://www.crtc.gc.ca/pubs/CASL_Infograph3_Eng.pdf).\n\n- Verify that you identify yourself, your purpose, and the purpose of your software:\n    - Provide your name or company name, and contact information.\n    - Provide an explanation of your purpose.\n    - Provide a description of the purpose of your software.\n        - Some software may require additional information that is separate from license agreements. For more information, see paragraphs 28 and 29 of this [bulletin from the CRTC](https://www.crtc.gc.ca/eng/archive/2012/2012-548.htm).\n\n- Verify that the person you are seeking consent from is informed that they can withdraw consent at any time.\n\n- Verify that you include features to uninstall your software.\n\n- Verify that you store and track express user consent for installing/upgrading software for all of your users.\n\n##Resources \n\n- [Canada's Anti-Spam Legislation](http://laws-lois.justice.gc.ca/eng/acts/E-1.6/index.html)\n- [Canada's Anti-Spam Legislation Requirements for Installing Computer Programs](http://crtc.gc.ca/eng/internet/install.htm)\n- Overview of [Canada's Anti-Spam Legislation and Regulations](http://fightspam.gc.ca/eic/site/030.nsf/eng/00285.html)",
    "weakness_title_read_only": "Insufficient User Consent",
    "weakness_id_read_only": "P943",
    "weakness": "a22c3b47-ce49-4ade-ba7b-8f117e913c61",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2018-01-04T01:34:33.783000-05:00",
    "last_updated": "2021-06-25T14:48:00.117000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T902",
    "universal_id": "6640c105-0b73-4688-83f8-86530b0d10a1",
    "countermeasure_name": "Put web content on a non-system partition (Microsoft IIS)",
    "countermeasure_solution": "Map all Virtual Directories to a non-system disk volume. Web resources published through IIS are mapped, via Virtual Directories, to physical locations on disk.",
    "weakness_title_read_only": "Web content on the system partition (Microsoft IIS)",
    "weakness_id_read_only": "P944",
    "weakness": "cb1f9cf7-139a-4200-8380-343de5ef24f5",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2018-01-05T21:29:21.006000-05:00",
    "last_updated": "2021-06-25T14:47:50.588000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T903",
    "universal_id": "7530e3ba-315d-4862-9886-947dc49f48dc",
    "countermeasure_name": "Require 'host headers' on all sites (Microsoft IIS)",
    "countermeasure_solution": "Configure host headers for all sites. Host headers provide the ability to host multiple websites on the same IP address and port. Wildcard host headers are now supported.",
    "weakness_title_read_only": "Not requiring 'host headers' for a site (Microsoft IIS)",
    "weakness_id_read_only": "P945",
    "weakness": "63f5b557-d4d5-41be-a514-a8096c8cf4e9",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "deployment",
    "created": "2018-01-05T21:29:21.088000-05:00",
    "last_updated": "2021-06-25T14:47:42.494000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T904",
    "universal_id": "89991361-938a-411d-b6f0-433ba9b5ab34",
    "countermeasure_name": "Disable 'directory browsing' (Microsoft IIS)",
    "countermeasure_solution": "Disable directory browsing. Directory browsing allows the contents of a directory to be displayed upon request from a web client.\n\nIf directory browsing is enabled for a directory in Internet Information Services, users receive a page that lists the contents of the directory when the following two conditions are met:\n\n1. No specific file is requested in the URL.\n2. The Default Documents feature is disabled in IIS, or if it is enabled, IIS is unable to locate a file in the directory that matches a name specified in the IIS default document list.",
    "weakness_title_read_only": "Directory Browsing (Microsoft IIS)",
    "weakness_id_read_only": "P946",
    "weakness": "b11d8e32-724d-4f10-ac34-51330f0dcfe4",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2018-01-05T21:29:21.121000-05:00",
    "last_updated": "2021-06-25T14:47:55.446000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T905",
    "universal_id": "60e45bfd-6265-4865-ad22-487f35c54edc",
    "countermeasure_name": "Configure application pools securely (Microsoft IIS)",
    "countermeasure_solution": "Perform the following steps:\n\n- Set 'identity' of all application pools to `ApplicationPoolIdentity`:\n\n    Application Pool Identities are the actual users/authorities that will run the worker process - `w3wp.exe`. Assigning the correct user authority will help ensure that applications can function properly, while not giving overly permissive permissions on the system. These identities can further be used in ACLs to protect system content. It is recommended that each Application Pool runs under a unique identity.\n\n    A new security feature was introduced in Windows Server 2008 SP2 that allows Application Pools to be run under unique accounts without the need to create and manage local or domain accounts. If the Application Pool Identity is set to `ApplicationPoolIdentity`,  The IIS Admin Process (WAS) will create a virtual account with the name of the new application pool and run the application pool's worker processes under this account by default.\n\n    It is recommended that Application Pools be set to run as `ApplicationPoolIdentity` unless there is an underlying reason that the application pool needs to run as a specified end user account. One example where this is needed is for web farms using Kerberos authentication.\n\n- Set 'unique application pools' for all sites:\n\n    It is recommended that all sites run under unique, dedicated Application Pools.\n\n- Set 'application pool identity' as anonymous user identity:\n\n    To achieve isolation in IIS 7 and above, application pools can be run as separate identities. IIS can be configured to automatically use the application pool identity if no anonymous user account is configured for a Web site. This can greatly reduce the number of accounts needed for Web sites and make management of the accounts easier. It is recommended the Application Pool Identity be set as the Anonymous User Identity.",
    "weakness_title_read_only": "Insecure Application Pools (Microsoft IIS)",
    "weakness_id_read_only": "P947",
    "weakness": "338d0b23-e7df-4d11-8c44-d2c9dd37574d",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2018-01-05T21:29:21.152000-05:00",
    "last_updated": "2021-06-25T14:47:47.524000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T906",
    "universal_id": "b1d1f3fe-b04b-4600-aa77-64df7c1568f9",
    "countermeasure_name": "Set 'global authorization rule' to restrict access (Microsoft IIS)",
    "countermeasure_solution": "Configure URL Authorization to only grant access to the necessary security principals.\n\nIIS introduced URL Authorization, which allows the addition of Authorization rules to the actual URL, instead of the underlying file system resource, as a way to protect it. Authorization rules can be configured on the server, website, folder (including Virtual Directories), or file level. The native URL Authorization module applies to all requests, whether they are .NET managed or other types of files (e.g. static files or ASP files).\n\nConfiguring a global Authorization rule that restricts access will ensure inheritance of the settings down through the hierarchy of web directories; if that content is copied elsewhere, the authorization rules flow with it. This will ensure access to current and future content is only granted to the appropriate principals, mitigating the risk of accidental or unauthorized access.",
    "weakness_title_read_only": "Improper Access Control (Authorization)",
    "weakness_id_read_only": "P182",
    "weakness": "e488cdc5-3c91-4d2b-bcec-5c651b000d8b",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2018-01-05T21:29:21.207000-05:00",
    "last_updated": "2021-06-25T14:47:48.405000-04:00",
    "custom": "False",
    "rules": "83ee2a62-4bc5-460e-87f1-90fe128e4f51",
    "rules_read_only": "A75"
  },
  {
    "countermeasure_id": "T907",
    "universal_id": "3a1b341a-2ca6-47df-bd5d-1e42fe63b190",
    "countermeasure_name": "Restrict access to sensitive site features to authenticated principals only (Microsoft IIS)",
    "countermeasure_solution": "Configure sites containing sensitive information, confidential data, or non-public web services with a credentials-based authentication mechanism.\n\nIIS supports both challenge-based and login redirection-based authentication methods. Challenge-based authentication methods, such as Integrated Windows Authentication, require a client to respond correctly to a server-initiated challenge. A login redirection-based authentication method such as Forms Authentication relies on redirection to a login page to determine the identity of the principal. Challenge-based authentication and login redirection-based authentication methods cannot be used in conjunction with one another.\n\nPublic servers/sites are typically configured to use Anonymous Authentication. This method typically works, provided the content or services is intended for use by the public. When sites, applications, or specific content containers are not intended for anonymous public use, an appropriate authentication mechanism should be utilized. Authentication will help confirm the identity of clients who request access to sites, application, and content. IIS provides the following authentication modules by default:\n\n- **Anonymous Authentication** - allows anonymous users to access sites, applications, and/or content.\n- **Integrated Windows Authentication** - authenticates users using the NTLM or Kerberos protocols; Kerberos v5 requires a connection to Active Directory.\n- **ASP.NET Impersonation **- allows ASP.NET applications to run under a security context different from the default security context for an application.\n- **Forms Authentication** - enables a user to login to the configured space with a valid username and password which is then validated against a database or other credentials store.\n- **Basic authentication** - requires a valid username and password to access content.\n- **Client Certificate Mapping Authentication** - allows automatic authentication of users who log on with client certificates that have been configured; requires SSL.\n- **Digest Authentication** - uses Windows domain controller to authenticate users who request access.\n\nNote that none of the challenge-based authentication modules can be used at the same time Forms Authentication is enabled for certain applications/content. Forms Authentication does not rely on IIS authentication, so anonymous access for the ASP.NET application can be configured if Forms Authentication will be used.\n\nConfiguring authentication will help mitigate the risk of unauthorized users accessing data and/or services, and in some cases reduce the potential harm that can be done to a system.",
    "weakness_title_read_only": "Improper Access Control (Authorization)",
    "weakness_id_read_only": "P182",
    "weakness": "e488cdc5-3c91-4d2b-bcec-5c651b000d8b",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2018-01-05T21:29:21.238000-05:00",
    "last_updated": "2021-06-25T14:47:49.407000-04:00",
    "custom": "False",
    "rules": "83ee2a62-4bc5-460e-87f1-90fe128e4f51",
    "rules_read_only": "A75"
  },
  {
    "countermeasure_id": "T908",
    "universal_id": "330ab8f6-af4e-4f13-ba4b-04d66ce3a4d1",
    "countermeasure_name": "Require SSL/TLS for 'forms authentication' (Microsoft IIS)",
    "countermeasure_solution": "Encrypt communications with any portion of a site using Forms Authentication using SSL/TLS. Forms-based authentication can pass credentials across the network in clear text. It is therefore imperative that the traffic between client and server be encrypted using SSL/TLS, especially in cases where the site is publicly accessible.\n\nRequiring SSL/TLS for Forms Authentication will protect the confidentiality of credentials during the login process, helping mitigate the risk of stolen user information.",
    "weakness_title_read_only": "Clear Text and Unencrypted Transmission of Information",
    "weakness_id_read_only": "P216",
    "weakness": "b1d166d6-8ca7-415f-9cd9-8c2d745d3d01",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2018-01-05T21:29:21.269000-05:00",
    "last_updated": "2021-06-25T14:47:37.259000-04:00",
    "custom": "False",
    "rules": "83ee2a62-4bc5-460e-87f1-90fe128e4f51 AND cab80cea-1a20-433f-b78c-783b816b8d33",
    "rules_read_only": "A75 AND A739"
  },
  {
    "countermeasure_id": "T909",
    "universal_id": "a5cf0272-9c62-430c-8bb5-44dffec8013d",
    "countermeasure_name": "Configure 'cookie protection mode' for forms authentication (Microsoft IIS)",
    "countermeasure_solution": "Ensure 'cookie protection mode' is always set to encrypt and validate Forms Authentication cookies. The cookie protection mode defines the protection that Forms Authentication cookies will be given within a configured application. The four cookie protection modes that can be defined are:\n\n- **Encryption and validation** - Specifies that the application uses both data validation and encryption to help protect the cookie; this option uses the configured data validation algorithm (based on the machine key) and triple-DES (3DES) for encryption, if available and if the key is long enough (48 bytes or more).\n- **None** - Specifies that both encryption and validation are disabled for sites that are using cookies only for personalization and have weaker security requirements.\n- **Encryption** - Specifies that the cookie is encrypted by using Triple-DES or DES, but data validation is not performed on the cookie; cookies used in this manner might be subject to plaintext attacks.\n- **Validation** - Specifies that a validation scheme verifies that the contents of an encrypted cookie have not been changed in transit.",
    "weakness_title_read_only": "Unprotected cookies for form authentication (Microsoft IIS)",
    "weakness_id_read_only": "P951",
    "weakness": "a5581147-7993-4c79-bc19-2f31d36ced60",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2018-01-05T21:29:21.299000-05:00",
    "last_updated": "2021-06-25T14:47:38.910000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T910",
    "universal_id": "fc4189fc-0d12-41eb-a353-39892eb835f6",
    "countermeasure_name": "Configure transport layer security for 'basic authentication' (Microsoft IIS)",
    "countermeasure_solution": "Configure and require TLS for any Site or Application using Basic Authentication. Basic Authentication can pass credentials across the network in clear text. It is therefore imperative that the traffic between client and server be encrypted, especially in cases where the site is publicly accessible.\n\nCredentials sent in clear text can be easily intercepted by malicious code or persons. Enforcing the use of Transport Layer Security will help mitigate the chances of hijacked credentials.",
    "weakness_title_read_only": "Clear Text and Unencrypted Transmission of Information",
    "weakness_id_read_only": "P216",
    "weakness": "b1d166d6-8ca7-415f-9cd9-8c2d745d3d01",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2018-01-05T21:29:21.329000-05:00",
    "last_updated": "2021-06-25T14:47:36.618000-04:00",
    "custom": "False",
    "rules": "83ee2a62-4bc5-460e-87f1-90fe128e4f51 AND cab80cea-1a20-433f-b78c-783b816b8d33",
    "rules_read_only": "A75 AND A739"
  },
  {
    "countermeasure_id": "T911",
    "universal_id": "67848cc0-981f-4b89-a66f-871b38a89666",
    "countermeasure_name": "Ensure 'passwordFormat' is not set to clear (Microsoft IIS)",
    "countermeasure_solution": "Set `passwordFormat` to a value other than `Clear`, such as `SHA1`.\n\nThe `<credentials>` element of the `<authentication>` element allows optional definitions of name and password for IIS Manager User accounts within the configuration file. Forms-based authentication also uses these elements to define the users. IIS Manager Users can use the administration interface to connect to sites and applications in which they've been granted authorization. Note that the `<credentials>` element only applies when the default provider, `ConfigurationAuthenticationProvider`, is configured as the authentication provider.\n\nAuthentication credentials should always be protected to reduce the risk of stolen authentication credentials.",
    "weakness_title_read_only": "Use of hard-coded or insecurely stored passwords and secret keys",
    "weakness_id_read_only": "P218",
    "weakness": "f03301f2-2f5b-4ee6-bb51-581286168040",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2018-01-05T21:29:21.360000-05:00",
    "last_updated": "2021-06-25T14:47:44.162000-04:00",
    "custom": "False",
    "rules": "83ee2a62-4bc5-460e-87f1-90fe128e4f51",
    "rules_read_only": "A75"
  },
  {
    "countermeasure_id": "T912",
    "universal_id": "0a0fa69a-6ac4-4acb-b8bb-a20e41d36a0a",
    "countermeasure_name": "Ensure deployment method retail is set (Microsoft IIS)",
    "countermeasure_solution": "Ensure `<deployment retail>`  switch is set.\n\n###About deployment retail switch\nThe `<deployment retail>` switch is intended for use by production IIS servers. This switch is used to help applications run with the best possible performance and least possible security information leakages by disabling the application's ability to generate trace output on a page, disabling the ability to display detailed error messages to end users, and disabling the debug switch. Often times, switches and options that are developer-focused, such as failed request tracing and debugging, are enabled during active development. It is recommended that the deployment method on any production server be set to `retail`.",
    "weakness_title_read_only": "Deployment Method is not set to retail (Microsoft IIS)",
    "weakness_id_read_only": "P954",
    "weakness": "204fbc58-aff8-4092-b7d4-938de72c8049",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2018-01-05T21:29:21.389000-05:00",
    "last_updated": "2021-06-25T14:47:38.343000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T913",
    "universal_id": "aa2acd3b-96e5-4db7-886e-b44789d14ba2",
    "countermeasure_name": "Ensure HTTP detailed errors are hidden from displaying remotely (Microsoft IIS)",
    "countermeasure_solution": "Ensure IIS HTTP detailed errors are not displayed remotely. Custom errors must be prevented from displaying remotely. This setting can be modified in the `errorMode` attribute setting for a Web site's error pages. By default, the `errorMode` attribute is set in the `Web.config` file for the Web site or application and is located in the `<httpErrors>` element of the `<system.webServer>` section. \n\nA Web site's error pages are often set to show detailed error information for troubleshooting purposes during testing or initial deployment. To prevent unauthorized users from viewing this privileged information, detailed error pages must not be seen by remote users.",
    "weakness_title_read_only": "HTTP detailed errors are displayed remotely (Microsoft IIS)",
    "weakness_id_read_only": "P955",
    "weakness": "d8859225-14ee-4d6e-90f2-489e024c3492",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2018-01-05T21:29:21.420000-05:00",
    "last_updated": "2021-06-25T14:47:38.306000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T914",
    "universal_id": "0c631ae2-ce53-48c7-965b-0dd49b6f82df",
    "countermeasure_name": "Ensure cookies are set with HttpOnly attribute (Microsoft IIS)",
    "countermeasure_solution": "Set the `httpOnlyCookies` attribute to `true`.\nThe `httpOnlyCookies` attribute of the `httpCookies` node determines if IIS will set the `HttpOnly` flag on HTTP cookies it sets. The `HttpOnly` flag indicates to the user agent that the cookie must not be accessible by client-side script (i.e document.cookie).",
    "weakness_title_read_only": "Cookies are not set with HttpOnly attribute (Microsoft IIS)",
    "weakness_id_read_only": "P956",
    "weakness": "c16c5c6b-5b0e-4683-b073-119340f41c0c",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2018-01-05T21:29:21.450000-05:00",
    "last_updated": "2021-06-25T14:48:01.187000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T915",
    "universal_id": "7cc33ac3-4ae2-47fc-8abe-33862e13d807",
    "countermeasure_name": "Configure MachineKey validation securely (Microsoft IIS)",
    "countermeasure_solution": "Ensure 'MachineKey validation method is configured securely for .Net 4.5 and .Net 3.5 by using secure encryption and hash algorithms. In specific, do make sure that SHA-2 methods be configured for use at the global level in .Net 4.5. and SHA1 in .Net 3.5.\n\nThe following validation methods are available: \n\n- Advanced Encryption Standard (AES) is relatively easy to implement and requires little memory. AES has a key size of 128, 192, or 256 bits. This method uses the same private key to encrypt and decrypt data, whereas a public-key method must use a pair of keys \n- Message Digest 5 (MD5) is used for digital signing of applications. This method produces a 128-bit message digest, which is a compressed form of the original data \n- Secure Hash Algorithm (SHA1) is considered more secure than MD5 because it produces a 160-bit message digest \n- Triple Data Encryption Standard (TripleDES) is a minor variation of Data Encryption Standard (DES). It is three times slower than regular DES but can be more secure because it has a key size of 192 bits. If performance is not a primary consideration, consider using TripleDES \n- Secure Hash Algorithm (SHA-2) is a family of two similar hash functions, with different block sizes known as SHA-256 and SHA-512. They differ in the word size; SHAS-256 used 32-bit words and SHA-512 uses 64-bit words.",
    "weakness_title_read_only": "Insecure Configuration of MachineKey validation (Microsoft IIS)",
    "weakness_id_read_only": "P957",
    "weakness": "56289c89-9970-4315-9645-74011231ec99",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2018-01-05T21:29:21.482000-05:00",
    "last_updated": "2021-06-25T14:47:37.595000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T916",
    "universal_id": "6beac45a-2cce-4562-b541-0afb7b55fc8a",
    "countermeasure_name": "Ensure global .NET trust level is configured securely (Microsoft IIS)",
    "countermeasure_solution": "Employ the principle of the least privilege by securely configuring the global .NET trust level in .Net 2.0.  This can be done in the Level property of TrustSection class. The possible values for the Level property of the TrustSection class are: \n\n- Full: Specifies unrestricted permissions and grants the ASP.NET application permissions to access any resource that is subject to operating system security; all privileged operations are supported \n- High: specifies a high level of code access security which limits the application from doing the following: \n    - Call unmanaged code \n    - Call serviced components \n    - Write to the event log \n    - Access Microsoft Windows Message Queuing queues \n    - Access ODBC, OLE DB, or Oracle data sources \n- Medium: specifies a medium level of code access security, which means that in addition to the restrictions for High, the ASP.NET application cannot do any of the following things: \n    - Access files outside the application directory \n    - Access the registry \n- Low: specifies a low level of code access security, which means that in addition to the restrictions for Medium, the application is prevented from performing any of the following actions: \n   - Write to the file system \n   - Call the `System.Security.CodeAccessPermission.Assert` method to expand permissions to resources \n- Minimal: specifies a minimal level of code access security, which means that the application has only execute permission It is recommended that the global .NET Trust Level be set to Medium or lower.",
    "weakness_title_read_only": "Global .NET trust level is not configured securely (Microsoft IIS)",
    "weakness_id_read_only": "P958",
    "weakness": "aaafe5af-e911-40a8-8e7a-bf958e6b245c",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2018-01-05T21:29:21.513000-05:00",
    "last_updated": "2021-06-25T14:47:51.805000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T917",
    "universal_id": "594421be-dbe9-49eb-a48d-2e47699f8756",
    "countermeasure_name": "Reject double-encoded requests (Microsoft IIS)",
    "countermeasure_solution": "Reject double-encoded requests.\n\nThis Request Filter feature prevents attacks that rely on double-encoded requests and applies if an attacker submits a double-encoded request to IIS. When the double-encoded requests filter is enabled, IIS will go through a two iteration process of normalizing the request. If the first normalization differs from the second, the request is rejected and the error code is logged as a 404.11. The double-encoded requests filter was the `VerifyNormalization` option in UrlScan.",
    "weakness_title_read_only": "Double-encoded Requests (Microsoft IIS)",
    "weakness_id_read_only": "P959",
    "weakness": "0d77c97e-d70b-435f-8eef-644d1f450142",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "deployment",
    "created": "2018-01-05T21:29:21.544000-05:00",
    "last_updated": "2021-06-25T14:47:54.192000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T918",
    "universal_id": "f9ba8e8b-ef71-4ce3-b44f-2db29a01d6b1",
    "countermeasure_name": "Disable 'HTTP Trace Method' (Microsoft IIS)",
    "countermeasure_solution": "Reject HTTP TRACE method. The HTTP TRACE method returns the contents of client HTTP requests in the entity-body of the TRACE response. Attackers could leverage this behavior to access sensitive information, such as authentication data or cookies, contained in the HTTP headers of the request. One such way to mitigate this is by using the `<verbs>` element of the `<requestFiltering>` collection. The `<verbs>` element replaces the [AllowVerbs] and [DenyVerbs] features in UrlScan.\n\nAttackers may abuse HTTP TRACE functionality to gain access to information in HTTP headers such as cookies and authentication data. This risk can be mitigated by not allowing the TRACE verb.",
    "weakness_title_read_only": "HTTP Verb Tampering",
    "weakness_id_read_only": "P700",
    "weakness": "abef344f-a439-4d09-88c9-31f33980a3fb",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2018-01-05T21:29:21.578000-05:00",
    "last_updated": "2021-06-25T14:47:55.974000-04:00",
    "custom": "False",
    "rules": "83ee2a62-4bc5-460e-87f1-90fe128e4f51",
    "rules_read_only": "A75"
  },
  {
    "countermeasure_id": "T919",
    "universal_id": "59093b59-7474-416d-a0af-537ff45701a6",
    "countermeasure_name": "Do not allow unlisted file extensions (Microsoft IIS)",
    "countermeasure_solution": "Disallow all extensions at the most global level possible, with only those necessary being allowed.\n\nThe `FileExtensions` Request Filter allows administrators to define specific extensions their web server(s) will allow and disallow. The property `allowUnlisted` will cover all other file extensions not explicitly allowed or denied. Often times, extensions such as `.config`, `.bat`, `.exe`, to name a few should never be served. The `AllowExtensions` and `DenyExtensions` options are the UrlScan equivalents.",
    "weakness_title_read_only": "Unlisted file extensions (Microsoft IIS)",
    "weakness_id_read_only": "P961",
    "weakness": "7be71f3b-afdb-4460-93d4-5d29fa71a273",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2018-01-05T21:29:21.629000-05:00",
    "last_updated": "2021-06-25T14:47:47.604000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T920",
    "universal_id": "b70a9135-f5ae-42ce-94af-35421359f58a",
    "countermeasure_name": "Ensure handlers are not granted Write and Script/Execute permissions at the same time (Microsoft IIS)",
    "countermeasure_solution": "Grant a handler either `Execute`/`Script` or `Write` permissions, but not both.\n\nHandler mappings can be configured to give permissions to `Read`, `Write`, `Script`, or `Execute` depending on what the use is for - reading static content, uploading files, executing scripts, etc.",
    "weakness_title_read_only": "Granting Write and Script/Execute permissions at the same time to handlers (Microsoft IIS)",
    "weakness_id_read_only": "P962",
    "weakness": "dc984bc3-8b52-44b9-bb70-a11ccacc41b2",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2018-01-05T21:29:21.658000-05:00",
    "last_updated": "2021-06-25T14:47:51.761000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T921",
    "universal_id": "9cdc9af9-0e5f-467d-9c6a-b48cd2b1b866",
    "countermeasure_name": "Restrict unlisted extensions from being run (Microsoft IIS)",
    "countermeasure_solution": " - Set 'notListedIsapisAllowed' to false:\n- Set 'notListedCgisAllowed' to false:\n\nThe `notListedIsapisAllowed` and `notListedCgisAllowed` attributes are server-level settings that are located in the `ApplicationHost.config` file in the `<isapiCgiRestriction>` element of the `<system.webServer>` section under `<security>`. These elements ensure that malicious users cannot copy unauthorized ISAPI and CGI binaries to the Web server and then run them.",
    "weakness_title_read_only": "Running unlisted extensions (Microsoft IIS)",
    "weakness_id_read_only": "P963",
    "weakness": "6fe4e517-a9e7-4c3a-9ca1-1c25b58a8525",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2018-01-05T21:29:21.686000-05:00",
    "last_updated": "2021-06-25T14:47:56.417000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T922",
    "universal_id": "c089feb9-ccca-4b7e-bef0-7557554a8e5d",
    "countermeasure_name": "Enable 'Dynamic IP Address Restrictions' (Microsoft IIS)",
    "countermeasure_solution": "Enable 'Dynamic IP Address Restrictions' for IIS. This capability can be used to thwart DDoS attacks. This is complementary to the IP Addresses and Domain names Restrictions lists that can be manually maintained within IIS. In contrast, Dynamic IP address filtering allows administrators to configure the server to block access for IPs that exceed the specified request threshold. The default action Deny action for restrictions is to return a Forbidden response to the client.",
    "weakness_title_read_only": "Uncontrolled Resource Consumption (Resource Exhaustion)",
    "weakness_id_read_only": "P293",
    "weakness": "1bee9747-5d60-43f1-8e0f-e261388a5c25",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2018-01-05T21:29:21.714000-05:00",
    "last_updated": "2021-06-25T14:47:41.048000-04:00",
    "custom": "False",
    "rules": "83ee2a62-4bc5-460e-87f1-90fe128e4f51 AND cab80cea-1a20-433f-b78c-783b816b8d33",
    "rules_read_only": "A75 AND A739"
  },
  {
    "countermeasure_id": "T923",
    "universal_id": "cf355123-f171-42e3-ae10-2ef2ad05abd9",
    "countermeasure_name": "Configure logging securely on Microsoft IIS (Microsoft IIS)",
    "countermeasure_solution": "Perform the following best practices with respect to IIS logging:\n\n- Ensure Advanced IIS logging is enabled\n- Ensure *ETW Logging* is enabled:\n- Ensure Default IIS web log location is moved\n\n###Enabling Advanced IIS logging\nIIS Advanced Logging is a module which provides flexibility in logging requests and client data. It provides controls that allow businesses to specify what fields are important, easily add additional fields, and provide policies pertaining to log file rollover and Request Filtering. HTTP request/response headers, server variables, and client-side fields can be easily logged with minor configuration in the IIS management console. It is recommended that Advanced Logging be enabled, and the fields which could be of value to the type of business or application in the event of a security incident, be identified and logged.\n\n###Enabling ETW Logging\nIIS introduces a new logging method. Administrators can now send logging information to Event Tracing for Windows (ETW)\n\n###Moving IIS Web Log Location\nIIS will log relatively detailed information on every request. These logs are usually the first item looked at in a security response, and can be the most valuable. Malicious users are aware of this, and will often try to remove evidence of their activities. It is therefore recommended that the default location for IIS log files be changed to a restricted, non-system drive.",
    "weakness_title_read_only": "Misconfiguring logging (Microsoft IIS)",
    "weakness_id_read_only": "P965",
    "weakness": "9c6dcd4f-4d18-4afd-9cb4-cfb4ecb12b4d",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2018-01-05T21:29:21.741000-05:00",
    "last_updated": "2021-06-25T14:47:57.948000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T924",
    "universal_id": "92081463-8bc7-4968-87a6-3f133fe19ad2",
    "countermeasure_name": "Configure FTP securely (Microsoft IIS)",
    "countermeasure_solution": "Please perform the following best practices to secure the FTP service on IIS:\n\n- Ensure FTP requests are encrypted\n- Ensure FTP Logon attempt restrictions is enabled\n###Enabling Encryption in FTP\nThe new FTP Publishing Service for IIS supports adding an SSL certificate to an FTP site. Using an SSL certificate with an FTP site is also known as FTP-S or FTP over Secure Socket Layers (SSL). FTP-S is an RFC standard (RFC 4217) where an SSL certificate is added to an FTP site and thereby making it possible to perform secure file transfers.\n###Enabling Logon Attempt Restriction\nIIS introduced a built-in network security feature to automatically block brute force FTP attacks. This can be used to mitigate a malicious client from attempting a brute-force attack on a discovered account, such as the local administrator account.",
    "weakness_title_read_only": "Misconfiguring FTP (Microsoft IIS)",
    "weakness_id_read_only": "P966",
    "weakness": "582407da-a0cd-4cee-a531-3c1e497fc108",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2018-01-05T21:29:21.770000-05:00",
    "last_updated": "2021-06-25T14:47:37.091000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T925",
    "universal_id": "7ab820e3-7a3c-4608-9366-2d70b0e81f91",
    "countermeasure_name": "Configure TLS/SSL securely for Microsoft IIS (Microsoft IIS)",
    "countermeasure_solution": "Follow these instructions to enable TLS/SSL securely:\n\n## Configurations related to SSL/TLS and their versions\n- Ensure SSLv2, SSLv3 are disabled:\n These protocols are not considered cryptographically secure. Disabling them is recommended. These protocols are disabled by default if the registry key is not present. A reboot is required for these changes to be reflected.\n- Ensure TLS 1.0 and TLS 1.1 are disabled:\n The PCI Data Security Standard 3.1 recommends disabling \"early TLS\" along with SSL: \"SSL and early TLS are not considered strong cryptography and cannot be used as a security control after June 30, 2016.\"\n- Ensure TLS 1.2 is enabled:\n TLS 1.2 is a mature protocol for protecting the confidentiality and integrity of HTTP traffic. As with any registry changes, a reboot is required for changes to take effect.\n\n## Configurations related to Cipher Suites\n- Ensure NULL Cipher Suites is disabled:\n The NULL cipher does not provide data confidentiality or integrity. It is recommended that the NULL cipher be disabled.\n- Ensure DES Cipher Suites is disabled:\n DES is a weak symmetric-key cipher. It is recommended that it be disabled.\n- Ensure RC4 Cipher Suites is disabled:\n RC4 is a stream cipher that has known practical attacks. It is recommended that RC4 be disabled. The only RC4 cipher enabled by default on Server 2012 and 2012 R2 is RC4 128/128.\n- Ensure Triple DES Cipher Suite is Disabled:\n Triple DES Cipher Suites is now considered a weak cipher and is not recommended for use.\n- Ensure AES 128/128 Cipher Suite is configured:\n Enabling AES 128/128 may be required for client compatibility. Enable or disable this cipher suite accordingly.\n- Ensure AES 256/256 Cipher Suite is enabled:\n AES 256/256 is a mature cipher suite for protecting the confidentiality and integrity of HTTP traffic. Enabling AES 256/256 is recommended. This is enabled by default on Server 2012 and 2012 R2.\n- Ensure TLS Cipher Suite ordering is configured:\n Cipher suites are a named combination of authentication, encryption, message authentication code, and key exchange algorithms used for the security settings of a network connection using TLS protocol. Clients send a cipher list and a list of ciphers that it supports in order of preference to a server. The server then replies with the cipher suite that it selects from the client cipher suite list.",
    "weakness_title_read_only": "Misconfiguring TLS/SSL for Microsoft IIS (Microsoft IIS)",
    "weakness_id_read_only": "P967",
    "weakness": "9da6f313-2ea2-4f62-8f37-9c05fa7a3b42",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2018-01-05T21:29:21.797000-05:00",
    "last_updated": "2021-06-25T14:47:36.551000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T926",
    "universal_id": "ac5885a1-56e9-4d57-abc0-55c2eefc8b19",
    "countermeasure_name": "Use cookies for forms authentication (Microsoft IIS)",
    "countermeasure_solution": "Set 'forms authentication' to use cookies:\n\nForms Authentication can be configured to maintain the site visitor's session identifier in either a URI or cookie. Using cookies to manage session state may help mitigate the risk of session hi-jacking attempts by preventing ASP.NET from having to move session information to the URL. Moving session information identifiers into the URL may cause session IDs to show up in proxy logs, browsing history, and be accessible to client scripting via `document.location`.",
    "weakness_title_read_only": "Session IDs Leaked Through URLs",
    "weakness_id_read_only": "P702",
    "weakness": "cd501d25-92c3-4eb8-b4a2-468dc7402e83",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2018-01-05T21:29:21.825000-05:00",
    "last_updated": "2021-06-25T14:48:01.076000-04:00",
    "custom": "False",
    "rules": "83ee2a62-4bc5-460e-87f1-90fe128e4f51 AND ac5f73c4-566a-4e69-975a-c497b00c10ee",
    "rules_read_only": "A75 AND A1161"
  },
  {
    "countermeasure_id": "T927",
    "universal_id": "e8eb24e5-0fa0-4370-a61d-85faa59e0015",
    "countermeasure_name": "Do not store 'credentials' in configuration files (Microsoft IIS)",
    "countermeasure_solution": "Avoid storing passwords in the configuration file even in form of a hash. The `<credentials>` element of the `<authentication>` element allows optional definitions of name and password for IIS Manager User accounts within the configuration file. Forms-based authentication also uses these elements to define the users. IIS Manager Users can use the administration interface to connect to sites and applications in which they've been granted authorization. Note that the `<credentials>` element only applies when the default provider, `ConfigurationAuthenticationProvider`, is configured as the authentication provider. \n\nAuthentication credentials should always be protected to reduce the risk of stolen authentication credentials. For security reasons, it is recommended that user credentials not be stored in any IIS configuration files.",
    "weakness_title_read_only": "Use of hard-coded or insecurely stored passwords and secret keys",
    "weakness_id_read_only": "P218",
    "weakness": "f03301f2-2f5b-4ee6-bb51-581286168040",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2018-01-05T21:29:21.852000-05:00",
    "last_updated": "2021-06-25T14:47:44.299000-04:00",
    "custom": "False",
    "rules": "83ee2a62-4bc5-460e-87f1-90fe128e4f51 AND ac5f73c4-566a-4e69-975a-c497b00c10ee",
    "rules_read_only": "A75 AND A1161"
  },
  {
    "countermeasure_id": "T928",
    "universal_id": "fde07096-8ef4-4802-8d9a-327bcb7e5a67",
    "countermeasure_name": "Ensure debug is turned off (Microsoft IIS)",
    "countermeasure_solution": "Make sure the debug is turned off in Microsoft IIS.\n\nDevelopers often enable the debug mode during active ASP.NET development so that they do not have to continually clear the cache of their browsers every time they make a change to a resource handler. This being left \"on\" or set to \"true\" can cause weaknesses. Compilation debug output is displayed to the end user, allowing malicious persons to obtain detailed information about applications. This is a defense in depth recommendation due to the `<deployment retail=\"true\" />` in the `machine.config` configuration file overriding any debug settings.",
    "weakness_title_read_only": "Debug is not turned off (Microsoft IIS)",
    "weakness_id_read_only": "P970",
    "weakness": "9b4609d7-00ef-44c6-b174-3648a92e284e",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2018-01-05T21:29:21.880000-05:00",
    "last_updated": "2022-08-31T07:57:44.303000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T929",
    "universal_id": "3ba56320-716f-46d4-89e9-670099fca439",
    "countermeasure_name": "Ensure custom error messages are not off (Microsoft IIS)",
    "countermeasure_solution": "Ensure that `customErrors` are turned to `On `or `RemoteOnly`.\nThis is a defense in depth recommendation due to the `<deployment retail=\"true\" />` in the `machine.config` file overriding any settings for `customErrors` to be turned `Off`. \n\n###More on customErrors\nWhen an ASP.NET application fails and causes an HTTP/1.x 500 Internal Server Error, or a feature configuration (such as Request Filtering) prevents a page from being displayed, an error message will be generated. Administrators can choose whether or not the application should display a friendly message to the client, detailed error message to the client, or detailed error message to localhost only. The `<customErrors>` tag in the `web.config` has three modes: \n\n- On: Specifies that custom errors are enabled. If no `defaultRedirect` attribute is specified, users see a generic error. The custom errors are shown to the remote clients and to the local host \n- Off: Specifies that custom errors are disabled. The detailed ASP.NET errors are shown to the remote clients and to the local host \n- RemoteOnly: Specifies that custom errors are shown only to the remote clients, and that ASP.NET errors are shown to the local host. This is the default value.",
    "weakness_title_read_only": "Custom error messages are off (Microsoft IIS)",
    "weakness_id_read_only": "P971",
    "weakness": "2a8c5ab1-d6f3-471e-96f5-af10c72a7da1",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2018-01-05T21:29:21.907000-05:00",
    "last_updated": "2021-06-25T14:47:38.626000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T930",
    "universal_id": "3a32c07a-3338-4157-ab88-c3b8a3b5cdf4",
    "countermeasure_name": "Ensure ASP.NET stack tracing is not enabled (Microsoft IIS)",
    "countermeasure_solution": "Turn off ASP.NET stack tracing.\n\n###More on Stack Traces\nThe `trace` element configures the ASP.NET code tracing service that controls how trace results are gathered, stored, and displayed. When tracing is enabled, each page request generates trace messages that can be appended to the page output or stored in an application trace log. This is a defense in depth recommendation due to the `<deployment retail=\"true\" />` in the `machine.config` file overriding any settings for ASP.NET stack tracing that are left on.",
    "weakness_title_read_only": "ASP.NET stack tracing is enabled (Microsoft IIS)",
    "weakness_id_read_only": "P972",
    "weakness": "88b068ac-4b0c-4f9a-ac60-19d6f2ffbd3f",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2018-01-05T21:29:21.935000-05:00",
    "last_updated": "2021-06-25T14:47:38.406000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T931",
    "universal_id": "443b56c8-cf51-4d16-bf42-f1d294c7c176",
    "countermeasure_name": "Ensure httpcookie mode is configured for session state (Microsoft IIS)",
    "countermeasure_solution": "Configure the session state to `UseCookies`.\n\n###More About Session Cookie\nA session cookie associates session information with client information for that session, which can be the duration of a user's connection to a site. The cookie is passed in a HTTP header together with all requests between the client and server. Session information can also be stored in the URL. However, storing session information in this manner has security implications that can open attack vectors such as session hijacking. An effective method used to prevent session hijacking attacks is to force web applications to use cookies to store the session token. This is accomplished by setting the `cookieless` attribute of the `sessionState` node to `UseCookies` or `False` which will in turn keep session state data out of URI.",
    "weakness_title_read_only": "Httpcookie mode is not securely configured for session state (Microsoft IIS)",
    "weakness_id_read_only": "P973",
    "weakness": "bc1c8d87-a579-4f7c-88e4-ac45eb49bf79",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2018-01-05T21:29:21.962000-05:00",
    "last_updated": "2021-06-25T14:48:00.893000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T933",
    "universal_id": "d5a5fd64-442d-48a8-9c6d-162831998af4",
    "countermeasure_name": "Configure request filters properly (Microsoft IIS)",
    "countermeasure_solution": "Perform the following steps:\n\n- Set 'maxAllowedContentLength' appropriately to restrict the overall size of requests to a maximum value appropriate for the server, site, or application:\n\n    The `maxAllowedContentLength` Request Filter is the maximum size of the HTTP request, measured in bytes, which can be sent from a client to the server. Configuring this value enables the total request size to be restricted to a configured value.\n\n- Set 'maxURL request filter' to put a limit on the length of URL:\n\n    The `maxURL` attribute of the `<requestLimits>` property is the maximum length (in Bytes) in which a requested URL can be (excluding query string) in order for IIS to accept. Configuring this Request Filter enables administrators to restrict the length of the requests that the server will accept.\n\n- Set 'MaxQueryString request filter' to limit the amount of data that will be accepted in the query string:\n\n    The `MaxQueryString` Request Filter describes the upper limit on the length of the query string that the configured IIS server will allow for websites or applications.\n\n- Disallow non-ASCII characters in URLs where possible:\n\n    This feature is used to allow or reject all requests to IIS that contain non-ASCII characters. When using this feature, Request Filtering will deny the request if high-bit characters are present in the URL. The UrlScan equivalent is `AllowHighBitCharacters`.",
    "weakness_title_read_only": "Inadequate/improper request filters (Microsoft IIS)",
    "weakness_id_read_only": "P975",
    "weakness": "9dda6366-7332-4ac0-82a1-82a67d5e158e",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "deployment",
    "created": "2018-01-05T21:29:22.016000-05:00",
    "last_updated": "2021-06-25T14:47:39.829000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T934",
    "universal_id": "7f3497a2-4269-4ac8-9b43-b00489cd9272",
    "countermeasure_name": "Ensure HSTS Header is set (Microsoft IIS)",
    "countermeasure_solution": "Ensure HSTS Header is set in Microsoft IIS to make the user agent to use HTTPS when communicating with the site. \n\n###More on HSTS\nHTTP Strict Transport Security (HSTS) allows a site to inform the user agent to communicate with the site only over HTTPS. This header takes two parameters: max-age, \"specifies the number of seconds, after the reception of the STS header field, during which the user agent regards the host (from whom the message was received) as a Known HSTS Host [speaks only HTTPS]\"; and includeSubDomains. includeSubDomains is an optional directive that defines how this policy is applied to subdomains. If includeSubDomains is included in the header, it provides the following definition: this HSTS Policy also applies to any hosts whose domain names are subdomains of the Known HSTS Host's domain name.",
    "weakness_title_read_only": "HSTS Header is not set (Microsoft IIS)",
    "weakness_id_read_only": "P976",
    "weakness": "a740b4ab-7a34-4359-b621-156f59bb7d15",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2018-01-05T21:29:22.044000-05:00",
    "last_updated": "2021-06-25T14:47:37.227000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T936",
    "universal_id": "30be4413-b2cb-4043-8f3e-0968c2ff0a94",
    "countermeasure_name": "Test that web content is on a non-system partition (Microsoft IIS)",
    "countermeasure_solution": "Execute the following command to ensure no virtual directories are mapped to the system drive:\n\n```\n%systemroot%\\system32\\inetsrv\\appcmd list vdir\n```",
    "weakness_title_read_only": "Web content on the system partition (Microsoft IIS)",
    "weakness_id_read_only": "P944",
    "weakness": "cb1f9cf7-139a-4200-8380-343de5ef24f5",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2018-01-05T21:29:22.099000-05:00",
    "last_updated": "2021-06-25T14:47:50.570000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T937",
    "universal_id": "b4341437-c0ed-41b1-a588-c08243fa2c93",
    "countermeasure_name": "Test that 'host headers' are on all sites (Microsoft IIS)",
    "countermeasure_solution": "Execute the following command to identify sites that are not configured to require host headers:\n\n```\n%systemroot%\\system32\\inetsrv\\appcmd list sites \n```\n\nAll sites will be listed as such:\n\n```\nSITE \"Default Web Site\" (id:1,bindings:http/\\*:80:test.com,state:Started) SITE \"badsite\" (id:3,bindings:http/\\*:80:,state:Started)\n```\n\nFor all non-SSL sites, ensure that the _IP:port:host_ binding triplet contains a host name. In the example above, the first site is configured as recommended given the `Default Web Site` has a host header of `test.com`. `badsite`, however, does not have a host header configured - it shows `\\*:80:` which means all IPs over port 80, with no host header.",
    "weakness_title_read_only": "Not requiring 'host headers' for a site (Microsoft IIS)",
    "weakness_id_read_only": "P945",
    "weakness": "63f5b557-d4d5-41be-a514-a8096c8cf4e9",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2018-01-05T21:29:22.112000-05:00",
    "last_updated": "2021-06-25T14:47:42.368000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T938",
    "universal_id": "b63fee7f-5c4d-483e-9a3b-e14ce9e4cb1f",
    "countermeasure_name": "Test that 'directory browsing' is set to disabled (Microsoft IIS)",
    "countermeasure_solution": "Perform the following to verify that Directory Browsing has been disabled at the server level:\n\n```\n%systemroot%\\system32\\inetsrv\\appcmd list config /section:directoryBrowse\n```\n\nIf the server is configured as recommended, the following will be displayed:\n\n```\n<system.webServer>\n    <directoryBrowse enabled=\"false\" />\n<system.webServer>\n```",
    "weakness_title_read_only": "Directory Browsing (Microsoft IIS)",
    "weakness_id_read_only": "P946",
    "weakness": "b11d8e32-724d-4f10-ac34-51330f0dcfe4",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2018-01-05T21:29:22.126000-05:00",
    "last_updated": "2021-06-25T14:47:55.888000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T939",
    "universal_id": "ef2a920c-02ba-43ee-aa39-871b3d13d19c",
    "countermeasure_name": "Test that application pools are configured securely (Microsoft IIS)",
    "countermeasure_solution": "Perform the following steps:\n\n- To verify the Application Pools have been set to run under the `ApplicationPoolIdentity` using IIS Manager:\n\n    1. Open IIS Manager.\n    2. Open the Application Pools node underneath the machine node; select Application Pool to be verified.\n    3. Right-click the Application Pool and select Advanced Settings\n    4. Under the Process Model section, locate the Identity option and ensure that `ApplicationPoolIdentity` is set.\n\n    This configuration is stored in the same `applicationHost.config` file for web sites and application/virtual directories, at the bottom of the file, surrounded by `<location path=\"path/to/resource\">` tags.\n\n    To verify that any new Application Pools use the ApplicationPoolIdentity, execute the following command to determine if the Application Pool default has been changed to `ApplicationPoolIdentity`:\n\n        %systemroot%\\system32\\inetsrv\\appcmd list config /section:applicationPools\n\n- The following `appcmd.exe` command will give a listing of all applications configured, which site they are in, which application pool is serving them and which application pool identity they are running under:\n\n        %systemroot%\\system32\\inetsrv\\appcmd list app\n\n    The output of this command will be similar to the following:\n\n        APP \"Default Web Site/\" (applicationPool:DefaultAppPool)\n\n    Run the above command and ensure a unique application pool is assigned for each site listed.\n\n- Find and open the `applicationHost.config` file and verify that the `userName` attribute of the `anonymousAuthentication` tag is set to a blank string:\n\n        <system.webServer>\n          <security>\n            <authentication>\n              <anonymousAuthentication userName=\"\" />\n            </authentication>\n          </security>\n        </system.webServer>\n\n    This configuration is stored in the same `applicationHost.config` file for web sites and application/virtual directories, at the bottom of the file, surrounded by `<location path=\"path/to/resource\">` tags.",
    "weakness_title_read_only": "Insecure Application Pools (Microsoft IIS)",
    "weakness_id_read_only": "P947",
    "weakness": "338d0b23-e7df-4d11-8c44-d2c9dd37574d",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2018-01-05T21:29:22.139000-05:00",
    "last_updated": "2021-06-25T14:47:48.115000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T940",
    "universal_id": "366b7077-8f13-45f8-9aa7-9640afe42f21",
    "countermeasure_name": "Test that 'global authorization rule' is set to restrict access (Microsoft IIS)",
    "countermeasure_solution": "At the website or application level, verify that the authorization rule configured has been applied:\n\n1. Connect to Internet Information Services (IIS Manager).\n2. Select the site or application where Authorization was configured.\n3. Select Authorization Rules and verify the configured rules were added To verify an authorization rule specifying no access to all users except the `Administrators` group, browse to and open the `web.config` file for the configured site/application/content:\n\n```\n<configuration>\n  <system.webServer>\n    <security>\n      <authorization>\n        <remove users=\"*\" roles=\"\" verbs=\"\" />\n        <add accessType=\"Allow\" roles=\"administrators\" />\n      </authorization>\n    </security>\n  </system.webServer>\n</configuration>\n```",
    "weakness_title_read_only": "Improper Access Control (Authorization)",
    "weakness_id_read_only": "P182",
    "weakness": "e488cdc5-3c91-4d2b-bcec-5c651b000d8b",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2018-01-05T21:29:22.153000-05:00",
    "last_updated": "2021-06-25T14:47:49.526000-04:00",
    "custom": "False",
    "rules": "83ee2a62-4bc5-460e-87f1-90fe128e4f51",
    "rules_read_only": "A75"
  },
  {
    "countermeasure_id": "T941",
    "universal_id": "53dc1ea2-3c67-4a99-b1e2-be85881ae6ff",
    "countermeasure_name": "Test that access to sensitive site features is restricted to authenticated principals only (Microsoft IIS)",
    "countermeasure_solution": "To verify that the authentication module is enabled for a specific site, application, or content, browse to and open the `web.config` file pertaining to the content. Verify the configuration file now has a mode defined within the `<authentication>` tags. The example below shows that Forms Authentication is configured, cookies will always be used, and SSL is required:\n\n```\n<system.web>\n  <authentication>\n    <forms cookieless=\"UseCookies\" requireSSL=\"true\" />\n  </authentication>\n</system.web>\n```",
    "weakness_title_read_only": "Improper Access Control (Authorization)",
    "weakness_id_read_only": "P182",
    "weakness": "e488cdc5-3c91-4d2b-bcec-5c651b000d8b",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2018-01-05T21:29:22.166000-05:00",
    "last_updated": "2021-06-25T14:47:48.676000-04:00",
    "custom": "False",
    "rules": "83ee2a62-4bc5-460e-87f1-90fe128e4f51",
    "rules_read_only": "A75"
  },
  {
    "countermeasure_id": "T942",
    "universal_id": "531bb407-b1d3-4ef2-83f5-11de4be7f1c8",
    "countermeasure_name": "Test that 'forms authentication' require SSL/TLS (Microsoft IIS)",
    "countermeasure_solution": "To verify that SSL/TLS is required for forms authentication for a specific site, application, or content, browse to and open the `web.config` file for the level in which forms authentication was enabled. Verify the tag `<forms requireSSL=\"true\" />`:\n\n```\n<system.web>\n  <authentication>\n    <forms requireSSL=\"true\" />\n  </authentication>\n</system.web>\n```",
    "weakness_title_read_only": "Clear Text and Unencrypted Transmission of Information",
    "weakness_id_read_only": "P216",
    "weakness": "b1d166d6-8ca7-415f-9cd9-8c2d745d3d01",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2018-01-05T21:29:22.180000-05:00",
    "last_updated": "2021-06-25T14:47:36.866000-04:00",
    "custom": "False",
    "rules": "83ee2a62-4bc5-460e-87f1-90fe128e4f51 AND cab80cea-1a20-433f-b78c-783b816b8d33",
    "rules_read_only": "A75 AND A739"
  },
  {
    "countermeasure_id": "T943",
    "universal_id": "d471e2e8-4fc3-4e79-8ca1-eaf7e6971727",
    "countermeasure_name": "Test that 'cookie protection mode' is configured for forms authentication (Microsoft IIS)",
    "countermeasure_solution": "Locate and open the `web.config` for the configured application. Verify the presence of `<forms protection=\"All\" />`.\n\n```\n<system.web>\n  <authentication>\n    <forms cookieless=\"UseCookies\" protection=\"All\" />\n  </authentication>\n</system.web>\n```\n\nThe `protection=\"All\"` property will only show up if cookie protection mode was set to something different, and then changed to Encryption and validation. To truly verify the `protection=\"All\"` property in the `web.config`, the protection mode can be changed, and then changed back. Conversely, the `protection=\"All\"` line can be added to the `web.config` manually.",
    "weakness_title_read_only": "Unprotected cookies for form authentication (Microsoft IIS)",
    "weakness_id_read_only": "P951",
    "weakness": "a5581147-7993-4c79-bc19-2f31d36ced60",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2018-01-05T21:29:22.194000-05:00",
    "last_updated": "2021-06-25T14:47:39.132000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T944",
    "universal_id": "f97be67c-2f33-44c1-b8d7-35082de01511",
    "countermeasure_name": "Test that transport layer security for 'basic authentication' is configured (Microsoft IIS)",
    "countermeasure_solution": "Once transport layer security has been configured and required for a Site or application, only the https:// address will be available. Attempt loading the Site or application for which Basic Authentication is configured using http://, the requests should fail and IIS should throw a 403.4 - Forbidden error.",
    "weakness_title_read_only": "Clear Text and Unencrypted Transmission of Information",
    "weakness_id_read_only": "P216",
    "weakness": "b1d166d6-8ca7-415f-9cd9-8c2d745d3d01",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2018-01-05T21:29:22.207000-05:00",
    "last_updated": "2021-06-25T14:47:36.841000-04:00",
    "custom": "False",
    "rules": "83ee2a62-4bc5-460e-87f1-90fe128e4f51 AND cab80cea-1a20-433f-b78c-783b816b8d33",
    "rules_read_only": "A75 AND A739"
  },
  {
    "countermeasure_id": "T945",
    "universal_id": "4503188e-8809-4695-b313-b90785101487",
    "countermeasure_name": "Test that 'passwordFormat' is not set to clear (Microsoft IIS)",
    "countermeasure_solution": "Locate and open the configuration file for the configured application. Verify the `credentials element` is not present:\n\n```\n<configuration>\n  <system.web>\n    <authentication mode=\"Forms\">\n      <forms name=\"SampleApp\" loginUrl=\"/login.aspx\">\n        <credentials passwordFormat=\"SHA1\">\n          <user\n            name=\"<em>UserName1</em>\"\n            password=\"<em>SHA1EncryptedPassword1</em>\"/>\n          <user\n            name=\"<em>UserName2</em>\"\n            password=\"<em>SHA1EncryptedPassword2</em>\"/>\n        </credentials>\n      </forms>\n    </authentication>\n  </system.web>\n</configuration>\n```",
    "weakness_title_read_only": "Use of hard-coded or insecurely stored passwords and secret keys",
    "weakness_id_read_only": "P218",
    "weakness": "f03301f2-2f5b-4ee6-bb51-581286168040",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2018-01-05T21:29:22.223000-05:00",
    "last_updated": "2021-06-25T14:47:43.881000-04:00",
    "custom": "False",
    "rules": "83ee2a62-4bc5-460e-87f1-90fe128e4f51",
    "rules_read_only": "A75"
  },
  {
    "countermeasure_id": "T946",
    "universal_id": "3e83d2e1-9288-48ac-b607-b0af0e570b41",
    "countermeasure_name": "Test if 'deployment method retail' is set (Microsoft IIS)",
    "countermeasure_solution": "After the IIS is restarted, open the `machine.config` file and verify that `<deployment retail=\"true\" />` remains set to `true`. \n\n```\n<system.web> \n    <deployment retail=\"true\" /> \n</system.web>\n```",
    "weakness_title_read_only": "Deployment Method is not set to retail (Microsoft IIS)",
    "weakness_id_read_only": "P954",
    "weakness": "204fbc58-aff8-4092-b7d4-938de72c8049",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2018-01-05T21:29:22.237000-05:00",
    "last_updated": "2021-06-25T14:47:38.469000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T947",
    "universal_id": "949fb884-75dc-4806-a1f7-bb0c458cb2aa",
    "countermeasure_name": "Test if HTTP detailed errors are hidden from displaying remotely (Microsoft IIS)",
    "countermeasure_solution": "The `errorMode` attribute is set in the `Web.config` file for the Web site or application in the `<httpErrors>` element of the `<system.webServer>` section. Browse to the `web.config` and verify the `errorMode` is set to `DetailedLocalOnly` or `Custom`: \n\n```\n<system.web>\n    <system.webServer>\n        <httpErrors errorMode=\"DetailedLocalOnly\">\n        </httpErrors>\n    </system.webServer>\n</system.web>\n ```",
    "weakness_title_read_only": "HTTP detailed errors are displayed remotely (Microsoft IIS)",
    "weakness_id_read_only": "P955",
    "weakness": "d8859225-14ee-4d6e-90f2-489e024c3492",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2018-01-05T21:29:22.250000-05:00",
    "last_updated": "2021-06-25T14:47:38.728000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T948",
    "universal_id": "18a617e6-ffcb-4366-807c-9628ee9c08e5",
    "countermeasure_name": "Test if cookies are set with HttpOnly attribute (Microsoft IIS)",
    "countermeasure_solution": "After IIS is restarted, browse to and open the `web.config` for the application in which `httpOnly` cookies have been turned on. Confirm the `httpOnlyCookies `attribute is set to true: `<httpCookies httpOnlyCookies=\"true\" />`.",
    "weakness_title_read_only": "Cookies are not set with HttpOnly attribute (Microsoft IIS)",
    "weakness_id_read_only": "P956",
    "weakness": "c16c5c6b-5b0e-4683-b073-119340f41c0c",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2018-01-05T21:29:22.264000-05:00",
    "last_updated": "2021-06-25T14:48:01.227000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T949",
    "universal_id": "32240a79-4bbc-4d6a-b4ec-1472285c4a38",
    "countermeasure_name": "Test if MachineKey validation is configured securely (Microsoft IIS)",
    "countermeasure_solution": "To verify the Machine Key validation method using IIS Manager: \n\n1. Open IIS Manager and navigate to the level that was configured, the WEBROOT, or server in this case \n2. In the features view, double click Machine Key \n3. On the Machine Key page, verify that HMACSHA256 is selected in the validation method dropdown for .Net 4.5 and SHA1 for .Net 3.5.",
    "weakness_title_read_only": "Insecure Configuration of MachineKey validation (Microsoft IIS)",
    "weakness_id_read_only": "P957",
    "weakness": "56289c89-9970-4315-9645-74011231ec99",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2018-01-05T21:29:22.277000-05:00",
    "last_updated": "2021-06-25T14:47:37.538000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T950",
    "universal_id": "4dd7f91d-0846-40d9-a7dd-e0f76ce7a4d9",
    "countermeasure_name": "Test if global .NET trust level is configured securely (Microsoft IIS)",
    "countermeasure_solution": "Verify the global .NET Trust Level using IIS Manager using the following steps: \n\n1. Open IIS Manager and navigate to the level that was configured, the server in this example \n2. In the features view, double click .NET Trust Levels \n3. On the .NET Trust Levels page, verify that `Medium (web\\_mediumtrust.config)` is selected in the Trust Level dropdown",
    "weakness_title_read_only": "Global .NET trust level is not configured securely (Microsoft IIS)",
    "weakness_id_read_only": "P958",
    "weakness": "aaafe5af-e911-40a8-8e7a-bf958e6b245c",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2018-01-05T21:29:22.291000-05:00",
    "last_updated": "2021-06-25T14:47:52.068000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T951",
    "universal_id": "bbb56014-cad8-468b-8e73-b36f4bcb157c",
    "countermeasure_name": "Verify that double-encoded requests are rejected (Microsoft IIS)",
    "countermeasure_solution": "If a request is rejected because it contains a double-encoded request, a 404.11 HTTP status is logged to the IIS log file. To manually verify the change, locate and open the `web.config` for the website or application in which the request filter was set. Ensure the value defined for `allowDoubleEscaping` is `false`:\n\n```\n<configuration>\n  <system.webServer>\n    <security>\n      <requestFiltering\n         allowDoubleEscaping=\"false\">\n      </requestFiltering>\n    </security>\n  </system.webServer>\n</configuration>\n```",
    "weakness_title_read_only": "Double-encoded Requests (Microsoft IIS)",
    "weakness_id_read_only": "P959",
    "weakness": "0d77c97e-d70b-435f-8eef-644d1f450142",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2018-01-05T21:29:22.305000-05:00",
    "last_updated": "2021-06-25T14:47:53.718000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T952",
    "universal_id": "72ed3ccb-586e-4bec-bbdf-db8171319d6a",
    "countermeasure_name": "Verify that 'HTTP Trace Method' is disabled (Microsoft IIS)",
    "countermeasure_solution": "IIS will return an HTTP 404.6 error to the client when Request Filtering blocks an HTTP request because of a denied HTTP verb. To manually verify the change, browse to the `web.config` file for which the change was made and verify the below configuration:\n\n```\n<configuration>\n  <system.webServer>\n    <security>\n       <requestFiltering>\n          <verbs>\n            <add verb=\"TRACE\" allowed=\"false\" />\n          </verbs>\n        </requestFiltering>\n</security>\n</system.webServer>\n</configuration>\n```",
    "weakness_title_read_only": "HTTP Verb Tampering",
    "weakness_id_read_only": "P700",
    "weakness": "abef344f-a439-4d09-88c9-31f33980a3fb",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2018-01-05T21:29:22.318000-05:00",
    "last_updated": "2021-06-25T14:47:55.706000-04:00",
    "custom": "False",
    "rules": "83ee2a62-4bc5-460e-87f1-90fe128e4f51",
    "rules_read_only": "A75"
  },
  {
    "countermeasure_id": "T953",
    "universal_id": "895a5a3d-5912-4f74-bfdc-b0b80eb70b15",
    "countermeasure_name": "Verify that unlisted file extensions are not allowed (Microsoft IIS)",
    "countermeasure_solution": "When IIS rejects a request based on a file extensions filter, the error code logged is 404.7. To manually verify the change, locate and open the `web.config` for the website or application in which the Request Filter was set. Ensure `<fileExtensions allowUnlisted=\"false\">`. The following `web.config` will disallow any requests for files that do not have `.asp`, `.aspx`, or `.html` as their extension:\n\n```\n<configuration>\n <system.webServer>\n  <security>\n   <requestFiltering>\n    <fileExtensions allowUnlisted=\"false\">\n     <add fileExtension=\".asp\" allowed=\"true\" />\n     <add fileExtension=\".aspx\" allowed=\"true\" />\n     <add fileExtension=\".html\" allowed=\"true\" />\n    </fileExtensions>\n   </requestFiltering>\n  </security>\n </system.webServer>\n</configuration>\n```",
    "weakness_title_read_only": "Unlisted file extensions (Microsoft IIS)",
    "weakness_id_read_only": "P961",
    "weakness": "7be71f3b-afdb-4460-93d4-5d29fa71a273",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2018-01-05T21:29:22.336000-05:00",
    "last_updated": "2021-06-25T14:47:50.110000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T954",
    "universal_id": "ebe58bf0-6031-474b-a5dd-51fb54afdbdf",
    "countermeasure_name": "Test that handlers are not granted Write and Script/Execute permissions at the same time. (Microsoft IIS)",
    "countermeasure_solution": "Open the `ApplicationHost.config` file in `%systemroot%\\\\system32\\\\inetsrv\\\\config`. Find the `<handlers>` section and verify that the `accessPolicy` attribute does not contain `Write` when `Script` or `Execute` is present. The following is an acceptable example:\n\n```\n<system.webserver>\n  <handlers accessPolicy=\"Read, Script\">\n  </handlers>\n</system.webserver>\n```",
    "weakness_title_read_only": "Granting Write and Script/Execute permissions at the same time to handlers (Microsoft IIS)",
    "weakness_id_read_only": "P962",
    "weakness": "dc984bc3-8b52-44b9-bb70-a11ccacc41b2",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2018-01-05T21:29:22.350000-05:00",
    "last_updated": "2021-06-25T14:47:51.988000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T955",
    "universal_id": "a00996f9-6760-4b19-abf0-458199d919b7",
    "countermeasure_name": "Verify that unlisted extensions are restricted from being run (Microsoft IIS)",
    "countermeasure_solution": " - Open the `applicationHost.config` file in `%systemroot%\\system32\\inetsrv\\config`. Verify that the `notListedIsapisAllowed` and `notListedCgisAllowed` attributes in the `<isapiCgiRestriction>` element are set to `false`:\n\n```\n<system.webServer>\n  <security>\n    <isapiCgiRestriction notListedIsapisAllowed=\"false\">\n    </isapiCgiRestriction>\n    <isapiCgiRestriction notListedCgisAllowed=\"false\">\n    </isapiCgiRestriction>\n  </security>\n</system.webServer>\n```",
    "weakness_title_read_only": "Running unlisted extensions (Microsoft IIS)",
    "weakness_id_read_only": "P963",
    "weakness": "6fe4e517-a9e7-4c3a-9ca1-1c25b58a8525",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2018-01-05T21:29:22.363000-05:00",
    "last_updated": "2021-06-25T14:47:56.430000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T956",
    "universal_id": "ca8ff99a-fb74-40b2-b055-596838c0ebbd",
    "countermeasure_name": "Test that 'Dynamic IP Address Restrictions' is enabled (Microsoft IIS)",
    "countermeasure_solution": "Access the web server enough times to trigger the IP restriction based on the settings entered. If you do not get blocked after a while this test fails.",
    "weakness_title_read_only": "Uncontrolled Resource Consumption (Resource Exhaustion)",
    "weakness_id_read_only": "P293",
    "weakness": "1bee9747-5d60-43f1-8e0f-e261388a5c25",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2018-01-05T21:29:22.377000-05:00",
    "last_updated": "2021-06-25T14:47:40.839000-04:00",
    "custom": "False",
    "rules": "83ee2a62-4bc5-460e-87f1-90fe128e4f51 AND cab80cea-1a20-433f-b78c-783b816b8d33",
    "rules_read_only": "A75 AND A739"
  },
  {
    "countermeasure_id": "T957",
    "universal_id": "b69e205f-f53f-43db-923c-c6b45f130742",
    "countermeasure_name": "Test if logging is configured securely (Microsoft IIS)",
    "countermeasure_solution": "Perform the following check to see if logging is configured securely:\n\n- Browse to the location of the Advanced Logs and verify .log files are being generated. Note that logs will be written to disk after a non-determined period of time. They can be written into their specified directory immediately if, in the Log Definition, the Publish real-time events and Write to disk options are selected.\n\n- Using Message Analyzer, configure the query for Microsoft-Windows-IIS-Logging. Verify you see live logging data by accessing the website.\n\n- To verify web logs are being logged to the new location, open Windows Explorer and browse to the path that was defined. Depending on how the logging was configured, there will be either: \n    1. A folder containing .log files or \n    2. .log files in the root of the specified directory",
    "weakness_title_read_only": "Misconfiguring logging (Microsoft IIS)",
    "weakness_id_read_only": "P965",
    "weakness": "9c6dcd4f-4d18-4afd-9cb4-cfb4ecb12b4d",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2018-01-05T21:29:22.391000-05:00",
    "last_updated": "2021-06-25T14:47:58.134000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T958",
    "universal_id": "b067f7b5-712a-47dc-9b71-6195d3b839b7",
    "countermeasure_name": "Test if FTP is configured securely (Microsoft IIS)",
    "countermeasure_solution": "Perform the following steps:\n\n1. Test if the FTP site requires the use of FTP-S: attempt to use an FTP client which either does not support FTP-S or is not configured to use FTP-S. If setup was successful, the request will fail. Conversely, open a command prompt from the server and type `ftp localhost`. After entering credentials, the server should return an Access is Denied message. \n\n2. Access your FTP server using the administrator account and an invalid password. Verify after the maximum number of login attempts has been met that you receive a message 'Connection closed by remote host' when trying to access FTP.",
    "weakness_title_read_only": "Misconfiguring FTP (Microsoft IIS)",
    "weakness_id_read_only": "P966",
    "weakness": "582407da-a0cd-4cee-a531-3c1e497fc108",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2018-01-05T21:29:22.404000-05:00",
    "last_updated": "2021-06-25T14:47:36.960000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T959",
    "universal_id": "7c14c4c9-7c2a-4fbb-9c9e-259b6ccadd12",
    "countermeasure_name": "Verify if TLS/SSL is securely configured for Microsoft IIS (Microsoft IIS)",
    "countermeasure_solution": "## Configurations related to SSL/TLS and their versions\n\n- Perform the following to verify SSL 2.0 is disabled. \n  \n    1. If the following key is not present, SSL 2.0 is disabled. \n```HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\SSL 2.0``` \n    2. Otherwise, ensure the following key is set to `0`. \n```HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\SSL 2.0\\Server\\Enabled```\n\n- Perform the following to verify SSL 3.0 is disabled: \n    \n    - Ensure the following key is set to `0`. \n```HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\SSL 3.0\\Server\\Enabled```\n\n- Review the following registry locations to verify that TLS 1.0 is disabled. The key value should be 0. \n```HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.0\\Server\\Enabled```\n\n- Review the following registry locations to verify that TLS 1.1 is disabled. The key value should be 0.\n```HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.1\\Server\\Enabled```\n\n- Perform the following to verify TLS 1.2 has been enabled: \n    \n    1. Ensure the following key is not present. TLS 1.2 is enabled by default.\n```HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.2\\``` \n    2.  If it is present, ensure the following key is set to `0xFFFFFFFF`.\n```HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.2\\Server\\Enabled```\n\n## Configurations related to Cipher Suites\n\n- Verify the `NULL` cipher has been disabled, ensure the following key does not exist or is set to `0`: \n```HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\NULL\\Enabled```\n\n- Verify the `DES 56/56` cipher has been disabled, ensure the following key does not exist or is set to `0`: ```HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\DES 56/56```\n\n- Verify the `RC4 40/128` cipher has been disabled, ensure the following key does not exist or is set to `0`: ```HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\RC4 40/128\\Enabled``` \n\n- Verify the `RC4 56/128` cipher has been disabled, ensure the following key does not exist or is set to `0`: ```HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\RC4 56/128\\Enabled``` \n\n- Verify the `RC4 64/128` cipher has been disabled, ensure the following key does not exist or is set to `0`: ```HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\RC4 64/128\\Enabled```\n\n- Verify the `RC4 128/128` cipher has been disabled, ensure the following key is set to `0`: \n```HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\RC4 128/128\\Enabled```\n\n- Verify the `Triple DES 168` cipher has been disabled, ensure the following key is set to `00000000`: ```HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\Triple DES 168\\Enabled```\n\n- Verify the `AES 128/128` cipher has been enabled, ensure the following key is set to `0xFFFFFFF`: \n```HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\AES 128/128\\Enabled```\n\n- Verify the `AES 256/256` cipher has been enabled: \n    \n    1. Ensure that the following key does not exist. If it does exist, you can either delete the key or proceed to step 2. \n```HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\AES 256/256\\``` \n    2. If the following key exists, ensure the following is set to 0x`FFFFFFFF`: \n```HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\AES 256/256\\Enabled```\n\n- To verify that the cipher order has been configured properly, navigate to the following registry path. \n```HKLM\\System\\CurrentControlSet\\Control\\Cryptography\\Configuration\\Local\\SSL\\00010002:Functions``` \n\n    The correct cipher order is listed below :\n\n    - **TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384**\n    - **TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256**\n    - **TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384**\n    - **TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256**\n    - TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384 \n    - TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256 \n    - TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384 \n    - TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256",
    "weakness_title_read_only": "Misconfiguring TLS/SSL for Microsoft IIS (Microsoft IIS)",
    "weakness_id_read_only": "P967",
    "weakness": "9da6f313-2ea2-4f62-8f37-9c05fa7a3b42",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2018-01-05T21:29:22.417000-05:00",
    "last_updated": "2022-02-16T09:27:11.082000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T960",
    "universal_id": "e6ebea2d-92cc-4653-b3b3-8c1497132039",
    "countermeasure_name": "Verify that forms authentication is configured to use cookies (Microsoft IIS)",
    "countermeasure_solution": "Locate and open the `web.config` for the configured application. Verify the presence of `<forms cookieless=\"UseCookies\" />`.\n\n```\n<system.web>\n  <authentication>\n    <forms cookieless=\"UseCookies\" requireSSL=\"true\" timeout=\"30\" />\n  </authentication>\n</system.web>\n```",
    "weakness_title_read_only": "Session IDs Leaked Through URLs",
    "weakness_id_read_only": "P702",
    "weakness": "cd501d25-92c3-4eb8-b4a2-468dc7402e83",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2018-01-05T21:29:22.432000-05:00",
    "last_updated": "2021-06-25T14:48:00.932000-04:00",
    "custom": "False",
    "rules": "83ee2a62-4bc5-460e-87f1-90fe128e4f51 AND ac5f73c4-566a-4e69-975a-c497b00c10ee",
    "rules_read_only": "A75 AND A1161"
  },
  {
    "countermeasure_id": "T961",
    "universal_id": "9157c1fd-0ce7-4514-97b0-17a1361a0e51",
    "countermeasure_name": "Verify that 'credentials' are not stored in configuration files (Microsoft IIS)",
    "countermeasure_solution": "Locate and open the configuration file for the configured application. Verify the `<credentials>` element is not present:\n\n```\n<configuration>\n  <system.web>\n    <authentication mode=\"Forms\">\n      <forms name=\"SampleApp\" loginUrl=\"/login.aspx\">\n      </forms>\n    </authentication>\n  </system.web>\n</configuration>\n```",
    "weakness_title_read_only": "Use of hard-coded or insecurely stored passwords and secret keys",
    "weakness_id_read_only": "P218",
    "weakness": "f03301f2-2f5b-4ee6-bb51-581286168040",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2018-01-05T21:29:22.446000-05:00",
    "last_updated": "2021-06-25T14:47:44.052000-04:00",
    "custom": "False",
    "rules": "83ee2a62-4bc5-460e-87f1-90fe128e4f51 AND ac5f73c4-566a-4e69-975a-c497b00c10ee",
    "rules_read_only": "A75 AND A1161"
  },
  {
    "countermeasure_id": "T962",
    "universal_id": "25c8eb95-e245-41a7-8a84-dcbfd3b9b3d8",
    "countermeasure_name": "Test if debug is turned off (Microsoft IIS)",
    "countermeasure_solution": "Browse to and open the `web.config` file pertaining to the server or specific application that has been configured. Locate the `<compilation debug>` switch and verify it is set to false. \n\n```\n<configuration> \n    <system.web>\n        <compilation debug=\"false\" />\n    </system.web> \n</configuration>\n ```",
    "weakness_title_read_only": "Debug is not turned off (Microsoft IIS)",
    "weakness_id_read_only": "P970",
    "weakness": "9b4609d7-00ef-44c6-b174-3648a92e284e",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2018-01-05T21:29:22.459000-05:00",
    "last_updated": "2021-06-25T14:47:55.914000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T963",
    "universal_id": "524743b6-2058-458b-8ceb-a29004abbf65",
    "countermeasure_name": "Test if custom error messages are not set to off (Microsoft IIS)",
    "countermeasure_solution": "Find and open the `web.config` file for the application/site and verify that the tag has either `<customErrors mode=\"RemoteOnly\" />` or `<customErrors mode=\"On\" />` defined.",
    "weakness_title_read_only": "Custom error messages are off (Microsoft IIS)",
    "weakness_id_read_only": "P971",
    "weakness": "2a8c5ab1-d6f3-471e-96f5-af10c72a7da1",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2018-01-05T21:29:22.472000-05:00",
    "last_updated": "2021-06-25T14:47:38.607000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T964",
    "universal_id": "ee99f5a7-9381-4893-8fb7-0aed9cd67dff",
    "countermeasure_name": "Test if ASP.NET stack tracing is not enabled (Microsoft IIS)",
    "countermeasure_solution": "Verify ASP.NET tracing is not turned on, via a per-page basis in the application. Ensure the trace attribute is not enabled: ``` Trace=\"true\" ``` On an application basis like in the `web.config` ensure that tracing is not enabled like: \n```   \n<configuration> \n    <system.web>\n        <trace enabled=\"true\"> \n    </system.web> \n</configuration>\n```\nTracing is configurable at numerous levels: \n\n1. Machine.config \n2. Root-level web.config \n3. Application-level web.config \n4. Virtual or physical directory-level web.config \n5. Individual ASP.Net page level",
    "weakness_title_read_only": "ASP.NET stack tracing is enabled (Microsoft IIS)",
    "weakness_id_read_only": "P972",
    "weakness": "88b068ac-4b0c-4f9a-ac60-19d6f2ffbd3f",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2018-01-05T21:29:22.485000-05:00",
    "last_updated": "2021-06-25T14:47:38.800000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T965",
    "universal_id": "57eeed19-5a59-4d22-a90b-4136bbdbb360",
    "countermeasure_name": "Test that Ensure 'httpcookie' mode is configured for session state (Microsoft IIS)",
    "countermeasure_solution": "Find and open the `web.config` file for the application/site and verify that the `sessionState` tag is set to use cookies: \n```\n<system.web> \n    <sessionState cookieless=\"UseCookies\" /> \n</system.web>\n```",
    "weakness_title_read_only": "Httpcookie mode is not securely configured for session state (Microsoft IIS)",
    "weakness_id_read_only": "P973",
    "weakness": "bc1c8d87-a579-4f7c-88e4-ac45eb49bf79",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2018-01-05T21:29:22.498000-05:00",
    "last_updated": "2021-06-25T14:48:00.918000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T967",
    "universal_id": "b596ca68-fbc4-407f-9054-dc9e9d66813f",
    "countermeasure_name": "Verify that request filters are configured properly (Microsoft IIS)",
    "countermeasure_solution": "Perform the following steps:\n\n- Upon exceeding the configured value set for the Request Filter, IIS will throw a Status Code 404.13. To manually verify the change, locate and open the `web.config` for the website or application in which the request filter was set. Ensure the value defined for `maxAllowedContentLength` is what was set. The 28.6MB max example would show:\n\n        <configuration>\n          <system.webServer>\n            <security>\n              <requestFiltering>\n                <requestLimits\n                  maxAllowedContentLength=\"30000000\" />\n              </requestFiltering>\n            </security>\n          </system.webServer>\n        </configuration>\n\n- IIS will log a 404.14 HTTP status if the requested URL was rejected because it exceeded the length defined in the filter. To manually verify the change, locate and open the `web.config` for the website or application in which the request filter was set. Verify the value defined for `maxURL`:\n\n        <configuration>\n          <system.webServer>\n            <security>\n              <requestFiltering>\n                <requestLimits\n                  maxURL=\"4096\" />\n              </requestFiltering>\n            </security>\n          </system.webServer>\n        </configuration>\n\n- If a request is rejected because it exceeds the value set in the `maxQueryString` Request Filter, a 404.15 HTTP status is logged to the IIS log file. To manually verify the change, locate and open `the web.config` for the website or application in which the filter was set. Ensure the value defined for `maxQueryString` is what was configured.\n\n        <configuration>\n          <system.webServer>\n            <security>\n              <requestFiltering>\n                <requestLimits\n                  maxQueryString=\"2048\" />\n              </requestFiltering>\n            </security>\n          </system.webServer>\n        </configuration>\n\n- If a request is rejected because it contains a high-bit character, a 404.12 HTTP status is logged to the IIS log file. To manually verify the change, locate and open the `web.config` for the website or application in which the request filter was set. Ensure the value defined for the filter is false, as such:\n\n        <configuration>\n          <system.webServer>\n            <security>\n              <requestFiltering\n                allowHighBitCharacters=\"false\">\n              </requestFiltering>\n            </security>\n          </system.webServer>\n        </configuration>",
    "weakness_title_read_only": "Inadequate/improper request filters (Microsoft IIS)",
    "weakness_id_read_only": "P975",
    "weakness": "9dda6366-7332-4ac0-82a1-82a67d5e158e",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2018-01-05T21:29:22.525000-05:00",
    "last_updated": "2021-06-25T14:47:40.642000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T968",
    "universal_id": "25dbe014-934f-4bea-b37b-b21360e2dde3",
    "countermeasure_name": "Test if HSTS Header is set (Microsoft IIS)",
    "countermeasure_solution": "The recommended max age is 8 minutes (480 seconds) or greater. Any value greater than 0 is acceptable. Perform the following in IIS Manager to view host headers configured for the server: \n\n1. Open IIS Manager \n2. In the Connections pane, select your server \n3. In the Features View pane, double click HTTP Response Headers \n4. Verify an entry exists named Strict-Transport-Security \n5. Double click Strict-Transport-Security and verify the Value: box contains any value greater than 0 \n6. Click OK. \n\nPerform the following in IIS Manager to view host headers configured for the Website: \n    \n1. Open IIS Manager \n2. In the Connections pane, expand the tree and select Website \n3. In the Features View pane, double click HTTP Response Headers \n4. Verify an entry exists name Strict-Transport-Security \n5. Double click Strict-Transport-Security and verify the Value: box contains any value greater than 0\n6. Click OK.",
    "weakness_title_read_only": "HSTS Header is not set (Microsoft IIS)",
    "weakness_id_read_only": "P976",
    "weakness": "a740b4ab-7a34-4359-b621-156f59bb7d15",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2018-01-05T21:29:22.547000-05:00",
    "last_updated": "2021-06-25T14:47:37.060000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T970",
    "universal_id": "9c1ef5a2-a6ff-4afb-b662-0a3055500ff5",
    "countermeasure_name": "Limit server platform information leakage (Apache Tomcat)",
    "countermeasure_solution": "Follow the instruction below to limit server platform information leakage:\n\n- Disable client facing Stack Traces:\n When a runtime error occurs during request processing, Apache Tomcat will display debugging information to the requestor. Ensure that such debug information be withheld from the requestor.\n\n- Turn off TRACE:\n The HTTP TRACE verb provides debugging and diagnostics information for a given request.",
    "weakness_title_read_only": "Server Platform Information Leakage (Apache Tomcat)",
    "weakness_id_read_only": "P978",
    "weakness": "5dc60cd7-545c-48ee-9cab-e0869f41c23a",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2018-01-08T12:31:15.491000-05:00",
    "last_updated": "2021-06-25T14:47:38.325000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T971",
    "universal_id": "91a8248b-0830-4b08-8512-3a984f06fe97",
    "countermeasure_name": "Protect the Shutdown Port (Apache Tomcat)",
    "countermeasure_solution": "Set nondeterministic value for the shutdown attribute in `$CATALINA_HOME/conf/server.xml` to prevent malicious local entities from shutting down Tomcat.",
    "weakness_title_read_only": "Leaving Shutdown Port enabled (Apache Tomcat)",
    "weakness_id_read_only": "P979",
    "weakness": "2b8043fb-b4b6-4c22-b213-b9a9308a72d3",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2018-01-08T12:31:15.531000-05:00",
    "last_updated": "2021-06-25T14:47:49.890000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T972",
    "universal_id": "351c5ebb-3b42-42eb-b1e9-87a14849a4f8",
    "countermeasure_name": "Apply access restrictions in Tomcat configurations (Apache Tomcat)",
    "countermeasure_solution": "Follow the instructions below to properly apply access restrictions in Tomcat:\n\n- Restrict access to `$CATALINA_HOME`: _$CATALINA_HOME_ is the environment variable which holds the path to the root Tomcat directory. \nProtect access to this in order to protect the Tomcat binaries and libraries from unauthorized modification. Set the ownership of `$CATALINA_HOME` to `tomcat_admin:tomcat`. Prevent read, write, and execute for the world (o-rwx)e permission on `$CATALINA_HOME`  and prevent write access to the group (g-w).\n\n- Restrict access to Tomcat `context.xml`:\n The _context.xml_ file is loaded by all web applications and sets certain configuration options. Ensure that the access to this file has the proper permissions to properly protect from unauthorized changes.\n\n- Restrict access to Tomcat `logging.properties`:\n _logging.properties_ is a Tomcat files which specifies the logging configuration. Ensure that the access to this file has the proper permissions to properly protect from unauthorized changes.\n\n- Restrict access to Tomcat `server.xml`:\n _server.xml_ contains Tomcat servlet definitions and configurations. Ensure that access to this file has the proper permissions to properly protect from unauthorized changes.\n\n- Restrict access to Tomcat `tomcat-users.xml`:\n _tomcat-users.xml_ contains authentication information for Tomcat applications. Ensure that access to this file has the proper permissions to properly protect from unauthorized changes.\n\n- Restrict access to Tomcat `web.xml`:\n _web.xml_ is a Tomcat configuration file that stores application configuration settings. Ensure that access to this file has the proper permissions to properly protect from unauthorized changes.\n\n- Restrict access to `$CATALINA_BASE`:\n `$CATALINA_BASE` is the environment variable that specifies the base directory which most relative paths are resolved. `$CATALINA_BASE` is usually used when there is multiple instances of Tomcat running. It is important to protect access to this in order to protect the Tomcat-related binaries and libraries from unauthorized modification. Set the ownership of `$CATALINA_BASE` to `tomcat_admin:tomcat`. Ensure that the permission on `$CATALINA_BASE` prevent read, write, and execute for the world (o-rwx) and prevent write access to the group (g-w).\n\n- Restrict access to Tomcat configuration directory:\n The Tomcat `$CATALINA_HOME/conf/` directory contains Tomcat configuration files. Ensure that the ownership of this directory be `tomcat_admin:tomcat`. Ensure that the permissions on this directory prevent read, write, and execute for the world (o-rwx) and prevent write access to the group (g-w).\n\n- Restrict access to Tomcat logs directory:\n The Tomcat `$CATALINA_HOME/logs/` directory contains Tomcat logs. Ensure that the ownership of this directory be `tomcat_admin:tomcat`. Ensure that the permissions on this directory prevent read, write, and execute for the world (o-rwx).\n\n- Restrict access to Tomcat temp directory:\n The Tomcat `$CATALINA_HOME/temp/` directory is used by Tomcat to persist temporary information to disk. Ensure that the ownership of this directory be `tomcat_admin:tomcat`. Ensure that the permissions on this directory prevent read, write, and execute for the world (o-rwx).\n\n- Restrict access to Tomcat binaries directory:\n The Tomcat `$CATALINA_HOME/bin/` directory contains executes that are part of the Tomcat run-time. Ensure that the ownership of this directory be `tomcat_admin:tomcat`. Also ensure that the permission on `$CATALINA_HOME` prevent read, write, and execute for the world (o-rwx) and prevent write access to the group (g-w).\n\n- Restrict access to Tomcat web application directory:\n The Tomcat `$CATALINA_HOME/webapps` directory contains web applications that are deployed through Tomcat. Ensure that the ownership of this directory be `tomcat_admin:tomcat`. Also ensure that the permission on `$CATALINA_HOME/webapps` prevent read, write, and execute for the world (o-rwx) and prevent write access to the group (g-w).\n\n- Restrict access to Tomcat `catalina.policy`:\n The _catalina.policy_ file is used to configure security policies for Tomcat. Ensure that access to this file has the proper permissions to properly protect from unauthorized changes.\n\n- Restrict access to Tomcat `catalina.properties`:\n _catalina.properties_ is a Java properties files that contains settings for Tomcat including class loader information, security package lists, and performance properties. Ensure that access to this file has the proper permissions to properly protect from unauthorized changes.",
    "weakness_title_read_only": "Improper Restrictions in Tomcat Configurations (Apache Tomcat)",
    "weakness_id_read_only": "P980",
    "weakness": "53e909bd-f019-4f69-91ab-35232aa97b73",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2018-01-08T12:31:15.571000-05:00",
    "last_updated": "2021-06-25T14:47:50.481000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T973",
    "universal_id": "91c8db84-5adf-4082-944b-d9559ab7d2f0",
    "countermeasure_name": "Accurately set scheme (Apache Tomcat)",
    "countermeasure_solution": "The `scheme` attribute is used to indicate to callers of `request.getScheme()` which scheme is in use by the Connector.\n\n- Set the scheme attribute to *http* for Connectors operating over HTTP.\n- Set the scheme attribute to *https* for Connectors operating of HTTPS.",
    "weakness_title_read_only": "Inaccurate Scheme Setting (Apache Tomcat)",
    "weakness_id_read_only": "P981",
    "weakness": "60883fd7-6781-49f7-aafc-0c22e5591dd7",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2018-01-08T12:46:29.499000-05:00",
    "last_updated": "2021-06-25T14:47:59.520000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T974",
    "universal_id": "031c0b51-0492-4ba2-9550-86486781385f",
    "countermeasure_name": "Restrict runtime access to sensitive packages (Apache Tomcat)",
    "countermeasure_solution": "Restrict application access to certain packages. `package.access` grants or revokes access to listed packages during runtime.",
    "weakness_title_read_only": "Permissive runtime access to sensitive packages (Apache Tomcat)",
    "weakness_id_read_only": "P982",
    "weakness": "5809ad15-cad6-4382-87c5-9025fb51caa0",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2018-01-08T12:46:30.177000-05:00",
    "last_updated": "2021-06-25T14:47:49.235000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T975",
    "universal_id": "ec7dcb18-37f9-4331-b976-df5d7deeb543",
    "countermeasure_name": "Use a sandboxing alternative to Security Manager (Apache Tomcat)",
    "countermeasure_solution": "Run Tomcat in a sandbox to limit its access to restricted resources. \n\n_Notes and Considerations:_\n\n- Using Security Manager restricted the classes Tomcat could access and could protect your server from mistakes, Trojans, and malicious code in the past.  [Security Manager in Java is deprecated since Java 17](https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/lang/SecurityManager.html). Therefore Apache Tomcat [cannot rely on its sandboxing mechanism](https://tomcat.apache.org/tomcat-8.5-doc/security-manager-howto.html).\n\n- Use an alternative sandboxing mechanism to limit the operations that are allowed by the server. [This article provides some guidance on sandboxing](https://inside.java/2021/04/23/security-and-sandboxing-post-securitymanager/).\n\n- [Follow official guidelines and updates from Oracle about using new alternatives to Security Manager](https://openjdk.java.net/jeps/411) as they become available.",
    "weakness_title_read_only": "Lack of a sandboxing mechanism or relying on the deprecated Security Manager (Apache Tomcat)",
    "weakness_id_read_only": "P983",
    "weakness": "f2ee8ee9-490a-4506-9281-69e8cbd016b6",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2018-01-08T12:46:30.211000-05:00",
    "last_updated": "2022-10-14T16:35:21.144000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T976",
    "universal_id": "ee473ac8-e90a-4182-b6d3-9856da008b80",
    "countermeasure_name": "Store Web content directory on a separate partition from the Tomcat system files (Apache Tomcat)",
    "countermeasure_solution": "Store web content on a separate partition from Tomcat system files.",
    "weakness_title_read_only": "Storing Web content directory at the same partition as the Tomcat system files (Apache Tomcat)",
    "weakness_id_read_only": "P984",
    "weakness": "a99c1e19-8ca5-4c6c-a9eb-0f1baa279c07",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2018-01-08T12:46:30.245000-05:00",
    "last_updated": "2021-06-25T14:47:50.343000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T977",
    "universal_id": "0731903d-1ab1-4176-a658-3fb335dbb7e5",
    "countermeasure_name": "Do not allow symbolic linking (Apache Tomcat)",
    "countermeasure_solution": "Symbolic links allows one application to include the libraries from another. This allows for **re-use of code** but also allows for potential security issues when applications include libraries from other applications they should not have access to.",
    "weakness_title_read_only": "Allowing symbolic linking (Apache Tomcat)",
    "weakness_id_read_only": "P985",
    "weakness": "3b72e895-1790-4336-b28f-139a22aa84a2",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2018-01-08T12:46:30.280000-05:00",
    "last_updated": "2021-06-25T14:47:49.470000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T978",
    "universal_id": "1d8201cc-a382-4755-9873-55e7d74b83e6",
    "countermeasure_name": "Do not run applications as privileged (Apache Tomcat)",
    "countermeasure_solution": "Set the privileged attribute to *false* unless it is required for applications such as the manager application.\n\nSetting the privileged attribute for an application changes the class loader to the Server class loader instead of the Shared class loader.",
    "weakness_title_read_only": "Running applications as privileged (Apache Tomcat)",
    "weakness_id_read_only": "P986",
    "weakness": "40f65260-1898-438f-b8e3-b63bcb025675",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2018-01-08T12:46:30.316000-05:00",
    "last_updated": "2021-06-25T14:47:51.945000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T979",
    "universal_id": "5ca88784-cbb7-4571-8b98-46ff5a63f264",
    "countermeasure_name": "Do not allow cross context requests (Apache Tomcat)",
    "countermeasure_solution": "Set `crossContext` to *false* to prohibit an application from calling `ServletConext.getContext` to return a dispatcher for another application.",
    "weakness_title_read_only": "Allowing cross context requests (Apache Tomcat)",
    "weakness_id_read_only": "P987",
    "weakness": "4df48f25-4194-44ee-b11b-92ee342a6156",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2018-01-08T12:46:30.347000-05:00",
    "last_updated": "2021-06-25T14:47:45.900000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T980",
    "universal_id": "f966fe25-7002-4057-bea9-0d617f97ed64",
    "countermeasure_name": "Enable memory leak listener (Apache Tomcat)",
    "countermeasure_solution": "Initialize the singletons when JRE Memory Leak Prevention Listener starts as Tomcat's common class loader is the context class loader at that time. It also provides work-arounds for known issues that can result in locked JAR files.",
    "weakness_title_read_only": "Disabled memory leak listener (Apache Tomcat)",
    "weakness_id_read_only": "P988",
    "weakness": "341c4524-c154-4c35-85a3-781ebbdc4d77",
    "tags": "",
    "countermeasure_priority": "2",
    "phase": "deployment",
    "created": "2018-01-08T12:46:30.379000-05:00",
    "last_updated": "2021-06-25T14:47:58.900000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T981",
    "universal_id": "2332ee1b-c25f-4832-bed3-b2a1cb814455",
    "countermeasure_name": "Set Security Lifecycle Listener (Apache Tomcat)",
    "countermeasure_solution": " - Uncomment and enable the `Security Lifecycle Listener` element in `server.xml`\n- Properly configure `checkedOsUsers` to enforce a blacklist of OS users that must not be used to start Tomcat.\n- Properly configure `minimumUmask` attribute to set the least restrictive umask before Tomcat start.",
    "weakness_title_read_only": "Disabled Security Lifecycle Listener (Apache Tomcat)",
    "weakness_id_read_only": "P989",
    "weakness": "4e7f9fd8-4cb3-4dd0-8648-cfd2b5107db1",
    "tags": "",
    "countermeasure_priority": "3",
    "phase": "deployment",
    "created": "2018-01-08T12:46:30.413000-05:00",
    "last_updated": "2021-06-25T14:47:59.352000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T982",
    "universal_id": "bd02a479-4763-4f15-919b-3f0283d3ca25",
    "countermeasure_name": "Use logEffectiveWebXml and metadata-complete in production (Apache Tomcat)",
    "countermeasure_solution": "Enable `logEffectiveWebXml` to allow yourself to log the effective `web.xml` and you are able to see if that is in fact what you actually want. \n\nEnable `metadata-complete` so that the `web.xml` is the only metadata considered.",
    "weakness_title_read_only": "Disabled logEffectiveWebXml and metadata-complete in production (Apache Tomcat)",
    "weakness_id_read_only": "P990",
    "weakness": "1dd48921-c8ee-42dd-8d73-f19704d34ad3",
    "tags": "",
    "countermeasure_priority": "3",
    "phase": "deployment",
    "created": "2018-01-08T12:46:30.447000-05:00",
    "last_updated": "2021-06-25T14:47:57.511000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T983",
    "universal_id": "7cfb7207-a6bc-4f12-a873-beb504d464b4",
    "countermeasure_name": "Force TLS for manager application (Apache Tomcat)",
    "countermeasure_solution": "Force TLS when accessing the manager application. Use the `transport-guarantee` attribute to ensure TLS protection when accessing the manager application.",
    "weakness_title_read_only": "Plaintext communication for manager application (Apache Tomcat)",
    "weakness_id_read_only": "P991",
    "weakness": "0c1f0573-3de5-446d-8d9c-4b79b0bbf2fd",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2018-01-08T12:46:30.481000-05:00",
    "last_updated": "2021-06-25T14:47:37.010000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T984",
    "universal_id": "e8caa8e1-2a48-4802-8b9b-8f4fc3103f78",
    "countermeasure_name": "Enable strict servlet compliance (Apache Tomcat)",
    "countermeasure_solution": "Set `STRICT_SERVLET_COMPLIANCE` to *true*. \n\nThe `STRICT_SERVLET_COMPLIANCE` influences Tomcat's behavior in several subtle ways.",
    "weakness_title_read_only": "Lax servlet Compliance (Apache Tomcat)",
    "weakness_id_read_only": "P992",
    "weakness": "6a7c8820-5ace-4c67-979f-cfa850256106",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "deployment",
    "created": "2018-01-08T12:46:30.513000-05:00",
    "last_updated": "2021-06-25T14:47:54.871000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T986",
    "universal_id": "88d50955-75f0-44b1-b52c-1fb67fbf5231",
    "countermeasure_name": "Turn off session facade recycling (Apache Tomcat)",
    "countermeasure_solution": "Disable `RECYCLE_FACADES` to create a new facade for each request.",
    "weakness_title_read_only": "Session facade recycling (Apache Tomcat)",
    "weakness_id_read_only": "P1005",
    "weakness": "32133737-a6bd-4a3a-8906-35d348472413",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2018-01-08T12:54:13.910000-05:00",
    "last_updated": "2021-06-25T14:47:56.157000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T987",
    "universal_id": "b50c9cb3-bd9e-4365-8fd6-309671db81e9",
    "countermeasure_name": "Remove extraneous resources (Apache Tomcat)",
    "countermeasure_solution": " - Remove extraneous files and directories:\n The installation may provide example applications, documentation, and other directories which may not serve a production use.\n\n- Disable Unused Connectors:\n The default installation of Tomcat includes connectors with default settings. These are traditionally set up for convenience. It is best to remove these connectors and enable only what is needed.",
    "weakness_title_read_only": "Extraneous Resources (Apache Tomcat)",
    "weakness_id_read_only": "P994",
    "weakness": "da3af8c6-d1bf-4809-a547-e03626f7ba15",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "deployment",
    "created": "2018-01-08T12:54:13.941000-05:00",
    "last_updated": "2021-06-25T14:47:55.367000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T988",
    "universal_id": "af86646b-0239-4a4c-b9db-4af36a2a2633",
    "countermeasure_name": "Configure Tomcat Realms securely (Apache Tomcat)",
    "countermeasure_solution": "A realm is a database of usernames and passwords used to identify valid users of web applications. Consider the followings points for using realms:\n\n- Use secure Realms:\nReview the Realms configuration to ensure Tomcat is configured to use JDBCRealm, UserDatabaseRealm, or JAASRealm. Specifically, Tomcat should not utilize MemoryRealm.\n\n\n- Use LockOut Realms:\n A LockOut realm wraps around standard realms adding the ability to lock a user out after multiple failed logins.",
    "weakness_title_read_only": "Improper Realms Configuration (Apache Tomcat)",
    "weakness_id_read_only": "P995",
    "weakness": "2436d9b3-26c8-43d5-8e2f-78a317ea0a10",
    "tags": "",
    "countermeasure_priority": "3",
    "phase": "deployment",
    "created": "2018-01-08T12:54:14.931000-05:00",
    "last_updated": "2021-06-25T14:47:48.352000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T989",
    "universal_id": "51e3246c-97f3-4d45-977b-aaea6872a869",
    "countermeasure_name": "Setup Client-cert Authentication (Apache Tomcat)",
    "countermeasure_solution": "Setup Client-cert Authentication to require each client connecting to the server have a certificate used to authenticate. This is generally regarded as strong authentication than a password as it requires the client to have the cert and not just know a password.",
    "weakness_title_read_only": "Lack of Client-cert Authentication (Apache Tomcat)",
    "weakness_id_read_only": "P996",
    "weakness": "753b2901-c72e-4c17-8906-09b52fb26cd1",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2018-01-08T12:54:14.970000-05:00",
    "last_updated": "2021-06-25T14:47:59.746000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T990",
    "universal_id": "61262295-5a37-432f-9607-80978a3bba6a",
    "countermeasure_name": "Disable auto deployment (Apache Tomcat)",
    "countermeasure_solution": " - **Disable auto deployment of applications:** Tomcat allows auto deployment of applications while Tomcat is running. It is recommended that this capability be disabled.\n\n- **Disable deploy on startup of applications.**",
    "weakness_title_read_only": "Enabled Auto Deployment (Apache Tomcat)",
    "weakness_id_read_only": "P997",
    "weakness": "e7d08d5f-2d2c-41e1-bd37-eeded387ddd5",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2018-01-08T12:54:15.510000-05:00",
    "last_updated": "2021-06-25T14:47:57.146000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T991",
    "universal_id": "5a27a56d-c305-410f-80bb-e05c67316fb2",
    "countermeasure_name": "Configure connectionTimeout (Apache Tomcat)",
    "countermeasure_solution": "Set the `connectionTimeout` setting for Tomcat to close idle sockets after a specific amount of time to save system resources.",
    "weakness_title_read_only": "Open Idle Sockets (Apache Tomcat)",
    "weakness_id_read_only": "P998",
    "weakness": "1836f099-1e37-4b30-99e8-af6731e0cfac",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2018-01-08T12:54:15.555000-05:00",
    "last_updated": "2021-06-25T14:47:40.956000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T992",
    "universal_id": "cd3fbb46-ff8b-40dd-b241-811d82c0bbd6",
    "countermeasure_name": "Configure maxHttpHeaderSize properly (Apache Tomcat)",
    "countermeasure_solution": "Properly set `maxHttpHeaderSize` that limits the size of the request and response headers defined in bytes. If not specified, the default is 8192 bytes.",
    "weakness_title_read_only": "Unlimited Request Header Size (Apache Tomcat)",
    "weakness_id_read_only": "P999",
    "weakness": "dd2e3c84-6ebe-4d57-ae1d-2f35f2025269",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2018-01-08T12:54:15.582000-05:00",
    "last_updated": "2021-06-25T14:47:40.122000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T993",
    "universal_id": "80b8fafc-ae12-4ac5-bd11-95f62ffacd27",
    "countermeasure_name": "Force TLS for all applications (Apache Tomcat)",
    "countermeasure_solution": "Use the `transport-guarantee` attribute to ensure TLS protection when accessing all applications. This can be overridden to be disabled on a per application basis in the application configuration.",
    "weakness_title_read_only": "Clear Text and Unencrypted Transmission of Sensitive Information (Apache Tomcat)",
    "weakness_id_read_only": "P1000",
    "weakness": "dd711c37-efae-41ab-bf0b-3c50868c11f7",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2018-01-08T12:54:15.609000-05:00",
    "last_updated": "2021-06-25T14:47:36.451000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T994",
    "universal_id": "5bc19dee-1ce9-4b5a-bd60-819466e25f0c",
    "countermeasure_name": "Do not resolve hosts on logging valves (Apache Tomcat)",
    "countermeasure_solution": "Set `enableLookups` to *false* on Connector.",
    "weakness_title_read_only": "Resolving hosts on logging valves (Apache Tomcat)",
    "weakness_id_read_only": "P1001",
    "weakness": "6cc274c9-858a-4ff2-bb9d-08130bd35e50",
    "tags": "",
    "countermeasure_priority": "3",
    "phase": "deployment",
    "created": "2018-01-08T12:54:15.636000-05:00",
    "last_updated": "2021-06-25T14:47:40.709000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T995",
    "universal_id": "ac849f71-4185-4e23-bc0b-26249f6bae81",
    "countermeasure_name": "Restrict access to the web administration (Apache Tomcat)",
    "countermeasure_solution": "Limit access to the web administration application to only those with a required needed.",
    "weakness_title_read_only": "Unrestricted access to the web administration (Apache Tomcat)",
    "weakness_id_read_only": "P1002",
    "weakness": "deba33e8-9a90-4555-975e-36a275620c97",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2018-01-08T12:54:15.663000-05:00",
    "last_updated": "2021-06-25T14:47:48.873000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T996",
    "universal_id": "740de79d-1c8b-4253-aaa0-8924c4a86649",
    "countermeasure_name": "Do not allow additional path delimiters (Apache Tomcat)",
    "countermeasure_solution": "Disallow `BACKSLASH` and `ENCODED_SLASH`.\n\nBeing able to specify different path-delimiters on Tomcat creates the possibility that an attacker can access applications that were previously blocked by a proxy such as `mod_proxy`.",
    "weakness_title_read_only": "Allowing Additional Path Delimiters (Apache Tomcat)",
    "weakness_id_read_only": "P1003",
    "weakness": "69f6906f-37db-463d-82fc-e1119844c043",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2018-01-08T12:54:16.012000-05:00",
    "last_updated": "2021-06-25T14:47:54.906000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T997",
    "universal_id": "faf9dcc2-4ecf-46cc-b1cb-82623770104d",
    "countermeasure_name": "Do not allow custom header status messages (Apache Tomcat)",
    "countermeasure_solution": "If custom header status messages are required make sure it is only in US-ASCII and does not include any user-supplied data.",
    "weakness_title_read_only": "Allowing custom header status messages (Apache Tomcat)",
    "weakness_id_read_only": "P1004",
    "weakness": "05035f05-d7bb-424b-972b-f6bcad35dd82",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "deployment",
    "created": "2018-01-08T12:54:16.040000-05:00",
    "last_updated": "2021-06-25T14:47:46.629000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T998",
    "universal_id": "35a1b094-ecc8-434d-b8bb-9c9605628173",
    "countermeasure_name": "Test that leakage is prevented for server platform information (Apache Tomcat)",
    "countermeasure_solution": "Perform the following to determine if Tomcat is configured to prevent sending debug information to the requestor\n\n* Ensure an `<error-page>` element is defined in`$ CATALINA_HOME/conf/web.xml`. \n\n* Ensure the `<error-page>` element has an `<exception-type>` child element with a value of java.lang.Throwable. \n\n* Ensure the `<error-page>` element has a `<location>` child element.\n\nPerform the following to determine if the server platform, as advertised in the HTTP Server header, has been changed:\n\n* Locate all Connector elements in `$CATALINA_HOME/conf/server.xml`. \n\n* Ensure each Connector does not have an allowTrace attribute or if the allowTrace attribute is not set to true. \n\n_Note:_ Perform the above for each application hosted within Tomcat. Per application instances of web.xml can be found at `$CATALINA_HOME/webapps/<APP_NAME>/WEBINF/web.xml`",
    "weakness_title_read_only": "Server Platform Information Leakage (Apache Tomcat)",
    "weakness_id_read_only": "P978",
    "weakness": "5dc60cd7-545c-48ee-9cab-e0869f41c23a",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2018-01-08T12:54:16.067000-05:00",
    "last_updated": "2021-06-25T14:47:38.438000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1000",
    "universal_id": "2cd97c84-f542-4687-90c4-1f097ba89433",
    "countermeasure_name": "Test that the Shutdown Port is protected (Apache Tomcat)",
    "countermeasure_solution": "Ensure the shutdown attribute in `$CATALINA_HOME/conf/server.xml` is not set to `SHUTDOWN`.\n\nPerform the following to determine if the shutdown port is configured to use the default shutdown command:\n\n\n    $ cd $CATALINA_HOME/conf \n    $ grep 'shutdown[[:space:]]*=[[:space:]]*\"SHUTDOWN\"' server.xml\n\nPerform the following to determine if the shutdown port has been disabled:\n\n* Ensure the port attribute in `$CATALINA_HOME/conf/server.xml` is set to -1. \n\n        $ cd $CATALINA_HOME/conf/ \n        $ grep '<Server[[:space:]]\\+[^>]*port[[:space:]]*=[[:space:]]*\"-1\"' server.xml",
    "weakness_title_read_only": "Leaving Shutdown Port enabled (Apache Tomcat)",
    "weakness_id_read_only": "P979",
    "weakness": "2b8043fb-b4b6-4c22-b213-b9a9308a72d3",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2018-01-08T13:00:53.175000-05:00",
    "last_updated": "2021-06-25T14:47:47.217000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1001",
    "universal_id": "dd174c2f-ec8a-439d-8aac-9ffb2daac88e",
    "countermeasure_name": "Verify that proper restrictions are applied in Tomcat configurations (Apache Tomcat)",
    "countermeasure_solution": "Perform the following to ensure the permission on the `$CATALINA_HOME` directory prevent unauthorized modification.\n\n     $ cd $CATALINA_HOME\n     $ find . -follow -maxdepth 0 \\( -perm /o+rwx,g=w -o ! -user tomcat_admin -o ! -group tomcat \\) -ls\n\nThe above command should not emit any output.\n\nPerform the following to determine if the ownership and permissions on `$CATALINA_HOME/conf/context.xml` are securely configured.\n\n* Change to the location of the `$CATALINA_HOME/conf` and execute the following:\n\n        # cd $CATALINA_HOME/conf \n        # find context.xml -follow -maxdepth 0 \\( -perm /o+rwx,g=w -o ! -user tomcat_admin -o ! -group tomcat \\) -ls\n\nThe above command should not emit any output.\n\n\nPerform the following to determine if the ownership and permissions on `$CATALINA_HOME/conf/logging.properties`  is securely configured.\n\n* Change to the location of the `$CATALINA_HOME/conf` and execute the following:\n\n         # cd $CATALINA_HOME/conf/ \n         # find logging.properties -follow -maxdepth 0 \\( -perm /o+rwx,g=w -o ! -user tomcat_admin -o ! -group tomcat \\) -ls\n\nThe above command should not emit any output.\n\nPerform the following to determine if the ownership and permissions on `$CATALINA_HOME/conf/server.xml` are securely configured.\n\n* Change to the location of the `$CATALINA_HOME/conf` and execute the following:\n\n        # cd $CATALINA_HOME/conf/ \n        # find server.xml -follow -maxdepth 0 \\( -perm /o+rwx,g=w -o ! -user tomcat_admin -o ! -group tomcat \\) -ls\n\nThe above command should not emit any output.\n\nPerform the following to determine if the ownership and permissions on `$CATALINA_HOME/conf/tomcat-users.xml` are securely configured.\n\n* Change to the location of the `$CATALINA_HOME/conf` and execute the following:\n\n        # cd $CATALINA_HOME/conf/ \n        # find tomcat-users.xml -follow -maxdepth 0 \\( -perm /o+rwx,g=w -o ! -user tomcat_admin -o ! -group tomcat \\) -ls\n\nThe above command should not emit any output.\n\nPerform the following to determine if the ownership and permissions on `$CATALINA_HOME/conf/web.xml` are securely configured.\n\n* Change to the location of the `$CATALINA_HOME/conf` and execute the following:\n\n        # cd $CATALINA_HOME/conf/ \n        # find web.xml -follow -maxdepth 0 \\( -perm /o+rwx,g=w -o ! -user tomcat_admin -o ! -group tomcat \\) -ls\n\nThe above command should not emit any output.\n\nPerform the following to ensure the permissions on the `$CATALINA_BASE` directory prevent unauthorized modification.\n\n    $ cd $CATALINA_BASE\n    $ find . -follow -maxdepth 0 \\( -perm /o+rwx,g=w -o ! -user tomcat_admin -o ! -group tomcat \\) -ls\n\nThe above command should not emit any output.\n\nPerform the following to determine if the ownership and permissions on `$CATALINA_HOME/conf` are securely configured.\n\n* Change to the location of the $CATALINA_HOME/conf and execute the following:\n\n         # cd $CATALINA_HOME/conf \n         # find . -maxdepth 0 \\( -perm /o+rwx,g=w -o ! -user tomcat_admin -o ! -group tomcat \\) -ls\n\nThe above command should not emit any output.\n\nPerform the following to determine if the ownership and permissions on `$CATALINA_HOME/logs` are securely configured.\n\n* Change to the location of the `$CATALINA_HOME/log`s and execute the following:\n\n         # cd $CATALINA_HOME \n         # find logs -follow -maxdepth 0 \\( -perm /o+rwx -o ! -user tomcat_admin -o ! -group tomcat \\) -ls\n\nThe above command should not emit any output.\n\nPerform the following to determine if the ownership and permissions on `$CATALINA_HOME/temp` are securely configured.\n\n* Change to the location of the `$CATALINA_HOME/temp` and execute the following:\n\n         # cd $CATALINA_HOME \n         # find temp -follow -maxdepth 0 \\( -perm /o+rwx -o ! -user tomcat_admin -o ! -group tomcat \\) -ls\n\nThe above command should not emit any output.\n\nPerform the following to determine if the ownership and permissions on `$CATALINA_HOME/bin` are securely configured.\n\n1. Change to the location of the `$CATALINA_HOME/bin` and execute the following:\n\n        # cd $CATALINA_HOME\n        # find bin -follow -maxdepth 0 \\( -perm /o+rwx,g=w -o ! -user tomcat_admin -o ! -group tomcat \\) -ls\n\nThe above command should not emit any output.\n\nPerform the following to determine if the ownership and permissions on `$CATALINA_HOME/webapps` are securely configured.\n\n* Change to the location of the `$CATALINA_HOME/webapps` and execute the following:\n\n        # cd $CATALINA_HOME \n        # find webapps -follow -maxdepth 0 \\( -perm /o+rwx,g=w -o ! -user tomcat_admin -o ! -group tomcat \\) -ls\n\nThe above command should not emit any output.\n\nPerform the following to determine if the ownership and permissions on `$CATALINA_HOME/conf/catalina.policy` care securely configured.\n\n* Change to the location of the `$CATALINA_HOME/` and execute the following:\n\n         # cd $CATALINA_HOME/conf/ \n         # find catalina.policy -follow -maxdepth 0 \\( -perm /o+rwx -o ! -user tomcat_admin -o ! -group tomcat \\) -ls\n\nThe above command should not emit any output.\n\nPerform the following to determine if the ownership and permissions on `$CATALINA_HOME/conf/catalina.properties` care securely configured.\n\n* Change to the location of the `$CATALINA_HOME/` and execute the following:\n\n         # cd $CATALINA_HOME/conf/ \n         # find catalina.properties -follow -maxdepth 0 \\( -perm /o+rwx,g=w -o ! -user tomcat_admin -o ! -group tomcat \\) -ls\n\nThe above command should not emit any output.",
    "weakness_title_read_only": "Improper Restrictions in Tomcat Configurations (Apache Tomcat)",
    "weakness_id_read_only": "P980",
    "weakness": "53e909bd-f019-4f69-91ab-35232aa97b73",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2018-01-08T13:00:53.195000-05:00",
    "last_updated": "2021-06-25T14:47:50.356000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1002",
    "universal_id": "f4e18fd8-c5b3-47bd-88ad-19656a1cfa59",
    "countermeasure_name": "Verify that scheme is set accurately (Apache Tomcat)",
    "countermeasure_solution": "Review `server.xml` to ensure the Connector's `scheme` attribute is set to *http* for Connectors operating over HTTP. Also ensure the Connector's `scheme` attribute is set to *https* for Connectors operating over HTTPS.",
    "weakness_title_read_only": "Inaccurate Scheme Setting (Apache Tomcat)",
    "weakness_id_read_only": "P981",
    "weakness": "60883fd7-6781-49f7-aafc-0c22e5591dd7",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2018-01-08T13:00:53.412000-05:00",
    "last_updated": "2021-06-25T14:47:59.616000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1003",
    "universal_id": "af5c0d7c-ebd2-4319-beb5-ba960b123224",
    "countermeasure_name": "Verify that runtime access to sensitive packages is restricted (Apache Tomcat)",
    "countermeasure_solution": "Review `package.access` list in `$CATALINA_BASE/conf/catalina.properties` to ensure only allowed packages are defined.",
    "weakness_title_read_only": "Permissive runtime access to sensitive packages (Apache Tomcat)",
    "weakness_id_read_only": "P982",
    "weakness": "5809ad15-cad6-4382-87c5-9025fb51caa0",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2018-01-08T13:00:54.419000-05:00",
    "last_updated": "2021-06-25T14:47:49.796000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1004",
    "universal_id": "a29ff3c9-9795-4798-bf5e-da8dbcd2da4a",
    "countermeasure_name": "Verify that a sandboxing alternative to Security Manager is used (Apache Tomcat)",
    "countermeasure_solution": "Verify that the server does not rely on the deprecated Security Manager object in Java and uses a reliable sandboxing alternative to Security Manager.",
    "weakness_title_read_only": "Lack of a sandboxing mechanism or relying on the deprecated Security Manager (Apache Tomcat)",
    "weakness_id_read_only": "P983",
    "weakness": "f2ee8ee9-490a-4506-9281-69e8cbd016b6",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2018-01-08T13:00:54.444000-05:00",
    "last_updated": "2022-10-14T16:35:51.954000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1005",
    "universal_id": "97d578e8-ada2-45af-a098-7ad0541a14e5",
    "countermeasure_name": "Verify that Web content directory is on a separate partition from the Tomcat system files (Apache Tomcat)",
    "countermeasure_solution": "Locate the Tomcat system files and web content directory. Review the system partitions and ensure the system files and web content directory are on separate partitions.\n\n    # df $CATALINA_HOME/webapps\n    # df $CATALINA_HOME\n\nNote: Use the default value \"webapps\" which is defined by \"appBase\" attribute here.",
    "weakness_title_read_only": "Storing Web content directory at the same partition as the Tomcat system files (Apache Tomcat)",
    "weakness_id_read_only": "P984",
    "weakness": "a99c1e19-8ca5-4c6c-a9eb-0f1baa279c07",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2018-01-08T13:00:54.492000-05:00",
    "last_updated": "2021-06-25T14:47:50.444000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1006",
    "universal_id": "81ca879d-9760-4a20-bb2e-e55713714fb2",
    "countermeasure_name": "Verify that symbolic linking is not allowed (Apache Tomcat)",
    "countermeasure_solution": "Ensure all `context.xml` have the `allowLinking` attribute set to *false* or `allowLinking` does not exist.\n\n    # find . -name context.xml | xargs grep \"allowLinking\"",
    "weakness_title_read_only": "Allowing symbolic linking (Apache Tomcat)",
    "weakness_id_read_only": "P985",
    "weakness": "3b72e895-1790-4336-b28f-139a22aa84a2",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2018-01-08T13:00:54.509000-05:00",
    "last_updated": "2021-06-25T14:47:46.922000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1007",
    "universal_id": "44861205-af55-48f4-8553-690f212eafea",
    "countermeasure_name": "Verify that applications are not running as privileged (Apache Tomcat)",
    "countermeasure_solution": "Ensure all `context.xml` have the privileged attribute set to *false* or `privileged` does not exist.\n\n    # find . -name context.xml | xargs grep \"privileged\"",
    "weakness_title_read_only": "Running applications as privileged (Apache Tomcat)",
    "weakness_id_read_only": "P986",
    "weakness": "40f65260-1898-438f-b8e3-b63bcb025675",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2018-01-08T13:00:54.525000-05:00",
    "last_updated": "2021-06-25T14:47:51.694000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1008",
    "universal_id": "4b7522dd-fba8-4622-8a18-b343886a13ad",
    "countermeasure_name": "Verify that cross context requests are not allowed (Apache Tomcat)",
    "countermeasure_solution": "Ensure all `context.xml` have the `crossContext` attribute set to *false* or `crossContext` does not exist.\n\n    # find . -name context.xml | xargs grep \"crossContext\"",
    "weakness_title_read_only": "Allowing cross context requests (Apache Tomcat)",
    "weakness_id_read_only": "P987",
    "weakness": "4df48f25-4194-44ee-b11b-92ee342a6156",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2018-01-08T13:00:54.542000-05:00",
    "last_updated": "2021-06-25T14:47:46.480000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1009",
    "universal_id": "78c7e2c6-e8da-4f0f-898f-4fcef479d038",
    "countermeasure_name": "Verify that memory leak listener is enabled (Apache Tomcat)",
    "countermeasure_solution": "Review the `$CATALINA_HOME/conf/server.xml` and see whether **JRE Memory Leak Prevention Listener** is enabled.",
    "weakness_title_read_only": "Disabled memory leak listener (Apache Tomcat)",
    "weakness_id_read_only": "P988",
    "weakness": "341c4524-c154-4c35-85a3-781ebbdc4d77",
    "tags": "",
    "countermeasure_priority": "2",
    "phase": "testing",
    "created": "2018-01-08T13:00:54.559000-05:00",
    "last_updated": "2021-06-25T14:47:59.152000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1010",
    "universal_id": "a89d1b11-5723-41fa-9235-68ea0a7d9713",
    "countermeasure_name": "Verify that Security Lifecycle Listener is set (Apache Tomcat)",
    "countermeasure_solution": "Review `server.xml` to ensure the `Security Lifecycle Listener` element is uncommented and `checkedOsUsers`, `minimumUmask` attributes are set with expected values.",
    "weakness_title_read_only": "Disabled Security Lifecycle Listener (Apache Tomcat)",
    "weakness_id_read_only": "P989",
    "weakness": "4e7f9fd8-4cb3-4dd0-8648-cfd2b5107db1",
    "tags": "",
    "countermeasure_priority": "3",
    "phase": "testing",
    "created": "2018-01-08T13:00:54.577000-05:00",
    "last_updated": "2021-06-25T14:47:59.471000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1011",
    "universal_id": "3b858940-5ff6-46d6-b6a3-d4b0e748efdf",
    "countermeasure_name": "Verify that logEffectiveWebXml and metadata-complete are enabled in production (Apache Tomcat)",
    "countermeasure_solution": "* Review each application's `web.xml` file located in the applications `$CATALINA_BASE\\<app name>\\WEB-INF\\web.xml` and determine if the `metadata-complete` property is set.\n\n        <web-app...metadata-complete=\"true\"...>\n\n* Review each application's `context.xml` file located in the applications `$CATALINA_BASE\\<app name>\\META-INF\\context.xml` and determine if the `metadata-complete` property is set.\n\n        <Context...logEffectiveWebXml=\"true\"...>",
    "weakness_title_read_only": "Disabled logEffectiveWebXml and metadata-complete in production (Apache Tomcat)",
    "weakness_id_read_only": "P990",
    "weakness": "1dd48921-c8ee-42dd-8d73-f19704d34ad3",
    "tags": "",
    "countermeasure_priority": "3",
    "phase": "testing",
    "created": "2018-01-08T13:00:54.594000-05:00",
    "last_updated": "2021-06-25T14:47:57.887000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1012",
    "universal_id": "1ecf333d-90cb-4a7e-aefe-6615ce9801e5",
    "countermeasure_name": "Verify that that TLS is forced for manager application (Apache Tomcat)",
    "countermeasure_solution": "Ensure `$CATALINA_HOME/webapps/manager/WEB-INF/web.xml` has the `<transport-guarantee>` attribute set to `CONFIDENTIAL.`\n\n    # grep transport-guarantee $CATALINA_HOME/webapps/manager/WEB-INF/web.xml",
    "weakness_title_read_only": "Plaintext communication for manager application (Apache Tomcat)",
    "weakness_id_read_only": "P991",
    "weakness": "0c1f0573-3de5-446d-8d9c-4b79b0bbf2fd",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2018-01-08T13:00:54.612000-05:00",
    "last_updated": "2021-06-25T14:47:37.349000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1013",
    "universal_id": "6a050c42-a7bc-4e48-8b83-5a3b2c4ab937",
    "countermeasure_name": "Verify that servlet Compliance is restricted (Apache Tomcat)",
    "countermeasure_solution": "Ensure the following parameter is added to the startup script which by default is located at `$CATALINA_HOME/bin/catalina.sh`:\n\n    Dorg.apache.catalina.STRICT_SERVLET_COMPLIANCE=true",
    "weakness_title_read_only": "Lax servlet Compliance (Apache Tomcat)",
    "weakness_id_read_only": "P992",
    "weakness": "6a7c8820-5ace-4c67-979f-cfa850256106",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2018-01-08T13:00:54.630000-05:00",
    "last_updated": "2021-06-25T14:47:54.703000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1014",
    "universal_id": "059059c6-e323-4729-a286-86e88822b039",
    "countermeasure_name": "Verify that session facade recycling is turned off (Apache Tomcat)",
    "countermeasure_solution": "Ensure the folowwing parameter is added to the startup script which by default is located at `$CATALINA_HOME/bin/catalina.sh`:\n\n    Dorg.apache.catalina.connector.RECYCLE_FACADES=true",
    "weakness_title_read_only": "Session facade recycling (Apache Tomcat)",
    "weakness_id_read_only": "P1005",
    "weakness": "32133737-a6bd-4a3a-8906-35d348472413",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2018-01-08T13:00:54.647000-05:00",
    "last_updated": "2021-06-25T14:47:56.266000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1015",
    "universal_id": "0569f386-50bf-4227-9549-83a0197a23a7",
    "countermeasure_name": "Verify that extraneous resources are removed (Apache Tomcat)",
    "countermeasure_solution": " - Perform the following to determine the existence of extraneous resources:\n\n List all files extraneous files. The following should yield no output:\n\n     $ ls -l \n     $CATALINA_HOME/webapps/docs \n     $CATALINA_HOME/webapps/examples\n\n- Perform the following to identify configured Connectors:\n\nExecute the following command to find configured Connectors. Ensure only those required are present and not commented out:\n     \n     $ grep \"Connector\" \n     $ CATALINA_HOME/conf/server.xml",
    "weakness_title_read_only": "Extraneous Resources (Apache Tomcat)",
    "weakness_id_read_only": "P994",
    "weakness": "da3af8c6-d1bf-4809-a547-e03626f7ba15",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2018-01-08T13:00:54.664000-05:00",
    "last_updated": "2021-06-25T14:47:55.639000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1017",
    "universal_id": "69bf58cf-84ac-4f3c-90b6-3afd5efcfa91",
    "countermeasure_name": "Test that Tomcat realms are configured securely (Apache Tomcat)",
    "countermeasure_solution": "Perform the following to ensure improper realm is not in use:\n\n    # grep \"Realm className\" $CATALINA_HOME/conf/server.xml | grep MemoryRealm\n    # grep \"Realm className\" $CATALINA_HOME/conf/server.xml | grep JDBCRealm\n    # grep \"Realm className\" $CATALINA_HOME/conf/server.xml | grep UserDatabaseRealm\n    # grep \"Realm className\" $CATALINA_HOME/conf/server.xml | grep JAASRealm\n\nThe above commands should not emit any output.\n\nPerform the following to check to see if a LockOut realm is being used:\n    \n    # grep \"LockOutRealm\" $CATALINA_HOME/conf/server.xml",
    "weakness_title_read_only": "Improper Realms Configuration (Apache Tomcat)",
    "weakness_id_read_only": "P995",
    "weakness": "2436d9b3-26c8-43d5-8e2f-78a317ea0a10",
    "tags": "",
    "countermeasure_priority": "3",
    "phase": "testing",
    "created": "2018-01-08T13:00:54.746000-05:00",
    "last_updated": "2021-06-25T14:47:48.798000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1018",
    "universal_id": "00794f90-014b-41f3-b11b-24f22d8db573",
    "countermeasure_name": "Verify that Client-cert Authentication is set up (Apache Tomcat)",
    "countermeasure_solution": "Review the Connector configuration in `server.xml` and ensure the ***clientAuth*** parameter is set to *true*.",
    "weakness_title_read_only": "Lack of Client-cert Authentication (Apache Tomcat)",
    "weakness_id_read_only": "P996",
    "weakness": "753b2901-c72e-4c17-8906-09b52fb26cd1",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2018-01-08T13:00:54.767000-05:00",
    "last_updated": "2021-06-25T14:47:59.716000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1019",
    "universal_id": "a236c59a-dead-4c53-8904-5f44266ab5fc",
    "countermeasure_name": "Verify that auto deployment is disabled (Apache Tomcat)",
    "countermeasure_solution": " - Perform the following to ensure `autoDeploy` is set to *false*.\n\n        # grep \"autoDeploy\" $CATALINA_HOME/conf/server.xml\n\n- Perform the following to ensure `deployOnStartup` is set to *false*.\n\n        # grep \"deployOnStartup\" $CATALINA_HOME/conf/server.xml",
    "weakness_title_read_only": "Enabled Auto Deployment (Apache Tomcat)",
    "weakness_id_read_only": "P997",
    "weakness": "e7d08d5f-2d2c-41e1-bd37-eeded387ddd5",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2018-01-08T13:00:54.974000-05:00",
    "last_updated": "2021-06-25T14:47:56.829000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1020",
    "universal_id": "37778728-8071-4519-8d0c-bb251fa82e18",
    "countermeasure_name": "Verify that connectionTimeout is configured (Apache Tomcat)",
    "countermeasure_solution": "Locate each `connectionTimeout` setting in `$CATALINA_HOME/conf/server.xml` and verify the setting is correct.\n\n    # grep connectionTimeout $CATALINA_HOME/conf/server.xml",
    "weakness_title_read_only": "Open Idle Sockets (Apache Tomcat)",
    "weakness_id_read_only": "P998",
    "weakness": "1836f099-1e37-4b30-99e8-af6731e0cfac",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2018-01-08T13:00:54.998000-05:00",
    "last_updated": "2021-06-25T14:47:41.133000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1021",
    "universal_id": "dcb83533-5600-4b77-9cac-094e07c46dee",
    "countermeasure_name": "Verify that maxHttpHeaderSize is properly configured (Apache Tomcat)",
    "countermeasure_solution": "Locate each `maxHttpHeaderSize` setting in `$CATALINA_HOME/conf/server.xml` and verify that they are set to 8192.\n\n    # grep maxHttpHeaderSize $CATALINA_HOME/conf/server.xml",
    "weakness_title_read_only": "Unlimited Request Header Size (Apache Tomcat)",
    "weakness_id_read_only": "P999",
    "weakness": "dd2e3c84-6ebe-4d57-ae1d-2f35f2025269",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2018-01-08T13:00:55.023000-05:00",
    "last_updated": "2021-06-25T14:47:40.367000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1022",
    "universal_id": "95203728-666a-4b96-980b-093356416d93",
    "countermeasure_name": "Verify that TLS is forced for all applications (Apache Tomcat)",
    "countermeasure_solution": "Ensure `$CATALINA_HOME/conf/web.xml` has the attribute set to `CONFIDENTIAL`.\n\n    # grep transport-guarantee $CATALINA_HOME/conf/web.xml",
    "weakness_title_read_only": "Clear Text and Unencrypted Transmission of Sensitive Information (Apache Tomcat)",
    "weakness_id_read_only": "P1000",
    "weakness": "dd711c37-efae-41ab-bf0b-3c50868c11f7",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2018-01-08T13:00:55.052000-05:00",
    "last_updated": "2021-06-25T14:47:36.395000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1023",
    "universal_id": "608858b4-9664-43a5-a272-ff6f3cfbc755",
    "countermeasure_name": "Verify that hosts are not resolved on logging valves (Apache Tomcat)",
    "countermeasure_solution": "Ensure `Connector` elements have the `enableLookups` attribute set to *false* or `enableLookups` does not exist.\n\n    # grep enableLookups $CATALINA_HOME/conf/server.xml",
    "weakness_title_read_only": "Resolving hosts on logging valves (Apache Tomcat)",
    "weakness_id_read_only": "P1001",
    "weakness": "6cc274c9-858a-4ff2-bb9d-08130bd35e50",
    "tags": "",
    "countermeasure_priority": "3",
    "phase": "testing",
    "created": "2018-01-08T13:00:55.081000-05:00",
    "last_updated": "2021-06-25T14:47:40.184000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1024",
    "universal_id": "cd1750f7-0ded-4ebd-8490-0a1ea2df14be",
    "countermeasure_name": "Verify that access to the web administration is restricted (Apache Tomcat)",
    "countermeasure_solution": "Review `$CATALINA_HOME/conf/server.xml` to ascertain that the `RemoteAddrValve` option is uncommented and configured to only allow access to systems required to connect.",
    "weakness_title_read_only": "Unrestricted access to the web administration (Apache Tomcat)",
    "weakness_id_read_only": "P1002",
    "weakness": "deba33e8-9a90-4555-975e-36a275620c97",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2018-01-08T13:00:55.102000-05:00",
    "last_updated": "2021-06-25T14:47:45.415000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1025",
    "universal_id": "3593fcd6-abd1-4f6e-b8dd-921a4a8f6447",
    "countermeasure_name": "Verify that additional path delimiters are not allowed (Apache Tomcat)",
    "countermeasure_solution": "Ensure the following parameters are added to the start up script which by default is located at `$CATALINA_HOME/bin/catalina.sh`:\n\n    Dorg.apache.catalina.connector.CoyoteAdapter.ALLOW_BACKSLASH=false\n    Dorg.apache.tomcat.util.buf.UDecoder.ALLOW_ENCODED_SLASH=false",
    "weakness_title_read_only": "Allowing Additional Path Delimiters (Apache Tomcat)",
    "weakness_id_read_only": "P1003",
    "weakness": "69f6906f-37db-463d-82fc-e1119844c043",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2018-01-08T13:00:55.186000-05:00",
    "last_updated": "2021-06-25T14:47:54.413000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1026",
    "universal_id": "b88faf01-65fa-45af-a966-2ef95fa4b916",
    "countermeasure_name": "Verify that custom header status messages are not allowed (Apache Tomcat)",
    "countermeasure_solution": "Ensure the following parameter is added to the startup script which by default is located at `$CATALINA_HOME/bin/catalina.sh`:\n\n    Dorg.apache.coyote.USE_CUSTOM_STATUS_MSG_IN_HEADER=false",
    "weakness_title_read_only": "Allowing custom header status messages (Apache Tomcat)",
    "weakness_id_read_only": "P1004",
    "weakness": "05035f05-d7bb-424b-972b-f6bcad35dd82",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2018-01-08T13:00:55.200000-05:00",
    "last_updated": "2021-06-25T14:47:47.631000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1027",
    "universal_id": "cfb448f4-6803-4191-a2bd-ce05428fc648",
    "countermeasure_name": "Configure TLS/SSL securely (Apache Tomcat)",
    "countermeasure_solution": " - Ensure `SSLEnabled` is set to *True* for Sensitive Connectors: The `SSLEnabled` setting determines if SSL is enabled for a specific Connector. It is recommended that SSL be utilized for any Connector that sends or receives sensitive information, such as authentication credentials or personal information.\n\n- Ensure `secure` is set to true only for SSL-enabled Connectors: The secure attribute is used to convey Connector security status to applications operating over the Connector. This is typically achieved by calling `request.isSecure()`. Ensure the secure attribute is only set to true for Connectors operating with the `SSLEnabled` attribute set to *true*.\n\n- Ensure SSL Protocol is set to **TLS** for Secure Connectors: The `sslProtocol` setting determines which protocol Tomcat will use to protect traffic. It is recommended that `sslProtocol` attribute be set to TLS.",
    "weakness_title_read_only": "Lack of Secure TLS/SSL Configuration (Apache Tomcat)",
    "weakness_id_read_only": "P1007",
    "weakness": "2017b6c8-314e-4361-ab71-a12970362740",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2018-01-10T10:15:32.642000-05:00",
    "last_updated": "2021-06-25T14:47:36.600000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1028",
    "universal_id": "f1d9140f-f2c2-498f-9684-728ea37cf53f",
    "countermeasure_name": "Log sufficiently and protect logs (Apache Tomcat)",
    "countermeasure_solution": "Follow these instructions to protect system logs:\n\n- Specify file handler in `logging.properties` files: Handlers specify where log messages are sent. Console handlers send log messages to the Java console and File handlers specify logging to a file.\n\n- Set the directory attribute in `context.xml` to a secure location: The directory attribute tells Tomcat where to store logs. It is recommended that the location pointed to by the directory attribute be secured.\n\n- Properly set pattern in `context.xml`: The pattern setting informs Tomcat what information should be logged per applications. At a minimum, enough information to uniquely identify a request, what was requested, where the requested originated from, and when the request occurred should be logged. The following will log the request date and time (%t), the requested URL (%U), the remote IP address (%a), the local IP address (%A), the request method (%m), the local port (%p), query string, if present, (%q), and the HTTP status code of the response (%s).\n\n        pattern=\"%t %U %a %A %m %p %q %s\"\n\n- Set the directory attribute in `logging.properties` to a secure location: The directory attribute tells Tomcat where to store logs. The directory value should be a secure location with restricted access.",
    "weakness_title_read_only": "Insufficient Logging or Insufficient Protection of Logs (Apache Tomcat)",
    "weakness_id_read_only": "P1008",
    "weakness": "a5444201-7fa1-45e6-87fb-339ec1c9950e",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2018-01-10T10:15:32.687000-05:00",
    "last_updated": "2021-06-25T14:47:58.081000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1030",
    "universal_id": "5d26bfaa-4462-4a2d-8728-626d77a74d2d",
    "countermeasure_name": "Verify that TLS/SSL is configured securely (Apache Tomcat)",
    "countermeasure_solution": " - Review `server.xml` and ensure all Connectors sending or receiving sensitive information have the `SSLEnabled` attribute set to *true*.\n\n- Review `server.xml` and ensure the `secure` attribute is set to *true* for those Connectors having `SSLEnabled` set to *true*. Also, ensure the `secure` attribute set to *false* for those Connectors having `SSLEnabled` set to *false*.\n\n- Review `server.xml` to ensure the `sslProtocol` attribute is set to ***TLS*** for all Connectors having `SSLEngine` set to *on*.",
    "weakness_title_read_only": "Lack of Secure TLS/SSL Configuration (Apache Tomcat)",
    "weakness_id_read_only": "P1007",
    "weakness": "2017b6c8-314e-4361-ab71-a12970362740",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2018-01-10T10:15:32.773000-05:00",
    "last_updated": "2021-06-25T14:47:36.421000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1031",
    "universal_id": "978b3ebe-e3a7-431b-8cf6-d91890ee2dfa",
    "countermeasure_name": "Verify that logs are captured and protected sufficiently (Apache Tomcat)",
    "countermeasure_solution": " - Review each application's `logging.properties` file located in the applications `$CATALINA_BASE\\webapps\\<app name>\\WEB-INF\\classes` directory and determine if the file handler properties are set:\n\n        $ grep handlers \\$CATALINA_BASE\\webapps\\<app name>\\WEB-INF\\classes\\logging.properties\n\n    In the instance where an application specific logging has not been created, the `logging.properties` file will be located in `$CATALINA_BASE\\conf`:\n\n        $ grep handlers $CATALINA_BASE\\conf\\logging.properties\n\n- Review the permissions of the directory specified by the directory setting to ensure the permissions are `o-rwx` and owned by `tomcat_admin:tomcat:`\n\n        # grep directory context.xml# ls -ld <log location>\n\n- Review the pattern settings to ensure it contains all the variables required by the installation:\n\n        # grep pattern $CATALINA_BASE\\webapps\\<app-name>\\META-INF\\context.xml",
    "weakness_title_read_only": "Insufficient Logging or Insufficient Protection of Logs (Apache Tomcat)",
    "weakness_id_read_only": "P1008",
    "weakness": "a5444201-7fa1-45e6-87fb-339ec1c9950e",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2018-01-10T10:15:32.793000-05:00",
    "last_updated": "2021-06-25T14:47:58.497000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1034",
    "universal_id": "31800435-1262-4a4b-94ff-16e49730e6f8",
    "countermeasure_name": "Protect manager application (Apache Tomcat)",
    "countermeasure_solution": "In order to protect the manager application:\n\n- **Restrict manager application:** Limit access to the manager application to only those with a required needed.\n- **Rename the manager application:** The manager application allows administrators to manage Tomcat remotely via a web interface. Rename the manager application to make it harder for attackers or automated scripts to locate.",
    "weakness_title_read_only": "Unprotected manager application (Apache Tomcat)",
    "weakness_id_read_only": "P1012",
    "weakness": "cb8b5ca9-cd2e-4a92-9f7d-4b7e23edc00d",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2018-01-10T13:09:47.076000-05:00",
    "last_updated": "2021-06-25T14:47:46.110000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1037",
    "universal_id": "73c2a956-fa7c-460d-a7bc-4c80b5afc792",
    "countermeasure_name": "Verify that manager application is protected (Apache Tomcat)",
    "countermeasure_solution": " - Review `$CATALINA_BASE/conf/[enginename]/[hostname]/manager.xml` to ascertain that the `RemoteAddrValve` option is uncommented and configured to only allow access to systems required to connect.\n\n- Ensure `$CATALINA_HOME/conf/Catalina/localhost/manager.xml`, `$CATALINA_HOME/webapps/host-manager/manager.xml`, `$CATALINA_HOME/webapps/manager` and `$CATALINA_HOME/webapps/manager` do not exsist.",
    "weakness_title_read_only": "Unprotected manager application (Apache Tomcat)",
    "weakness_id_read_only": "P1012",
    "weakness": "cb8b5ca9-cd2e-4a92-9f7d-4b7e23edc00d",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2018-01-10T13:09:47.902000-05:00",
    "last_updated": "2021-06-25T14:47:48.982000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1038",
    "universal_id": "f2f48b6e-7aa0-4541-bb6a-efb934699c8d",
    "countermeasure_name": "Make homoglyphs distinguishable when showing them to users",
    "countermeasure_solution": "When you need to write sensitive information or identifiers to an output stream using Unicode characters, or if you need to display that information to any user, consider whether visually similar or identical glyphs (homoglyphs) can cause security issues. This would be critical especially if those Unicode characters are provided by other users.\n\nIf there is any risk of homoglyphs being misused, either:\n\n-  Make it easy for users to distinguish between homoglyphs when outputting that information. This would prevent users from misinterpreting a glyph and performing an unintended, insecure action.\n    - For example, you can use Punycode as shown in [RFC 3492](https://tools.ietf.org/html/rfc3492) for encoding Unicode characters to make homoglyphs distinguishable in the output.\n- Warn users if the displayed information contains characters from different character sets.\n\nFor more information and examples see CWE's page about the [homoglyph presentation weakness](http://cwe.mitre.org/data/definitions/1007.html).",
    "weakness_title_read_only": "Insufficient Visual Distinction of Homoglyphs Presented to User",
    "weakness_id_read_only": "P1013",
    "weakness": "eb8b3ee3-dc20-48f0-975d-56b0280de638",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "development",
    "created": "2018-01-15T09:04:57.818000-05:00",
    "last_updated": "2021-06-25T14:47:55.013000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1039",
    "universal_id": "91bfb66f-aaab-4ee4-abda-b18245d18366",
    "countermeasure_name": "Test that homoglyphs are distinguishable in the application's output",
    "countermeasure_solution": "Use the following guidelines for testing whether homoglyphs are distinguishable in output:\n\n- Identify important areas of the application such as information pages and log pages that display sensitive information like names and identifiers.\n    - Pay more attention to the areas that display data that is provided by users.\n- On behalf of a user, submit some data to be shown in the identified areas, once using regular characters, and a second time using homoglyph characters.\n    - For example, you can use characters from different Unicode character sets that look identical.\n- Make sure the data shown in the application is distinguishable in those two cases. Otherwise, this test __fails__.",
    "weakness_title_read_only": "Insufficient Visual Distinction of Homoglyphs Presented to User",
    "weakness_id_read_only": "P1013",
    "weakness": "eb8b3ee3-dc20-48f0-975d-56b0280de638",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2018-01-16T16:53:53.368000-05:00",
    "last_updated": "2021-06-25T14:47:54.994000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1041",
    "universal_id": "d1fc852b-3aad-4474-912e-850f36074f7e",
    "countermeasure_name": "Enable multi-factor authentication (Microsoft Azure)",
    "countermeasure_solution": "Ensure that multi-factor authentication is enabled for all privileged users:\n\n- Enable multi-factor authentication for all user credentials who have write access to Azure resources. \n\n       These include roles like:\n\n       - Service Co-Administrators\n\n       - Subscription Owners\n\n       - Contributors\n\n- Ensure that 'Require Multi-Factor Auth to join devices' is set to 'Yes':\n Joining devices to the active directory should require multi-factor authentication.\n\nMulti-factor authentication is recommended when adding devices to Azure AD. When set to **Yes** users that are adding devices from the internet must first use the second method of authentication before their device is successfully added to the directory. Multi-factor authentication requires an individual to present a minimum of two separate forms of authentication before access is granted. Multi-factor authentication provides additional assurance that the individual attempting to gain access is who they claim to be.",
    "weakness_title_read_only": "Disabled multi-factor authentication (Microsoft Azure)",
    "weakness_id_read_only": "P1014",
    "weakness": "ab008f71-434c-430e-a53d-6bff057a36d9",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2018-03-01T11:57:39.689000-05:00",
    "last_updated": "2021-06-25T14:47:43.028000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1042",
    "universal_id": "900884a4-8525-4295-ac68-a74465dfa7e2",
    "countermeasure_name": "Test that multi-factor authentication is enabled (Microsoft Azure)",
    "countermeasure_solution": "**Azure Console**\n\n1. Go to `Azure Active Directory`\n2. Go to `Users and group`\n3. Go to `All Users`\n4. Click on `Multi-Factor Authentication` button on the top bar\n5. Ensure that `MULTI-FACTOR AUTH STATUS` is `Enabled` for all users who are `Service Co-Administrators` OR `Owners` OR `Contributors`\n\n **Microsoft Graph API**\n\n For Every Subscription, For Every Tenant\n\n**Step 1:** Identify Users with Administrative Access\n\nA. List All Users Using Microsoft Graph API:\n\n     GET https://graph.microsoft.com/v1.0/users\n\n Capture `id` and corresponding `userPrincipalName` (`$uid`, `$userPrincipalName`).\n\nB. List all Role Definitions Using Azure management API:\n\n```https://management.azure.com/subscriptions/:subscriptionId/providers/Microsoft.Authorization/roleDefinitions?api-version=2017-05-01```\n\n Capture role definition IDs/name (`$name`) and role names (`$properties/roleName`) where `\"properties/roleName\"` contains (`Owner` or `*contributor` or `admin` ).\n\nC. List All Role Assignments (Mappings `$A.uid` to `$B.name`) Using Azure Management API:\n \n```GET https://management.azure.com/subscriptions/:subscriptionId/providers/Microsoft.Authorization/roleassignments?api-version=2017-10-01-preview```\n\nFind all administrative roles (`$B.name`) in `\"Properties/roleDefinationId\"` mapped with user ids (`$A.id`) in `\"Properties/principalId\"` where `\"Properties/principalType\" == \"User\"`.\n\nD. Now Match (`$CProperties/principalId`) with `$A.uid` and get `$A.userPrincipalName` save this as `D.userPrincipleName`.\n\n **Step 2:** Run MSOL Powershell command:\n\n```Get-MsolUser -All | where {$_.StrongAuthenticationMethods.Count -eq 0} | Select-Object -Property UserPrincipalName```\n\nIf the output contains any of the `$D.userPrincipleName`, then this recommendation is non-compliant.\n\n*Please note that at this point of time, there is no API/CLI mechanism available to programmatically conduct security assessment for this recommendation. Only option is MSOL.*\n\n**Azure Console**\n\n 1. Go to `Azure Active Directory`\n 2. Go to `Users and group`\n 3. Go to `Device settings`\n 4. Ensure that `Require Multi-Factor Auth to join devices` is set to `Yes`\n\n *Please note that at this point of time, there is no API/CLI mechanism available to programmatically conduct security assessment for this recommendation.*",
    "weakness_title_read_only": "Disabled multi-factor authentication (Microsoft Azure)",
    "weakness_id_read_only": "P1014",
    "weakness": "ab008f71-434c-430e-a53d-6bff057a36d9",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2018-03-01T11:57:39.707000-05:00",
    "last_updated": "2021-06-25T14:47:43.095000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1043",
    "universal_id": "b720b2fa-5925-439c-b368-9fe4d6bd7dce",
    "countermeasure_name": "Avoid creating guest user access (Microsoft Azure)",
    "countermeasure_solution": "Avoid creating guest users, until you have a business need to provide guest access to any user.",
    "weakness_title_read_only": "Possibility of unintended guest user access (Microsoft Azure)",
    "weakness_id_read_only": "P1015",
    "weakness": "b5fc5e6e-9de3-46dd-88e8-53b2d432f413",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2018-03-01T14:20:33.406000-05:00",
    "last_updated": "2021-06-25T14:47:42.947000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1044",
    "universal_id": "8ee49af5-3a58-4075-98a5-66b1a780770b",
    "countermeasure_name": "Test that guest user access is not allowed (Microsoft Azure)",
    "countermeasure_solution": "**Azure Console**\n\n1. Go to `Azure Active Directory`\n2. Go to `Users and group`\n3. Go to `All Users`\n4. Click on `Show` drop down and select `Guest users only`\n5. Ensure that there are no guest users listed (`USER TYPE` = `Guest`)\n\n**Azure Command Line Interface 2.0**\n\n```az ad user list --query \"[?additionalProperties.userType=='Guest']\"```\n\nIf any users are listed, then this recommendation is non-compliant.",
    "weakness_title_read_only": "Possibility of unintended guest user access (Microsoft Azure)",
    "weakness_id_read_only": "P1015",
    "weakness": "b5fc5e6e-9de3-46dd-88e8-53b2d432f413",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2018-03-01T14:20:33.422000-05:00",
    "last_updated": "2021-06-25T14:47:42.912000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1045",
    "universal_id": "b4050000-40b5-4a8e-ac9e-eacf0da90ad1",
    "countermeasure_name": "Perform dual identification for password reset (Microsoft Azure)",
    "countermeasure_solution": "With dual identification set, an attacker would require compromising both identity forms before she could maliciously reset a user's password. Follow these steps:\n\n- Set 'Number of methods required to reset' to '2': Ensure that two alternate forms of identification are needed before allowing password reset.\n\n- Set 'Notify users on password resets?' to 'Yes': Ensure that the users are notified on their primary and secondary emails on password resets.",
    "weakness_title_read_only": "Single identification for password reset (Microsoft Azure)",
    "weakness_id_read_only": "P1016",
    "weakness": "319e9e8d-21bb-4a54-92a6-55137bd77955",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2018-03-01T14:20:33.496000-05:00",
    "last_updated": "2021-06-25T14:47:43.382000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1046",
    "universal_id": "f1e8e6b7-1200-42cf-933a-02325e53b6ab",
    "countermeasure_name": "Test that password reset process is secure (Microsoft Azure)",
    "countermeasure_solution": "**Azure Console**\n\n 1. Go to `Azure Active Directory`\n 2. Go to `Users and group`\n 3. Go to `Password reset`\n 4. Go to `Authentication methods`\n 5. Ensure that `Number of methods required to reset` is set to `2`\n\n *Please note that at this point of time, there is no API/CLI mechanism available to programmatically conduct security assessment for this recommendation.*\n\n**Azure Console**\n\n1. Go to `Azure Active Directory`\n2. Go to `Users and group`\n3. Go to `Password reset`\n4. Go to `Notification`\n5. Ensure that `Notify users on password resets?` is set to `Yes`\n\n*Please note that at this point of time, there is no API/CLI mechanism available to programmatically conduct security assessment for this recommendation.*",
    "weakness_title_read_only": "Single identification for password reset (Microsoft Azure)",
    "weakness_id_read_only": "P1016",
    "weakness": "319e9e8d-21bb-4a54-92a6-55137bd77955",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2018-03-01T14:20:33.514000-05:00",
    "last_updated": "2021-06-25T14:47:43.445000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1047",
    "universal_id": "88d636c9-3fda-4b4a-a923-09ac22c25c78",
    "countermeasure_name": "Enable reconfirmation for authentication information (Microsoft Azure)",
    "countermeasure_solution": "Set the number of days before users are asked to reconfirm their authentication information to a positive number other than zero.",
    "weakness_title_read_only": "Disabled reconfirmation for authentication information (Microsoft Azure)",
    "weakness_id_read_only": "P1017",
    "weakness": "4ce1b1ff-103d-4e1e-be73-b52d974ba08f",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "deployment",
    "created": "2018-03-01T14:30:02.701000-05:00",
    "last_updated": "2021-06-25T14:47:41.795000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1048",
    "universal_id": "9fc32135-bac6-4b92-9202-592b7fae3ce5",
    "countermeasure_name": "Test that reconfirmation for authentication information is enabled (Microsoft Azure)",
    "countermeasure_solution": "**Azure Console**\n\n1. Go to `Azure Active Directory`\n2. Go to `Users and group`\n3. Go to `Password reset`\n4. Go to `Registration`\n5. Ensure that `Number of days before users are asked to re-confirm their authentication information` is not set to `0`\n\n*Please note that at this point of time, there is no API/CLI mechanism available to programmatically conduct security assessment for this recommendation.*",
    "weakness_title_read_only": "Disabled reconfirmation for authentication information (Microsoft Azure)",
    "weakness_id_read_only": "P1017",
    "weakness": "4ce1b1ff-103d-4e1e-be73-b52d974ba08f",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2018-03-01T14:34:25.060000-05:00",
    "last_updated": "2021-06-25T14:47:41.852000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1049",
    "universal_id": "392c47e2-dc49-46d1-98ce-59b80268c658",
    "countermeasure_name": "Set 'Restrict access to Azure AD administration portal' to 'Yes' (Microsoft Azure)",
    "countermeasure_solution": "Restrict access to Azure AD administration portal to administrators only.",
    "weakness_title_read_only": "Unrestricted access to Azure AD administration portal (Microsoft Azure)",
    "weakness_id_read_only": "P1018",
    "weakness": "83fd11fd-e51a-4847-b44f-f87c5dc78088",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2018-03-01T14:34:26.598000-05:00",
    "last_updated": "2021-06-25T14:47:49.122000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1050",
    "universal_id": "89b48506-0da2-45c3-98ef-11f2b0af7f04",
    "countermeasure_name": "Test that 'Restrict access to Azure AD administration portal' is set to 'Yes' (Microsoft Azure)",
    "countermeasure_solution": "Do the following through **Azure Console**:\n\n1. Go to `Azure Active Directory`.\n2. Go to `Users and group`.\n3. Go to `User settings`.\n4. Ensure that `Restrict access to Azure AD administration portal` is set to `Yes`.",
    "weakness_title_read_only": "Unrestricted access to Azure AD administration portal (Microsoft Azure)",
    "weakness_id_read_only": "P1018",
    "weakness": "83fd11fd-e51a-4847-b44f-f87c5dc78088",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2018-03-01T14:34:26.615000-05:00",
    "last_updated": "2021-06-25T14:47:49.552000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1051",
    "universal_id": "abdde914-c45f-45eb-b652-2902e1a4f7da",
    "countermeasure_name": "Enable 'All Users' group (Microsoft Azure)",
    "countermeasure_solution": "Enable `All Users` group for centralized administration of all users.",
    "weakness_title_read_only": "Not using \"All Users\" for permissions (Microsoft Azure)",
    "weakness_id_read_only": "P1019",
    "weakness": "3c8aac2a-7242-43cb-96d9-b93a9d637227",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2018-03-01T14:34:26.693000-05:00",
    "last_updated": "2021-06-25T14:47:47.847000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1052",
    "universal_id": "e6ba7371-6940-4d51-adfb-e84e936e7ea7",
    "countermeasure_name": "Test 'All Users' group is enabled (Microsoft Azure)",
    "countermeasure_solution": "Do the following through **Azure Console**:\n\n1. Go to `Azure Active Directory`.\n2. Go to `Users and group`.\n3. Go to `Group settings`.\n4. Ensure that `Enable \"All Users\" group` is set to `Yes`.",
    "weakness_title_read_only": "Not using \"All Users\" for permissions (Microsoft Azure)",
    "weakness_id_read_only": "P1019",
    "weakness": "3c8aac2a-7242-43cb-96d9-b93a9d637227",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2018-03-01T14:34:26.707000-05:00",
    "last_updated": "2021-06-25T14:47:46.266000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1053",
    "universal_id": "40b2fff8-3c49-4838-945b-70b7eeed2a3d",
    "countermeasure_name": "Enable VM protection features (Microsoft Azure)",
    "countermeasure_solution": "Perform the following steps:\n\n- Enable automatic provisioning of the monitoring agent to collect security data.\n\n- Enable monitor OS vulnerability recommendations for virtual machines.\n\n- Enable endpoint protection recommendations for virtual machines.\n\n- Enable vulnerability assessment recommendations for virtual machines.\n\n- Enable adaptive application controls.\n    - Note that enabling this recommendation involves cost implications as this feature is not available with \"Free Pricing Tier\".\n\n- Install endpoint protection for all Virtual Machines.",
    "weakness_title_read_only": "Inactive VM protection features (Microsoft Azure)",
    "weakness_id_read_only": "P1020",
    "weakness": "59965d12-6066-4c15-9271-470a03c87abd",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2018-03-01T14:34:28.248000-05:00",
    "last_updated": "2021-06-25T14:47:39.527000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1054",
    "universal_id": "570fff05-7ada-44e0-bf9e-df9b01b4b01b",
    "countermeasure_name": "Test that VM protection features are enabled (Microsoft Azure)",
    "countermeasure_solution": " - Perform the following steps through **Azure Console**:\n\n    1. Go to `Security Center`.\n    2. Click on `Security Policy`.\n    3. Click on `Edit Settings` for each subscription:\n        4. Click on `Data Collection`.\n        5. Ensure that `Automatic provisioning of monitoring agent` is set to `On`.\n\n    You can do the same through **Azure Command-Line Interface 2.0**:\n\n    - Run the following commands and ensure the output is `On`:\n\n            az account get-access-token --query \"{subscription:subscription,accessToken:accessToken}\" --out tsv | xargs -L1 bash -c 'curl -X GET -H \"Authorization: Bearer $1\" -H \"Content-Type: application/json\" https://management.azure.com/subscriptions/$0/providers/Microsoft.Security/autoProvisioningSettings?api-version=2017-08-01-preview' | jq '.|.value[] | select(.name==\"default\")' | jq '.properties.autoProvision'\n\n- Perform the following through **Azure Console**:\n\n    1. Go to `Azure Security Center`.\n    2. Click on the `security policy` to open `Policy Management Blade`.\n    3. Click `Subscription View`.\n    4. Click on `Subscription Name` to open `Security Policy Blade` for the subscription.\n    5. Expand `Compute And Apps`:\n        6. Ensure that `Security Configurations` is not set to `Disabled`.\n        6. Ensure that `Endpoint protection` is not set to `Disabled`.\n        6. Ensure that `Vulnerability Assessment` is not set to `Disabled`.\n        6. Ensure that `Adaptive Application controls` is not set to `Disabled`.\n\n    Or using **Azure Command-Line Interface 2.0**:\n\n    - Ensure the output of the following commands is not `Disabled` or empty:\n\n            az account get-access-token --query \"{subscription:subscription,accessToken:accessToken}\" --out tsv | xargs -L1 bash -c 'curl -X GET -H \"Authorization: Bearer $1\" -H \"Content-Type: application/json\" https://management.azure.com/subscriptions/$0/providers/Microsoft.Authorization/policyAssignments/SecurityCenterBuiltIn?api-version=2018-05-01' | jq 'select(.name==\"SecurityCenterBuiltIn\")' | jq '.properties.parameters.systemConfigurationsMonitoringEffect.value'\n\n        <!-- -->\n\n            az account get-access-token --query \"{subscription:subscription,accessToken:accessToken}\" --out tsv | xargs -L1 bash -c 'curl -X GET -H \"Authorization: Bearer $1\" -H \"Content-Type: application/json\" https://management.azure.com/subscriptions/$0/providers/Microsoft.Authorization/policyAssignments/SecurityCenterBuiltIn?api-version=2018-05-01' | jq 'select(.name==\"SecurityCenterBuiltIn\")' | jq '.properties.parameters.endpointProtectionMonitoringEffect.value'\n\n        <!-- -->\n\n            az account get-access-token --query \"{subscription:subscription,accessToken:accessToken}\" --out tsv | xargs -L1 bash -c 'curl -X GET -H \"Authorization: Bearer $1\" -H \"Content-Type: application/json\" https://management.azure.com/subscriptions/$0/providers/Microsoft.Authorization/policyAssignments/SecurityCenterBuiltIn?api-version=2018-05-01' | jq 'select(.name==\"SecurityCenterBuiltIn\")' | jq '.properties.parameters.vulnerabilityAssesmentMonitoringEffect.value'\n\n        <!-- -->\n\n            az account get-access-token --query \"{subscription:subscription,accessToken:accessToken}\" --out tsv | xargs -L1 bash -c 'curl -X GET -H \"Authorization: Bearer $1\" -H \"Content-Type: application/json\" https://management.azure.com/subscriptions/$0/providers/Microsoft.Authorization/policyAssignments/SecurityCenterBuiltIn?api-version=2018-05-01' | jq 'select(.name==\"SecurityCenterBuiltIn\")' | jq '.properties.parameters.adaptiveApplicationControlsMonitoringEffect.value'\n\n- Perform the following steps through **Azure Console**:\n\n    1. Go to `Security Center - Recommendations`.\n    2. Ensure that there are no recommendations for `Endpoint Protection not installed on Azure VMs`.\n\n    Or using **Azure Command-Line Interface 2.0**:\n\n        az vm show -g MyResourceGroup -n MyVm -d\n\n    It should list the following or any other endpoint extensions as one of the installed extensions.\n\n        EndpointSecurity || TrendMicroDSA* || Antimalware || EndpointProtection || SCWPAgent || PortalProtectExtension* || FileSecurity*\n\n    Alternatively, ensure your own endpoint protection tool is employed for your OS.",
    "weakness_title_read_only": "Inactive VM protection features (Microsoft Azure)",
    "weakness_id_read_only": "P1020",
    "weakness": "59965d12-6066-4c15-9271-470a03c87abd",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2018-03-01T14:34:28.276000-05:00",
    "last_updated": "2021-06-25T14:47:39.404000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1055",
    "universal_id": "91f20d6b-13b9-4b16-a9b5-f92d4293e51f",
    "countermeasure_name": "Update VMs (Microsoft Azure)",
    "countermeasure_solution": "Perform the following:\n\n- Set 'System updates' to 'On' to enable system updates recommendations for virtual machines.\n\n    The retrieved list depends on the service that's configured for that virtual machine and recommends that the missing updates be applied. For Linux systems, the policy uses the distro-provided package management system to determine packages that have available updates. It also checks for security and critical updates from Azure Cloud Services virtual machines.\n\n- Apply the latest OS Patches for all Virtual Machines:\n\n    Azure Security Center retrieves a list of available security and critical updates from Windows Update or Windows Server Update Services (WSUS), depending on which service is configured on a Windows VM. Security Center also checks for the latest updates in Linux systems. If your VM is missing a system update, Security Center will recommend that you apply system updates.",
    "weakness_title_read_only": "Out of date VMs (Microsoft Azure)",
    "weakness_id_read_only": "P1021",
    "weakness": "107de2b2-7524-4c62-a65c-4e775fd901a5",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2018-03-01T14:34:28.377000-05:00",
    "last_updated": "2021-06-25T14:47:56.494000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1056",
    "universal_id": "46369f16-3fc1-4ab1-aaef-4f1a7510132b",
    "countermeasure_name": "Test that all VMs are updated (Microsoft Azure)",
    "countermeasure_solution": " - Perform the following through **Azure Console**:\n\n    1. Go to `Azure Security Center`.\n    2. Click on the `security policy` to open `Policy Management Blade`.\n    3. Click `Subscription View`.\n    4. Click on `Subscription Name` to open `Security Policy Blade` for the subscription.\n    5. Expand `Compute And Apps`:\n    6. Ensure that `System updates` is not set to `Disabled`.\n\n    Or using **Azure Command-Line Interface 2.0**:\n\n    - Ensure the output of the following commands is not `Disabled` or empty:\n\n            az account get-access-token --query \"{subscripton:subscription,accessToken:accessToken}\" --out tsv | xargs -L1 bash -c 'curl -X GET -H \"Authorization: Bearer $1\" -H \"Content-Type: application/json\" https://management.azure.com/subscriptions/$0/providers/Microsoft.Authorization/policyAssignments/SecurityCenterBuiltIn?api-version=2018-05-01' | jq 'select(.name==\"SecurityCenterBuiltIn\")' | jq'.properties.parameters.systemUpdatesMonitoringEffect.value'\n\n- Also, do the following:\n\n    1. Go to `Security Center - Recommendations`.\n    2. Ensure that there are no recommendations for `Apply system updates`.\n\n    Alternatively, you can employ your own patch assessment and management tool to periodically assess, report and install the required security patches for your OS.",
    "weakness_title_read_only": "Out of date VMs (Microsoft Azure)",
    "weakness_id_read_only": "P1021",
    "weakness": "107de2b2-7524-4c62-a65c-4e775fd901a5",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2018-03-01T14:34:28.395000-05:00",
    "last_updated": "2021-06-25T14:47:56.760000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1057",
    "universal_id": "b8998723-35f5-426e-9c1f-939b496fc343",
    "countermeasure_name": "Enable disk and storage encryption (Microsoft Azure)",
    "countermeasure_solution": "Perform the following steps:\n\n- Enable disk encryption recommendations for virtual machines.\n    - When this setting is enabled, it recommends enabling disk encryption in all virtual machines to enhance data protection at rest.\n\n- Enable storage encryption recommendations.\n    - When this setting is enabled, any new data in Azure Blobs and Files will be encrypted.\n\n- Enable SQL Encryption recommendations.\n    - When this setting is enabled, it recommends that encryption at rest be enabled for your Azure SQL Database, associated backups, and transaction log files. Even if your data is breached, it will not be readable.\n\n- Set 'Data encryption' to 'On' to encrypt the database.\n    - Azure SQL Database transparent data encryption helps protect against the threat of malicious activity by performing real-time encryption and decryption of the database, associated backups, and transaction log files at rest without requiring changes to the application.\n\n- Encrypt 'OS disk' (boot volumes) where possible.\n    - Encrypting your IaaS VM's OS disk (boot volume) ensures that its entire content is fully unrecoverable without a key and thus protects the volume from unwarranted reads.\n\n- Encrypt 'Data disks' (non-boot volumes) where possible.\n    - Encrypting your IaaS VM's Data disks (non-boot volume) ensures that its entire content is fully unrecoverable without a key and thus protects the volume from unwarranted reads.\n\n- Encrypt 'Unattached disks' where possible.\n    - Even if the disk is not attached to any of the VMs, there is always a risk where a compromised user account with administrative access to VM service can mount/attach these data disks which may lead to sensitive information disclosure and tampering.",
    "weakness_title_read_only": "Unencrypted disk and storage (Microsoft Azure)",
    "weakness_id_read_only": "P1022",
    "weakness": "fbc71f1f-d0f3-4dc9-bfc2-5cd49329fa76",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2018-03-01T14:34:33.372000-05:00",
    "last_updated": "2021-06-25T14:47:36.076000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1058",
    "universal_id": "47cab9c5-dd9f-47ce-8544-dccff940851b",
    "countermeasure_name": "Test that disk and storage encryption is enabled (Microsoft Azure)",
    "countermeasure_solution": " - Perform the following through **Azure Console**:\n\n    1. Go to `Azure Security Center`.\n    2. Click on the `security policy` to open `Policy Management Blade`.\n    3. Click `Subscription View`.\n    4. Click on `Subscription Name` to open `Security Policy Blade` for the subscription.\n    5. Expand `Compute And Apps`:\n        6. Ensure that `Disk Encryption` is not set to `Disabled`.\n        6. Ensure that `Storage Encryption` is not set to `Disabled`.\n        6. Ensure that `SQL Encryption` is not set to `Disabled`.\n\n    Or using **Azure Command-Line Interface 2.0**:\n\n    - Ensure the output of the following commands is not `Disabled` or empty:\n\n            az account get-access-token --query \"{subscription:subscription,accessToken:accessToken}\" --out tsv | xargs -L1 bash -c 'curl -X GET -H \"Authorization: Bearer $1\" -H \"Content-Type: application/json\" https://management.azure.com/subscriptions/$0/providers/Microsoft.Authorization/policyAssignments/SecurityCenterBuiltIn?api-version=2018-05-01' | jq 'select(.name==\"SecurityCenterBuiltIn\")' | jq '.properties.parameters.diskEncryptionMonitoringEffect.value'\n\n        <!-- -->\n\n            az account get-access-token --query \"{subscription:subscription,accessToken:accessToken}\" --out tsv | xargs -L1 bash -c 'curl -X GET -H \"Authorization: Bearer $1\" -H \"Content-Type: application/json\" https://management.azure.com/subscriptions/$0/providers/Microsoft.Authorization/policyAssignments/SecurityCenterBuiltIn?api-version=2018-05-01' | jq 'select(.name==\"SecurityCenterBuiltIn\")' | jq '.properties.parameters.storageEncryptionMonitoringEffect.value'\n\n        <!-- -->\n\n            az account get-access-token --query \"{subscription:subscription,accessToken:accessToken}\" --out tsv | xargs -L1 bash -c 'curl -X GET -H \"Authorization: Bearer $1\" -H \"Content-Type: application/json\" https://management.azure.com/subscriptions/$0/providers/Microsoft.Authorization/policyAssignments/SecurityCenterBuiltIn?api-version=2018-05-01' | jq 'select(.name==\"SecurityCenterBuiltIn\")' | jq '.properties.parameters.sqlEncryptionMonitoringEffect.value'\n\n- Then perform the following using **Azure Console**:\n\n    1. Go to `Storage Accounts`.\n    2. For each storage account:\n        2. Go to `Encryption` under `BLOB SERVICE`.\n        3. Ensure that `Storage service encryption` is set to `Enabled`.\n   \n    Or using **Azure Command-Line Interface 2.0**:\n\n    - Run the following command and ensure, in the output, the `Storage Account Name` has its associated `BLOB SERVICE` encryption as not null.\n\n            az storage account list --query [*].[name,encryption.services.blob.enabled]\n\n- Then perform the following using **Azure Console**:\n\n    1. Go to `SQL databases`.\n    2. For each DB instance:\n        3. Click on `Transparent data encryption`.\n        4. Ensure that `Data encryption` is set to `On`.\n\n    Or using **Azure Command-Line Interface 2.0**:\n\n    - Run the following command and ensure the output is `Enabled`.\n\n            az sql db tde show --resource-group <resourceGroup> --server <dbServerName> --database <dbName> --query status\n\n- Then perform the following using **Azure Console**:\n\n    1. Go to `Virtual machines`.\n    2. For each virtual machine:\n        2. Go to `Settings`.\n        3. Click on `Disks`:\n            4. Ensure that the `OS disk` has encryption set to `Enabled`.\n            4. Ensure that each disk under `Data disks` has encryption set to `Enabled`.\n\n    Or using **Azure Command-Line Interface 2.0**:\n\n    - Run the following command and ensure its output is shown as `Encrypted`.\n\n            az vm encryption show --name <VMName> --resource-group <resourceGroupName> --query osDisk\n\n        <!-- -->\n\n            az vm encryption show --name <VMName> --resource-group <resourceGroupName> --query dataDisk\n\n- Then perform the following using **Azure Command-Line Interface 2.0**:\n\n    Run this command and ensure that it does not return any output:\n\n        az disk list --query '[? managedBy == `null`].{encryptionSettings: encryptionSettings, name: name}' -o json\n\n    Sample possible output:\n     \n        [\n            {\n                \"encryptionSettings\": null,\n                \"name\": \"<Disk1>\"\n            },\n            {\n                \"encryptionSettings\": null,\n                \"name\": \"<Disk2>\"\n            }\n        ]",
    "weakness_title_read_only": "Unencrypted disk and storage (Microsoft Azure)",
    "weakness_id_read_only": "P1022",
    "weakness": "fbc71f1f-d0f3-4dc9-bfc2-5cd49329fa76",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2018-03-01T14:34:33.406000-05:00",
    "last_updated": "2021-06-25T14:47:35.682000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1059",
    "universal_id": "0be72955-9e1b-4d4f-95ae-c97b487bbef3",
    "countermeasure_name": "Configure network security groups and firewalls securely (Microsoft Azure)",
    "countermeasure_solution": " - Enable network security group recommendations for virtual machines.\n\n    When this setting is enabled, it recommends that network security groups be configured to control inbound and outbound traffic to VMs that have public endpoints. Network security groups that are configured for a subnet is inherited by all virtual machine network interfaces unless otherwise specified. In addition to checking that a network security group has been configured, this policy assesses inbound security rules to identify rules that allow incoming traffic.\n\n- Enable web application firewall recommendations for virtual machines.\n\n    When this setting is enabled, it recommends that a web application firewall is provisioned on virtual machines when either of the following is true:\n\n    - Instance-level public IP (ILPIP) is used and the inbound security rules for the associated network security group are configured to allow access to port 80/443.\n    - Load-balanced IP is used and the associated load balancing and inbound network address translation (NAT) rules are configured to allow access to port 80/443.\n\n- Enable next-generation firewall recommendations for virtual machines.\n\n    When this setting is enabled, it extends network protections beyond network security groups, which are built into Azure. Security Center will discover deployments for which a next-generation firewall is recommended and enable you to provision a virtual appliance.\n\n- Restrict RDP access from the internet.\n\n- Restrict SSH access from the internet.\n\n- Do not allow ingress 0.0.0.0/0 (ANY IP) access to SQL databases.\n\n    SQL Server includes a firewall to block access to unauthorized connections. More granular IP addresses can be defined by referencing the range of addresses available from specific datacenters.\n\n    By default, for a SQL server, a Firewall exists with StartIp of 0.0.0.0 and EndIP of 0.0.0.0 allowing access to all the Azure services.\n\n    Additionally, a custom rule can be set up with StartIp of 0.0.0.0 and EndIP of 255.255.255.255 allowing access from ANY IP over the Internet.\n\n    In order to reduce the potential attack surface for a SQL server, define firewall rules with more granular IP addresses by referencing the range of addresses available from specific datacenters.\n\n- Enable Network Watcher for your Azure Subscriptions.\n\n    Network diagnostic and visualization tools available with Network Watcher help you understand, diagnose, and gain insights into your network in Azure.",
    "weakness_title_read_only": "Misconfiguring network security groups and firewalls (Microsoft Azure)",
    "weakness_id_read_only": "P1023",
    "weakness": "33477824-aa3e-4870-a0ab-79cdc18f6a92",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2018-03-01T14:34:33.524000-05:00",
    "last_updated": "2021-06-25T14:47:52.454000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1060",
    "universal_id": "d2533b8e-e48b-4610-a918-ee3df2e05f71",
    "countermeasure_name": "Test that network security groups and firewalls are configured securely (Microsoft Azure)",
    "countermeasure_solution": " - Perform the following through **Azure Console**:\n\n    1. Go to `Azure Security Center`.\n    2. Click on the `security policy` to open the `Policy Management` blade.\n    3. Click `Subscription View`.\n    4. Click on `Subscription Name` to open the `Security Policy` blade` for the subscription.\n    5. Expand `Network`:\n        6. Ensure that `Network Security Groups` is not set to `Disabled`.\n        6. Ensure that `Web Application Firewall` is not set to `Disabled`.\n        6. Ensure that `Next generation firewall` is not set to `Disabled`.\n\n    Or using **Azure Command-Line Interface 2.0**:\n\n    - Ensure the output of the following commands is not `Disabled` or empty:\n\n            az account get-access-token --query \"{subscription:subscription,accessToken:accessToken}\" --out tsv | xargs -L1 bash -c 'curl -X GET -H \"Authorization: Bearer $1\" -H \"Content-Type: application/json\" https://management.azure.com/subscriptions/$0/providers/Microsoft.Authorization/policyAssignments/SecurityCenterBuiltIn?api-version=2018-05-01' | jq 'select(.name==\"SecurityCenterBuiltIn\")' | jq '.properties.parameters.networkSecurityGroupsMonitoringEffect.value'\n\n        <!-- -->\n\n            az account get-access-token --query \"{subscription:subscription,accessToken:accessToken}\" --out tsv | xargs -L1 bash -c 'curl -X GET -H \"Authorization: Bearer $1\" -H \"Content-Type: application/json\" https://management.azure.com/subscriptions/$0/providers/Microsoft.Authorization/policyAssignments/SecurityCenterBuiltIn?api-version=2018-05-01' | jq 'select(.name==\"SecurityCenterBuiltIn\")' | jq '.properties.parameters.webApplicationFirewallMonitoringEffect.value'\n\n        <!-- -->\n\n            az account get-access-token --query \"{subscription:subscription,accessToken:accessToken}\" --out tsv | xargs -L1 bash -c 'curl -X GET -H \"Authorization: Bearer $1\" -H \"Content-Type: application/json\" https://management.azure.com/subscriptions/$0/providers/Microsoft.Authorization/policyAssignments/SecurityCenterBuiltIn?api-version=2018-05-01' | jq 'select(.name==\"SecurityCenterBuiltIn\")' | jq '.properties.parameters.nextGenerationFirewallMonitoringEffect.value'\n\n- Then using **Azure Console**:\n\n    1. For each VM, open the `Networking` blade.\n        2. Verify that the `INBOUND PORT RULES` ** do not** have a rule for RDP such as:\n            - port = `3389`,\n            - protocol = `TCP`,\n            - Source = `Any` OR `Internet`\n        2. Verify that the `INBOUND PORT RULES` **do not** have a rule for SSH such as:\n            - port = `22`,\n            - protocol = `TCP`,\n            - Source = `Any` OR `Internet`\n\n    Or using **Azure Command Line Interface 2.0**:\n\n    - List Network security groups with corresponding non-default Security rules:\n\n            az network nsg list --query [*].[name,securityRules]\n\n        And ensure that none of the NSGs have security rules like:\n\n            \"access\" : \"Allow\"\n            \"destinationPortRange\" : \"3389\" or \"*\" or \"[port range containing 3389]\"\n            \"direction\" : \"Inbound\"\n            \"protocol\" : \"TCP\"\n            \"sourceAddressPrefix\" : \"*\" or \"0.0.0.0\" or \"/0\" or \"/0\" or \"internet\" or \"any\"\n\n        Or:\n\n            \"access\" : \"Allow\"\n            \"destinationPortRange\" : \"22\" or \"*\" or \"[port range containing 22]\"\n            \"direction\" : \"Inbound\"\n            \"protocol\" : \"TCP\"\n            \"sourceAddressPrefix\" : \"*\" or \"0.0.0.0\" or \"/0\" or \"/0\" or \"internet\" or \"any\"\n\n- Then using **Azure Console**:\n\n    1. Go to `SQL servers`.\n    2. For each SQL server:\n        3. Click on `Firewall / Virtual Networks`.\n        4. Ensure that `Allow access to Azure services` is set to `OFF`.\n        5. Ensure that no firewall rule exists with:\n              - Start IP of 0.0.0.0\n              - or other combinations which allow access to wider public IP ranges\n\n     Or using **Azure PowerShell**:\n\n    - Get the list of all SQL Servers:\n\n            Get-AzureRmSqlServer\n\n        And for each server:\n\n            Get-AzureRmSqlServerFirewallRule -ResourceGroupName <resource group name> -ServerName <server name>\n    \n        Ensure that `StartIpAddress` is not set to `0.0.0.0` or other combinations which allow access to wider public IP ranges including Azure IP ranges.\n\n- Then using **Azure Console**:\n\n    1. Go to `Network Watcher`.\n    2. Ensure that the `STATUS` is set to `Enabled`.\n\n    Or using **Azure Command-Line Interface 2.0**:\n\n    - Run the following command and ensure that for all regions, `provisioningState` is set to `Succeeded`.\n\n            az network watcher list",
    "weakness_title_read_only": "Misconfiguring network security groups and firewalls (Microsoft Azure)",
    "weakness_id_read_only": "P1023",
    "weakness": "33477824-aa3e-4870-a0ab-79cdc18f6a92",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2018-03-01T14:34:33.554000-05:00",
    "last_updated": "2022-02-28T10:10:44.394000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1061",
    "universal_id": "72dc6f05-4ede-415b-aab3-963bc6573652",
    "countermeasure_name": "Enable SQL auditing (Microsoft Azure)",
    "countermeasure_solution": " - Enable SQL auditing recommendations.\n\n    When this setting is enabled, it recommends that auditing of access to Azure Database be enabled for compliance, advanced threat detection, and for investigation purposes.\n\nFor SQL servers:\n\n- Enable auditing on SQL Servers.\n\n    The Azure platform allows an SQL server to be created as a service. Enabling auditing at the server level ensures that all existing and newly created databases on the SQL server instance are audited. Auditing policy applied on the SQL database does not override auditing policy and settings applied on the particular SQL server where the database is hosted.\n\n- Set 'AuditActionGroups' in 'Auditing' policy properly on SQL Servers.\n\n    Configure the 'AuditActionGroups' property to appropriate groups to capture all the critical activities on the SQL Server and all the SQL databases hosted on the SQL server.\n\n    To capture all critical activities done on SQL Servers and databases within SQL servers, auditing should be configured to capture appropriate 'AuditActionGroups'. Property `AuditActionGroup` should contain at least `SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP`, `FAILED_DATABASE_AUTHENTICATION_GROUP`, `BATCH_COMPLETED_GROUP` to ensure comprehensive audit logging for SQL servers and SQL databases hosted on SQL Server.",
    "weakness_title_read_only": "No SQL auditing (Microsoft Azure)",
    "weakness_id_read_only": "P1024",
    "weakness": "c8831b16-5107-47b2-8b07-bf87e7dfbf75",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2018-03-01T14:34:52.367000-05:00",
    "last_updated": "2021-06-25T14:47:58.152000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1062",
    "universal_id": "eb82d963-dd2a-4a95-8913-d3206d5b2d4a",
    "countermeasure_name": "Verify that SQL auditing is enabled (Microsoft Azure)",
    "countermeasure_solution": " - Perform the following through **Azure Console**:\n\n    1. Go to `Azure Security Center`.\n    2. Click on `security policy` to open the `Policy Management` blade.\n    3. Click on `Subscription View`.\n    4. Click on `Subscription Name` to open the `Security Policy` blade for the subscription.\n    5. Expand `Data`.\n    5. Ensure that `SQL Auditing` is not set to `Disabled`.\n\n    Or using **Azure Command-Line Interface 2.0**:\n\n     - Run the following command and ensure the output is not `Disabled` or empty.\n\n            az account get-access-token --query \"{subscription:subscription,accessToken:accessToken}\" --out tsv | xargs -L1 bash -c 'curl -X GET -H \"Authorization: Bearer $1\" -H \"Content-Type: application/json\" https://management.azure.com/subscriptions/$0/providers/Microsoft.Authorization/policyAssignments/SecurityCenterBuiltIn?api-version=2018-05-01' | jq 'select(.name==\"SecurityCenterBuiltIn\")' | jq '.properties.parameters.sqlAuditingMonitoringEffect.value'\n\n- Then using **Azure Console**:\n\n    1. Go to `SQL servers`.\n    2. For each server instance:\n        3. Click on `Auditing`.\n        4. Ensure that `Auditing` is set to `On`.\n\n    Or using **Azure PowerShell**:\n\n    - Get the list of all SQL Servers:\n\n            Get-AzureRmSqlServer\n\n        And for each server:\n\n        - Run this command and ensure that `AuditState` is set to `Enabled`.\n\n                Get-AzureRmSqlServerAuditing -ResourceGroupName <resource group name> -ServerName <server name>\n\n- Then using **Azure PowerShell**:\n\n    - Get the list of all SQL Servers:\n\n            Get-AzureRmSqlServer\n\n        And for each server:\n\n        - Run this command and ensure that `AuditActionGroup` contains all of `SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP`,` FAILED_DATABASE_AUTHENTICATION_GROUP`, and `BATCH_COMPLETED_GROUP`.\n\n                Get-AzureRmSqlServerAuditing -ResourceGroupName <resource group name> - ServerName <server name>",
    "weakness_title_read_only": "No SQL auditing (Microsoft Azure)",
    "weakness_id_read_only": "P1024",
    "weakness": "c8831b16-5107-47b2-8b07-bf87e7dfbf75",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2018-03-01T14:34:52.395000-05:00",
    "last_updated": "2021-06-25T14:47:57.598000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1063",
    "universal_id": "cdb02f8d-0780-430d-a77e-43fd931d4dd4",
    "countermeasure_name": "Set up security contacts (Microsoft Azure)",
    "countermeasure_solution": " - Provide a security contact email address.\n\n- Provide a security contact phone number to mitigate the risk in a timely fashion. Make sure that the information provided is valid, as the communication is not digitally signed.\n\n- Enable emailing security alerts to the security contact.\n\n- Enable security alert emails to subscription owners.",
    "weakness_title_read_only": "No security contacts (Microsoft Azure)",
    "weakness_id_read_only": "P1025",
    "weakness": "89a514b2-ce78-409b-9f8f-737b9bdd2c9d",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2018-03-01T14:34:53.051000-05:00",
    "last_updated": "2021-06-25T14:47:41.746000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1064",
    "universal_id": "4a7aff49-cd04-4f9b-951b-72267b7deff1",
    "countermeasure_name": "Verify that security contacts are set up (Microsoft Azure)",
    "countermeasure_solution": " - Perform the following through **Azure Console**:\n\n    1. Go to `Security Center`.\n    2. Click on `Security Policy`.\n    3. Click On `Edit Settings` for the security policy subscription.\n    4. Click on `Email notifications`.\n        5. Ensure that a valid security contact email address is set.\n        5. Ensure that a valid security contact phone number is set.\n        5. Ensure that `Send email notification for high severity alerts` is set to `On`.\n        5. Ensure that `Send email also to subscription owners` is set to `On`.\n\n    Or using **Azure Command-Line Interface 2.0**:\n\n    - Ensure the output of the below command is not empty and is set with the appropriate email ids.\n\n            az account get-access-token --query \"{subscription:subscription,accessToken:accessToken}\" --out tsv | xargs -L1 bash -c 'curl -X GET -H \"Authorization: Bearer $1\" -H \"Content-Type: application/json\" https://management.azure.com/subscriptions/$0/providers/Microsoft.Security/securityContacts?api-version=2017-08-01-preview' | jq '.|.value[] | select(.name==\"default1\")' | jq '.properties.email'\n\n    - Ensure the output of the below command is not empty and is set with the appropriate phone number.\n\n            az account get-access-token --query \"{subscription:subscription,accessToken:accessToken}\" --out tsv | xargs -L1 bash -c 'curl -X GET -H \"Authorization: Bearer $1\" -H \"Content-Type: application/json\" https://management.azure.com/subscriptions/$0/providers/Microsoft.Security/securityContacts?api-version=2017-08-01-preview' | jq '.|.value[] | select(.name==\"default1\")' | jq '.properties.phone'\n\n    - Ensure the output of the below command is set to `true`.\n\n            az account get-access-token --query \"{subscription:subscription,accessToken:accessToken}\" --out tsv | xargs -L1 bash -c 'curl -X GET -H \"Authorization: Bearer $1\" -H \"Content-Type: application/json\" https://management.azure.com/subscriptions/$0/providers/Microsoft.Security/securityContacts?api-version=2017-08-01-preview' | jq '.|.value[] | select(.name==\"default1\")' | jq '.properties.alertNotifications'\n\n    - Ensure the output of the below command is set to `true`.\n\n            az account get-access-token --query \"{subscription:subscription,accessToken:accessToken}\" --out tsv | xargs -L1 bash -c 'curl -X GET -H \"Authorization: Bearer $1\" -H \"Content-Type: application/json\" https://management.azure.com/subscriptions/$0/providers/Microsoft.Security/securityContacts?api-version=2017-08-01-preview' | jq '.|.value[] | select(.name==\"default1\")' | jq '.properties.alertsToAdmins'",
    "weakness_title_read_only": "No security contacts (Microsoft Azure)",
    "weakness_id_read_only": "P1025",
    "weakness": "89a514b2-ce78-409b-9f8f-737b9bdd2c9d",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2018-03-01T14:34:53.081000-05:00",
    "last_updated": "2021-06-25T14:47:41.777000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1065",
    "universal_id": "4af950aa-ec71-4de9-92d6-6b90a1b22369",
    "countermeasure_name": "Enable data encryption in transit (Microsoft Azure)",
    "countermeasure_solution": "Set 'Secure transfer required' to 'Enabled'.\n\nThe secure transfer option enhances the security of your storage account by only allowing requests to the storage account by a secure connection. For example, when calling REST APIs to access your storage accounts, you must connect using HTTPs. Any requests using HTTP will be rejected when 'secure transfer required' is enabled. When you are using the Azure files service, connection without encryption will fail, including scenarios using SMB 2.1, SMB 3.0 without encryption, and some flavors of the Linux SMB client. Because Azure storage doesn't support HTTPs for custom domain names, this option is not applied when using a custom domain name.",
    "weakness_title_read_only": "Unencrypted transmission of data (Microsoft Azure)",
    "weakness_id_read_only": "P1026",
    "weakness": "3fefddb4-bb8f-4bc1-81cb-e31e6f4f1967",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2018-03-01T14:34:55.090000-05:00",
    "last_updated": "2021-12-20T15:49:57.002000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1066",
    "universal_id": "733b3e28-6116-4a2c-b187-463436408113",
    "countermeasure_name": "Test that 'Secure transfer required' is set to 'Enabled' (Microsoft Azure)",
    "countermeasure_solution": "Using **Azure Console**:\n\n1. Go to `Storage Accounts`.\n2. For each storage account, go to `Configuration`.\n3. Ensure that `Secure transfer required` is set to `Enabled`.\n\nOr using **Azure Command Line Interface 2.0**:\n\n- Use the below command to ensure the `Secure transfer required` is enabled for all the `Storage Accounts` by ensuring the output contains `true` for each of the `Storage Accounts`.\n\n        az storage account list --query [*].[name,enableHttpsTrafficOnly]",
    "weakness_title_read_only": "Unencrypted transmission of data (Microsoft Azure)",
    "weakness_id_read_only": "P1026",
    "weakness": "3fefddb4-bb8f-4bc1-81cb-e31e6f4f1967",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2018-03-01T14:34:55.104000-05:00",
    "last_updated": "2021-06-25T14:47:36.853000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1067",
    "universal_id": "a9cf4a6c-ab7d-4d16-a295-319daa0aa829",
    "countermeasure_name": "Regenerate storage account access keys periodically (Microsoft Azure)",
    "countermeasure_solution": "Regenerate storage account access keys periodically.  Doing so can help to minimize the chance of accidentally exposing the keys, and thereby can protect storage accounts against unauthorized access.\n\nIt is recommended that you rotate your access keys periodically to help keep your storage account secure. If possible, use Azure Key Vault to manage your access keys. If you are not using Key Vault, you will need to rotate your keys manually by following the steps [available here](https://learn.microsoft.com/en-us/azure/storage/common/storage-account-keys-manage?tabs=azure-portal)",
    "weakness_title_read_only": "Old storage account access keys (Microsoft Azure)",
    "weakness_id_read_only": "P1027",
    "weakness": "95472a58-e60d-471a-929d-47bb49b23064",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2018-03-01T14:34:55.738000-05:00",
    "last_updated": "2023-03-16T11:22:59.878000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1068",
    "universal_id": "d5bfb5e4-1eb6-491c-bebf-86250b4ee6bf",
    "countermeasure_name": "Test that storage account access keys are periodically regenerated (Microsoft Azure)",
    "countermeasure_solution": "Using **Azure Console**:\n\n1. Go to `Storage Accounts`.\n2. For each storage account, go to `Activity log`.\n3. Under `Timespan` drop-down, select `Custom` and choose `Start time` and `End time` such that it ranges 90 days.\n4. Enter `RegenerateKey` in the `Search` text box.\n5. Click `Apply`.\n\nIt should list out all `RegenerateKey` events. If no such event exists, then this is a finding and this test fails.\n\nOr using **Azure Command Line Interface 2.0**:\n\n- Get the list of storage accounts:\n\n        az storage account list\n\n    Make a note of `id`, `name` and `resourceGroup`. \n\n- For every storage account, make sure that key is regenerated in the past 90 days.\n\n        az monitor activity-log list --resource-group\n\n    The output should contain:\n\n        \"authorization\"/\"scope\": <your_storage_account> AND \"authorization\"/\"action\": \"Microsoft.Storage/storageAccounts/regenerateKey/action\" AND \"status\"/\"localizedValue\": \"Succeeded\" \"status\"/\"Value\": \"Succeeded\" AND \"eventTimestamp\" : (Should return time and date should be less than past 90 days)",
    "weakness_title_read_only": "Old storage account access keys (Microsoft Azure)",
    "weakness_id_read_only": "P1027",
    "weakness": "95472a58-e60d-471a-929d-47bb49b23064",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2018-03-01T14:34:55.752000-05:00",
    "last_updated": "2021-06-25T14:47:43.987000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1069",
    "universal_id": "a2e724ca-7009-4e88-ab75-4d7df13d6902",
    "countermeasure_name": "Configure shared access signature tokens securely (Microsoft Azure)",
    "countermeasure_solution": " - Expire shared access signature tokens within an hour.\n\n- Allow shared access signature tokens only over HTTPS protocol.",
    "weakness_title_read_only": "Unsecure shared access signature tokens (Microsoft Azure)",
    "weakness_id_read_only": "P1028",
    "weakness": "cf2af1bc-4b54-45e6-a12c-bde6a99808a9",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2018-03-01T14:34:55.856000-05:00",
    "last_updated": "2021-06-25T14:47:47.743000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1070",
    "universal_id": "2955203f-98e1-4cb5-b3bd-ea75812d36aa",
    "countermeasure_name": "Test that shared access signature tokens are configured securely (Microsoft Azure)",
    "countermeasure_solution": "Keep a list of generated SAS tokens and manually verify SAS token expiry times and SAS token protocols for tokens that are created.",
    "weakness_title_read_only": "Unsecure shared access signature tokens (Microsoft Azure)",
    "weakness_id_read_only": "P1028",
    "weakness": "cf2af1bc-4b54-45e6-a12c-bde6a99808a9",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2018-03-01T14:34:55.872000-05:00",
    "last_updated": "2021-06-25T14:47:50.015000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1071",
    "universal_id": "621b6c68-3598-4074-b07c-21e07447d6a5",
    "countermeasure_name": "Disable anonymous access to blob containers (Microsoft Azure)",
    "countermeasure_solution": "Set 'Public access level' to 'Private' for blob containers to disable anonymous access to them. Use shared access signature (SAS) tokens for providing controlled and timed access to blob containers instead.",
    "weakness_title_read_only": "Anonymous access to blob containers (Microsoft Azure)",
    "weakness_id_read_only": "P1029",
    "weakness": "80c1eb18-e642-44c7-9a62-9a53aee2358b",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2018-03-01T14:34:57.112000-05:00",
    "last_updated": "2021-06-25T14:47:42.868000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1072",
    "universal_id": "30206942-eba0-4228-be6c-a70cd2e0e2a9",
    "countermeasure_name": "Test that anonymous access to blob containers is disabled (Microsoft Azure)",
    "countermeasure_solution": "Using **Azure Console**:\n\n1. Go to `Storage Accounts`.\n2. For each storage account, go to `Containers` under `BLOB SERVICE`.\n3. For each container, click `Access policy`.\n4. Ensure that `Public access level` is set to `Private (no anonymous access)`.\n\nOr using **Azure Command Line Interface 2.0**:\n\nEnsure the below command output contains null:\n\n    az storage container list --account-name <accountName> --account-key <accountKey> --query '[*].properties.publicAccess'",
    "weakness_title_read_only": "Anonymous access to blob containers (Microsoft Azure)",
    "weakness_id_read_only": "P1029",
    "weakness": "80c1eb18-e642-44c7-9a62-9a53aee2358b",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2018-03-01T14:34:57.129000-05:00",
    "last_updated": "2021-06-25T14:47:42.881000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1073",
    "universal_id": "035b7f5d-63c0-49c0-8585-ec42bb7555e7",
    "countermeasure_name": "Keep logs long enough (Microsoft Azure)",
    "countermeasure_solution": "Follow these steps for proper log retention:\n\n- Set **SQL Server Audit Retention** to a value greater than 90 days:\n- Set **Activity Log Retention** to 365 days or greater.",
    "weakness_title_read_only": "Inadequate Log Retention (Microsoft Azure)",
    "weakness_id_read_only": "P1030",
    "weakness": "a459a746-fd81-4378-8b5c-b9ac0e225b42",
    "tags": "",
    "countermeasure_priority": "3",
    "phase": "deployment",
    "created": "2018-03-01T14:35:06.016000-05:00",
    "last_updated": "2021-06-25T14:47:58.433000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1074",
    "universal_id": "bdb35d62-3b92-4060-8021-35643105755b",
    "countermeasure_name": "Verify that logs are kept long enough (Microsoft Azure)",
    "countermeasure_solution": " - Follow these steps in **Azure Console**:\n\n    1. Go to `SQL servers`.\n    2. For each server instance:\n        3. Click on `Auditing`.\n        4. Select `Storage Details`.\n        5. Ensure `Retention (days)` setting is `greater than 90 days`.\n\n    Or follow these steps in **Azure PowerShell**:\n\n    - Get the list of all SQL Servers:\n\n            Get-AzureRmSqlServer\n\n    - For each server:\n\n            Get-AzureRmSqlServerAuditing -ResourceGroupName <resource group name> -ServerName <server name>\n \n        Verify that `RetentionInDays` is set to `more than or equal to 90`.\n\n- Follow these steps in **Azure Console**:\n\n    1. Go to `Activity log`.\n    2. Select `Export`.\n    3. Ensure `Retention (days)` is set to `365` or `0`.\n\n    Or follow these steps in **Azure Command-Line Interface 2.0**:\n\n    - Run this command:\n\n            az monitor log-profiles list --query [*].retentionPolicy\n\n    - Ensure the output contains `days` set `365` and `enabled` set to `true` OR days set `0` and `enabled` set to `false`.",
    "weakness_title_read_only": "Inadequate Log Retention (Microsoft Azure)",
    "weakness_id_read_only": "P1030",
    "weakness": "a459a746-fd81-4378-8b5c-b9ac0e225b42",
    "tags": "",
    "countermeasure_priority": "3",
    "phase": "testing",
    "created": "2018-03-01T14:35:06.038000-05:00",
    "last_updated": "2021-06-25T14:47:57.675000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1075",
    "universal_id": "c4f405eb-61c7-49e9-a432-698328413f9c",
    "countermeasure_name": "Use Azure Active Directory for SQL Authentication (Microsoft Azure)",
    "countermeasure_solution": "Use Azure Active Directory Authentication for authentication with SQL Database.",
    "weakness_title_read_only": "Lack of Azure Active Directory Admin configuration (Microsoft Azure)",
    "weakness_id_read_only": "P1031",
    "weakness": "b55d8cb5-cb75-47a0-93a1-ea510ce93362",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2018-03-01T14:35:06.701000-05:00",
    "last_updated": "2021-11-17T12:29:46.792000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1076",
    "universal_id": "860c2316-0503-4fcf-9ebe-9cb3bf24af40",
    "countermeasure_name": "Verify that Azure Active Directory Admin is configured (Microsoft Azure)",
    "countermeasure_solution": "Follow these steps in **Azure Console**:\n\n1. Go to `SQL servers`\n2. For each SQL server, click on `Active Directory admin`\n3. Ensure that an AD account has been populated for field `Active Directory admin`\n\nFollow these steps in **Azure PowerShell**:\n\nGet the list of all SQL Servers:\n\n```\nGet-AzureRmSqlServer\n```\n\nFor each Server:\n\n```\nGet-AzureRmSqlServerActiveDirectoryAdministrator -ResourceGroupName <resource group name> -ServerName <server name>\n```\n\nEnsure Output shows `DisplayName` set to `AD account`.",
    "weakness_title_read_only": "Lack of Azure Active Directory Admin configuration (Microsoft Azure)",
    "weakness_id_read_only": "P1031",
    "weakness": "b55d8cb5-cb75-47a0-93a1-ea510ce93362",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2018-03-01T14:35:06.715000-05:00",
    "last_updated": "2021-06-25T14:47:49.695000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1077",
    "universal_id": "ddf2a9cc-c4be-4d35-b017-8a32c2d230df",
    "countermeasure_name": "Log critical events (Microsoft Azure)",
    "countermeasure_solution": "Follow these instructions for logging critical events:\n\n- Create a **log profile** for exporting activity logs.\n\n- Create an \"Activity Log Alert\" for the following events:\n    - **Create Policy Assignment**\n    - **Create or Update Network Security Group**\n    - **Delete Network Security Group**\n    - **Create or Update Network Security Group Rule**\n    - **Delete Network Security Group Rule**\n    - **Create or Update Security Solution**\n    - **Delete Security Solution**\n    - **Create or Update or Delete SQL Server Firewall Rule**\n    - **Update Security Policy**\n\n- Enable logging for **Azure KeyVault**:\n    - Enable **AuditEvent** logging for Key Vault instances to ensure interactions with key vaults are logged and available. This creates a new container named *insights-logs-auditevent* automatically for your specified storage account, and you can use this same storage account for collecting logs for multiple key vaults.",
    "weakness_title_read_only": "Insufficient Logging (Microsoft Azure)",
    "weakness_id_read_only": "P1032",
    "weakness": "33905c73-cc8d-44d5-b704-8c7c7349d534",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2018-03-01T14:35:13.072000-05:00",
    "last_updated": "2021-06-25T14:47:58.452000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1078",
    "universal_id": "6cbc7561-1b30-4d46-b6f6-3edd71a3f6ff",
    "countermeasure_name": "Verify that critical events are logged (Microsoft Azure)",
    "countermeasure_solution": " - Perform the following through **Azure Console**:\n\n    1. Go to `Activity log`.\n    2. Ensure that a \"Log Profile\" is set.\n\n    Or uring **Azure Command-Line Interface 2.0**:\n\n    - Use the below command to list the \"Log Profiles\" and ensure at least one \"Log Profile\" exists:\n\n            az monitor log-profiles list --query [*].[id,name]\n\n- Perform the following through **Azure Console**:\n\n    1. Navigate to `Monitor / Alerts`.\n    2. Select `Manage alert rules`.\n        3. Click on the alert `Name` where condition contains `operationName equals Microsoft.Security/policyAssignments/write`.\n            4. Hover a mouse over the condition and ensure it is set to `Whenever the Administrative Activity Log \"Create policy assignment (policyAssignments)\" has \"any\" level with \"any\" status and event is initiated by \"any\"`.\n        3. Click on the alert `Name` where Condition contains `operationName equals Microsoft.Network/networkSecurityGroups/write`.\n            4. Hover a mouse over the condition and ensure it is set to `Whenever the Administrative Activity Log \"Create or Update Network Security Group (networkSecurityGroups)\" has \"any\" level with \"any\" status and event is initiated by \"any\"`.\n        3. Click on the alert `Name` where Condition contains `operationName equals Microsoft.Network/networkSecurityGroups/delete`.\n            4. Hover a mouse over the condition and ensure it is set to `Whenever the Administrative Activity Log \"Delete Network Security Group (networkSecurityGroups)\" has \"any\" level with \"any\" status and event is initiated by \"any\"`.\n        3. Click on the alert `Name` where Condition contains `operationName equals Microsoft.Network/networkSecurityGroups/securityRules/write`.\n            4. Hover a mouse over the condition and ensure it is set to `Whenever the Administrative Activity Log \"Create or Update Security Rule (networkSecurityGroups/securityRules)\" has \"any\" level with \"any\" status and event is initiated by \"any\"`.\n        3. Click on the alert `Name` where Condition contains `operationName equals Microsoft.Network/networkSecurityGroups/securityRules/delete`.\n            4. Hover a mouse over the condition and ensure it is set to `Whenever the Administrative Activity Log \"Whenever the Administrative Activity Log \"Delete Security Rule (networkSecurityGroups/securityRules)\" has \"any\" level with \"any\" status and event is initiated by \"any\"`.\n        3. Click on the alert `Name` where Condition contains `operationName equals Microsoft.Security/securitySolutions/write`.\n            4. Hover a mouse over the condition and ensure it is set to `Whenever the Administrative Activity Log \"Create or Update Security Solutions (securitySolutions)\" has \"any\" level with \"any\" status and event is initiated by \"any\"`.\n        3. Click on the alert `Name` where Condition contains `operationName equals Microsoft.Security/securitySolutions/delete`.\n            4. Hover a mouse over the condition and ensure it is set to `Whenever the Administrative Activity Log \"Delete Security Solutions (securitySolutions)\" has \"any\" level with \"any\" status and event is initiated by \"any\"`.\n        3. Click on the alert `Name` where Condition contains `operationName equals Microsoft.Sql/servers/firewallRules/write`.\n            4. Hover a mouse over the condition and ensure it is set to `Whenever the Administrative Activity Log \"Create/Update server firewall rule (servers/firewallRules)\" has \"any\" level with \"any\" status and event is initiated by \"any\"`.\n        3. Click on the alert `Name` where Condition contains `operationName equals Microsoft.Security/policies/write`.\n            4. Hover a mouse over the condition and ensure it is set to `Whenever the Administrative Activity Log \"Update security policy (policies)\" has \"any\" level with \"any\" status and event is initiated by \"any\"`.\n\n    Or using **Azure Command-Line Interface 2.0**:\n\n    - Run this command:\n\n            az account get-access-token --query \"{subscription:subscription,accessToken:accessToken}\" --out tsv | xargs -L1 bash -c 'curl -X GET -H \"Authorization: Bearer $1\" -H \"Content-Type: application/json\" https://management.azure.com/subscriptions/$0/providers/microsoft.insights/activityLogAlerts?api-version=2017-04-01' | jq '.|.value[]|{location:.location,scopes:.properties.scopes,\"condition\":.properties.condition.allOf|.[]|select(.field==\"operationName\" and .equals==<OperationName>),enabled:.properties.enabled}'\n\n    - Ensure that an alert exists where:\n        - \"Location\" is set to `Global`.\n        - \"Scopes\" is set to entire `subscription that is /subscriptions/<Subscription_ID>`.\n        - \"Enabled\" is set to `True`.\n        - \"Condition\" matches the one of the following:\n\n                {\n                    \"location\": \"Global\",\n                    \"scopes\": [\n                        \"/subscriptions/<Subscription_ID>\" ],\n                    \"condition\": {\n                        \"field\": \"operationName\",\n                        \"equals\": <OperationName>,\n                        \"containsAny\": null\n                    },\n                    \"enabled\": true\n                }\n\n    - Where `<OperationName>` is:\n        - `\"microsoft.authorization/policyassignments/write\"`\n        - `\"microsoft.network/networksecuritygroups/write\"`\n        - `\"microsoft.network/networksecuritygroups/delete\"`\n        - `\"microsoft.network/networksecuritygroups/securityrules/write\"`\n        - `\"microsoft.network/networksecuritygroups/securityrules/delete\"`\n        - `\"microsoft.security/securitysolutions/write\"`\n        - `\"microsoft.security/securitysolutions/delete\"`\n        - `\"microsoft.sql/servers/firewallrules/write\"`\n        - `\"microsoft.security/policies/write\"`\n\n- Perform the following through **Azure Console**:\n\n    1. Go to `Key vaults`.\n    2. For each Key vault:\n        3. Go to `Diagnostic Logs`.\n        4. Click on `Edit Settings`.\n        5. Ensure that `Archive to a storage account` is `Enabled`.\n        6. Ensure that `AuditEvent` is checked and the retention days is set to `180 days or as appropriate`.\n\n    Or using **Azure Command Line Interface 2.0**:\n\n    - List all key vaults\n\n            az keyvault list\n\n        For each keyvault `id`:\n\n            az monitor diagnostic-settings list --resource <id>\n\n        Ensure that `storageAccountId` is set as appropriate. Also, ensure that `category` and `days` are set. One of the sample outputs is as below.\n\n            \"logs\": [\n                {\n                    \"category\": \"AuditEvent\",\n                    \"enabled\": true,\n                    \"retentionPolicy\": {\n                        \"days\": 180,\n                        \"enabled\": true\n                    }\n                }\n            ]",
    "weakness_title_read_only": "Insufficient Logging (Microsoft Azure)",
    "weakness_id_read_only": "P1032",
    "weakness": "33905c73-cc8d-44d5-b704-8c7c7349d534",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2018-03-01T14:35:13.110000-05:00",
    "last_updated": "2021-06-25T14:47:58.094000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1079",
    "universal_id": "da70a582-38e7-4cf0-bb96-4bf57a4947b5",
    "countermeasure_name": "Disable unapproved VM extensions (Microsoft Azure)",
    "countermeasure_solution": "Use policy rules to restrict VM extensions to the organization-approved ones.",
    "weakness_title_read_only": "Unapproved VM Extensions (Microsoft Azure)",
    "weakness_id_read_only": "P1033",
    "weakness": "01a49a5e-63b5-4c91-b7fb-6d5dd1822c75",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2018-03-01T14:35:30.862000-05:00",
    "last_updated": "2021-11-22T10:40:12.431000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1080",
    "universal_id": "df2c4fe2-98ef-4b90-88d6-3bc743f63f5c",
    "countermeasure_name": "Verify that unapproved VM extensions are not used (Microsoft Azure)",
    "countermeasure_solution": "**Azure Console**\n\n 1. Go to `Virtual machines`\n 2. For each virtual machine, go to `Settings`\n 3. Click on `Extensions`\n 4. Ensure that the listed extensions are approved for use.\n\n **Azure Command Line Interface 2.0**\n\nUse the below command to list the extensions attached to a VM, and ensure the listed extensions are approved for use.\n\n ```\n\n az vm extension list --vm-name <vmName> --resource-group <sourceGroupName> -- query [*].name\n\n ```",
    "weakness_title_read_only": "Unapproved VM Extensions (Microsoft Azure)",
    "weakness_id_read_only": "P1033",
    "weakness": "01a49a5e-63b5-4c91-b7fb-6d5dd1822c75",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2018-03-01T14:35:30.876000-05:00",
    "last_updated": "2021-06-25T14:47:57.035000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1081",
    "universal_id": "c8cc22a5-ad70-43df-8f3f-1d0f85609a07",
    "countermeasure_name": "Configure Key Vault securely (Microsoft Azure)",
    "countermeasure_solution": "Set the expiry date attribute on all Keys and Secrets in Azure Key Vault.",
    "weakness_title_read_only": "Improper Key Vault Configuration (Microsoft Azure)",
    "weakness_id_read_only": "P1034",
    "weakness": "02e009d4-c2cf-4ec2-ba8b-89424c92d6f6",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2018-03-01T14:35:32.427000-05:00",
    "last_updated": "2023-03-07T10:37:44.823000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1082",
    "universal_id": "1070080f-957d-48ff-b156-aea544ffa5aa",
    "countermeasure_name": "Verify that Key Vault is configured securely (Microsoft Azure)",
    "countermeasure_solution": " - Perform the following through **Azure Console**:\n\n    1. Go to `Key vaults`.\n    2. For each key vault, click on `Keys`.\n    3. Under the `Settings` section, make sure `Enabled?` is set to `Yes`.\n    4. Ensure that each key in the vault has `EXPIRATION DATE` set as appropriate.\n\n    Or using **Azure Command-Line Interface 2.0**:\n\n    - Ensure that the output of the below command contains Key ID (kid), enabled status as `true`\nand the expiration date is not empty or null:\n\n            az keyvault key list --vault-name <KEYVALUTNAME> --query [*].[{\"kid\":kid},{\"enabled\":attributes.enabled},{\"expires\":attributes.expires}] \n\n- Then using **Azure Console**:\n\n    1. Go to `Key vaults`.\n    2. For each Key vault, click on `Secrets`.\n    3. Under the `Settings` section, make sure `Enabled?` is set to `Yes`.\n    4. Ensure that each secret in the vault has `EXPIRATION DATE` set as appropriate.\n\n    Or using **Azure Command-Line Interface 2.0**:\n\n    - Ensure that the output of the below command contains ID (id), enabled status as `true` and\nexpiration date (expires) is not empty or null:\n\n            az keyvault secret list --vault-name <KEYVAULTNAME> --query [*].[{\"id\":id},{\"enabled\":attributes.enabled},{\"expires\":attributes.expires}]",
    "weakness_title_read_only": "Improper Key Vault Configuration (Microsoft Azure)",
    "weakness_id_read_only": "P1034",
    "weakness": "02e009d4-c2cf-4ec2-ba8b-89424c92d6f6",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2018-03-01T14:35:32.443000-05:00",
    "last_updated": "2021-06-25T14:47:43.956000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1083",
    "universal_id": "bd329871-8999-4ecb-880b-fb788d7b56ed",
    "countermeasure_name": "Disable non-required user capabilities (Microsoft Azure)",
    "countermeasure_solution": "Follow these instructions to disable unnecessary user capabilities:\n\n- Set `Users can consent to apps accessing company data on their behalf` to `No`: Require administrators to provide consent for the apps before use.\n- Set `Users can add gallery apps to their Access Panel` to `No`: Require administrators to provide consent for the apps before use.\n- Set `Users can register applications` to `No`: Require administrators to register third-party applications.\n- Set `Members can invite` to `No`: Restrict invitation through administrators only.\n- Set `Self-service group management enabled` to `No`: Restrict group creation to administrators only.\n- Set `Users can create security groups` to `No`: Restrict security group creation to administrators only.\n- Set `Users who can manage security groups` to `None`: Restrict security group management to administrators only.\n- Set `Users can create Office 365 groups` to `No`: Restrict Office 365 group creation to administrators only.\n- Set `Users who can manage Office 365 groups` to `None`: Restrict Office 365 group management to administrators only.",
    "weakness_title_read_only": "Running with Excessive Functionalities and Capabilities (Microsoft Azure)",
    "weakness_id_read_only": "P1035",
    "weakness": "918b7477-9182-499f-b352-55a8d42a23ee",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2018-03-01T16:07:22.187000-05:00",
    "last_updated": "2021-06-25T14:47:55.489000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1084",
    "universal_id": "bfe256c7-a455-426d-89d8-d458ceb28f13",
    "countermeasure_name": "Verify that non-required user capabilities are disabled (Microsoft Azure)",
    "countermeasure_solution": "**Azure Console**\n\n1. Go to `Azure Active Directory`\n2. Go to `Users and group`\n3. Go to `User settings`\n4. Verify that \n    - `Users can consent to apps accessing company data on their behalf` is set to `No`\n    - `Users can add gallery apps to their Access Panel` is set to `No`\n    - `Users can register applications` is set to `No`\n    - `Members can invite` is set to `No`\n    - `Self-service group management enabled` is set to `No`\n    - `Users can create security groups` is set to `No`\n    - `Users who can manage security groups` is set to `None`\n    - `Users can create Office 365 groups` is set to `No`\n    - `Users who can manage Office 365 groups` is set to `None`\n\n*Please note that at this point of time, there is no API/CLI mechanism available to programmatically conduct security assessment for this recommendation.*",
    "weakness_title_read_only": "Running with Excessive Functionalities and Capabilities (Microsoft Azure)",
    "weakness_id_read_only": "P1035",
    "weakness": "918b7477-9182-499f-b352-55a8d42a23ee",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2018-03-01T16:07:22.245000-05:00",
    "last_updated": "2021-06-25T14:47:55.595000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1085",
    "universal_id": "17d5b0f0-76f3-4b2f-949a-03662535696c",
    "countermeasure_name": "Do not create custom subscription owner roles (Microsoft Azure)",
    "countermeasure_solution": "Do not create custom roles with subscription ownership. Use the principle of least privilege, assigning only needed privileges instead of allowing full administrative access.",
    "weakness_title_read_only": "Custom Subscription Owner Roles (Microsoft Azure)",
    "weakness_id_read_only": "P1036",
    "weakness": "928836a6-5ea0-4022-9cf6-d805635f69aa",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2018-03-01T16:07:31.136000-05:00",
    "last_updated": "2021-06-25T14:47:51.927000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1086",
    "universal_id": "75af7cf8-87c1-4f1b-a74e-6fb154e8715e",
    "countermeasure_name": "Verify that no custom subscription owner roles are created (Microsoft Azure)",
    "countermeasure_solution": "Follow these instructions to verify that no custom subscription owner roles are created:\n\n**Azure Command Line Interface 2.0**\n\n```\naz role definition list\n```\n\n- Check for entries with `assignableScope` of `/` or a `subscription`, and an action of `*`.\n- Verify the usage and impact of removing the role identified.",
    "weakness_title_read_only": "Custom Subscription Owner Roles (Microsoft Azure)",
    "weakness_id_read_only": "P1036",
    "weakness": "928836a6-5ea0-4022-9cf6-d805635f69aa",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2018-03-01T16:07:31.152000-05:00",
    "last_updated": "2021-06-25T14:47:52.094000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1087",
    "universal_id": "72fe2041-f61b-4776-ada7-a48cd347abf1",
    "countermeasure_name": "Select standard pricing tier (Microsoft Azure)",
    "countermeasure_solution": "Select **Standard pricing tier** to enable threat detection for networks and virtual machines, providing threat intelligence, anomaly detection, and behavior analytics in Azure Security Center.\n\n__Note:__ Choosing the \"Standard pricing tier\" of Azure Security Center incurs an additional cost per node.",
    "weakness_title_read_only": "Non-Standard Pricing Tier (Microsoft Azure)",
    "weakness_id_read_only": "P1037",
    "weakness": "6d179124-f1c8-4277-b8ef-4d20a10e8a32",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2018-03-01T16:07:31.250000-05:00",
    "last_updated": "2021-06-25T14:47:59.815000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1088",
    "universal_id": "486c0dd8-25bf-4c82-803e-3da722926efd",
    "countermeasure_name": "Verify that standard pricing tier is selected (Microsoft Azure)",
    "countermeasure_solution": "Follow these instructions through **Azure Console** to verify that standard pricing tier is selected:\n\n1. Go to `Azure Security Center`.\n2. Select `Security policy` blade.\n3. Select each subscription and click on `Edit settings`:\n    4. Select the `Pricing tier` blade.\n    5. Review the chosen pricing tier.\n\nPlease note that at this point in time, there is no API/CLI mechanism available to programmatically conduct a security assessment for this recommendation.",
    "weakness_title_read_only": "Non-Standard Pricing Tier (Microsoft Azure)",
    "weakness_id_read_only": "P1037",
    "weakness": "6d179124-f1c8-4277-b8ef-4d20a10e8a32",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2018-03-01T16:07:31.264000-05:00",
    "last_updated": "2021-06-25T14:47:59.690000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1089",
    "universal_id": "6f4f9f57-61f8-4398-8c28-2267dddd81e4",
    "countermeasure_name": "Set Resource Locks for mission critical Azure resources (Microsoft Azure)",
    "countermeasure_solution": "Use **Resource Manager Locks** to lock down Azure resources to prevent deletion or changing of a resource.\n \nYou can set the lock level to `CanNotDelete` or `ReadOnly` to achieve this purpose:\n\n- `CanNotDelete` means authorized users can still read and modify a resource, but they can't delete the resource.\n- `ReadOnly` means authorized users can read a resource, but they can't delete or update the resource. \n\n**Note:** These locks sit outside of the Role Based Access Controls (RBAC) hierarchy and, when applied, will place restrictions on the resource for all users.",
    "weakness_title_read_only": "Lack of Resource Locks for mission critical Azure resources (Microsoft Azure)",
    "weakness_id_read_only": "P1038",
    "weakness": "04adae99-b3b9-4eba-b235-d59d94b325fb",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2018-03-01T16:07:31.449000-05:00",
    "last_updated": "2021-06-25T14:47:48.299000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1090",
    "universal_id": "cf8efb9c-aa21-403a-aa45-0a535d483356",
    "countermeasure_name": "Verify that Resource Locks are set for mission critical Azure resources (Microsoft Azure)",
    "countermeasure_solution": "Follow these steps to verify that Resource Locks are set for mission critical Azure resources:\n\n**Azure Console**\n\n1. Navigate to the specific Azure Resource or Resource Group\n2. Click on `Locks`\n3. Ensure the lock is defined with name and description, type as `CanNotDelete` or `ReadOnly` as appropriate.\n\n**Azure Command Line Interface 2.0**\n\nReview the list of all locks set currently:\n\n```\naz lock list --resource-group <resourcegroupname> --resource-name <resourcename> --namespace <Namespace> --resource-type <type> --parent \"\"\n```",
    "weakness_title_read_only": "Lack of Resource Locks for mission critical Azure resources (Microsoft Azure)",
    "weakness_id_read_only": "P1038",
    "weakness": "04adae99-b3b9-4eba-b235-d59d94b325fb",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2018-03-01T16:07:31.468000-05:00",
    "last_updated": "2021-06-25T14:47:46.307000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1092",
    "universal_id": "e9b5d7bd-2967-48be-a185-f950b3333076",
    "countermeasure_name": "Do not store sensitive cleartext information in cookies",
    "countermeasure_solution": "Do not store any sensitive information in cleartext in a cookie. Attackers can use widely-available tools to view the cookie and read the sensitive information or change them. Even if the information is encoded in a way that is not human-readable, certain techniques could determine which encoding is being used, then decode the information.\n\t\nAlways keep sensitive data on the server (see the note below). In rare cases that you have to store client-side information in a cookie:\n\t\n- Use cryptographic methods to encrypt and sign the data.\n\n    Encryption helps to keep the data confidential and the signature helps to protect the integrity of information and preventing attackers from tampering with the stored data.\n\n- Verify the signature of cookie information before decrypting it on the server. If the signature is not valid, dump the information.\n\t\n__Note:__\nThe best practice is to save user information on the server side in a session object. Then create a unique session ID that refers to the session and store the session ID in the cookie. Refer to [T20](/library/tasks/T20) for more information about generating secure session IDs.",
    "weakness_title_read_only": "Cleartext Storage of Sensitive Information without Access Control Mechanisms",
    "weakness_id_read_only": "P209",
    "weakness": "a9791a66-ddfd-4094-a953-31af2064161d",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "architecture-design",
    "created": "2018-04-05T16:59:14.865000-04:00",
    "last_updated": "2021-06-25T14:47:36.200000-04:00",
    "custom": "False",
    "rules": "b310a679-c006-4abb-a02b-5f1608d05ace AND 647890fa-d25d-4852-86fe-a97a0d04cf54;b310a679-c006-4abb-a02b-5f1608d05ace AND c942552c-0d31-41c5-bba7-795ba0e8d88d",
    "rules_read_only": "A1080 AND A735;A1080 AND A736"
  },
  {
    "countermeasure_id": "T1093",
    "universal_id": "67e81181-4265-4a95-8462-05b7d8f844a0",
    "countermeasure_name": "Test that cookies do not contain sensitive cleartext information",
    "countermeasure_solution": "Follow these steps:\n\n- Create a list of sensitive pages in your application.\n- Use a commodity browser to open your application and navigate to each identified sensitive page. \n- For each page, use your browser features to see the list of cookies stored for that page (For example in Chrome you can find cookies under 'Application' panel in 'Developer Tools', or use a shortcut like 'chrome://settings/siteData').\n- Inspect the content of each stored cookie and make sure there is no sensitive information that is stored in cleartext.\n- If there is any signed and encrypted data in the cookie, verify that the server validates the signature before decrypting the information received from the user.",
    "weakness_title_read_only": "Cleartext Storage of Sensitive Information without Access Control Mechanisms",
    "weakness_id_read_only": "P209",
    "weakness": "a9791a66-ddfd-4094-a953-31af2064161d",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2018-04-05T17:01:31.025000-04:00",
    "last_updated": "2021-06-25T14:47:36.138000-04:00",
    "custom": "False",
    "rules": "b310a679-c006-4abb-a02b-5f1608d05ace AND 647890fa-d25d-4852-86fe-a97a0d04cf54;b310a679-c006-4abb-a02b-5f1608d05ace AND c942552c-0d31-41c5-bba7-795ba0e8d88d",
    "rules_read_only": "A1080 AND A735;A1080 AND A736"
  },
  {
    "countermeasure_id": "T1094",
    "universal_id": "447298ec-7ebb-44e3-8c58-92aa934349b7",
    "countermeasure_name": "Place MySQL data and logs on non-system partitions (MySQL)",
    "countermeasure_solution": "Place database and log files on non-system partitions:\n\n- Database: It is generally accepted that host operating systems should include different filesystem partitions for different purposes. One set of filesystems are typically called \"system partitions\", and are generally reserved for host system/application operation. The other set of filesystems are typically called \"non-system partitions\", and such locations are generally reserved for storing data.\n\n- Log Files: MySQL log files can be set in the MySQL configuration to exist anywhere on the filesystem. It is common practice to ensure that the system filesystem is left uncluttered by application logs. System filesystems include the root, /var, or /usr. Moving the database to a non-system partition may be difficult depending on whether there was only a single partition when the operating system was set up and whether there are additional storage available.",
    "weakness_title_read_only": "Denial of service due to placing MySQL data on system partitions (MySQL)",
    "weakness_id_read_only": "P1039",
    "weakness": "b30f1065-058a-4d46-8d4a-7b4744efe35e",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2018-04-10T23:58:11.072000-04:00",
    "last_updated": "2021-06-25T14:47:50.557000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1095",
    "universal_id": "e8a1160e-e3d3-48ca-b272-bffcf28a2dda",
    "countermeasure_name": "Test that MySQL data and logs are not placed on system partitions (MySQL)",
    "countermeasure_solution": "Follow these steps:\n\n- Find `datadir` by executing the following SQL statement: \n     - `show variables where variable_name = 'datadir';`\n\n- Using the returned \"datadir value\" from the above query, execute the following in a system terminal:\n     - `df -h <datadir value>`\n\n- The output returned from the `df` command above should not include root ('/'), \"/var\", or \"/usr\".\n\n- Similarly for the log files execute this SQL command:\n     - `SELECT @@global.log_bin_basename;`\n\n- Ensure the value returned does not indicate root ('/'), \"/var\", or \"/usr\".",
    "weakness_title_read_only": "Denial of service due to placing MySQL data on system partitions (MySQL)",
    "weakness_id_read_only": "P1039",
    "weakness": "b30f1065-058a-4d46-8d4a-7b4744efe35e",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2018-04-10T23:58:11.112000-04:00",
    "last_updated": "2021-06-25T14:47:50.369000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1096",
    "universal_id": "e2cfdf32-aa8d-4a06-b4d2-723d674b2f23",
    "countermeasure_name": "Keep MySQL separate from other services (MySQL)",
    "countermeasure_solution": "Follow these guidelines:\n\n- __Use dedicated least privileged account for MySQL daemon/service__: As with any service installed on a host, MYSQL service, can be provided with its own user context. Having a dedicated user to the service provides the ability to precisely constrain the service within the larger host context.\n\n- __Dedicate a machine to running MySQL__: It is recommended that you run MySQL Server software on a dedicated server. The database server can be placed on a separate zone allowing access only from particular hosts and over particular protocols.\n- Make sure that applications or services that are required for the proper operation of the operating system are not removed. \n- Modify custom applications to accommodate database connections over the network rather than on the use (e.g., using TCP/IP connections). \n- Additional hardware and operating system licenses may be required to make the architectural change.",
    "weakness_title_read_only": "Lack of separation between MySQL and other services (MySQL)",
    "weakness_id_read_only": "P1040",
    "weakness": "3a08d5c5-6f4a-4d43-945b-67ceead65465",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2018-04-10T23:58:11.265000-04:00",
    "last_updated": "2021-06-25T14:47:51.891000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1097",
    "universal_id": "ffefb394-32b2-4aee-be1e-2f363e1b904a",
    "countermeasure_name": "Verify that MySQL is separate from other services (MySQL)",
    "countermeasure_solution": "Follow these steps:\n\n- Execute the following command at a terminal prompt to assess this recommendation:\n     - `ps -ef | egrep \"^mysql.*$\"`\n     - If no lines are returned, then therequirements are most probably not met and this test fails. It is assumed that the MySQL user is mysql. Additionally, you may consider running `sudo -l` as the MySQL user or to check the sudoers file.\n\n- Verify that there are no other roles enabled for the underlying operating system and that no additional applications or services unrelated to the proper operation of the MySQL server software are installed.",
    "weakness_title_read_only": "Lack of separation between MySQL and other services (MySQL)",
    "weakness_id_read_only": "P1040",
    "weakness": "3a08d5c5-6f4a-4d43-945b-67ceead65465",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2018-04-10T23:58:11.284000-04:00",
    "last_updated": "2021-06-25T14:47:51.362000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1098",
    "universal_id": "5bd9c23a-6348-450e-91c5-c24fe7dd331b",
    "countermeasure_name": "Keep passwords secure (MySQL)",
    "countermeasure_solution": "Follow these guidelines to keep password operations secure:\n\n- __Verify that 'MYSQL_PWD' is not set__: MySQL can read a default database password from an environment variable called MYSQL_PWD. Avoiding use of this environment variable can better safeguard the confidentiality of MySQL credentials.\n\n- __Do not specify passwords in command line__: When a command is executed on the command line, for example `mysql -u admin -p password`, the password may be visible in the user's shell/command history or in the process list. Depending on the remediation chosen, additional steps may need to be undertaken like:\n    - Entering a password when prompted;\n    - Ensuring the file permissions on \".my.cnf\" is restricted yet accessible by the user;\n    - Using mysql_config_editor to encrypt the authentication credentials in \".mylogin.cnf\".\n    - Additionally, not all scripts/applications may be able to use \".mylogin.cnf\".\n\n- __Ensure 'old_passwords' is not set to '1'__: This variable controls the password hashing method used by the PASSWORD() function and for the IDENTIFIED BY clause of the CREATE USER and GRANT statements. The value can be one of the following:\n    - 0 - authenticate with the mysql_native_password plugin\n    - 1 - authenticate with the mysql_old_password plugin\n    - 2 - authenticate with the sha256_password plugin\n\n- __Ensure passwords are not stored in the global configuration__: The [client] section of the MySQL configuration file allows setting a user and password to be used. Verify the password option is not used in the global configuration file (my.cnf).\n    - The global configuration is by default readable for all users on the system. This is needed for global defaults (prompt, port, socket, etc). If a password is present in this file then all users on the system may be able to access it.",
    "weakness_title_read_only": "Weak Password Handling (MySQL)",
    "weakness_id_read_only": "P1041",
    "weakness": "9b3f7f69-a4c5-40a4-9343-a1d15d55c728",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2018-04-10T23:58:11.379000-04:00",
    "last_updated": "2021-06-25T14:47:43.974000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1099",
    "universal_id": "c0976fce-48b3-4d48-9322-8d7f83a4a7c9",
    "countermeasure_name": "Verify that passwords are secure (MySQL)",
    "countermeasure_solution": "Follow these steps:\n\n- __Verify that 'MYSQL_PWD' is not set__: To assess this recommendation, use the /proc filesystem to determine if MYSQL_PWD is currently set for any process: \n      - `grep MYSQL_PWD /proc/*/environ`\n      - This may return one entry for the process which is executing the grep command.\n      - Check the process or task list to see if a password is visible.\n\n- __Verify that a password is not specified in command line__: Check the shell or command history to verify that a password is not visible.\n\n- __Verify that 'old_passwords' is not set to '1'__: Execute the following SQL statement to assess this recommendation:\n      - `SHOW VARIABLES WHERE Variable_name = 'old_passwords';`\n      - Ensure the Value field is not set to 1. Otherwise this test fails.\n\n- __Verify that passwords are not stored in the global configuration__: To assess this recommendation, perform the following steps:\n     - Open the MySQL configuration file (e.g. \"my.cnf\").\n     - Examine the [client] section of the MySQL configuration file and verify that the password is not specified.",
    "weakness_title_read_only": "Weak Password Handling (MySQL)",
    "weakness_id_read_only": "P1041",
    "weakness": "9b3f7f69-a4c5-40a4-9343-a1d15d55c728",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2018-04-10T23:58:11.409000-04:00",
    "last_updated": "2021-06-25T14:47:43.774000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1100",
    "universal_id": "c32f2857-592f-4049-85d7-adbb714ae439",
    "countermeasure_name": "Avoid reusing database accounts (MySQL)",
    "countermeasure_solution": "Do not share database accounts among multiple applications or users.",
    "weakness_title_read_only": "Reuse of Database Accounts (MySQL)",
    "weakness_id_read_only": "P1042",
    "weakness": "bebb2a0f-ab28-4092-b5ca-56486c0179bf",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2018-04-10T23:58:11.588000-04:00",
    "last_updated": "2021-06-25T14:47:41.480000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1101",
    "universal_id": "1a924cec-f6f3-431c-8d62-3732a13b5fbd",
    "countermeasure_name": "Verify that database accounts are not reused (MySQL)",
    "countermeasure_solution": "Verify that each database account is only linked to one of the following:\n\n* system accounts\n* a person\n* an application\n\nOtherwise this test fails.",
    "weakness_title_read_only": "Reuse of Database Accounts (MySQL)",
    "weakness_id_read_only": "P1042",
    "weakness": "bebb2a0f-ab28-4092-b5ca-56486c0179bf",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2018-04-10T23:58:11.602000-04:00",
    "last_updated": "2021-06-25T14:47:41.401000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1102",
    "universal_id": "38b19b9a-dc21-4068-9fcd-91b6782aec48",
    "countermeasure_name": "Securely set file and directory permissions (MySQL)",
    "countermeasure_solution": "Ensure the following files and directories have appropriate permissions and ownerships:\n\n- 'datadir'\n- 'log_bin_basename'\n- 'log_error'\n- 'slow_query_log'\n- 'relay_log_basename'\n- 'general_log_file'\n- SSL Key\n- Plugin Directory\n- 'audit_log_file'\n\n####The Rationale for Each File/Directory\n\n- The data directory is the location of the MySQL databases.\n- MySQL can operate using a variety of log files, each used for different purposes. These are the binary log, error log, slow query log, relay log, audit log and general log. Because these are files on the host operating system, they are subject to the permissions and ownership structure provided by the host and may be accessible by users other than the MySQL user.\n- Changing the permissions and ownership of the log files might impact monitoring tools which use a logfile adapter. Also the slow query log can be used for performance analysis by application developers.\n- Changing the permissions and ownership of the audit log file may have impact on who can access and edit the the audit log. Such changes can affect monitoring tools which maybe using a logfile adapter or scripted alternatives. Also the audit log may be used by alerting by infrastructure teams which can affect real-time audit capability.\n- If the permissions on the binary, relay log files are accidentally changed to exclude the user account which is used to run the MySQL service, then this might break replication.\n- If the permissions or ownership for the key file are changed incorrectly this can cause SSL to be disabled when MySQL is restarted or can cause MySQL not to start at all.\n- The binary log file can be used for point in time recovery so this can also affect backup, restore and disaster recovery procedures.\n- When configured to use SSL/TLS, MySQL relies on key files, which are stored on the host's filesystem. These key files are subject to the host's permissions and ownership structure.\n- If other applications are using the same keypair then changing the permissions or ownership of the key file will affect this application. If this is the case then a new keypair must be generated for MySQL.\n- The plugin directory is the location of the MySQL plugins. Plugins are storage engines or user defined functions (UDFs).\n- Users other than the mysql user will no longer be able to update and add/remove plugins unless they're able to switch to the mysql user;",
    "weakness_title_read_only": "File and Directory Permissions Are Not Set Securely (MySQL)",
    "weakness_id_read_only": "P1043",
    "weakness": "e1953d9d-d76f-49c2-8bd0-a5d845fdbd9a",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2018-04-10T23:58:11.774000-04:00",
    "last_updated": "2021-06-25T14:47:50.386000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1103",
    "universal_id": "b2f12b30-3a82-495b-961a-666926be2483",
    "countermeasure_name": "Test if file and directory permissions are securely set (MySQL)",
    "countermeasure_solution": "Perform the following steps to assess file and directory permissions:\n\n- Execute the following SQL statement to determine the Value of datadir\n```\nshow variables where variable_name = 'datadir';\n```\n- Execute the following command at a terminal prompt\n```\nls -l <datadir>/.. | egrep \"^d[r|w|x]{3}------\\s*.\\s*mysql\\s*mysql\\s*\\d*.*mysql\"\n```\nLack of output implies a finding.\n- Execute the following SQL statement to determine the Value of log_bin_basename\nshow variables like 'log_bin_basename';\n- Execute the following command at a terminal prompt to list all log_bin_basename.* files\n```\nls <log_bin_basename>.*</div>\n```\n- For each file listed, execute the following command \n```\nls -l <log_bin_basename.nnnnn> | egrep \"^-[r|w]{2}-[r|w]{2}----\\s*.*$\"\n```\nLack of output implies a finding.\n- Execute the following SQL statement to determine the Value of log_error\nshow variables like 'log_error';\n- Execute the following command at a terminal prompt to list all log_error.* files\n```\n ls <log_error>.*</div>\n```\n- For each file listed, execute the following command\n```\n ls -l <log_error> | egrep \"^-[r|w]{2}-[r|w]{2}----\\s*.*$\"\n```\nLack of output implies a finding.\n - Execute the following SQL statement to determine the Value of slow_query_log_file\n```\nshow variables like 'slow_query_log_file';\n```\n- Execute the following command at a terminal prompt to list all slow_query_log_file.* files\n```\nls <slow_query_log_file>.*</div>\n```\n- For each file listed, execute the following command\n```\n ls -l <slow_query_log_file> | egrep \"^-[r|w]{2}-[r|w]{2}----\\s*.*$\"\n```\nLack of output implies a finding.\n- Execute the following SQL statement to determine the Value of `relay_log_basename`\n```\n show variables like 'relay_log_basename';\n```\n- Execute the following command at a terminal prompt to list all relay_log_basename.* files\n```\n ls <relay_log_basename>.*</div>\n```\n- For each file listed, execute the following command\n```\nls -l <relay_log_basename> | egrep \"^-[r|w]{2}-[r|w]{2}----\\s*.*$\"\n```\nLack of output implies a finding.\n- Execute the following SQL statement to determine the Value of general_log_file\n```\nshow variables like 'general_log_file';\n```\n- Execute the following command at a terminal prompt to list all general_log_file.* files\n```\nls <general_log_file>.*</div>\n```\n- For each file listed, execute the following command\n```\nls -l <general_log_file> | egrep \"^-[r|w]{2}-[r|w]{2}----\\s*.*$\"\n```\nLack of output implies a finding.\n- To assess this recommendation, locate the SSL key in use by executing the following SQL statement to get the Value of ssl_key:\n```\nshow variables where variable_name = 'ssl_key';\n```\nThen, execute the following command to assess the permissions of the Value:\n```\nls -l <ssl_key Value> | egrep \"^-r--------[ \\t]*.[ \\t]*mysql[ \\t]*mysql.*$\"\n```\nLack of output from the above command implies a finding.\n- To assess this recommendation, execute the following SQL statement to discover the Value of plugin_dir:\n```\nshow variables where variable_name = 'plugin_dir';\n```\nThen, execute the following command at a terminal prompt (using the discovered plugin_dir Value) to determine the permissions and ownership.\n```\nls -l <plugin_dir Value>/.. | egrep \"^drwxr[-w]xr[-w]x[ \\t]*[0-9][ \\t]*mysql[ \\t]*mysql.*plugin.*$\"\n```\nLack of output implies a finding. NOTE: Permissions are intended to be either 775 or 755.\n\n- To assess this recommendation, execute the following SQL statement to discover the audit_log_file value:\n```\nshow global variables where variable_name='audit_log_file';\n```\nNOTE: If you see the audit file name but no path, the default path will be the path assigned to the datadir variable. Then, execute the following command at a terminal prompt (using the discovered audit_log_file value):\n```\nls -l <audit_log_file> | egrep \"^-rw[-x]rw[-x][-r][-w][-x][ \\t]*[0-9][ \\t]*mysql[ \\t]*mysql.*$\"\n```",
    "weakness_title_read_only": "File and Directory Permissions Are Not Set Securely (MySQL)",
    "weakness_id_read_only": "P1043",
    "weakness": "e1953d9d-d76f-49c2-8bd0-a5d845fdbd9a",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2018-04-10T23:58:11.824000-04:00",
    "last_updated": "2021-06-25T14:47:50.418000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1104",
    "universal_id": "083b83ab-a1f0-4b21-95ba-dd6626cb4432",
    "countermeasure_name": "Apply the latest security patches (MySQL)",
    "countermeasure_solution": "Keep MySQL installations up-to-date with the latest security updates.\n\nPeriodically, updates to MySQL server are released to resolve bugs, mitigate vulnerabilities, and provide new features. To update the MySQL server a restart is required.",
    "weakness_title_read_only": "The latest security patches are not applied (MySQL)",
    "weakness_id_read_only": "P1044",
    "weakness": "038b7fae-bb5a-4800-b493-d1b4191010e3",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2018-04-10T23:58:12.296000-04:00",
    "last_updated": "2021-06-25T14:47:57.235000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1105",
    "universal_id": "a9745d0e-2c6b-4c63-9251-1fcaa0dd1cb7",
    "countermeasure_name": "Test if the latest security patches are applied (MySQL)",
    "countermeasure_solution": "Execute the following SQL statement to identify the MySQL server version:\n```\nSHOW VARIABLES WHERE Variable_name LIKE \"version\";\n```\nNow compare the version with the security announcements from Oracle and/or the OS if the OS packages are used.",
    "weakness_title_read_only": "The latest security patches are not applied (MySQL)",
    "weakness_id_read_only": "P1044",
    "weakness": "038b7fae-bb5a-4800-b493-d1b4191010e3",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2018-04-10T23:58:12.310000-04:00",
    "last_updated": "2021-06-25T14:47:56.872000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1106",
    "universal_id": "12cef2bb-7c70-4a0d-ad3b-5a6954006453",
    "countermeasure_name": "Ensure sql_mode contains NO_AUTO_CREATE_USER (MySQL)",
    "countermeasure_solution": "Ensure sql_mode contains `NO_AUTO_CREATE_USER`. `NO_AUTO_CREATE_USER` is an option for sql_mode that prevents a GRANT statement from automatically creating a user when authentication information is not provided.",
    "weakness_title_read_only": "The sql_mode does not contain NO_AUTO_CREATE_USER (MySQL)",
    "weakness_id_read_only": "P1045",
    "weakness": "cbe1325c-ef81-4e38-9d59-c2b111da1e55",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2018-04-10T23:58:12.498000-04:00",
    "last_updated": "2021-06-25T14:47:41.450000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1107",
    "universal_id": "44cb0a36-0dcd-408e-ad3e-28ab0cecbe65",
    "countermeasure_name": "Test if sql_mode contains NO_AUTO_CREATE_USER (MySQL)",
    "countermeasure_solution": "Execute the following SQL statements to assess this recommendation:\n```\n SELECT @@global.sql_mode;\n SELECT @@session.sql_mode; \n```\nEnsure that each result contains NO_AUTO_CREATE_USER.",
    "weakness_title_read_only": "The sql_mode does not contain NO_AUTO_CREATE_USER (MySQL)",
    "weakness_id_read_only": "P1045",
    "weakness": "cbe1325c-ef81-4e38-9d59-c2b111da1e55",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2018-04-10T23:58:12.512000-04:00",
    "last_updated": "2021-06-25T14:47:41.614000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1108",
    "universal_id": "60e34d57-47d0-4acd-a432-273b98c798b4",
    "countermeasure_name": "Ensure that password policy is in place (MySQL)",
    "countermeasure_solution": "Ensure that password policy is in place. Password complexity includes password characteristics such as length, case, length, and character sets. Remediation for this recommendation requires a server restart.",
    "weakness_title_read_only": "Password policy is not in place (MySQL)",
    "weakness_id_read_only": "P1046",
    "weakness": "e5796877-55f9-494d-8178-e3bd55655686",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2018-04-10T23:58:12.581000-04:00",
    "last_updated": "2021-06-25T14:47:43.509000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1109",
    "universal_id": "409aef98-bdd6-451f-ae25-0152f9ab4bf6",
    "countermeasure_name": "Test if password policy is in place (MySQL)",
    "countermeasure_solution": "Execute the following SQL statements to assess this recommendation:\n```\n SHOW VARIABLES LIKE 'validate_password%';\n```\nThe result set from the above statement should show:\n\n- validate_password_length should be 14 or more\n- validate_password_mixed_case_count should be 1 or more\n- validate_password_number_count should be 1 or more\n- validate_password_special_char_count should be 1 or more\n- validate_password_policy should be MEDIUM or STRONG\n\nThe following lines should be present in the global configuration:\n``\n plugin-load=validate_password.so\n validate-password=FORCE_PLUS_PERMANENT \n```\nCheck if users have a password which is identical to the username:\n```\nSELECT User,Password,Host FROM mysql.user \nWHERE password=CONCAT('*', UPPER(SHA1(UNHEX(SHA1(user)))));\n```\nNOTE: This method is only capable of checking the post-4.1 password format which is also known as mysql_native_password.",
    "weakness_title_read_only": "Password policy is not in place (MySQL)",
    "weakness_id_read_only": "P1046",
    "weakness": "e5796877-55f9-494d-8178-e3bd55655686",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2018-04-10T23:58:12.595000-04:00",
    "last_updated": "2021-06-25T14:47:43.637000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1110",
    "universal_id": "5a60298c-f542-449e-9f46-977a2f992b6a",
    "countermeasure_name": "Disable MySQL Command History (MySQL)",
    "countermeasure_solution": "Disable the MySQL command history.",
    "weakness_title_read_only": "Enabled MySQL Command History (MySQL)",
    "weakness_id_read_only": "P1047",
    "weakness": "928952d1-4361-43b9-aa11-443f878fc84a",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2018-04-10T23:58:12.662000-04:00",
    "last_updated": "2021-06-25T14:47:55.862000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1111",
    "universal_id": "c47f79e8-2271-4ead-bdd1-ad2a91782cba",
    "countermeasure_name": "Verify that MySQL Command History is disabled (MySQL)",
    "countermeasure_solution": "Execute the following commands to assess this recommendation:\n\n```\nfind /home -name \".mysql_history\"\n```\nFor each file returned determine whether that file is symbolically linked to `/dev/null`.",
    "weakness_title_read_only": "Enabled MySQL Command History (MySQL)",
    "weakness_id_read_only": "P1047",
    "weakness": "928952d1-4361-43b9-aa11-443f878fc84a",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2018-04-10T23:58:12.678000-04:00",
    "last_updated": "2021-06-25T14:47:55.987000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1112",
    "universal_id": "dba1902a-09ad-4cc3-ae72-6553c751470c",
    "countermeasure_name": "Disable Interactive Login (MySQL)",
    "countermeasure_solution": "Disable **Interactive** access by the MySQL user to prevent the MySQL administrator from interactively logging into the operating system using the MySQL user. Instead, the administrator needs to log in using one's own account.",
    "weakness_title_read_only": "Enabled Interactive Login (MySQL)",
    "weakness_id_read_only": "P1048",
    "weakness": "365dd1cb-d0aa-4b31-aabe-a1309ddd4fff",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2018-04-10T23:58:12.760000-04:00",
    "last_updated": "2023-03-17T17:11:50.055000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1113",
    "universal_id": "57af9a50-cadc-4f51-9b6c-f7312a82f575",
    "countermeasure_name": "Verify that Disable Interactive Login (MySQL)",
    "countermeasure_solution": "Execute the following command to assess this recommendation:\n\n    getent passwd mysql | egrep \"^.*[\\/bin\\/false|\\/sbin\\/nologin]$\"\n\nLack of output implies a finding.",
    "weakness_title_read_only": "Enabled Interactive Login (MySQL)",
    "weakness_id_read_only": "P1048",
    "weakness": "365dd1cb-d0aa-4b31-aabe-a1309ddd4fff",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2018-04-10T23:58:12.774000-04:00",
    "last_updated": "2021-06-25T14:47:51.233000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1114",
    "universal_id": "7cd33cb0-9ccc-4eed-ae53-4a00e3049adb",
    "countermeasure_name": "Avoid using default or shared cryptographic material (MySQL)",
    "countermeasure_solution": "Use the cryptographic material used by MySQL, such as digital certificates and encryption keys, only for MySQL and only for one instance.\n\nDo not use default cryptographic material because others are likely to have copies of them.",
    "weakness_title_read_only": "Using Default or Shared Cryptographic Material (MySQL)",
    "weakness_id_read_only": "P1049",
    "weakness": "02bed3b1-655b-4714-8784-51cb8c1c434d",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2018-04-10T23:58:12.897000-04:00",
    "last_updated": "2021-06-25T14:47:35.919000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1115",
    "universal_id": "404ed276-3ad5-43e9-bc77-1607dd14d636",
    "countermeasure_name": "Verify that you do not use default or shared cryptographic material (MySQL)",
    "countermeasure_solution": "Review all cryptographic material and check to see if any of it is default or is used for other MySQL instances or for purposes other than MySQL.",
    "weakness_title_read_only": "Using Default or Shared Cryptographic Material (MySQL)",
    "weakness_id_read_only": "P1049",
    "weakness": "02bed3b1-655b-4714-8784-51cb8c1c434d",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2018-04-10T23:58:12.912000-04:00",
    "last_updated": "2021-06-25T14:47:35.800000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1116",
    "universal_id": "749b31f7-6888-432f-9637-92e55b7bbf48",
    "countermeasure_name": "Drop the default 'test' database (MySQL)",
    "countermeasure_solution": "Drop the test database that comes with the default MySQL installation.",
    "weakness_title_read_only": "Installed 'test' Database (MySQL)",
    "weakness_id_read_only": "P1050",
    "weakness": "8b98f550-0e1c-45a9-ad73-6ec3a9a1fffd",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "deployment",
    "created": "2018-04-11T00:06:10.241000-04:00",
    "last_updated": "2021-06-25T14:47:56.073000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1117",
    "universal_id": "11b4e517-db4c-49fd-b47c-22d71c2c24bb",
    "countermeasure_name": "Verify that the 'test' database is not installed (MySQL)",
    "countermeasure_solution": "Execute the following SQL statement to determine if the test database is present:\n\n    SHOW DATABASES LIKE 'test';\n\nThe above SQL statement must return zero rows.",
    "weakness_title_read_only": "Installed 'test' Database (MySQL)",
    "weakness_id_read_only": "P1050",
    "weakness": "8b98f550-0e1c-45a9-ad73-6ec3a9a1fffd",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2018-04-11T00:06:10.291000-04:00",
    "last_updated": "2021-06-25T14:47:56.215000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1118",
    "universal_id": "97807441-3cee-4410-9c6e-208a528b42cb",
    "countermeasure_name": "Restrict access to local files (MySQL)",
    "countermeasure_solution": "To restrict access to local files:\n\n- Disable `local_infile`:\n\n    The `local_infile` parameter dictates whether files located on the MySQL client's host can be loaded via `LOAD DATA LOCAL INFILE`.\n\n    **Note:** Disabling `local_infile` will impact the functionality of solutions that rely on it.\n\n- Set `secure_file_priv` to `NULL`:\n\n    This would disable import and export operations by MySQL. If the functionality is required, the value should be set to a file system location that contains only resources expected to be loaded by MySQL.\n\n    **Note:** Solutions that rely on loading data from directories may be negatively impacted by this change.",
    "weakness_title_read_only": "Unrestricted access to local files (MySQL)",
    "weakness_id_read_only": "P1051",
    "weakness": "27b3eb6a-1020-40e7-9379-7cb8fcd6b2ce",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2018-04-11T00:06:10.403000-04:00",
    "last_updated": "2021-06-25T14:47:50.618000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1119",
    "universal_id": "899bb0c3-2828-4081-948f-c5f96477ca95",
    "countermeasure_name": "Verify that access to local files is restricted (MySQL)",
    "countermeasure_solution": "To verify that access to local files is restricted:\n\n- Execute the following SQL statement and ensure the Value field is set to `OFF`:\n\n        SHOW VARIABLES WHERE Variable_name = 'local_infile';\n\n- Execute the following SQL statement and ensure one row is returned:\n\n        SHOW GLOBAL VARIABLES WHERE Variable_name = 'secure_file_priv' AND Value<>'';\n\n    - **Note:** The Value should contain a valid path.",
    "weakness_title_read_only": "Unrestricted access to local files (MySQL)",
    "weakness_id_read_only": "P1051",
    "weakness": "27b3eb6a-1020-40e7-9379-7cb8fcd6b2ce",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2018-04-11T00:06:10.423000-04:00",
    "last_updated": "2021-06-25T14:47:50.600000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1120",
    "universal_id": "f661dc56-ba41-4500-a0fb-9b2abe86fddd",
    "countermeasure_name": "Set up secure MySQL permissions (MySQL)",
    "countermeasure_solution": " - Ensure `mysqld` is not started with `--skip-grant-tables`:\n This option causes mysqld to start without using the privilege system.\n\n- Ensure only administrative users have full database access:\n The `mysql.user` and `mysql.db` tables list a variety of privileges that can be granted (or denied) to MySQL users. Some of the privileges of concern include: `Select_priv`, `Insert_priv`, `Update_priv`, `Delete_priv`, `Drop_priv`, and so on. Typically, these privileges should not be available to every MySQL user and often are reserved for administrative use only.\n\n Consider which privileges are required by each user requiring interactive database access.\n\n- Ensure `file_priv` Is not set to 'Y' for non-administrative users:\n The `File_priv` privilege found in the mysql.user table is used to allow or disallow a user from reading and writing files on the server host. Any user with the `File_priv` right granted has the ability to:\n\n \n * Read files from the local file system that are readable by the MySQL server (this includes world-readable files)\n\n * Write files to the local file system where the MySQL server has write access\n\n- Ensure `super_priv` Is not set to `Y` for non-administrative users:\n The SUPER privilege found in the mysql.user table governs the use of a variety of MySQL features. These features include, CHANGE MASTER TO, KILL, mysqladmin kill option, PURGE BINARY LOGS, SET GLOBAL, mysqladmin debug option, logging control, and more.\n\n \n\n When the SUPER privilege is denied to a given user, that user will be unable to take advantage of certain capabilities, such as certain mysqladmin options.\n\n- Ensure `shutdown_priv` Is Not Set to `Y` for non-administrative users:\n The SHUTDOWN privilege simply enables use of the shutdown option to the mysqladmin command, which allows a user with the SHUTDOWN privilege the ability to shut down the MySQL server.\n\n- Ensure `create_user_priv` Is not set to 'Y' for non-administrative users:\n The CREATE USER privilege governs the right of a given user to add or remove users, change existing users' names, or revoke existing users' privileges.\n\n Users that are denied the CREATE USER privilege will not only be unable to create a user, but they may be unable to drop a user, rename a user, or otherwise revoke a given user's privileges.\n\n- Ensure `grant_priv` is not set to `Y` for non-administrative users:\n The GRANT OPTION privilege exists in different contexts (mysql.user, mysql.db) for the purpose of governing the ability of a privileged user to manipulate the privileges of other users.\n\n- Ensure `repl_slave_priv` is not set to `Y` for non-slave users:\n The REPLICATION SLAVE privilege governs whether a given user (in the context of the master server) can request updates that have been made on the master server.\n\n- Ensure DML/DDL grants are limited to specific databases and users:\n DML/DDL includes the set of privileges used to modify or create data structures. This includes INSERT, SELECT, UPDATE, DELETE, DROP, CREATE, and ALTER privileges.\n\n- Ensure `super_priv` is not set to `Y` for replication users:\n The SUPER privilege found in the mysql.user table governs the use of a variety of MySQL features. These features include, CHANGE MASTER TO, KILL, mysqladmin kill option, PURGE BINARY LOGS, SET GLOBAL, mysqladmin debug option, logging control, and more.\n\n\n When the SUPER privilege is denied to a given user, that user will be unable to take advantage of certain capabilities, such as certain `mysqladmin` options.",
    "weakness_title_read_only": "Unsecure MySQL permissions (MySQL)",
    "weakness_id_read_only": "P1052",
    "weakness": "5e7b88a4-2cd3-4b94-8485-997d37e2ff35",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2018-04-11T00:06:10.673000-04:00",
    "last_updated": "2021-06-25T14:47:47.829000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1121",
    "universal_id": "1acc6b46-e8e5-44f6-aa81-7863cd79de7d",
    "countermeasure_name": "Verify that MySQL permissions are set securely (MySQL)",
    "countermeasure_solution": "Perform the following to determine if the recommended state is in place:\n\n * Open the MySQL configuration (e.g. my.cnf) file and search for skip-grant-tables\n\n * Ensure skip-grant-tables is set to FALSE\n\n- Execute the following SQL statement(s) to assess this recommendation:\n\n````\n SELECT user, host\n\n FROM mysql.user\n\n WHERE (Select_priv = 'Y')\n\n OR (Insert_priv = 'Y')\n\n OR (Update_priv = 'Y')\n\n OR (Delete_priv = 'Y')\n\n OR (Create_priv = 'Y')\n\n OR (Drop_priv = 'Y');\n````\n \n````\n SELECT user, host\n\n FROM mysql.db\n\n WHERE db = 'mysql'\n\n AND ((Select_priv = 'Y')\n\n OR (Insert_priv = 'Y')\n\n OR (Update_priv = 'Y')\n\n OR (Delete_priv = 'Y')\n\n OR (Create_priv = 'Y')\n\n OR (Drop_priv = 'Y'));\n```` \n\n Ensure all users returned are administrative users.\n\n- Execute the following SQL statement to audit this setting\n````\n select user, host from mysql.user where File_priv = 'Y';\n````\n \n\n Ensure only administrative users are returned in the result set.\n\n- Execute the following SQL statement to audit this setting:\n````\n select user, host from mysql.user where Super_priv = 'Y';\n````\n \nEnsure only administrative users are returned in the result set.\n\n- Execute the following SQL statement to audit this setting:\n````\n SELECT user, host FROM mysql.user WHERE Shutdown_priv = 'Y';\n````\n Ensure only administrative users are returned in the result set.\n\n- Execute the following SQL statement to audit this setting:\n````\nSELECT user, host FROM mysql.user WHERE Create_user_priv = 'Y';\n````\n \nEnsure only administrative users are returned in the result set.\n\n- Execute the following SQL statements to audit this setting:\n````\n SELECT user, host FROM mysql.user WHERE Grant_priv = 'Y';\n\n SELECT user, host FROM mysql.db WHERE Grant_priv = 'Y';\n````\n \nEnsure only administrative users are returned in the result set.\n\n- Execute the following SQL statement to audit this setting:\n````\n SELECT user, host FROM mysql.user WHERE Repl_slave_priv = 'Y';\n````\n Ensure only accounts designated for slave users are granted this privilege.\n\n- Execute the following SQL statement to audit this setting:\n````\n SELECT User,Host,Db\n\n FROM mysql.db\n\n WHERE Select_priv='Y'\n\n OR Insert_priv='Y'\n\n OR Update_priv='Y'\n\n OR Delete_priv='Y'\n\n OR Create_priv='Y'\n\n OR Drop_priv='Y'\n\n OR Alter_priv='Y';\n````\n \n\n Ensure all users returned should have these privileges on the indicated databases.\n\n \n_NOTE:_ Global grants are covered in Recommendation 4.1.\n\n- Execute the following SQL statement to audit this setting:\n````\n select user, host from mysql.user where user='repl' and Super_priv = 'Y';\n````\n  No rows should be returned.\n\n _NOTE:_ Substitute your replication user's name for repl in the above query.",
    "weakness_title_read_only": "Unsecure MySQL permissions (MySQL)",
    "weakness_id_read_only": "P1052",
    "weakness": "5e7b88a4-2cd3-4b94-8485-997d37e2ff35",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2018-04-11T00:06:10.727000-04:00",
    "last_updated": "2021-06-25T14:47:46.450000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1122",
    "universal_id": "445a7bce-6038-49c5-899f-9cb1d08764a9",
    "countermeasure_name": "Ensure symbolic links are disabled (MySQL)",
    "countermeasure_solution": "Prevent *sym links* being used for database files. When symbolic links are disabled, then symbolic links stored in files or entries in tables are not used by the database. \n\nThe *symbolic-links* and *skip-symbolic-links* options for MySQL determine whether symbolic link support is available. When use of symbolic links are enabled, they have different effects depending on the host platform.",
    "weakness_title_read_only": "Enabled symbolic links (MySQL)",
    "weakness_id_read_only": "P1053",
    "weakness": "00fdd6a6-bd68-4bf6-934c-77758f866e47",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "deployment",
    "created": "2018-04-11T00:06:10.877000-04:00",
    "last_updated": "2021-06-25T14:47:47.371000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1123",
    "universal_id": "0894a7df-bbaf-407f-844c-154219e5d75d",
    "countermeasure_name": "Verify that symbolic links are disabled (MySQL)",
    "countermeasure_solution": "Execute the following SQL statement to assess this recommendation:\n\n```\nSHOW variables LIKE 'have_symlink';\n```\n\nEnsure the value returned is DISABLED.",
    "weakness_title_read_only": "Enabled symbolic links (MySQL)",
    "weakness_id_read_only": "P1053",
    "weakness": "00fdd6a6-bd68-4bf6-934c-77758f866e47",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2018-04-11T00:06:10.892000-04:00",
    "last_updated": "2021-06-25T14:47:45.148000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1124",
    "universal_id": "231577aa-4a35-447f-87ed-9c3d88a81c4f",
    "countermeasure_name": "Ensure the daemon_memcached plugin is disabled (MySQL)",
    "countermeasure_solution": "Disable *daemon_memcached* plugin. The *InnoDB memcached* plugin allows users to access data stored in InnoDB with the memcached protocol.",
    "weakness_title_read_only": "Enabled daemon_memcached plugin (MySQL)",
    "weakness_id_read_only": "P1054",
    "weakness": "3dbbc984-d4a6-46bb-8dc6-7d74c68b7c9f",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "deployment",
    "created": "2018-04-11T00:06:11.012000-04:00",
    "last_updated": "2021-06-25T14:47:45.597000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1125",
    "universal_id": "afaae318-24dd-48d4-af0a-1080b50c2bb7",
    "countermeasure_name": "Verify that daemon_memcached plugin is disabled (MySQL)",
    "countermeasure_solution": "Execute the following SQL statement to assess this recommendation:\n\n```\nSELECT * FROM information_schema.plugins WHERE PLUGIN_NAME='daemon_memcached' \n```\n\nEnsure that no rows are returned.",
    "weakness_title_read_only": "Enabled daemon_memcached plugin (MySQL)",
    "weakness_id_read_only": "P1054",
    "weakness": "3dbbc984-d4a6-46bb-8dc6-7d74c68b7c9f",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2018-04-11T00:06:11.028000-04:00",
    "last_updated": "2021-06-25T14:47:46.123000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1126",
    "universal_id": "a01bb79d-f226-4158-86a1-6ce5164e0653",
    "countermeasure_name": "Log errors and critical events (MySQL)",
    "countermeasure_solution": " - Ensure *log_error* is not empty:\n\n    The error log contains information about events such as mysqld starting and stopping, when a table needs to be checked or repaired, and, depending on the host operating system, stack traces when mysqld fails.\n\n- Ensure *audit_log_connection_policy* is not set to NONE:\n\n    The *audit_log_connection_policy* variable controls how the audit plugin writes connection events to the audit log file. If *audit_log_connection_policy* is set to NONE, the MySQL server will not log failed connections, successful connections or any other connection-related events.\n\n- Ensure *audit_log_exclude_accounts* is set to NULL:\n\n    The *audit_log_exclude_accounts* variable enables the administrator to set accounts for which events will not be logged in the audit log.\n\n    If a user or a list of users are set as the values for *audit_log_exclude_accounts*, these user(s) will evade being logged in the audit log. This may allow malicious connections or query activity to go unnoticed in the audit log.\n\n- Ensure *audit_log_include_accounts* is set to NULL:\n\n    The *audit_log_include_accounts* variable enables the administrator to set accounts for which events should be logged in the audit log.\n\n    If a user or a list of users are set as the values for *audit_log_include_accounts*, these user(s) will ONLY be logged. Other users permitted to access the MySQL Server but not listed under the *audit_log_include_accounts* variable will avoid being logged in the audit log. Setting *audit_log_include_accounts* to NULL ensures no MySQL users excluded from the audit log.\n\n- Ensure *audit_log_policy* is set to log logins:\n\n    With the *audit_log_policy* setting the amount of information which is sent to the audit log is controlled. It must be set to log logins.\n\n- Make sure the audit plugin can't be unloaded:\n\n        Set audit_log to FORCE_PLUS_PERMANENT\n\n    If someone can unload the plugin it would be possible to perform actions on the database without audit events being logged to the audit log. If the audit log plugin can be unloaded the audit log can be temporarily or permanently disabled.",
    "weakness_title_read_only": "Disabled error logging (MySQL)",
    "weakness_id_read_only": "P1055",
    "weakness": "e78cac9b-9e82-4dba-a7a4-dd5d69519646",
    "tags": "",
    "countermeasure_priority": "2",
    "phase": "deployment",
    "created": "2018-04-11T00:06:11.522000-04:00",
    "last_updated": "2021-06-25T14:47:57.762000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1127",
    "universal_id": "7da75d4f-6c8d-424f-822e-3ba6ef019fc4",
    "countermeasure_name": "Test critical events and error logging is enabled (MySQL)",
    "countermeasure_solution": " - Execute the following SQL statement to audit this setting:\n\n        SHOW variables LIKE 'log_error';\n\n    Ensure the Value returned is not empty.\n\n- To assess this recommendation, execute the following SQL statement:\n\n        show variables like '%audit_log_connection_policy%';\n\n    Ensure the value is set to either ERRORS or ALL. \n\n- Ensure the resulting audit_log_exclude_accounts value is NULL. To assess this recommendation, execute the following SQL statement:\n\n        SHOW VARIABLES LIKE '%audit_log_exclude_accounts%';\n\n    Ensure the resulting value is NULL.\n\n- Ensure the resulting audit_log_include_accounts value is NULL.To assess this recommendation, execute the following SQL statement:\n\n        SHOW VARIABLES LIKE '%audit_log_include_accounts%';\n\n    Ensure the resulting value is NULL.\n\n- Execute the following SQL statement:\n\n        SHOW GLOBAL VARIABLES LIKE 'audit_log_policy';\n\n    The result must be LOGINS or ALL.\n\n- To assess this recommendation, execute the following SQL statement:\n\n        SELECT LOAD_OPTION FROM information_schema.plugins WHERE PLUGIN_NAME='audit_log';\n\n    The result must be FORCE_PLUS_PERMANENT.",
    "weakness_title_read_only": "Disabled error logging (MySQL)",
    "weakness_id_read_only": "P1055",
    "weakness": "e78cac9b-9e82-4dba-a7a4-dd5d69519646",
    "tags": "",
    "countermeasure_priority": "2",
    "phase": "testing",
    "created": "2018-04-11T00:06:11.559000-04:00",
    "last_updated": "2021-06-25T14:47:57.793000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1128",
    "universal_id": "ae18c2db-fd30-4e78-9573-db0106ce27dc",
    "countermeasure_name": "Ensure raw logging of password is disabled (MySQL)",
    "countermeasure_solution": "The *log-raw* MySQL option determines whether passwords are rewritten by the server so as not to appear in log files as plain text. \n\nEnsure *log-raw* is set to OFF. If *log-raw* is enabled, then passwords are written to the various log files (general query log, slow query log, and binary log) in plain text.",
    "weakness_title_read_only": "Raw logging of password (MySQL)",
    "weakness_id_read_only": "P1056",
    "weakness": "2b9926cd-d1a5-433d-8e02-1746976db328",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2018-04-11T00:06:11.672000-04:00",
    "last_updated": "2021-06-25T14:47:38.198000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1129",
    "universal_id": "d20b27ea-6f6e-41dd-ac66-82d4defeaa77",
    "countermeasure_name": "Verify that raw logging of password is disabled (MySQL)",
    "countermeasure_solution": "Perform the following actions to assess this recommendation:\n\n* Open the MySQL configuration file (my.cnf)\n* Ensure the log-raw entry is present\n* Ensure the log-raw entry is set to OFF",
    "weakness_title_read_only": "Raw logging of password (MySQL)",
    "weakness_id_read_only": "P1056",
    "weakness": "2b9926cd-d1a5-433d-8e02-1746976db328",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2018-04-11T00:06:11.686000-04:00",
    "last_updated": "2021-06-25T14:47:38.211000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1130",
    "universal_id": "78e24181-0bcf-4b5c-a91d-6ae4bcce7c72",
    "countermeasure_name": "Configure authentication (MySQL)",
    "countermeasure_solution": " - Set 'secure_auth' to 'ON':\n\n    This option dictates whether the server will deny connections from clients that attempt to use accounts that have their password stored in the mysql_old_password format. Enabling this option will prevent all use of passwords employing the old format (and hence insecure communication over the network).\n\n    - However, accounts having credentials stored using the old password format will be unable to login. Execute the following command to identify accounts that will be impacted by implementing this setting.\n\n            SELECT User,Host FROM mysql.user WHERE plugin='mysql_old_password';\n\n- Set passwords for all MySQL accounts:\n\n    Blank passwords allow a user to login without using a password.\n\n- Do not use wildcard hostnames for regular users and replication users:\n\n    MySQL can make use of host wildcards when granting permissions to users on specific databases. For example, you may grant a given privilege to `<user>`@`%`. However, this is not recommended.\n\n- Remove anonymous accounts:\n\n    Anonymous accounts are users with empty usernames (''). Anonymous accounts have no passwords, so anyone can use them to connect to the MySQL server.\n\n    __Note__: Any applications relying on anonymous database access will be adversely affected by this change.",
    "weakness_title_read_only": "Improper authentication (MySQL)",
    "weakness_id_read_only": "P1057",
    "weakness": "e304e16a-c078-4f2a-9c7b-578ca54d0fba",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2018-04-11T00:06:11.975000-04:00",
    "last_updated": "2021-06-25T14:47:42.217000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1131",
    "universal_id": "54d8e6ad-ec38-4f62-a250-3bf1ee128ed7",
    "countermeasure_name": "Test authentication is configured properly (MySQL)",
    "countermeasure_solution": " - Execute the following SQL statement and ensure the Value field is not set to ON:\n\n        SHOW VARIABLES WHERE Variable_name = 'secure_auth';\n\n- Execute the following SQL query to determine if any users have a blank password:\n\n        SELECT User,host\n        FROM mysql.user\n        WHERE (plugin IN('mysql_native_password', 'mysql_old_password')\n        AND (LENGTH(Password) = 0\n        OR Password IS NULL))\n        OR (plugin='sha256_password' AND LENGTH(authentication_string) = 0);\n\n    No rows will be returned if all accounts have a password set.\n\n- Execute the following SQL statement to find users with wildcard hostnames:\n\n        SELECT user, host FROM mysql.user WHERE host = '%';\n        SELECT user, host FROM mysql.user WHERE user='repl' AND host = '%';\n\n    Ensure no rows are returned.\n\n- Execute the following SQL query to identify anonymous accounts:\n\n        SELECT user,host FROM mysql.user WHERE user = '';\n\n    The above query will return zero rows if no anonymous accounts are present.",
    "weakness_title_read_only": "Improper authentication (MySQL)",
    "weakness_id_read_only": "P1057",
    "weakness": "e304e16a-c078-4f2a-9c7b-578ca54d0fba",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2018-04-11T00:06:12.007000-04:00",
    "last_updated": "2021-06-25T14:47:41.932000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1132",
    "universal_id": "75551a7d-e1d5-42d7-b52b-8826ce9b9a2a",
    "countermeasure_name": "Set up SSL/TLS properly (MySQL)",
    "countermeasure_solution": " - Set 'have_ssl' to 'YES':\n\n    All network traffic must use SSL/TLS when traveling over untrusted networks. Enabling SSL will allow clients to encrypt network traffic and verify the identity of the server. However, this could have an impact on network traffic inspection.\n\n- Set 'ssl_type' to 'ANY', 'X509', or 'SPECIFIED' for all remote users:\n\n    SSL/TLS should be enforced on a per-user basis for users which enter the system through the network. When SSL/TLS is enforced then clients which do not use SSL will not be able to connect.\n\n- Secure replication traffic:\n\n    - Use encrypted channels for replication traffic.\n    - Perform mutual authentication between the servers before starting replication.\n\n    The replication traffic should be secured as it gives access to all transferred information and might leak passwords.\n\n- Set 'MASTER_SSL_VERIFY_SERVER_CERT' to 'YES' or '1':\n\n    In the MySQL slave context, the setting MASTER_SSL_VERIFY_SERVER_CERT indicates whether the slave should verify the master's certificate. This configuration item may be set to Yes or No, and unless SSL has been enabled on the slave, the value will be ignored.\n\n    Certificate verification is important to authenticate the party to which a connection is being made. In this case, the slave (client) should verify the master's (server's) certificate to authenticate the master prior to continuing the connection.",
    "weakness_title_read_only": "Missing or improperly configuring SSL/TLS (MySQL)",
    "weakness_id_read_only": "P1058",
    "weakness": "57ea28df-de5c-40e1-9d8a-fe0981a3a5f2",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2018-04-11T00:06:12.246000-04:00",
    "last_updated": "2021-06-25T14:47:36.649000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1133",
    "universal_id": "e17d14f6-271f-4903-b9b4-30b30fb96778",
    "countermeasure_name": "Test that SSL/TLS is set up properly (MySQL)",
    "countermeasure_solution": " - Execute the following SQL statement:\n\n        SHOW variables WHERE variable_name = 'have_ssl';\n\n    Ensure the Value returned is YES.\n\n    __Note:__ have_openssl is an alias for have_ssl as of MySQL 5.0.38. MySQL can be built with OpenSSL or YaSSL.\n\n- Execute the following SQL statement:\n\n        SELECT user, host, ssl_type FROM mysql.user\n        WHERE NOT HOST IN ('::1', '127.0.0.1', 'localhost');\n\n    Ensure the ssl_type for each user returned is equal to ANY, X509, or SPECIFIED.\n\n- Check if the replication traffic is using one or more of the following to provide confidentiality and integrity for the traffic, and mutual authentication for the servers:\n\n    * A private network\n    * A VPN\n    * SSL/TLS\n    * A SSH Tunnel\n\n- Issue the following statement:\n\n        select ssl_verify_server_cert from mysql.slave_master_info;\n\n    Verify the value of ssl_verify_server_cert is 1.",
    "weakness_title_read_only": "Missing or improperly configuring SSL/TLS (MySQL)",
    "weakness_id_read_only": "P1058",
    "weakness": "57ea28df-de5c-40e1-9d8a-fe0981a3a5f2",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2018-04-11T00:06:12.273000-04:00",
    "last_updated": "2021-06-25T14:47:37.477000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1134",
    "universal_id": "97a39c36-7888-495a-a0c7-660b9a5bcc4b",
    "countermeasure_name": "Prevent loading suspicious user-defined functions (MySQL)",
    "countermeasure_solution": "Set 'allow-suspicious-udfs' to 'FALSE':\n\nThis option prevents attaching user-defined functions that do not have any corresponding method named xxx_init, xxx_deinit, xxx_reset, xxx_clear, or xxx_add other than their main xxx method.",
    "weakness_title_read_only": "Loading suspicious user-defined functions (MySQL)",
    "weakness_id_read_only": "P1059",
    "weakness": "c83acf00-d9d0-46c9-a6ac-45d2fe93fff2",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "deployment",
    "created": "2018-04-11T00:06:12.569000-04:00",
    "last_updated": "2021-06-25T14:47:53.846000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1135",
    "universal_id": "5dbd5bf0-9035-4533-ac72-5385cb876a70",
    "countermeasure_name": "Verify that suspicious user-defined functions cannot be loaded (MySQL)",
    "countermeasure_solution": "Perform the following:\n\n* Ensure --allow-suspicious-udfs is not specified in the the mysqld start up command line.\n* Ensure allow-suspicious-udfs is set to FALSE in the MySQL configuration.",
    "weakness_title_read_only": "Loading suspicious user-defined functions (MySQL)",
    "weakness_id_read_only": "P1059",
    "weakness": "c83acf00-d9d0-46c9-a6ac-45d2fe93fff2",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2018-04-11T00:06:12.585000-04:00",
    "last_updated": "2021-06-25T14:47:54.747000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1136",
    "universal_id": "f71df26f-ddc3-4a6a-9b3d-3dddaa61f8f5",
    "countermeasure_name": "Enable strict mode (MySQL)",
    "countermeasure_solution": "Ensure 'sql_mode' Contains 'STRICT_ALL_TABLES'.\n\nWhen data changing statements are made (i.e. INSERT, UPDATE), MySQL can handle invalid or missing values differently depending on whether strict SQL mode is enabled. When strict SQL mode is enabled, data may not be truncated or otherwise \"adjusted\" to make the data changing statement work.\n\n__Note:__ Applications relying on the MySQL database should be aware that STRICT_ALL_TABLES is in use, such that error conditions are handled appropriately.",
    "weakness_title_read_only": "Inactive strict mode (MySQL)",
    "weakness_id_read_only": "P1060",
    "weakness": "5ac02123-5110-4e81-b60e-3adc63d3de57",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "deployment",
    "created": "2018-04-11T00:06:12.665000-04:00",
    "last_updated": "2021-06-25T14:47:41.255000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1137",
    "universal_id": "9201cf12-243f-4ebd-8675-cee8bf010d78",
    "countermeasure_name": "Verify that strict mode is enabled (MySQL)",
    "countermeasure_solution": "Execute the following query:\n\n    SHOW VARIABLES LIKE 'sql_mode'; \n\nEnsure that STRICT_ALL_TABLES is in the list returned.",
    "weakness_title_read_only": "Inactive strict mode (MySQL)",
    "weakness_id_read_only": "P1060",
    "weakness": "5ac02123-5110-4e81-b60e-3adc63d3de57",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2018-04-11T00:06:12.679000-04:00",
    "last_updated": "2021-06-25T14:47:41.283000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1138",
    "universal_id": "2d723da6-4a43-42da-9eeb-297e3641fca3",
    "countermeasure_name": "Set audit_log_strategy to SYNCHRONOUS or SEMISYNCRONOUS (MySQL)",
    "countermeasure_solution": "Set audit_log_strategy to SYNCHRONOUS or SEMISYNCHRONOUS.\n\nThis setting controls how information is written to the audit log. It can be set to SYNCHRONOUS to make it fully durable or other settings which are less durable but have less performance overhead.\n\nIf this setting is set to PERFORMANCE or ASYNCHRONOUS audit events might be lost in case of a crash or when the server somehow can't write to the audit log file.",
    "weakness_title_read_only": "Asynchronous logging (MySQL)",
    "weakness_id_read_only": "P1061",
    "weakness": "d7e771c6-5b84-4f56-892a-68a17cb91700",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "deployment",
    "created": "2018-04-11T00:06:13.061000-04:00",
    "last_updated": "2021-06-25T14:47:57.991000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1139",
    "universal_id": "5703fcb9-eeb8-4943-831a-6ffb2abfb3ef",
    "countermeasure_name": "Verify that audit_log_strategy is set to SYNCHRONOUS or SEMISYNCRONOUS (MySQL)",
    "countermeasure_solution": "Execute the following SQL statement:\n\n    SHOW GLOBAL VARIABLES LIKE 'audit_log_strategy'; \n\nThe result should be SYNCHRONOUS or SEMISYNCHRONOUS.",
    "weakness_title_read_only": "Asynchronous logging (MySQL)",
    "weakness_id_read_only": "P1061",
    "weakness": "d7e771c6-5b84-4f56-892a-68a17cb91700",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2018-04-11T00:06:13.080000-04:00",
    "last_updated": "2021-06-25T14:47:57.718000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1140",
    "universal_id": "c90d8d9d-9240-4034-8621-349832d2ef08",
    "countermeasure_name": "Set 'master_info_repository' to 'TABLE' (MySQL)",
    "countermeasure_solution": "Set 'master_info_repository' to 'TABLE'.\n\nThe master_info_repository setting determines to where a slave logs master status and connection information. The options are FILE or TABLE. Note also that this setting is associated with the sync_master_info setting as well.\n\n__Note:__ The TABLE master info repository is a bit safer, but with filesystem access, it's still possible to gain access to the password the slave is using.",
    "weakness_title_read_only": "Plaintext master info repository (MySQL)",
    "weakness_id_read_only": "P1062",
    "weakness": "4ac1835d-f81e-42fa-88e6-ce8bdb87a1cc",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2018-04-11T00:06:13.163000-04:00",
    "last_updated": "2021-06-25T14:47:44.131000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1141",
    "universal_id": "d85e051a-086b-44f4-94a7-8cd8ddc15709",
    "countermeasure_name": "Verify that 'master_info_repository' is set to 'TABLE' (MySQL)",
    "countermeasure_solution": "Execute the following SQL statement:\n\n    SHOW GLOBAL VARIABLES LIKE 'master_info_repository'; \n\nThe result should be TABLE instead of FILE.\n\n__Note:__ There also should not be a master.info file in the datadir.",
    "weakness_title_read_only": "Plaintext master info repository (MySQL)",
    "weakness_id_read_only": "P1062",
    "weakness": "4ac1835d-f81e-42fa-88e6-ce8bdb87a1cc",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2018-04-11T00:06:13.177000-04:00",
    "last_updated": "2021-06-25T14:47:43.894000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1143",
    "universal_id": "7302a8f4-37df-470d-8c68-ea74cedad6a7",
    "countermeasure_name": "Verify that XML encoding is used when interacting with XML data",
    "countermeasure_solution": "Find all the instances of untrusted input, for example, user input, being used in an XML. Check if an XML encoder for the right context is used in the code. If not, this test fails.",
    "weakness_title_read_only": "XML Injection (Blind Path Injection)",
    "weakness_id_read_only": "P667",
    "weakness": "ccb4adcb-9b32-42ea-9204-e328b6f1001d",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2018-04-17T14:31:28.493000-04:00",
    "last_updated": "2021-06-25T14:47:55.301000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1144",
    "universal_id": "5a7bf516-2f8e-4e72-8117-4cc81059a82c",
    "countermeasure_name": "Prevent Server-Side Template Injection (SSTI)",
    "countermeasure_solution": "Prevent SSTI using the following techniques:\n \n- Use a safe Template engine that only allows white-list functions and are syntax safe.\n- Use the validation functions of the Template engine if it provides them.\n- Sandbox your Template engine inside a locked down container so that arbitrary code executes inside the container.\n- Create a safe environment by hardening the kernel and using read-only file systems. \n- Perform server-side input validation and sanitization.\n- Allowlist acceptable user input. For example, if the data is a string, allowlist the characters that are not control characters of the Template engine. Refer to [Countermeasure 31](/library/tasks/T31/) for more information about input validation.",
    "weakness_title_read_only": "Improper Neutralization of SSI on a Web Page",
    "weakness_id_read_only": "P673",
    "weakness": "f8ba84c5-bb0c-4eef-b1e7-2bc2dbb2f0cc",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "development",
    "created": "2018-04-17T14:53:05.546000-04:00",
    "last_updated": "2022-09-01T11:10:19.540000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1145",
    "universal_id": "ba853afe-62d6-4dfe-a200-131f7c70baad",
    "countermeasure_name": "Verify if web page template is vulnerable to SSTI",
    "countermeasure_solution": "To verify whether your Template is vulnerable to SSTI, in a Template field that accepts user input and returns the input as part of its response, insert an executable payload. For example, suppose a template gets the name from the user and shows a greeting on the page along with the name as below :\n\n````\nHello {name}\n````\nTo verify if the Template is vulnerable, replace `name` with an arbitrary code like `{'5'*5}` . If the Template doesn't perform validation and executes the payload, this test __fails__ . For example, the output of `Hello {{'5'*5}}` in a vulnerable _Twig_ engine would be `Hello 25`, and in _Jinja2_ it would be `Hello 55555` . Therefore, the output can reveal the Template engine because it can be different in different Template engines. \nAfter finding the Template in use, analyze the Template documentation to find vulnerabilities in syntax, variables, methods, the execution of arbitrary remote code, and so on. \n\n_Note:_ The syntaxes and payloads you use for testing can be different and depends on the language of the template you are using.\n\n\n__Note:__ Certain automated detection tools, such as BurpSuite, can help you detect SSTI, but some blackbox security assessments are likely to miss it.",
    "weakness_title_read_only": "Improper Neutralization of SSI on a Web Page",
    "weakness_id_read_only": "P673",
    "weakness": "f8ba84c5-bb0c-4eef-b1e7-2bc2dbb2f0cc",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2018-04-17T19:54:36.093000-04:00",
    "last_updated": "2021-06-25T14:47:54.563000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1146",
    "universal_id": "3583e420-49ab-4f8a-8312-1ab794543ba8",
    "countermeasure_name": "Enable DEP and ASLR on your server",
    "countermeasure_solution": "Enable Data Execution Prevention (DEP) and Address Space Layout Randomization (ASLR) on your server. DEP and ASLR are defense-in-depth techniques to mitigate the effect of buffer overflow vulnerabilities that are missed in our application or in any software running on our server.\n\n## Notes:\nIn a regular buffer overflow attack, the attacker exploits the vulnerability by pushing some malicious code (shellcode for example) into the stack or heap and changing the return address of the current function to the beginning of the malicious code. DEP helps to impede such attacks by preventing attackers from being able to directly execute code from the stack, heap, and other non-code memory regions. Your server's OS should have DEP enabled.\n\nHowever, even if DEP is enabled, attackers can still find and leverage code that already exists in modules (e.g. DLLs or shared objects) that have been loaded at predictable locations in the address space of a process. In such an attack, the attacker searches for an instruction that alters control flow in the existing loaded code, most notably the return instruction (0xC3) and then looks backward in the binary for preceding bytes that form possibly useful instructions. These sets of instruction can then be chained to build more complex pieces of malicious code. This type of attack is called Return-Oriented Programming (ROP).\n\nASLR is designed to prevent an attacker from being able to directly and reliably leverage code in loaded modules. ASLR impedes the ROP attacks by making the address space layout of a process unknown to an attacker who does not have local access to the machine.\n\nDEP and ASLR are designed to be used in combination and together are very effective against various types of memory corruption attacks. However, note that these features just increase an attacker's exploit development costs and exploits have been written which are capable of bypassing the combination of DEP and ASLR.",
    "weakness_title_read_only": "Buffer Copy without Checking the Bounds",
    "weakness_id_read_only": "P21",
    "weakness": "162b0723-2710-4397-98a4-4da915a7ea2a",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2018-05-28T15:41:38.903000-04:00",
    "last_updated": "2021-06-25T14:47:59.170000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1147",
    "universal_id": "5bfbb1d7-ae9c-4054-9be9-23e2d9e6f229",
    "countermeasure_name": "Verify that DEP and ASLR are enabled on your server",
    "countermeasure_solution": "Verify that DEP and ASLR are enabled on your server to prevent buffer overflow attacks.\n\nIf DEP is not enabled, make sure:\n\n- The computer's processor supports hardware-enforced DEP.\n    - Check the specifications for the CPU used in your server.\n- Hardware-enforced DEP is enabled in the BIOS.\n    - Refer to your server's motherboard manual and specifications for more details.\n- The computer runs a recent version of your operating system that supports hardware-enforced DEP.\n    - Check the specifications for the OS version you are using on your server.\n- Hardware-enforced DEP is enabled for programs on the computer.\n    - Check the How-to's we have provided.",
    "weakness_title_read_only": "Buffer Copy without Checking the Bounds",
    "weakness_id_read_only": "P21",
    "weakness": "162b0723-2710-4397-98a4-4da915a7ea2a",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2018-05-31T15:59:49.626000-04:00",
    "last_updated": "2021-06-25T14:47:58.926000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1148",
    "universal_id": "369dd1ce-35b8-4207-bdcc-7044e3d9f47a",
    "countermeasure_name": "Validate JSON files",
    "countermeasure_solution": "It's important to never build JSON dynamically from user input without sufficient validation because this increases the chances of XSS.\n\nValidate JSON files for example by using a JSON schema. A JSON schema is written in JSON and its structural validation makes it ideal for automated testing and input validation. Below is an example of JSON schema:\n\n````\n{\n\t\"type\" : \"string\",\n\t\"minLength\" : 6 ,\n\t\"maxLength\" : 12\n}\n````\n\nThis schema checks if an input is a string and its length is between 6 to 12 characters. There are many JSON validators written in different languages, like C, C++, Java, JavaScript, and Python. For more information, refer to [JSON Schema](http://json-schema.org/).",
    "weakness_title_read_only": "Missing or insufficient JSON validation",
    "weakness_id_read_only": "P1063",
    "weakness": "218774bd-d320-49b6-bdc6-d85c9fa0ed80",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "requirements",
    "created": "2018-06-20T13:49:05.592000-04:00",
    "last_updated": "2021-06-25T14:47:53.536000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1149",
    "universal_id": "a39eebf0-436c-44a3-9e53-bab93217c2f1",
    "countermeasure_name": "Test if JSON files are validated against malicious inputs",
    "countermeasure_solution": "Use the following guidelines to test for JSON input validation:\n\n1. Locate a JSON input and identify the requirements for the fields included in it or locate the relative JSON schema if one is used for its validation. JSON schema would look like:\n\n        {\n        \t\"type\" : \"string\",\n\t        \"minLength\" : 6 ,\n        \t\"maxLength\" : 12\n        }\n\n2. Create a JSON input that breaks the validation or the requirements in the schema. For example, the following JSON breaks the above schema by providing a short value for the `username` field:\n\n\n        {\n\t        \"username\": \"123\",\t\n        }\n\n2. Submit the crafted JSON input to the application.\n\nThe application should validate the input. This test __fails__ if the invalid input does not result in an error message or a prompt.",
    "weakness_title_read_only": "Missing or insufficient JSON validation",
    "weakness_id_read_only": "P1063",
    "weakness": "218774bd-d320-49b6-bdc6-d85c9fa0ed80",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2018-06-22T13:58:09.530000-04:00",
    "last_updated": "2021-06-25T14:47:53.517000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1150",
    "universal_id": "1a34eb47-b250-43cd-9a88-290cefb0b21e",
    "countermeasure_name": "Configure container networks properly (Docker)",
    "countermeasure_solution": "Properly configure container networks:\n\n- **Restrict network traffic between containers:**\n    - By default, all network traffic is allowed between containers on the same host. If not desired, restrict all the inter container communication. Explicitly link specific containers together that require inter communication.\n- **Allow Docker to make changes to *iptables*:**\n    - *Iptables* are used to set up, maintain, and inspect the tables of IP packet filter rules in the Linux kernel. Allow the Docker daemon to make changes to the *iptables*.\n- **Disable *Userland* Proxy:**\n    - Docker daemon starts a *userland* proxy service for port forwarding whenever a port is exposed. Where hairpin NAT is available, this service is generally superfluous to requirements and can be disabled.\n        - **Note:** Some systems with older Linux kernels may not be able to support hairpin NAT and therefore require the *userland* proxy service. Also, some networking setups can be impacted by the removal of the *userland* proxy.\n- **Bind incoming container traffic to a specific host interface:**\n    - By default, Docker containers can make connections to the outside world, but the outside world cannot connect to containers. Each outgoing connection will appear to originate from one of the host machine's own IP addresses. Only allow container services to be contacted through a specific external interface on the host machine.",
    "weakness_title_read_only": "Improper container network configuration (Docker)",
    "weakness_id_read_only": "P1064",
    "weakness": "fee159e4-c621-4af6-88a1-63595dd173a1",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2018-07-18T12:24:49.025000-04:00",
    "last_updated": "2021-06-25T14:47:52.826000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1151",
    "universal_id": "8ee94f6b-4fa7-4851-b84e-69d221f30173",
    "countermeasure_name": "Verify that container networks are configured properly (Docker)",
    "countermeasure_solution": " - Ensure that the '--icc' parameter is set to 'false' by running:\n\n    ```- ps -ef | grep dockerd```\n\n    or, verify by running the below command:\n\n     ```docker network ls --quiet | xargs xargs docker network inspect --format '{{ .Name }}: {{ .Options }}'```\n\n    It should return `com.docker.network.bridge.enable_icc:false`.\n\n- Ensure that the '--iptables' parameter is either not present or not set to 'false':\n\n    ```ps -ef | grep dockerd```\n\n- Ensure that the `--userland-proxy` parameter is set to `false`:\n\n    ```ps -ef | grep dockerd```\n\n- List all the running instances of containers and their port mapping by executing the below command:\n\n    ```docker ps --quiet | xargs docker inspect --format '{{ .Id }}: Ports={{ .NetworkSettings.Ports }}'```\n\n    Review the list and ensure that the exposed container ports are tied to a particular interface and not to the wildcard IP address - '0.0.0.0'.\n\n    For example, if the above command returns as below, then this is non-compliant and the container can accept connections on any host interface on the specified port 49153.\n\n    ```Ports=map[443/tcp:<nil> 80/tcp:[map[HostPort:49153 HostIp:0.0.0.0]]]```\n\n    However, if the exposed port is tied to a particular interface on the host as below, then this recommendation is configured as desired and is compliant.\n\n    ```Ports=map[443/tcp:<nil> 80/tcp:[map[HostIp:10.2.3.4 HostPort:49153]]]```",
    "weakness_title_read_only": "Improper container network configuration (Docker)",
    "weakness_id_read_only": "P1064",
    "weakness": "fee159e4-c621-4af6-88a1-63595dd173a1",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2018-07-18T12:24:49.056000-04:00",
    "last_updated": "2021-06-25T14:47:52.974000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1152",
    "universal_id": "c2ac7858-eb67-4e1d-9f20-3f0d72a2266f",
    "countermeasure_name": "Configure the logging level (Docker)",
    "countermeasure_solution": "Set Docker daemon log level to 'info'. A base log level of 'info' and above would capture all logs except debug logs. Until and unless required, do not run Docker daemon at 'debug' log level.",
    "weakness_title_read_only": "Inappropriate logging level (Docker)",
    "weakness_id_read_only": "P1065",
    "weakness": "eebebbe6-f47f-4708-b829-ee7f7b4fe4f8",
    "tags": "",
    "countermeasure_priority": "3",
    "phase": "deployment",
    "created": "2018-07-18T12:24:49.159000-04:00",
    "last_updated": "2021-06-25T14:47:57.541000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1153",
    "universal_id": "82e5ae35-9cd8-4563-a11a-53616c66c776",
    "countermeasure_name": "Verify that the logging level is configured properly (Docker)",
    "countermeasure_solution": "Run the following command:\n\n```ps -ef | grep dockerd```\n\nEnsure that either the '--log-level' parameter is not present or if present, then it is set to 'info'.",
    "weakness_title_read_only": "Inappropriate logging level (Docker)",
    "weakness_id_read_only": "P1065",
    "weakness": "eebebbe6-f47f-4708-b829-ee7f7b4fe4f8",
    "tags": "",
    "countermeasure_priority": "3",
    "phase": "testing",
    "created": "2018-07-18T12:24:49.173000-04:00",
    "last_updated": "2021-06-25T14:47:58.026000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1154",
    "universal_id": "cefd11f3-cb40-43b3-95ec-22f9cbf5b427",
    "countermeasure_name": "Secure Docker registries (Docker)",
    "countermeasure_solution": "**Do not use insecure registries:**\n\nDocker considers a private registry either secure or insecure. By default, registries are considered secure. A secure registry uses TLS. A copy of registry's CA certificate is placed on the Docker host at '/etc/docker/certs.d/<registry-name>/' directory. Do not use any insecure registries in the production environment.",
    "weakness_title_read_only": "Insecure Docker registries (Docker)",
    "weakness_id_read_only": "P1066",
    "weakness": "25b2ac55-a7fe-41ce-bb83-c18414d9d994",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2018-07-18T12:24:49.293000-04:00",
    "last_updated": "2021-06-25T14:47:36.680000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1155",
    "universal_id": "66e33c85-fdcc-4b8e-be30-387fcc2eeaba",
    "countermeasure_name": "Verify that Docker registries are secure (Docker)",
    "countermeasure_solution": "Run docker info or execute the below command to find out if any insecure registries are used:\n\n```\nps -ef | grep dockerd\n```\n\nEnsure that the `--insecure-registry` parameter is not present.",
    "weakness_title_read_only": "Insecure Docker registries (Docker)",
    "weakness_id_read_only": "P1066",
    "weakness": "25b2ac55-a7fe-41ce-bb83-c18414d9d994",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2018-07-18T12:24:49.311000-04:00",
    "last_updated": "2021-06-25T14:47:36.533000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1156",
    "universal_id": "54fb538e-34bd-45de-991d-229690643f98",
    "countermeasure_name": "Do not use the aufs storage driver (Docker)",
    "countermeasure_solution": "Do not use ***aufs*** as storage driver for your Docker instance.\n\n*aufs* is the only storage driver that allows containers to share executable and shared library memory. It might be useful if you are running thousands of containers with the same program or libraries.",
    "weakness_title_read_only": "Using the aufs storage driver (Docker)",
    "weakness_id_read_only": "P1067",
    "weakness": "de1295f3-2b47-4f99-997d-71aa9057f8f4",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2018-07-18T12:24:49.383000-04:00",
    "last_updated": "2021-06-25T14:47:57.053000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1157",
    "universal_id": "80f2844f-126e-4ced-a5e8-5204049e9519",
    "countermeasure_name": "Verify that the aufs storage driver is not used (Docker)",
    "countermeasure_solution": "Execute the below command and verify that ***aufs*** is not used as storage driver:\n\n```docker info | grep -e \"^Storage Driver:\\s*aufs\\s*$\"```\n\nThe above command should not return anything.",
    "weakness_title_read_only": "Using the aufs storage driver (Docker)",
    "weakness_id_read_only": "P1067",
    "weakness": "de1295f3-2b47-4f99-997d-71aa9057f8f4",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2018-07-18T12:24:49.397000-04:00",
    "last_updated": "2021-06-25T14:47:56.972000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1158",
    "universal_id": "f05c15df-195f-4aa3-a934-c365a806b792",
    "countermeasure_name": "Configure TLS authentication for the Docker daemon (Docker)",
    "countermeasure_solution": "Configure TLS authentication to restrict access to Docker daemon via IP and port. It is possible to make the Docker daemon to listen on a specific IP and port and any other Unix socket other than default Unix socket. Hence, do not bind the Docker daemon to another IP/port or a Unix socket.\n\nIf you must expose the Docker daemon via a network socket, configure TLS authentication for the daemon and Docker Swarm APIs (if using). This would restrict the connections to your Docker daemon over the network to a limited number of clients who could successfully authenticate over TLS. Manage and guard certificates and keys for Docker daemon and Docker clients.",
    "weakness_title_read_only": "Lack of proper TLS authentication for the Docker daemon (Docker)",
    "weakness_id_read_only": "P1068",
    "weakness": "360950a6-f491-4048-8ffe-019fbd0cf421",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2018-07-18T12:24:49.465000-04:00",
    "last_updated": "2021-06-25T14:47:41.950000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1159",
    "universal_id": "29ad094b-68f4-4745-982e-bcbefd0ce661",
    "countermeasure_name": "Verify that TLS authentication is configured for the Docker daemon (Docker)",
    "countermeasure_solution": "Run the following command:\n\n```ps -ef | grep dockerd``` \n\nEnsure that the below parameters are present:\n\n* '--tlsverify'\n* '--tlscacert'\n* '--tlscert'\n* '--tlskey'",
    "weakness_title_read_only": "Lack of proper TLS authentication for the Docker daemon (Docker)",
    "weakness_id_read_only": "P1068",
    "weakness": "360950a6-f491-4048-8ffe-019fbd0cf421",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2018-07-18T12:24:49.479000-04:00",
    "last_updated": "2021-06-25T14:47:41.865000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1160",
    "universal_id": "0c2e9221-380f-495f-b1b8-f6e4dcb25cd3",
    "countermeasure_name": "Set ulimit appropriately (Docker)",
    "countermeasure_solution": "Follow these instruction for proper assignment of ***ulimit***:\n\n- Set default ulimit options as appropriate in your environment.\n    - Setting default ulimit for the Docker daemon would enforce the ulimit for all container instances. You would not need to setup ulimit for each container instance. However, the default ulimit can be overridden during container runtime, if needed.\n- Override default ulimit at runtime **only if needed**.\n    - The default ulimit set at the Docker daemon level should be honored. If the default ulimit settings are not appropriate for a particular container instance, you may override them as an exception. But, do not make this a practice. If most of the container instances are overriding default ulimit settings, consider changing the default ulimit settings to something that is appropriate for your needs.",
    "weakness_title_read_only": "Improper ulimit configuration (Docker)",
    "weakness_id_read_only": "P1069",
    "weakness": "b4fd01de-d169-4796-b71e-8d4dded17dd8",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2018-07-18T12:24:49.550000-04:00",
    "last_updated": "2021-06-25T14:47:40.691000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1161",
    "universal_id": "0317ecfa-268d-47d2-8f58-85524ee44de0",
    "countermeasure_name": "Verify that ulimit is set appropriately (Docker)",
    "countermeasure_solution": "Run this command:\n\n```ps -ef | grep dockerd```\n\nEnsure that the `--default-ulimit` parameter is set as appropriate.\n\nRun this command to identify overridden ulimits:\n\n```docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: Ulimits={{ .HostConfig.Ulimits }}'```\n\nThe above command should return `Ulimits=<no value>` for each container instance until and unless there is an exception and a need to override the default ulimit settings.",
    "weakness_title_read_only": "Improper ulimit configuration (Docker)",
    "weakness_id_read_only": "P1069",
    "weakness": "b4fd01de-d169-4796-b71e-8d4dded17dd8",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2018-07-18T12:24:49.568000-04:00",
    "last_updated": "2021-06-25T14:47:40.354000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1162",
    "universal_id": "54dcf59f-9b51-43ab-b780-f1d7d1448ae3",
    "countermeasure_name": "Enable live restore (Docker)",
    "countermeasure_solution": "Enable `--live-restore` for full support of daemon-less containers in docker. It ensures that docker does not stop containers on shutdown or restore and properly reconnects to the container when restarted.",
    "weakness_title_read_only": "Disabled live restore (Docker)",
    "weakness_id_read_only": "P1070",
    "weakness": "603f5254-0387-40fd-94cc-9d159029311f",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "deployment",
    "created": "2018-07-18T12:24:49.681000-04:00",
    "last_updated": "2021-06-25T14:47:40.612000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1163",
    "universal_id": "d37f1f1f-52bc-43ca-b6a8-34118ab875e3",
    "countermeasure_name": "Verify that live restore is enabled (Docker)",
    "countermeasure_solution": "Run docker info and ensure that the `Live Restore Enabled` property is set to `true`.\n\n```docker info --format '{{ .LiveRestoreEnabled }}'```\n\nAlternatively run the below command and ensure that `--live-restore` is used. \n\n```ps -ef | grep dockerd```",
    "weakness_title_read_only": "Disabled live restore (Docker)",
    "weakness_id_read_only": "P1070",
    "weakness": "603f5254-0387-40fd-94cc-9d159029311f",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2018-07-18T12:24:49.695000-04:00",
    "last_updated": "2021-06-25T14:47:41.061000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1164",
    "universal_id": "4a9f57e2-a95c-420b-80be-38c575538710",
    "countermeasure_name": "Secure swarm mode (Docker)",
    "countermeasure_solution": "Do the following:\n\n- Control the number of manager nodes in a swarm:\n    - Ensure that the minimum number of required manager nodes is created in a swarm.\n    - If fault tolerance is not required for the manager nodes, select a single node as a manger. If fault tolerance is required, configure the smallest practical odd number of managers to achieve the appropriate level of tolerance.An odd number N of manager nodes in the cluster tolerates the loss of at most (N-1)/2 managers. N should be large enough to still allow the system be available.\n\n- Bind swarm services to a specific host interface:\n    - Pass a specific IP address to the `--listen-addr` option to designate a specific network interface.",
    "weakness_title_read_only": "Insecure swarm mode (Docker)",
    "weakness_id_read_only": "P1071",
    "weakness": "34939baa-af0a-46cc-a9e7-5f7617afbd76",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2018-07-18T12:24:49.771000-04:00",
    "last_updated": "2023-03-16T11:20:57.240000-04:00",
    "custom": "False",
    "rules": "29c51c54-fa8a-4123-b6c5-c95f200c29a9",
    "rules_read_only": "A1235"
  },
  {
    "countermeasure_id": "T1165",
    "universal_id": "ca3fca0f-4dd2-44aa-9c15-3b43664bb273",
    "countermeasure_name": "Verify that swarm mode is secured (Docker)",
    "countermeasure_solution": "Follow these steps to verify that swarm mode is secured:\n\n- Run `docker info` and verify the number of managers.\n\n    ```docker info --format '{{ .Swarm.Managers }}'```\n\n    Alternatively run the below command.\n\n    ```docker node ls | grep 'Leader'```\n\n- List the network listener on port `2377/TCP` (the default for docker swarm) and confirm that it is only listening on specific interfaces. For example, using ubuntu this could be done with the following command:\n\n    ```netstat -lt | grep -i 2377```",
    "weakness_title_read_only": "Insecure swarm mode (Docker)",
    "weakness_id_read_only": "P1071",
    "weakness": "34939baa-af0a-46cc-a9e7-5f7617afbd76",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2018-07-18T12:24:49.794000-04:00",
    "last_updated": "2021-06-25T14:47:39.673000-04:00",
    "custom": "False",
    "rules": "29c51c54-fa8a-4123-b6c5-c95f200c29a9",
    "rules_read_only": "A1235"
  },
  {
    "countermeasure_id": "T1166",
    "universal_id": "61de614e-74c3-4179-96d0-df1bd97303cc",
    "countermeasure_name": "Encrypt data exchanged between containers on different nodes on the overlay network (Docker)",
    "countermeasure_solution": "Encrypt data exchanged between containers on different nodes on the overlay network.",
    "weakness_title_read_only": "Exchanging cleartext data between containers on different nodes on the overlay network (Docker)",
    "weakness_id_read_only": "P1072",
    "weakness": "24591c1e-c5c8-4ffc-ba28-535d267bd2be",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2018-07-18T12:24:49.993000-04:00",
    "last_updated": "2021-06-25T14:47:37.122000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1167",
    "universal_id": "241f8dfc-20ee-492a-8a05-14ec4e488547",
    "countermeasure_name": "Verify that data exchanged between containers on different nodes on the overlay network is encrypted (Docker)",
    "countermeasure_solution": "Run the below command and ensure that each overlay network has been encrypted.\n\n    docker network ls --filter driver=overlay --quiet | xargs docker network inspect --format '{{.Name}} {{ .Options }}'",
    "weakness_title_read_only": "Exchanging cleartext data between containers on different nodes on the overlay network (Docker)",
    "weakness_id_read_only": "P1072",
    "weakness": "24591c1e-c5c8-4ffc-ba28-535d267bd2be",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2018-07-18T12:24:50.007000-04:00",
    "last_updated": "2021-06-25T14:47:36.631000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1168",
    "universal_id": "a9ea808b-fd7a-4cd6-8412-6a13bff283dc",
    "countermeasure_name": "Avoid experimental features in production (Docker)",
    "countermeasure_solution": "Avoid experimental features in production.",
    "weakness_title_read_only": "Experimental features in production (Docker)",
    "weakness_id_read_only": "P1073",
    "weakness": "89649b5d-c46b-4f6c-9981-7e923399aaac",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2018-07-18T12:24:50.070000-04:00",
    "last_updated": "2021-06-25T14:47:55.525000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1169",
    "universal_id": "1e15228f-afea-4d14-87f9-02658b3d3b54",
    "countermeasure_name": "Test that experimental features in production are avoided (Docker)",
    "countermeasure_solution": "Run the below command and ensure that the `Experimental` property is set to false in the `Server` section.\n\n    docker version --format '{{ .Server.Experimental }}'",
    "weakness_title_read_only": "Experimental features in production (Docker)",
    "weakness_id_read_only": "P1073",
    "weakness": "89649b5d-c46b-4f6c-9981-7e923399aaac",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2018-07-18T12:24:50.084000-04:00",
    "last_updated": "2021-06-25T14:47:55.393000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1170",
    "universal_id": "8c485614-d536-4d94-abce-e36f5f25c817",
    "countermeasure_name": "Enable swarm auto-lock mode and rotate auto-lock key periodically (Docker)",
    "countermeasure_solution": " - Run Docker swarm manager in auto-lock mode.\n\n    With --autolock enabled, when Docker restarts, you must unlock the swarm first, using a key encryption key generated by Docker when the swarm was initialized.\n\n    Note that a swarm in auto-lock mode won't recover from a restart without manual intervention from a user to enter the unlock key. In some deployments, this might not be good for availability.\n\n- Rotate swarm manager auto-lock key periodically.\n\n    Swarm manager auto-lock keys are not automatically rotated. You should rotate them periodically as a best practice.",
    "weakness_title_read_only": "Unlocked swarm (Docker)",
    "weakness_id_read_only": "P1074",
    "weakness": "9048bed4-9445-4910-a40b-c7e670e3a8e6",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2018-07-18T12:24:50.154000-04:00",
    "last_updated": "2023-03-07T10:38:31.342000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1171",
    "universal_id": "c6a52962-b354-4d10-9b21-f7bbd5acca5b",
    "countermeasure_name": "Test that swarm auto-lock mode is secured (Docker)",
    "countermeasure_solution": " - Run the below command. If it outputs the key, it means swarm was initialized with the --autolock flag. If the output is `no unlock key is set`, it means that swarm was NOT initialized with the --autolock flag and is non-compliant with respect to this recommendation.\n\n        docker swarm unlock-key\n\n- Currently, there is no mechanism to find out when the key was last rotated on a swarm manager node. You should check with the system administrator if there is a key rotation record and the keys were rotated at a pre-defined frequency.",
    "weakness_title_read_only": "Unlocked swarm (Docker)",
    "weakness_id_read_only": "P1074",
    "weakness": "9048bed4-9445-4910-a40b-c7e670e3a8e6",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2018-07-18T12:24:50.172000-04:00",
    "last_updated": "2021-06-25T14:47:44.269000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1172",
    "universal_id": "1d614ae9-249c-482e-8155-dff5d42d1808",
    "countermeasure_name": "Secure daemon configuration files (Docker)",
    "countermeasure_solution": " - Set docker.service file ownership to `root:root`.\n- Set docker.service file permissions to `644` or more restrictive.\n\n- Set docker.socket file ownership to `root:root`.\n- Set docker.socket file permissions to `644` or more restrictive.\n\n- Set /etc/docker directory ownership to `root:root`.\n- Set /etc/docker directory permissions to `755` or more restrictive.\n\n- Set registry certificate file ownership to `root:root`.\n\n    Registry certificate files are usually found under /etc/docker/certs.d/<registry-name> directory.\n\n- Set registry certificate file permissions to `444` or more restrictive.\n\n- Set TLS CA certificate file ownership to `root:root`.\n\n    TLS CA certificate file is the file that is passed alongwith`--tlscacert` parameter.\n\n- Set TLS CA certificate file permissions to `444` or more restrictive.\n\n- Set Docker server certificate file ownership to `root:root`.\n\n    Docker server certificate file is the file that is passed alongwith`--tlscert` parameter.\n\n- Set Docker server certificate file permissions to `444` or more restrictive.\n\n- Set Docker server certificate key file ownership to `root:root`.\n\n    Docker server certificate key file is the file that is passed alongwith`--tlskey` parameter.\n\n- Set Docker server certificate key file permissions to `400`.\n\n- Set Docker socket file ownership to `root:docker`.\n\n    Docker daemon runs as 'root'. The default Unix socket hence must be owned by 'root'. Additionally, the Docker installer creates a Unix group called 'docker'. You can add users to this group, and then those users would be able to read and write to the default Docker Unix socket. The membership to the 'docker' group should be tightly controlled by the system administrator.\n\n- Set Docker socket file permissions to `660` or more restrictive.\n\n- Set daemon.json file ownership to `root:root`.\n- Set daemon.json file permissions to `644` or more restrictive.\n\n- Set /etc/default/docker file ownership to `root:root`.\n- Set /etc/default/docker file permissions to `644` or more restrictive.\n\n- Set /etc/sysconfig/docker file individual ownership and group ownership to `root`.\n- Set /etc/sysconfig/docker file permissions to `644` or more restrictive.",
    "weakness_title_read_only": "Unprotected daemon configuration files (Docker)",
    "weakness_id_read_only": "P1075",
    "weakness": "9be39716-0e7a-422a-8300-cbdff6d5ac67",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2018-07-18T12:24:50.414000-04:00",
    "last_updated": "2021-06-25T14:47:50.295000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1173",
    "universal_id": "aaa22d97-5b65-4213-90ea-23bc28c2a543",
    "countermeasure_name": "Verify that daemon configuration files are secured (Docker)",
    "countermeasure_solution": " - Find docker.service file location:\n\n        systemctl show -p FragmentPath docker.service\n\n    If the file does not exist, this recommendation is not applicable. If the file exists, execute the below commands with the correct file path to verify that the file is owned and group-owned by 'root' and the file permissions are set to '644' or more restrictive.\n\n        stat -c %U:%G /usr/lib/systemd/system/docker.service | grep -v root:root\n\n    The above command should not return anything.\n\n        stat -c %a /usr/lib/systemd/system/docker.service\n\n- Find docker.socket file location:\n\n    systemctl show -p FragmentPath docker.socket\n\n    If the file does not exist, this recommendation is not applicable. If the file exists, execute the below commands with the correct file path to verify that the file is owned and group-owned by 'root' and the file permissions are set to '644' or more restrictive.\n\n        stat -c %U:%G /usr/lib/systemd/system/docker.socket | grep -v root:root\n\n    The above command should not return anything.\n\n        stat -c %a /usr/lib/systemd/system/docker.socket\n\n- Execute the below command to verify that the /etc/docker directory is owned and group-owned by 'root':\n\n        stat -c %U:%G /etc/docker | grep -v root:root\n\n    The above command should not return anything.\n\n- Execute the below command to verify that /etc/docker directory has permissions of '755' or more restrictive:\n\n        stat -c %a /etc/docker\n\n- Execute the below command to verify that the registry certificate files are owned and group-owned by 'root':\n\n        stat -c %U:%G /etc/docker/certs.d/* | grep -v root:root\n\n    The above command should not return anything.\n\n- Execute the below command to verify that the registry certificate files have permissions of '444' or more restrictive:\n\n        stat -c %a /etc/docker/certs.d/<registry-name>/*\n\n- Execute the below command to verify that the TLS CA certificate file is owned and group-owned by 'root':\n\n        stat -c %U:%G <path to TLS CA certificate file> | grep -v root:root\n\n    The above command should not return anything.\n\n- Execute the below command to verify that the TLS CA certificate file has permissions of '444' or more restrictive:\n\n        stat -c %a <path to TLS CA certificate file>\n\n- Execute the below command to verify that the Docker server certificate file is owned and group-owned by 'root':\n\n        stat -c %U:%G <path to Docker server certificate file> | grep -v root:root\n\n    The above command should not return anything.\n\n- Execute the below command to verify that the Docker server certificate file has permissions of '444' or more restrictive:\n\n        stat -c %a <path to Docker server certificate file>\n\n- Execute the below command to verify that the Docker server certificate key file is owned and group-owned by 'root':\n\n        stat -c %U:%G <path to Docker server certificate key file> | grep -v root:root\n\n    The above command should not return anything.\n\n- Execute the below command to verify that the Docker server certificate key file has permissions of '400':\n\n        stat -c %a <path to Docker server certificate key file>\n\n- Execute the below command to verify that the Docker socket file is owned by 'root' and group-owned by 'docker':\n\n        stat -c %U:%G /var/run/docker.sock | grep -v root:docker\n\n    The above command should not return anything.\n\n- Execute the below command to verify that the Docker socket file has permissions of '660' or more restrictive:\n\n        stat -c %a /var/run/docker.sock\n\n- Execute the below command to verify that the daemon.json file is owned and group-owned by 'root':\n\n        stat -c %U:%G /etc/docker/daemon.json | grep -v root:root\n\n    The above command should not return anything.\n\n- Execute the below command to verify that the daemon.json file permissions are correctly set to '644' or more restrictive:\n\n        stat -c %a /etc/docker/daemon.json\n\n- Execute the below command to verify that the /etc/default/docker file is owned and group-owned by 'root':\n\n        stat -c %U:%G /etc/default/docker | grep -v root:root\n\n    The above command should not return anything.\n\n- Execute the below command to verify that the /etc/default/docker file permissions are correctly set to '644' or more restrictive:\n\n        stat -c %a /etc/default/docker\n\n- Execute the command below to verify that the /etc/sysconfig/docker file is indiviually owned and group owned by `root`:\n\n        stat -c %U:%G /etc/sysconfig/docker | grep -v root:root\n\n    The above command should not return anything.\n\n- Execute the command below to verify that the /etc/sysconfig/docker file permissions are correctly set to `644` or more restrictively:\n\n        stat -c %a /etc/sysconfig/docker",
    "weakness_title_read_only": "Unprotected daemon configuration files (Docker)",
    "weakness_id_read_only": "P1075",
    "weakness": "9be39716-0e7a-422a-8300-cbdff6d5ac67",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2018-07-18T12:24:50.512000-04:00",
    "last_updated": "2021-06-25T14:47:50.507000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1174",
    "universal_id": "055d465c-ead4-4035-8c0c-9cb8b86e8be3",
    "countermeasure_name": "Create non-root users for containers (Docker)",
    "countermeasure_solution": "Create a non-root user for each container in the Dockerfile for that container image.\n\nThough user namespace mapping is now available, if a user is already defined in the container image, the container is run as that user by default and specific user namespace remapping is not required.",
    "weakness_title_read_only": "Running containers as root (Docker)",
    "weakness_id_read_only": "P1076",
    "weakness": "44ddd390-9a5e-47bc-a1b8-fab0f4ba12d1",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2018-07-18T12:24:51.502000-04:00",
    "last_updated": "2021-06-25T14:47:51.138000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1175",
    "universal_id": "ae62cce3-1f1e-42b6-974c-5b48e437ccb6",
    "countermeasure_name": "Verify that containers are not run as root (Docker)",
    "countermeasure_solution": "Run this command:\n\n    docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: User={{ .Config.User }}'\n\nIt should return container username or user ID. If it is blank it means, the container is running as root.",
    "weakness_title_read_only": "Running containers as root (Docker)",
    "weakness_id_read_only": "P1076",
    "weakness": "44ddd390-9a5e-47bc-a1b8-fab0f4ba12d1",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2018-07-18T12:24:51.516000-04:00",
    "last_updated": "2021-06-25T14:47:51.336000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1176",
    "universal_id": "c0a87fcd-4bea-4e9d-af48-5501423f7f0b",
    "countermeasure_name": "Use trusted base images and include the latest security patches (Docker)",
    "countermeasure_solution": " - Ensure that the container image is written either from scratch or is based on another established and trusted base image downloaded over a secure channel.\n\n- Scan and rebuild the images to include security patches. Images should be scanned \"frequently\" for any vulnerabilities. Rebuild the images to include patches and then instantiate new containers from them.\n\nYou can use image vulnerability scanning tools to find any kind of vulnerabilities within the images and then check for available patches to mitigate those vulnerabilities. Patches update the system to the most recent code base. Being on the current code base is important because that's where vendors focus on fixing weaknesses. Evaluate the security patches before applying and follow the patching best practices.\n\nIn addition, it would be better if image vulnerability scanning tools could perform a binary level analysis or hash-based verification instead of just version string matching.",
    "weakness_title_read_only": "Using unsafe container images (Docker)",
    "weakness_id_read_only": "P1077",
    "weakness": "204b7bb2-92e7-4699-9f49-41804bd81ca0",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2018-07-18T12:24:51.595000-04:00",
    "last_updated": "2022-08-31T07:38:17.539000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1177",
    "universal_id": "0ee63255-0a1b-45d6-aae0-99262666a979",
    "countermeasure_name": "Verify that secure and updated images are used (Docker)",
    "countermeasure_solution": " - Inspect the Docker host by executing the below command:\n\n        docker images\n\n    This would list all the container images that are currently available for use on the Docker host. Interview the system administrator and obtain a proof of evidence that the list of images was obtained from trusted sources over a secure channel.\n\n- Then, list all the running instances of containers by executing below command:\n\n        docker ps --quiet\n\n    For each container instance, execute the below or equivalent command to find the list of packages installed within the container. Ensure that the security updates for various affected packages are installed.\n\n        docker exec $INSTANCE_ID rpm -qa\n\n    Alternatively, you could run image vulnerability scanning tools which can scan all the images in your ecosystem and then apply patches for the detected vulnerabilities based on your patch management procedures.",
    "weakness_title_read_only": "Using unsafe container images (Docker)",
    "weakness_id_read_only": "P1077",
    "weakness": "204b7bb2-92e7-4699-9f49-41804bd81ca0",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2018-07-18T12:24:51.614000-04:00",
    "last_updated": "2021-06-25T14:47:56.563000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1178",
    "universal_id": "b9020b7b-3f29-4d93-9df6-d078535c0fa6",
    "countermeasure_name": "Do not install unnecessary packages in the container (Docker)",
    "countermeasure_solution": " - Containers tend to be minimal and slim down versions of the Operating System. Do not install anything that does not justify the purpose of the container. If the image had some packages that your container does not use, uninstall them.\n\n- Consider using a minimal base image rather than the standard Redhat/Centos/Debian images if you can. Some of the options include BusyBox and Alpine. \n\n    Not only does this trim your image size from >150Mb to ~20 Mb, there are also fewer tools and paths to escalate privileges. You can even remove the package installer as a final hardening measure for leaf/production containers.",
    "weakness_title_read_only": "Installing unnecessary packages in the container (Docker)",
    "weakness_id_read_only": "P1078",
    "weakness": "5ce5cd23-30cb-4baf-bc12-e93c1ebbe03e",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2018-07-18T12:24:51.688000-04:00",
    "last_updated": "2021-06-25T14:47:55.429000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1179",
    "universal_id": "d73c3592-fc8b-4048-938f-67ed4abef7de",
    "countermeasure_name": "Verify that unnecessary packages are not installed in the container (Docker)",
    "countermeasure_solution": " - List all the running instances of containers by executing below command:\n\n        docker ps --quiet\n\n- For each container instance, execute the below or equivalent command:\n\n        docker exec $INSTANCE_ID rpm -qa\n\n    The above command would list the packages installed on the container. Review the list and ensure that it is legitimate.",
    "weakness_title_read_only": "Installing unnecessary packages in the container (Docker)",
    "weakness_id_read_only": "P1078",
    "weakness": "5ce5cd23-30cb-4baf-bc12-e93c1ebbe03e",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2018-07-18T12:24:51.702000-04:00",
    "last_updated": "2021-06-25T14:47:55.332000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1180",
    "universal_id": "a2f2909d-0b29-4584-b0dc-786a2270c017",
    "countermeasure_name": "Check container health (Docker)",
    "countermeasure_solution": " - Add HEALTHCHECK instruction in your Docker container images to perform the health check on running containers.\n\n    Adding HEALTHCHECK instruction to your container image ensures that the Docker engine periodically checks the running container instances against that instruction to ensure that the instances are still working.\n\n    Based on the reported health status, the docker engine could then exit non-working containers and instantiate new ones.\n\n- You can also check container health at runtime. If the container image does not have a HEALTHCHECK instruction defined, use `--health-cmd` parameter at container runtime for checking container health.\n\n    Based on the reported health status, you could take the necessary actions.",
    "weakness_title_read_only": "Lack of container health check (Docker)",
    "weakness_id_read_only": "P1079",
    "weakness": "4786b1d5-e4ca-4dbc-b422-24584270a005",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2018-07-18T12:24:51.814000-04:00",
    "last_updated": "2021-06-25T14:47:41.151000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1181",
    "universal_id": "a0187864-eaaf-4c24-bed2-849a43e76087",
    "countermeasure_name": "Verify that container health is checked (Docker)",
    "countermeasure_solution": " - Run the below command and ensure that the docker image has appropriate HEALTHCHECK instruction set up.\n\n        docker inspect --format='{{ .Config.Healthcheck }}' <IMAGE>\n\n- Run the below command and ensure that all the containers are reporting health status:\n\n        docker ps --quiet | xargs docker inspect --format '{{ .Id }}: Health={{ .State.Health.Status }}'",
    "weakness_title_read_only": "Lack of container health check (Docker)",
    "weakness_id_read_only": "P1079",
    "weakness": "4786b1d5-e4ca-4dbc-b422-24584270a005",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2018-07-18T12:24:51.832000-04:00",
    "last_updated": "2021-06-25T14:47:40.735000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1182",
    "universal_id": "bf64412e-c5b3-460a-8ce0-c14aacd079fc",
    "countermeasure_name": "Avoid image caching weakness (Docker)",
    "countermeasure_solution": " - Do not use update instructions such as apt-get update alone or in a single line in the Dockerfile.\n- Ensure docker commands always get the latest version of the image within your repository and not the cached older versions.",
    "weakness_title_read_only": "Missing updates because of caching (Docker)",
    "weakness_id_read_only": "P1080",
    "weakness": "15610f52-9d64-44ea-9001-bc31422c8eb6",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2018-07-18T12:24:51.912000-04:00",
    "last_updated": "2022-08-31T07:36:14.146000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1183",
    "universal_id": "55d65f77-6124-4e1e-a118-45b383aa68b9",
    "countermeasure_name": "Verify that image caching problems are avoided (Docker)",
    "countermeasure_solution": "## First:\n\n- Run the below command to get the list of images:\n\n        docker images\n\n- Run the below command for each image in the list above, and look for any update instructions being in a single line:\n\n         docker history <Image_ID>\n\n    Alternatively, if you have access to Dockerfile for the image, verify that there are no update instructions as described above.\n\n## Second:\n- Open your image repository and list the image version history for the image you are inspecting.\n\n- Observe the status when the docker pull command is triggered.\n\n    If the status is shown as Image is up to date, it means that you are getting the cached version of the image.\n\n- Match the version of the image you are running with the latest version reported in your repository which tells if you are running the cached version or the latest copy.",
    "weakness_title_read_only": "Missing updates because of caching (Docker)",
    "weakness_id_read_only": "P1080",
    "weakness": "15610f52-9d64-44ea-9001-bc31422c8eb6",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2018-07-18T12:24:51.931000-04:00",
    "last_updated": "2021-06-25T14:47:56.476000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1184",
    "universal_id": "dd6ebb50-76b6-465b-9baf-082349471d9a",
    "countermeasure_name": "Use COPY instead of ADD in Dockerfile (Docker)",
    "countermeasure_solution": "Use COPY instruction instead of ADD instruction in the Dockerfile.\n\nCOPY instruction just copies the files from the local host machine to the container file system and you would need to take care of the functionalities provided by ADD instructions such as fetching files from remote URLs.",
    "weakness_title_read_only": "Using ADD in Dockerfile (Docker)",
    "weakness_id_read_only": "P1081",
    "weakness": "bd4f9187-58b0-465b-a3a3-4662e7938053",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2018-07-18T12:24:52.002000-04:00",
    "last_updated": "2021-06-25T14:47:56.550000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1185",
    "universal_id": "6511e1fd-ba04-4e71-a7c0-067d25ee3bc6",
    "countermeasure_name": "Verify that COPY is used instead of ADD in Dockerfile (Docker)",
    "countermeasure_solution": " - Run the below command to get the list of images:\n\n        docker images \n\n- Run the below command for each image in the list above and look for any ADD instructions:\n\n        docker history <Image_ID>\n\n    Alternatively, if you have access to Dockerfile for the image, verify that there are no ADD instructions.",
    "weakness_title_read_only": "Using ADD in Dockerfile (Docker)",
    "weakness_id_read_only": "P1081",
    "weakness": "bd4f9187-58b0-465b-a3a3-4662e7938053",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2018-07-18T12:24:52.017000-04:00",
    "last_updated": "2021-06-25T14:47:57.128000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1186",
    "universal_id": "68898931-3f09-488f-9fca-09967729e634",
    "countermeasure_name": "Do not store secrets in Dockerfiles (Docker)",
    "countermeasure_solution": "Do not store any secrets in Dockerfiles. You would need to identify a way to handle secrets for your Docker images.",
    "weakness_title_read_only": "Storing secrets in Dockerfiles (Docker)",
    "weakness_id_read_only": "P1082",
    "weakness": "ca0fec2c-e178-4f0c-9d7b-f7cea07f6346",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "deployment",
    "created": "2018-07-18T12:24:52.084000-04:00",
    "last_updated": "2021-06-25T14:47:38.070000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1187",
    "universal_id": "e83c83f2-3652-4933-bce5-828d1876e3bd",
    "countermeasure_name": "Test if secrets are stored in Dockerfiles (Docker)",
    "countermeasure_solution": "Perform the following steps:\n\n1. Run the below command to get the list of images: \n\n        docker images\n\n2. Run the below command for each image in the list above, and look for any secrets:\n\n        docker history <Image_ID>\n\nAlternatively, if you have access to Dockerfile for the image, verify that there are no secrets as described above.",
    "weakness_title_read_only": "Storing secrets in Dockerfiles (Docker)",
    "weakness_id_read_only": "P1082",
    "weakness": "ca0fec2c-e178-4f0c-9d7b-f7cea07f6346",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "testing",
    "created": "2018-07-18T12:24:52.099000-04:00",
    "last_updated": "2021-06-25T14:47:37.934000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1188",
    "universal_id": "64d49ef5-251e-4a83-9d6b-0d75f28fb25f",
    "countermeasure_name": "Configure Linux Security Modules (Docker)",
    "countermeasure_solution": "Do not disable AppArmor Profile:\n\n- AppArmor is an effective and easy-to-use Linux application security system. It is available on quite a few Linux distributions by default such as Debian and Ubuntu.\n- The container (process) would have set of restrictions as defined in AppArmor profile. If your AppArmor profile is mis-configured, then the container may not entirely work as expected.",
    "weakness_title_read_only": "Misconfiguring Linux Security Modules (Docker)",
    "weakness_id_read_only": "P1083",
    "weakness": "3d750f7f-6f87-4334-a2c2-fcd49dc918c5",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2018-07-18T12:24:52.170000-04:00",
    "last_updated": "2021-06-25T14:47:47.285000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1189",
    "universal_id": "b1b0bf68-03bf-4ebd-8a6b-b7a64217d626",
    "countermeasure_name": "Test if Linux Security Modules are securely configured (Docker)",
    "countermeasure_solution": "Run the following command\n\n    docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: AppArmorProfile={{ .AppArmorProfile }}'\nThe above command should return a valid AppArmor Profile for each container instance.",
    "weakness_title_read_only": "Misconfiguring Linux Security Modules (Docker)",
    "weakness_id_read_only": "P1083",
    "weakness": "3d750f7f-6f87-4334-a2c2-fcd49dc918c5",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2018-07-18T12:24:52.184000-04:00",
    "last_updated": "2021-06-25T14:47:49.726000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1190",
    "universal_id": "9f0c037b-5e77-4b9d-a00c-80c28524d006",
    "countermeasure_name": "Restrict Linux Kernel Capabilities within containers (Docker)",
    "countermeasure_solution": " - Restrict Linux Kernel Capabilities within containers.\nBy default, Docker starts containers with a restricted set of Linux Kernel Capabilities. It means that any process may be granted the required capabilities instead of root access. Using Linux Kernel Capabilities, the processes do not have to run as root for almost all the specific areas where root privileges are usually needed. Based on what Linux Kernel Capabilities were added or dropped, restrictions within the container would apply.\n\n- Do not use privileged containers.\nUsing the `--privileged` flag gives all Linux Kernel Capabilities to the container thus overwriting the `--cap-add` and `--cap-drop` flags. Ensure that it is not used.\n\nLinux Kernel Capabilities other than defaults would not be available for use within container.",
    "weakness_title_read_only": "Linux kernel capabilities are not restricted within containers (Docker)",
    "weakness_id_read_only": "P1084",
    "weakness": "8444b0cf-9e4c-4c5e-9451-f42e963adb0d",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2018-07-18T12:24:52.256000-04:00",
    "last_updated": "2021-06-25T14:47:51.156000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1191",
    "universal_id": "6ed86c04-e612-41f4-9bf6-d0933bb4ef4f",
    "countermeasure_name": "Test if Linux Kernel Capabilities are restricted within containers (Docker)",
    "countermeasure_solution": "Run the following command:\n\n    docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: CapAdd={{ .HostConfig.CapAdd }} CapDrop={{ .HostConfig.CapDrop }}'\n\nVerify that the added and dropped Linux Kernel Capabilities are in line with the ones needed for container process for each container instance.\n\n    docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: Privileged={{ .HostConfig.Privileged }}'\n\nThe above command should return `Privileged=false` for each container instance.",
    "weakness_title_read_only": "Linux kernel capabilities are not restricted within containers (Docker)",
    "weakness_id_read_only": "P1084",
    "weakness": "8444b0cf-9e4c-4c5e-9451-f42e963adb0d",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2018-07-18T12:24:52.276000-04:00",
    "last_updated": "2021-06-25T14:47:51.077000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1192",
    "universal_id": "6fd87b00-3caa-486e-8fca-651d1522902f",
    "countermeasure_name": "Do not expose unnecessary host resources (Docker)",
    "countermeasure_solution": " - Do not mount sensitive host system directories on containers: Sensitive host system directories such as below should not be allowed to be mounted as container volumes especially in read-write mode.\n    - `/`\n    - `/boot`\n    - `/dev`\n    - `/etc`\n    - `/lib`\n    - `/proc`\n    - `/sys`\n    - `/usr`\n- Do not share the host's process namespace: Process ID (PID) namespaces isolate the process ID number space, meaning that processes in different PID namespaces can have the same PID. This is process level isolation between containers and the host. Container processes cannot see the processes on the host system. In certain cases, you want your container to share the host's process namespace. For example, you could build a container with debugging tools like strace or gdb, but want to use these tools when debugging processes within the container. If this is desired, then share only one (or needed) host process by using the '-p' switch. For example,\n```\ndocker run --pid=host rhel7 strace -p 1234\n```\n- Do not share the host's IPC namespace: IPC (POSIX/SysV IPC) namespace provides separation of named shared memory segments, semaphores and message queues. IPC namespace on the host thus should not be shared with the containers and should remain isolated. Shared memory segments are used to accelerate inter-process communication. It is commonly used by high performance applications. If such applications are containerized into multiple containers, you might need to share the IPC namespace of the containers to achieve high performance. In such cases, you should still be sharing container specific IPC namespaces only and not the host IPC namespace. You may share the container's IPC namespace with other container as below:\n```\n$> docker run <Run arguments> --ipc=container:$INSTANCE_ID <Container Image Name or ID> <Command>\n```\nFor example,\n```\ndocker run --interactive --tty --ipc=container:e3a7a1a97c58 centos /bin/bash\n```\n- Do not directly expose host devices to containers: Host devices can be directly exposed to containers at runtime. Do not directly expose host devices to containers especially for containers that are not trusted. You would not be able to use the host devices directly within the containers.\n- Do not share the host's UTS namespace: UTS namespaces provide isolation of two system identifiers: the hostname and the NIS domain name. It is used for setting the hostname and the domain that is visible to running processes in that namespace. Processes running within containers do not typically require to know hostname and domain name. Hence, the namespace should not be shared with the host.\n- Do not share the host's user namespaces: Do not share the host's user namespaces with the containers.\n- Do not mount the Docker socket inside any containers: The docker socket (docker.sock) should not be mounted inside a container.",
    "weakness_title_read_only": "Exposing unnecessary host resources (Docker)",
    "weakness_id_read_only": "P1085",
    "weakness": "6cb03bea-860e-4777-a8fc-407a876d1068",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2018-07-18T12:24:52.463000-04:00",
    "last_updated": "2021-06-25T14:47:52.777000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1193",
    "universal_id": "8653a9f4-940f-40d2-8218-1727c2d2d743",
    "countermeasure_name": "Test if unnecessary host resources are exposed (Docker)",
    "countermeasure_solution": " - Execute the following command:\n```\ndocker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: Volumes={{ .Mounts }}'\n```\nThe above commands would return the list of current mapped directories and whether they are mounted in read-write mode for each container instance.\n\n- Execute the following command:\n```\ndocker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: PidMode={{ .HostConfig.PidMode }}'\n```\nIf the above command returns `host`, it means the host PID namespace is shared with the container else this recommendation is compliant.\n\n- Execute the following command:\n```\ndocker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: IpcMode={{ .HostConfig.IpcMode }}'\n```\nIf the above command returns `host`, it means the host IPC namespace is shared with the container. If the above command returns nothing, then the host's IPC namespace is not shared. This recommendation is then compliant.\n\n- Execute the following command:\n```\ndocker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: Devices={{ .HostConfig.Devices }}'\n```\nThe above command would list out each device with below information:\n\n * CgroupPermissions - For example, rwm\n * PathInContainer - Device path within the container\n * PathOnHost - Device path on the host\n\nVerify that the host device is needed to be accessed from within the container and the permissions required are correctly set. If the above command returns [], then the container does not have access to host devices. This recommendation can be assumed to be compliant.\n\n- Execute the following command:\n```\ndocker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: UTSMode={{ .HostConfig.UTSMode }}'\n```\nIf the above command returns 'host', it means the host UTS namespace is shared with the container and this recommendation is non-compliant. If the above command returns nothing, then the host's UTS namespace is not shared. This recommendation is then compliant.\n\n- Run the below command and ensure that it does not return any value for UsernsMode. If it returns a value of host, it means the host user namespace is shared with the containers.\n```\ndocker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: UsernsMode={{ .HostConfig.UsernsMode }}'\n```\n- Execute the following command:\n```\ndocker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: Volumes={{ .Mounts }}' | grep docker.sock\n```\nThe above command would return any instances where docker.sock had been mapped to a container as a volume.",
    "weakness_title_read_only": "Exposing unnecessary host resources (Docker)",
    "weakness_id_read_only": "P1085",
    "weakness": "6cb03bea-860e-4777-a8fc-407a876d1068",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2018-07-18T12:24:52.504000-04:00",
    "last_updated": "2021-06-25T14:47:52.692000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1194",
    "universal_id": "88243558-39e8-4558-8746-3b5c032de2d2",
    "countermeasure_name": "Do not run SSH within containers (Docker)",
    "countermeasure_solution": "SSH server should not be running within the container. You should SSH into the Docker host, and use nsenter tool to enter a container from a remote host.",
    "weakness_title_read_only": "Running SSH within containers (Docker)",
    "weakness_id_read_only": "P1086",
    "weakness": "c6ca8d42-20ad-48f0-a3a1-2f5471605644",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2018-07-18T12:24:52.621000-04:00",
    "last_updated": "2021-06-25T14:47:52.436000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1195",
    "universal_id": "812e0740-3604-4b47-85e6-1f6793b0f2d2",
    "countermeasure_name": "Test if SSH is running within containers (Docker)",
    "countermeasure_solution": " - List all the running instances of containers by executing below command:\n\n        docker ps --quiet \n\n- For each container instance, execute the below command:\n\n        docker exec $INSTANCE_ID ps -el\n\n- Ensure that there is no process for SSH server.",
    "weakness_title_read_only": "Running SSH within containers (Docker)",
    "weakness_id_read_only": "P1086",
    "weakness": "c6ca8d42-20ad-48f0-a3a1-2f5471605644",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2018-07-18T12:24:52.635000-04:00",
    "last_updated": "2021-06-25T14:47:52.961000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1196",
    "universal_id": "494b7a6c-a994-4963-a2fc-83cb6aa18d29",
    "countermeasure_name": "Open only needed ports on the containers (Docker)",
    "countermeasure_solution": "Dockerfile for a container image defines the ports to be opened by default on a container instance. The list of ports may or may not be relevant to the application you are running within the container.",
    "weakness_title_read_only": "Unneeded open ports on the containers (Docker)",
    "weakness_id_read_only": "P1087",
    "weakness": "e9c7fd01-242a-46ed-b162-1f6c393a7087",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2018-07-18T12:24:52.701000-04:00",
    "last_updated": "2021-06-25T14:47:52.948000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1197",
    "universal_id": "1de612bf-4f09-4e80-aa47-31e13526b3a3",
    "countermeasure_name": "Test if only needed ports are open on the containers (Docker)",
    "countermeasure_solution": "List all the running instances of containers and their port mapping by executing the below command:\n\n    docker ps --quiet | xargs docker inspect --format '{{ .Id }}: Ports={{ .NetworkSettings.Ports }}'\n\nReview the list and ensure that the ports mapped are the ones that are really needed for the container.",
    "weakness_title_read_only": "Unneeded open ports on the containers (Docker)",
    "weakness_id_read_only": "P1087",
    "weakness": "e9c7fd01-242a-46ed-b162-1f6c393a7087",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2018-07-18T12:24:52.715000-04:00",
    "last_updated": "2021-06-25T14:47:52.808000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1198",
    "universal_id": "964b7458-e22b-47fc-a077-2d1564da84e7",
    "countermeasure_name": "Do not share the host's network namespace (Docker)",
    "countermeasure_solution": "The networking mode on a container when set to '--net=host', skips placing the container inside separate network stack. In essence, this choice tells Docker to not containerize the container's networking. This would network-wise mean that the container lives \"outside\" in the main Docker host and has full access to its network interfaces.",
    "weakness_title_read_only": "Sharing the host's network namespace (Docker)",
    "weakness_id_read_only": "P1088",
    "weakness": "c389f39a-54a2-472e-a548-9531fb65d390",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2018-07-18T12:24:52.779000-04:00",
    "last_updated": "2021-06-25T14:47:37.833000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1199",
    "universal_id": "2e7f10a6-350c-459a-b6c5-ab685c9ee5c1",
    "countermeasure_name": "Test that the host's network namespace is not shared (Docker)",
    "countermeasure_solution": "Execute the following command:\n\n        docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: NetworkMode={{ .HostConfig.NetworkMode }}'\n\nIf the above command returns 'NetworkMode=host', it means '--net=host' option was passed when container was started. This would be non-compliant. It should return bridge, none, or container:$Container_Instance to be compliant.",
    "weakness_title_read_only": "Sharing the host's network namespace (Docker)",
    "weakness_id_read_only": "P1088",
    "weakness": "c389f39a-54a2-472e-a548-9531fb65d390",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2018-07-18T12:24:52.793000-04:00",
    "last_updated": "2021-06-25T14:47:37.877000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1200",
    "universal_id": "616125a2-16db-4cda-bf2e-0c0f9495c90c",
    "countermeasure_name": "Limit resources used by containers (Docker)",
    "countermeasure_solution": " - Limit memory usage for container:\n By default, all containers on a Docker host share the resources equally. By using the resource management capabilities of Docker host, such as memory limit, you can control the amount of memory that a container may consume. If you do not set proper limits, the container process may have to starve.\n\n- Use PIDs cgroup limit:\n Use `--pids-limit` flag at container runtime. Set the PIDs limit value as appropriate. Incorrect values might leave the containers unusable.",
    "weakness_title_read_only": "Unlimited resources used by containers (Docker)",
    "weakness_id_read_only": "P1089",
    "weakness": "30da221a-013c-4e66-8eac-80d325cc4f7e",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2018-07-18T12:24:52.864000-04:00",
    "last_updated": "2021-06-25T14:47:40.797000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1201",
    "universal_id": "601d185e-afa1-4fbd-842e-065b7b20ba9d",
    "countermeasure_name": "Test that resources used by containers are limited (Docker)",
    "countermeasure_solution": "Execute the following command:\n\n    docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: Memory={{ .HostConfig.Memory }}'\n\nIf the above command returns 0, it means the memory limits are not in place. If the above command returns a non-zero value, it means memory limits are in place.\n\nRun the below command and ensure that PidsLimit is not set to 0 or -1. A PidsLimit of 0 or -1 means that any number of processes can be forked inside the container concurrently.\n\n    docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: PidsLimit={{ .HostConfig.PidsLimit }}'",
    "weakness_title_read_only": "Unlimited resources used by containers (Docker)",
    "weakness_id_read_only": "P1089",
    "weakness": "30da221a-013c-4e66-8eac-80d325cc4f7e",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2018-07-18T12:24:52.882000-04:00",
    "last_updated": "2021-06-25T14:47:40.779000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1202",
    "universal_id": "00b6cf29-64af-4b88-93b9-703bd73a77a6",
    "countermeasure_name": "Set container CPU priority appropriately (Docker)",
    "countermeasure_solution": "By default, all containers on a Docker host share the resources equally. By using the resource management capabilities of Docker host, such as CPU shares, you can control the host CPU resources that a container may consume.\n\nIf you do not set proper CPU shares, the container process may have to starve if the resources on the host are not available. If the CPU resources on the host are free, CPU shares do not place any restrictions on the CPU that the container may use.",
    "weakness_title_read_only": "Container CPU priority is not set appropriately (Docker)",
    "weakness_id_read_only": "P1090",
    "weakness": "6429ac46-8146-4390-b3a3-30e7ea0c68aa",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2018-07-18T12:24:52.956000-04:00",
    "last_updated": "2021-06-25T14:47:40.171000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1203",
    "universal_id": "c11d3fdf-7d94-4009-b1cf-72f960b25f99",
    "countermeasure_name": "Test if container CPU priority is appropriately set (Docker)",
    "countermeasure_solution": "Execute the following command:\n\n        docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: CpuShares={{ .HostConfig.CpuShares }}'\n\nIf the above command returns 0 or 1024, it means the CPU shares are not in place. If the above command returns a non-zero value other than 1024, it means CPU shares are in place.",
    "weakness_title_read_only": "Container CPU priority is not set appropriately (Docker)",
    "weakness_id_read_only": "P1090",
    "weakness": "6429ac46-8146-4390-b3a3-30e7ea0c68aa",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2018-07-18T12:24:52.970000-04:00",
    "last_updated": "2021-06-25T14:47:40.890000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1204",
    "universal_id": "19604025-23f9-4a68-820d-ac73034b7e18",
    "countermeasure_name": "Mount container's root file system as read-only (Docker)",
    "countermeasure_solution": "The container's root file system should be treated as a `golden image` and any writes to the root filesystem should be avoided. You should explicitly define a container volume for writing.\n\nThe container root file system would not be writable. You should explicitly define a volume for the container for writing.",
    "weakness_title_read_only": "Container's root file system is not mounted as read-only (Docker)",
    "weakness_id_read_only": "P1091",
    "weakness": "1b4af488-5dd1-4433-af17-a20c44dc7636",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2018-07-18T12:24:53.038000-04:00",
    "last_updated": "2021-06-25T14:47:39.199000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1205",
    "universal_id": "9ce65550-d3c2-4d7e-a42f-461221dd5056",
    "countermeasure_name": "Test if the container's root file system is mounted as read-only (Docker)",
    "countermeasure_solution": "Execute the following command:\n\n    docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: ReadonlyRootfs={{ .HostConfig.ReadonlyRootfs }}' \n\nIf the above command returns _true_, it means the root filesystem is mounted read-only. If the above command returns _false_, it means the root filesystem is writable.\n\nAdditionally, you may use below command to find the differences between the container instance and its corresponding image.\n\n    docker diff $INSTANCE_ID",
    "weakness_title_read_only": "Container's root file system is not mounted as read-only (Docker)",
    "weakness_id_read_only": "P1091",
    "weakness": "1b4af488-5dd1-4433-af17-a20c44dc7636",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2018-07-18T12:24:53.052000-04:00",
    "last_updated": "2021-06-25T14:47:39.162000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1206",
    "universal_id": "6e4c5139-fee8-469b-b0e2-6f647afd1818",
    "countermeasure_name": "Set the 'on-failure' container restart policy to 5 (Docker)",
    "countermeasure_solution": "Using the `--restart` flag in `docker run` command you can specify a restart policy for how a container should or should not be restarted on exit. You should choose the `on-failure` restart policy and limit the restart attempts to 5.\n\nThe container would attempt to restart only for 5 times.",
    "weakness_title_read_only": "The 'on-failure' container restart policy is not set to 5 (Docker)",
    "weakness_id_read_only": "P1092",
    "weakness": "48987391-e928-477e-9bb8-6901a784364d",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2018-07-18T12:24:53.158000-04:00",
    "last_updated": "2021-06-25T14:47:40.397000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1207",
    "universal_id": "cee53bff-45ae-43f6-afe2-1a7b4e76a4ac",
    "countermeasure_name": "Test that the 'on-failure' container restart policy is set to 5 (Docker)",
    "countermeasure_solution": "Execute the following command:\n\n    docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: RestartPolicyName={{ .HostConfig.RestartPolicy.Name }} MaximumRetryCount={{ .HostConfig.RestartPolicy.MaximumRetryCount }}'\n\n* If the above command returns `RestartPolicyName=always`, then the system is not configured as desired and hence this recommendation is non-compliant.\n* If the above command returns `RestartPolicyName=no` or just `RestartPolicyName=`, then the restart policies are not being used and the container would never be restarted of its own. This recommendation is then Not Applicable and can be assumed to be compliant.\n* If the above command returns `RestartPolicyName=on-failure`, then verify that the number of restart attempts is set to 5 or less by looking at `MaximumRetryCount`.",
    "weakness_title_read_only": "The 'on-failure' container restart policy is not set to 5 (Docker)",
    "weakness_id_read_only": "P1092",
    "weakness": "48987391-e928-477e-9bb8-6901a784364d",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2018-07-18T12:24:53.173000-04:00",
    "last_updated": "2021-06-25T14:47:40.999000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1208",
    "universal_id": "be03ce2d-1267-44cb-b9b7-296f6910a892",
    "countermeasure_name": "Do not set mount propagation mode to 'shared' (Docker)",
    "countermeasure_solution": "Mount propagation mode allows mounting volumes in shared, slave or private mode on a container. Do not use shared mount propagation mode until needed.",
    "weakness_title_read_only": "Mount propagation mode is set to 'shared' (Docker)",
    "weakness_id_read_only": "P1093",
    "weakness": "9e807c41-0280-4e7d-be51-a1c8641bee19",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2018-07-18T12:24:53.409000-04:00",
    "last_updated": "2021-06-25T14:47:45.269000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1209",
    "universal_id": "624fc10e-f5f5-4197-b4d6-3d0bf9ccd3a3",
    "countermeasure_name": "Verify that mount propagation mode is not set to 'shared' (Docker)",
    "countermeasure_solution": "Use the following command to verify the propagation mode for mounted volumes is __not__ set to __shared__ :\n````\ndocker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: Propagation={{range $mnt := .Mounts}} {{json $mnt.Propagation}} {{end}}'\n````\nThe above command might throw errors if there are no mounts. In that case, this recommendation is not applicable.",
    "weakness_title_read_only": "Mount propagation mode is set to 'shared' (Docker)",
    "weakness_id_read_only": "P1093",
    "weakness": "9e807c41-0280-4e7d-be51-a1c8641bee19",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2018-07-18T12:24:53.422000-04:00",
    "last_updated": "2021-06-25T14:47:46.240000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1210",
    "universal_id": "f0848631-ea5b-4a8d-90a9-e063fda6aad1",
    "countermeasure_name": "Configure seccomp profile (Docker)",
    "countermeasure_solution": "The reduced set of system calls reduces the total kernel surface exposed to the application and thus improves application security.\n\nTo reduce set of system calls, keep default _seccomp_ profile __enabled__. _seccomp_ filtering provides a means for a process to specify a filter for incoming system calls. The default Docker _seccomp_ profile works on whitelist basis and allows 311 system calls blocking all others. It should not be disabled unless it hinders your container application usage.\n\n With Docker 1.10 and greater, the default _seccomp_ profile blocks _syscalls_, regardless of `--cap-add passed` to the container. You should create your own custom _seccomp_ profile in such cases. You may also disable the default _seccomp_ profile by passing `--security-opt=seccomp:unconfined` on docker run.",
    "weakness_title_read_only": "Large number of system calls (Docker)",
    "weakness_id_read_only": "P1094",
    "weakness": "40d7e2ed-f18c-412f-9433-e9e3f7364d5e",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2018-07-18T12:24:53.535000-04:00",
    "last_updated": "2021-06-25T14:47:49.618000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1211",
    "universal_id": "821e5249-4806-49c9-a85d-4f7e3aed5b96",
    "countermeasure_name": "Verify that seccomp profile is enabled (Docker)",
    "countermeasure_solution": "To verify that _seccomp_ profile is configured, use the following command and check if it returns `<no value>` or your modified _seccomp_ profile. If it returns `[seccomp:unconfined]`, that means this recommendation is non-compliant and the container is running without any _seccomp_ profiles.\n\n````\n- docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: SecurityOpt={{.HostConfig.SecurityOpt }}'\n````",
    "weakness_title_read_only": "Large number of system calls (Docker)",
    "weakness_id_read_only": "P1094",
    "weakness": "40d7e2ed-f18c-412f-9433-e9e3f7364d5e",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2018-07-18T12:24:53.550000-04:00",
    "last_updated": "2021-06-25T14:47:49.091000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1212",
    "universal_id": "31c304cc-a120-4b66-bde0-7c518901d6c7",
    "countermeasure_name": "Confirm cgroup usage (Docker)",
    "countermeasure_solution": "It is possible to attach to a particular _cgroup_ on container run. Confirming _cgroup_ usage would ensure that containers are running under defined _cgroups_.",
    "weakness_title_read_only": "Unmonitored cgroup usage (Docker)",
    "weakness_id_read_only": "P1095",
    "weakness": "cb27c5cc-af2e-46ad-a5d0-59426ca9c7e8",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2018-07-18T12:24:53.625000-04:00",
    "last_updated": "2021-06-25T14:47:50.052000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1213",
    "universal_id": "2655d38a-6184-4a99-84dc-87216a21e7b8",
    "countermeasure_name": "Verify that cgroup usage is confirmed (Docker)",
    "countermeasure_solution": "Use the following command to determine under which containers the _cgroup_ is running. If it is blank, it means containers are running under default docker _cgroup_. In that case, this recommendation is compliant. \n\n````\n- docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: CgroupParent={{ .HostConfig.CgroupParent }}'\n````\n \nIf the containers are found to be running under _cgroup_ other than the one that was expected, this test __fails__.",
    "weakness_title_read_only": "Unmonitored cgroup usage (Docker)",
    "weakness_id_read_only": "P1095",
    "weakness": "cb27c5cc-af2e-46ad-a5d0-59426ca9c7e8",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2018-07-18T12:24:53.639000-04:00",
    "last_updated": "2021-06-25T14:47:45.963000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1214",
    "universal_id": "3fb876bc-33ad-4ab3-8510-a93bf7852ab4",
    "countermeasure_name": "Restrict containers from acquiring additional privileges (Docker)",
    "countermeasure_solution": "Restrict the container from acquiring additional privileges via _suid_ or _sgid_ bits.`no_new_priv` prevents LSMs like SELinux from transitioning to process labels that have access not allowed to the current process.",
    "weakness_title_read_only": "Allowing containers to acquire additional privileges (Docker)",
    "weakness_id_read_only": "P1096",
    "weakness": "0a7ee4a6-23a2-459e-9072-33cf4675f467",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2018-07-18T12:24:53.728000-04:00",
    "last_updated": "2021-06-25T14:47:51.282000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1215",
    "universal_id": "558eccd6-98fb-4d79-ad11-244e7d21fff9",
    "countermeasure_name": "Verify that containers are restricted from acquiring additional privileges (Docker)",
    "countermeasure_solution": "The following command should return all the security options currently configured for the containers. `no-new-privileges` should also be one of them.\n````\ndocker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: SecurityOpt={{ .HostConfig.SecurityOpt }}'\n````",
    "weakness_title_read_only": "Allowing containers to acquire additional privileges (Docker)",
    "weakness_id_read_only": "P1096",
    "weakness": "0a7ee4a6-23a2-459e-9072-33cf4675f467",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2018-07-18T12:24:53.742000-04:00",
    "last_updated": "2021-06-25T14:47:51.103000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1222",
    "universal_id": "331d8aac-9e75-47bf-ac27-d1b7723d5e43",
    "countermeasure_name": "Do not change base device size until needed (Docker)",
    "countermeasure_solution": "Do not change base size device size until needed. In certain circumstances, you might need containers bigger than 10G in size. In these cases, carefully choose the base device size.",
    "weakness_title_read_only": "Changing base device size when it's not needed (Docker)",
    "weakness_id_read_only": "P1100",
    "weakness": "c4f2dc2c-5124-46c9-a537-ff2b5b6fd535",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2018-07-18T12:24:54.450000-04:00",
    "last_updated": "2021-06-25T14:47:40.766000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1223",
    "universal_id": "c99960cd-20af-4799-ab79-054f626bf4e5",
    "countermeasure_name": "Verify that base device size is not changed (Docker)",
    "countermeasure_solution": "Execute the following command to verify if base device size is changed. This test __fails__ , if it returns any `--storage-opt dm.basesize` parameters.\n\n````\nps -ef | grep dockerd\n````",
    "weakness_title_read_only": "Changing base device size when it's not needed (Docker)",
    "weakness_id_read_only": "P1100",
    "weakness": "c4f2dc2c-5124-46c9-a537-ff2b5b6fd535",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2018-07-18T12:24:54.464000-04:00",
    "last_updated": "2021-06-25T14:47:39.906000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1224",
    "universal_id": "ad275597-75b9-4f67-a2c0-5e7259f5a4da",
    "countermeasure_name": "Use authorization plugin (Docker)",
    "countermeasure_solution": "Use authorization plugin to manage access to Docker daemon and add them to your Docker daemon configuration. Using an authorization plugin, a Docker administrator can configure granular access policies for managing access to Docker daemon.\n\nEach docker command specifically passes through authorization plugin mechanism. This might introduce a slight performance drop.",
    "weakness_title_read_only": "Failing to use the authorization plugin (Docker)",
    "weakness_id_read_only": "P1101",
    "weakness": "e9a47ebe-0a35-4534-a32a-b11f7ef4a601",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2018-07-18T12:24:54.532000-04:00",
    "last_updated": "2021-06-25T14:47:46.677000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1225",
    "universal_id": "f8a20a76-d97a-4a87-a170-57637e8bf2b7",
    "countermeasure_name": "Verify that authorization plugin is being used (Docker)",
    "countermeasure_solution": "Verify that the `--authorization-plugin` parameter is set as appropriate using the following command:\n````\nps -ef | grep dockerd\n````",
    "weakness_title_read_only": "Failing to use the authorization plugin (Docker)",
    "weakness_id_read_only": "P1101",
    "weakness": "e9a47ebe-0a35-4534-a32a-b11f7ef4a601",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2018-07-18T12:24:54.546000-04:00",
    "last_updated": "2021-06-25T14:47:46.788000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1226",
    "universal_id": "6ce987fd-f777-4415-8001-dff9d0602193",
    "countermeasure_name": "Use Docker's secret management commands for managing secrets in a Swarm cluster (Docker)",
    "countermeasure_solution": "Use Docker's in-built secret management command. Docker has various commands for managing secrets in a Swarm cluster. This is the foundation for future secret support in Docker with potential improvements such as Windows support, different backing stores, etc.",
    "weakness_title_read_only": "Failing to manage secrets in Docker Swarm (Docker)",
    "weakness_id_read_only": "P1102",
    "weakness": "20985591-aa3f-4dcb-a388-c47b0c1ccfc6",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2018-07-18T12:24:54.795000-04:00",
    "last_updated": "2021-06-25T14:47:43.851000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1227",
    "universal_id": "2699f3a0-7cd3-495a-a654-cebbde80fd9e",
    "countermeasure_name": "Verify that Docker's secret management commands are used (Docker)",
    "countermeasure_solution": "To verify Docker secret management command is used in your environment, on a swarm manager node, run the following command:\n\n    docker secret ls",
    "weakness_title_read_only": "Failing to manage secrets in Docker Swarm (Docker)",
    "weakness_id_read_only": "P1102",
    "weakness": "20985591-aa3f-4dcb-a388-c47b0c1ccfc6",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2018-07-18T12:24:54.809000-04:00",
    "last_updated": "2021-06-25T14:47:44.100000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1228",
    "universal_id": "ecdd7eca-8411-4cf5-8692-5e584eb94e1a",
    "countermeasure_name": "Remove setuid and setgid permissions in images (Docker)",
    "countermeasure_solution": "Drop two permissions of \"setuid\" and \"setgid\" for the packages which do not need them within the images. Removing setuid and setgid permissions in the images would prevent privilege escalation attacks in the containers.",
    "weakness_title_read_only": "Privilege escalation through \"setuid\" and \"setgid\" permissions in images (Docker)",
    "weakness_id_read_only": "P1103",
    "weakness": "866abf8f-8fde-44a8-9e1a-d647cf6d857b",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "deployment",
    "created": "2018-07-18T12:24:54.964000-04:00",
    "last_updated": "2021-06-25T14:47:45.220000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1229",
    "universal_id": "4730a292-f38a-46d3-9105-d6b96535c8a4",
    "countermeasure_name": "Test that images do not have setuid and setgid permissions (Docker)",
    "countermeasure_solution": "Run this command on the image to list the executables having setuid and setgid permissions:\n\n    docker run <Image_ID> find / -perm +6000 -type f -exec ls -ld {} \\; 2> /dev/null\n\nCarefully, review the list and ensure that it is legitimate.",
    "weakness_title_read_only": "Privilege escalation through \"setuid\" and \"setgid\" permissions in images (Docker)",
    "weakness_id_read_only": "P1103",
    "weakness": "866abf8f-8fde-44a8-9e1a-d647cf6d857b",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2018-07-18T12:24:54.978000-04:00",
    "last_updated": "2021-06-25T14:47:50.238000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1230",
    "universal_id": "efbb0c46-acc9-4caf-a84b-1735be757a3b",
    "countermeasure_name": "Do not use 'docker exec' commands with 'privileged' or 'user' options (Docker)",
    "countermeasure_solution": " - Do not docker exec with \"--privileged\" or \"--user\" options.\n\n None. If you need enhanced capabilities within the container, then run the container with the needed capabilities.",
    "weakness_title_read_only": "Using \"docker exec\" commands with \"privileged\" or \"user\" options (Docker)",
    "weakness_id_read_only": "P1104",
    "weakness": "931638c5-469c-4786-8eb2-2f5701f605fe",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "deployment",
    "created": "2018-07-18T12:24:55.137000-04:00",
    "last_updated": "2021-06-25T14:47:52.037000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1231",
    "universal_id": "d15fcb6c-1688-47a7-9896-5848046f9b3b",
    "countermeasure_name": "Test that 'docker exec' commands are not used with privileged or user options (Docker)",
    "countermeasure_solution": " - If you have auditing enabled, you can use the below command to filter out _\"docker exec\"_ commands that used _\"--privileged\"_ option:\n\n          ausearch -k docker | grep exec | grep privileged\n\n- The same is true about _\"--user\"_ option:\n\n          ausearch -k docker | grep exec | grep user",
    "weakness_title_read_only": "Using \"docker exec\" commands with \"privileged\" or \"user\" options (Docker)",
    "weakness_id_read_only": "P1104",
    "weakness": "931638c5-469c-4786-8eb2-2f5701f605fe",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2018-07-18T12:24:55.156000-04:00",
    "last_updated": "2021-06-25T14:47:51.831000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1232",
    "universal_id": "5e4df69f-a136-4852-923f-24997c82a105",
    "countermeasure_name": "Create a separate partition for containers (Docker)",
    "countermeasure_solution": "Create a separate partition for Docker files. All Docker containers and their data and metadata are stored under `/var/lib/docker` directory. By default, `/var/lib/docker` would be mounted under `/` or `/var` partitions based on availability.",
    "weakness_title_read_only": "Not having a separate partition for the container (Docker)",
    "weakness_id_read_only": "P1105",
    "weakness": "db4bedd5-68c0-4693-92cb-04314666af0c",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2018-07-18T12:30:57.214000-04:00",
    "last_updated": "2021-06-25T14:47:50.326000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1233",
    "universal_id": "a2f5425b-12a6-41e6-9e67-3a851970e823",
    "countermeasure_name": "Test that containers are on a separate partition (Docker)",
    "countermeasure_solution": "At the Docker host execute the below command:\n\n          grep /var/lib/docker /etc/fstab \n\nThis should return the partition details for `/var/lib/docker` mount-point.",
    "weakness_title_read_only": "Not having a separate partition for the container (Docker)",
    "weakness_id_read_only": "P1105",
    "weakness": "db4bedd5-68c0-4693-92cb-04314666af0c",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2018-07-18T12:30:57.240000-04:00",
    "last_updated": "2021-06-25T14:47:50.494000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1234",
    "universal_id": "7e95eccf-8c06-42a9-bb90-584fb5599353",
    "countermeasure_name": "Only allow trusted users to control the Docker daemon (Docker)",
    "countermeasure_solution": "Remove any users from the 'docker' group that are not trusted. Additionally, do not create a mapping of sensitive directories on the host to the container volumes. The impact is that the rights to build and execute containers as a normal user would be restricted. The Docker daemon currently requires 'root' privileges. If the user are added to the 'docker' group, it gives them full 'root' access rights.",
    "weakness_title_read_only": "Privilege escalation through allowing untrusted users to control the Docker daemon (Docker)",
    "weakness_id_read_only": "P1106",
    "weakness": "5ef7e6e3-54ee-4034-b427-ec9677d2ef52",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2018-07-18T12:30:57.345000-04:00",
    "last_updated": "2021-06-25T14:47:46.228000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1235",
    "universal_id": "6ecd038e-6353-4cf8-89ee-cd2017bd8140",
    "countermeasure_name": "Test that only trusted users can control the Docker daemon (Docker)",
    "countermeasure_solution": "Execute the following command on the docker host and ensure that only trusted users are members of the 'docker' group:\n\n          getent group docker",
    "weakness_title_read_only": "Privilege escalation through allowing untrusted users to control the Docker daemon (Docker)",
    "weakness_id_read_only": "P1106",
    "weakness": "5ef7e6e3-54ee-4034-b427-ec9677d2ef52",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2018-07-18T12:30:57.365000-04:00",
    "last_updated": "2021-06-25T14:47:47.191000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1236",
    "universal_id": "7751da06-7bf2-49d5-890f-b98cf7399c5b",
    "countermeasure_name": "Audit the Docker daemon and its files (Docker)",
    "countermeasure_solution": "Follow these guidelines to audit Docker daemon and important Docker files and directories:\n\n- Audit Docker daemon.\n- Audit /var/lib/docker directory: It holds all the information about containers.\n- Audit /etc/docker directory: It holds various certificates and keys used for TLS communication between Docker daemon and Docker client.\n- Audit docker.service file: The docker.service file might be present if the daemon parameters have been changed by an administrator. It holds various parameters for Docker daemon.\n- Audit docker.socket file: It holds various parameters for Docker daemon socket.\n- Audit /etc/default/docker file: It holds various parameters for Docker daemon.\n- Audit /etc/docker/daemon.json file: It holds various parameters for Docker daemon.\n- Audit /usr/bin/docker-containerd file: Docker now relies on `containerd` and `runC` to spawn containers.\n- Audit /usr/bin/docker-runc file: Docker now relies on `containerd` and `runC` to spawn containers.\n\n__Note 1:__ Auditing generates quite big log files. Ensure to rotate and archive them periodically. Also, create a separate partition of audit to avoid filling root file system.\n\n__Note 2:__ By default, Docker related files and directories are not audited. Some of these files may not be available on the system. In that case, the recommendations are not applicable.",
    "weakness_title_read_only": "Lack of auditing for the Docker daemon and its files (Docker)",
    "weakness_id_read_only": "P1107",
    "weakness": "f7ec5a1f-0d3c-4bf8-a6c0-219d00803d0c",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2018-07-18T12:30:57.572000-04:00",
    "last_updated": "2021-06-25T14:47:57.427000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1237",
    "universal_id": "132affbe-7d9f-431c-b46e-e8137957a7bb",
    "countermeasure_name": "Test that the Docker daemon and its files are audited (Docker)",
    "countermeasure_solution": " - Verify that there is an audit rule for the Docker daemon. For example, execute this command:\n\n        auditctl -l | grep /usr/bin/docker\n\nThis should list a rule for the Docker daemon.\n\n- Verify that there is an audit rule corresponding to /var/lib/docker directory. For example, execute this command:\n\n        auditctl -l | grep /var/lib/docker\n\nThis should list a rule for /var/lib/docker directory.\n\n- Verify that there is an audit rule corresponding to /etc/docker directory. For example, execute this command:\n\n        auditctl -l | grep /etc/docker\n\nThis should list a rule for /etc/docker directory.\n\n- Find out the file location:\n\n        systemctl show -p FragmentPath docker.service\n \nIf the file does not exist, this recommendation is not applicable. If the file exists, verify that there is an audit rule corresponding to the file. For example, execute this command:\n\n        auditctl -l | grep docker.service\n\nThis should list a rule for docker.service as per its location.\n\n- Find out the file location:\n\n        systemctl show -p FragmentPath docker.socket\n\nIf the file does not exist, this recommendation is not applicable. If the file exists, verify that there is an audit rule corresponding to the file. For example, execute the this command:\n\n        auditctl -l | grep docker.socket\n\nThis should list a rule for docker.socket as per its location.\n\n- Verify that there is an audit rule corresponding to /etc/default/docker file. For example, execute this command:\n\n        auditctl -l | grep /etc/default/docker\n\nThis should list a rule for /etc/default/docker file.\n\n- Verify that there is an audit rule corresponding to /etc/docker/daemon.json file. For example, execute this command:\n\n        auditctl -l | grep /etc/docker/daemon.json\n\n This should list a rule for /etc/docker/daemon.json file.\n\n- Verify that there is an audit rule corresponding to /usr/bin/docker-containerd file. For example, execute this command:\n\n        auditctl -l | grep /usr/bin/docker-containerd\n\n \n\n This should list a rule for /usr/bin/docker-containerd file.\n\n- Verify that there is an audit rule corresponding to /usr/bin/docker-runc file. For example, execute this command:\n\n        auditctl -l | grep /usr/bin/docker-runc\n\n \nThis should list a rule for /usr/bin/docker-runc file.",
    "weakness_title_read_only": "Lack of auditing for the Docker daemon and its files (Docker)",
    "weakness_id_read_only": "P1107",
    "weakness": "f7ec5a1f-0d3c-4bf8-a6c0-219d00803d0c",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2018-07-18T12:30:57.646000-04:00",
    "last_updated": "2021-06-25T14:47:58.209000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1238",
    "universal_id": "7cbdfb48-c572-4d06-9be9-92816a59187c",
    "countermeasure_name": "Avoid image and container sprawl (Docker)",
    "countermeasure_solution": "Avoid container and image sprawl and keep the number of containers on a host to a manageable total:\n\n- Avoid image sprawl: Do not keep too many container images on the same host. Use only tagged images as appropriate.\n\n- Avoid container sprawl: Do not keep too many containers on the same host.\n\n__Note:__ If you keep very few containers per host, then perhaps you are not efficiently utilizing your host resources.",
    "weakness_title_read_only": "Possibility of image and container sprawl (Docker)",
    "weakness_id_read_only": "P1108",
    "weakness": "2b1144d0-c107-481b-9628-90374e4dd07a",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2018-07-18T12:30:58.060000-04:00",
    "last_updated": "2021-06-25T14:47:56.531000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1239",
    "universal_id": "0abb2330-7cec-4c02-acf6-017411bb63cf",
    "countermeasure_name": "Test that image and container sprawl are avoided (Docker)",
    "countermeasure_solution": "Complete the tests in the following two parts:\n\n## Part 1\n\nSTEP 1: Make a list of all image IDs that are currently instantiated by running this command:\n\n    docker images --quiet | xargs docker inspect --format '{{ .Id }}: Image={{ .Config.Image }}'\n\nSTEP 2: List all the images present on the system by running this command:\n\n    docker images\n\nSTEP 3: Compare the list of image IDs populated from Step 1 and Step 2 and find the images that are currently not being instantiated. If any such unused or old images are found, discuss the need to keep such images on the system, with the system administrators. If such a need is not justified enough, then this test fails.\n\n##Part 2\n\nExecute docker info to find the total number of containers you have on the host:\n\n    docker info --format '{{ .Containers }}'\n\nNow, execute the below commands to find the total number of containers that are actually running or in the stopped state on the host:\n\n    docker info --format '{{ .ContainersStopped }}'\n    docker info --format '{{ .ContainersRunning }}'\n\nIf the difference between the number of containers that are stopped on the host and the number of containers that are actually running on the host is large (say 25 or more), then perhaps, the containers are sprawled on the host and therefore this test fails.",
    "weakness_title_read_only": "Possibility of image and container sprawl (Docker)",
    "weakness_id_read_only": "P1108",
    "weakness": "2b1144d0-c107-481b-9628-90374e4dd07a",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2018-07-18T12:30:58.078000-04:00",
    "last_updated": "2021-06-25T14:47:56.660000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1242",
    "universal_id": "63739094-8f93-45bf-8d7a-561b91749bed",
    "countermeasure_name": "Configure authentication securely (Kubernetes)",
    "countermeasure_solution": "Configure authentication securely in _API server_:\n\n- Disable anonymous requests to the API server and ensure that the `--anonymous-auth` argument is set to false.\n\n- Do not use token based authentication. Ensure that the `--token-auth-file` parameter is not set. Configure and use alternate authentication mechanisms such as certificates. Static token based authentication could not be used.\n\nConfigure authentication securely in _Kubelet server_:\n\n- Disable anonymous requests to the Kubelet server. Ensure that the `--anonymous-auth` argument is set to false.",
    "weakness_title_read_only": "Improper authentication configuration (Kubernetes)",
    "weakness_id_read_only": "P1110",
    "weakness": "52ac467f-af37-4fb4-8e50-83fb4553accb",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2018-09-24T13:28:52.254000-04:00",
    "last_updated": "2021-09-11T21:03:56.777000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1243",
    "universal_id": "f0066d0c-bb0c-4504-adee-b88cdeb4e549",
    "countermeasure_name": "Verify that authentication is securely configured (Kubernetes)",
    "countermeasure_solution": "Follow the instruction below to verify that authentication is configured securely:\n\n- Run the following command on the master node: ``` ps -ef | grep kube-apiserver ``` Verify that the `--anonymous-auth` argument is set to `false`.\n\n- Run the following command on the master node: ``` ps -ef | grep kube-apiserver ``` Verify that the `--insecure-allow-any-token` argument does not exist.\n\n- Run the following command on the master node: ``` ps -ef | grep kube-apiserver ``` Verify that the `--token-auth-file` argument does not exist.\n\n- Run the following command on each node: ``` ps -ef | grep kubelet ``` Verify that the `--anonymous-auth` argument is set to `false`.",
    "weakness_title_read_only": "Improper authentication configuration (Kubernetes)",
    "weakness_id_read_only": "P1110",
    "weakness": "52ac467f-af37-4fb4-8e50-83fb4553accb",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2018-09-24T13:28:52.308000-04:00",
    "last_updated": "2021-09-11T21:12:40.359000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1244",
    "universal_id": "8f51c04b-6cb8-4202-9232-109c3e6a4880",
    "countermeasure_name": "Do not set insecure bind address and port (Kubernetes)",
    "countermeasure_solution": "Ensure that the `--insecure-bind-address` argument is not set. Do not bind to non-loopback insecure addresses.\n\nDo not bind to insecure port. Ensure that the` --insecure-port` argument is set to 0.\n\nAll components that use the API must connect via the secured port, authenticate themselves, and be authorized to use the API. This includes: `- kube-controller-manager`, `- kube-proxy`, `- kube-scheduler`, `- kubelets`.\n\nDo not disable the secure port. Ensure that the `--secure-port` argument is not set to 0.\n\nSet the _apiserver_ up with the right TLS certificates. Ensure that the `--insecure-bind-address` argument is not set. Do not bind to insecure addresses.",
    "weakness_title_read_only": "Insecure bind address and port (Kubernetes)",
    "weakness_id_read_only": "P1111",
    "weakness": "44aeb1a3-8601-4206-a323-921a02bb8963",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2018-09-24T13:28:52.557000-04:00",
    "last_updated": "2021-09-13T16:48:08.735000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1245",
    "universal_id": "55013326-82c4-4bcf-9529-15ee271835b3",
    "countermeasure_name": "Verify that insecure bind address and port are not set (Kubernetes)",
    "countermeasure_solution": "Follow the instruction below to verify insecure bind address and port are not set:\n\n- Run the following command on the master node: ``` ps -ef | grep kube-apiserver ``` Verify that the `--insecure-bind-address` argument does not exist or is set to 127.0.0.1.\n\n- Run the following command on the master node: ``` ps -ef | grep kube-apiserver ``` Verify that the `--insecure-port` argument is set to `0`.\n\n- Run the following command on the master node: ``` ps -ef | grep kube-apiserver ``` Verify that the `--secure-port` argument is either not set or is set to an integer value between 1 and 65535.",
    "weakness_title_read_only": "Insecure bind address and port (Kubernetes)",
    "weakness_id_read_only": "P1111",
    "weakness": "44aeb1a3-8601-4206-a323-921a02bb8963",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2018-09-24T13:28:52.595000-04:00",
    "last_updated": "2021-09-13T16:50:04.160000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1246",
    "universal_id": "6dad03f9-6d08-4abf-8416-37f158b04601",
    "countermeasure_name": "Disable profiling (Kubernetes)",
    "countermeasure_solution": "Disable profiling, if not needed. If you are not experiencing any bottlenecks and do not need the profiler for troubleshooting purposes, it is recommended to turn it off to reduce the potential attack surface.\n\nEnsure that the `--profiling` argument is set to false. \n\nProfiling information would not be available if it's disabled.",
    "weakness_title_read_only": "Enabled profiling (Kubernetes)",
    "weakness_id_read_only": "P1112",
    "weakness": "b4232ee5-1bf5-4f7f-8b4f-eb7c83232871",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2018-09-24T13:28:52.807000-04:00",
    "last_updated": "2021-09-13T17:02:51.755000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1247",
    "universal_id": "8f59264b-06e7-49a5-a8e8-4f9da644e6fc",
    "countermeasure_name": "Verify that profiling is disabled (Kubernetes)",
    "countermeasure_solution": "Follow the instruction below to verify that profiling is disabled:\n\n- Run the following command on the master node: ``` ps -ef | grep kube-apiserver ``` Verify that the `--profiling` argument is set to `false`.\n\n- Run the following command on the master node: ``` ps -ef | grep kube-scheduler ``` Verify that the `--profiling` argument is set to `false`.\n\n- Run the following command on the master node: ``` ps -ef | grep kube-controller-manager ``` Verify that the `--profiling` argument is set to `false`.",
    "weakness_title_read_only": "Enabled profiling (Kubernetes)",
    "weakness_id_read_only": "P1112",
    "weakness": "b4232ee5-1bf5-4f7f-8b4f-eb7c83232871",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2018-09-24T13:28:52.841000-04:00",
    "last_updated": "2021-09-13T17:05:37.825000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1250",
    "universal_id": "f4965d44-897a-489d-8c02-50c33056b202",
    "countermeasure_name": "Configure admission control policy securely (Kubernetes)",
    "countermeasure_solution": " - Ensure that the admission control policy is not set to  _AlwaysAdmit_:\n\n    Do not allow all requests. Only requests explicitly allowed by the admissions control policy should be served.\n\n- Ensure that the admission control policy is set to  _AlwaysPullImages_:\n\n    Setting admission control policy to `AlwaysPullImages` forces every new pod to pull the required images every time. In a multitenant cluster, users can be assured that their private images can only be used by those who have the credentials to pull them. Once an image has been pulled to a node, any pod from any user can use it simply by knowing the image's name, without any authorization check against the image ownership. When this plug-in is enabled, images are always pulled prior to starting containers, which means valid credentials are required.\n\n - Ensure that the admission control plugin  _SecurityContextDeny_ is set if  _PodSecurityPolicy_ is not used\n\n   The  SecurityContextDeny admission controller can be used to deny pods which make use of some  SecurityContext fields which could allow for privilege escalation in the cluster. This should be used where  PodSecurityPolicy is not in place within the cluster. This admission controller should only be used where Pod Security Policies cannot be used on the cluster, as it can interact poorly with certain Pod Security Policies.\n\n- Ensure that the admission control policy is set to `NamespaceLifecycle`:\n\n    Reject creating objects in a namespace that is undergoing termination. Setting admission control policy to `NamespaceLifecycle` ensures that objects cannot be created in non-existent namespaces and that namespaces undergoing termination are not used for creating the new objects. This is recommended to enforce the integrity of the namespace termination process and also for the availability of the newer objects.\n\n\n- Ensure that the admission control policy is set to `PodSecurityPolicy`:\n\n    Reject creating pods that do not match Pod Security Policies. A Pod Security Policy is a cluster-level resource that controls the actions that a pod can perform and what it has the ability to access. The `PodSecurityPolicy` objects define a set of conditions that a pod must run with in order to be accepted into the system. Pod Security Policies are comprised of settings and strategies that control the security features a pod has access to and hence this must be used to control pod access permissions.\n\n    The policy objects must be created and granted before pod creation would be allowed.\n\n- Ensure that the admission control policy is set to `ServiceAccount`:\n\n    Automate service accounts management. When you create a pod, if you do not specify a service account, it is automatically assigned the `default` service account in the same namespace. You should create your own service account and let the API server manage its security tokens.\n\n    The `ServiceAccount` objects must be created and granted before pod creation would be allowed.\n\n- Ensure that the admission control policy is not set to `AlwaysAdmit`:\n\n    Do not allow all requests. Only requests explicitly allowed by the admissions control policy would be served.\n\n- Reject creating objects in a namespace that is undergoing termination. Ensure that the admission control policy is set to `NamespaceLifecycle`: Setting admission control policy to `NamespaceLifecycle` ensures that the namespaces undergoing termination are not used for creating the new objects. This is recommended to enforce the integrity of the namespace termination process and also for the availability of the newer objects.",
    "weakness_title_read_only": "Improper admission control policy (Kubernetes)",
    "weakness_id_read_only": "P1114",
    "weakness": "581bb874-138f-4de8-b5ac-360d610c10f7",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2018-09-24T13:28:53.082000-04:00",
    "last_updated": "2021-10-01T09:16:09.403000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1251",
    "universal_id": "d7a0db51-3b04-4a07-9639-2dd12713bd5d",
    "countermeasure_name": "Verify that admission control policy is configured securely (Kubernetes)",
    "countermeasure_solution": "Follow the instruction below to verify that admission control policy is configured securely:\n\n- Run the following command on the master node: ``` ps -ef | grep kube-apiserver ``` Verify that the `--admission-control` argument is set to a value that does not include `AlwaysAdmit`.\n\n- Run the following command on the master node: ``` ps -ef | grep kube-apiserver ``` Verify that the `--admission-control` argument is set to a value that includes `AlwaysPullImages`.\n\n\n- Run the following command on the master node: ``` ps -ef | grep kube-apiserver ``` Verify that the --enable-admission-plugins argument is set to a value that includes SecurityContextDeny, if PodSecurityPolicy is not included.\n\n- Run the following command on the master node: ``` ps -ef | grep kube-apiserver ``` Verify that the `--admission-control` argument is set to a value that includes `NamespaceLifecycle`.\n\n- Run the following command on the master node: ``` ps -ef | grep kube-apiserver ``` Verify that the `--admission-control` argument is set to a value that includes `PodSecurityPolicy`.\n\n- Run the following command on the master node: ``` ps -ef | grep kube-apiserver ``` Verify that the `--admission-control` argument is set to a value that includes `ServiceAccount`.",
    "weakness_title_read_only": "Improper admission control policy (Kubernetes)",
    "weakness_id_read_only": "P1114",
    "weakness": "581bb874-138f-4de8-b5ac-360d610c10f7",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2018-09-24T13:28:53.135000-04:00",
    "last_updated": "2021-09-13T16:30:37.044000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1252",
    "universal_id": "ccaa63dd-b83f-477e-98c6-f754c5bc54cb",
    "countermeasure_name": "Configure logs securely (Kubernetes)",
    "countermeasure_solution": "Auditing Kubernetes _apiserver_ provides a security-relevant chronological set of records documenting the sequence of activities that have affected system by individual users, administrators or other components of the system. \n\n- Enable auditing on Kubernetes apiserver and set the desired audit log path as appropriate. Ensure that the `--audit-log-path` argument is set as appropriate. \n\n- Set your audit log retention period to 30 days or as per your business requirements. Ensure that the `--audit-log-maxage` argument is set to _30_ or as appropriate.\n\n    Retaining logs for at least 30 days ensures that you can go back in time and investigate or correlate any events. \n\n- Kubernetes automatically rotates the log files. Retaining old log files ensures that you would have sufficient log data available for carrying out any investigation or correlation. For example, if you have set the file size of 100 MB and the number of old log files to keep as 10, you would approximately have 1 GB of log data that you could potentially use for your analysis. Retain 10 or an appropriate number of old log files. \n\n    - Ensure that the `--audit-log-maxbackup` argument is set to _10_ or as appropriate.\n\n    - Rotate log files on reaching 100 MB or as appropriate. Ensure that the `--audit-log-maxsize` argument is set to 100 or as appropriate:\n \n- Do not limit event creation. Ensure that the `--event-qps` argument is set to _0_ or a level that ensures appropriate event capture\n   You might need to scale up your event storage and processing capabilities.\n\n- Ensure that a minimal audit policy is created.\nKubernetes can audit the details of requests made to the API server. The `--audit-policy-file` flag must be set for this logging to be enabled.\n\n- Ensure that the audit policy created for the cluster covers key security concerns.\nSecurity audit logs should cover access and modification of key resources in the cluster, to enable them to form an effective part of a security environment.",
    "weakness_title_read_only": "Improper logs configuration (Kubernetes)",
    "weakness_id_read_only": "P1115",
    "weakness": "a16d7d68-abe5-4bda-9f08-e567be64feb1",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "deployment",
    "created": "2018-09-24T13:28:53.496000-04:00",
    "last_updated": "2021-10-01T09:20:46.410000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1253",
    "universal_id": "e2fe27fa-35b0-4071-a05d-290343756716",
    "countermeasure_name": "Verify that logs are configured securely (Kubernetes)",
    "countermeasure_solution": "Follow the instruction below for verifying whether logs are configured securely in Kubernetes:\n\n- Run the following command on the master node: ``` ps -ef | grep kube-apiserver ``` Verify that the `--audit-log-path` argument is set as appropriate.\n\n- Run the following command on the master node: ``` ps -ef | grep kube-apiserver ``` Verify that the `--audit-log-maxage` argument is set to '30' or as appropriate.\n\n- Run the following command on the master node: ``` ps -ef | grep kube-apiserver ``` Verify that the `--audit-log-maxbackup` argument is set to `10` or as appropriate.\n\n- Run the following command on the master node: ``` ps -ef | grep kube-apiserver ``` Verify that the `--audit-log-maxsize` argument is set to `100` or as appropriate.\n\n- Run the following command on each node: ``` ps -ef | grep kubelet ``` Verify that `--event-qps` argument exists and is set to `0`or a level which ensures appropriate event capture.\n\n- Run the following command on one of the cluster master nodes:  ``` ps -ef | grep kube-apiserver```  Verify that the ` --audit-policy-file ` is set. Review the contents of the file specified and ensure that it contains a valid audit policy.\n\n- Review the audit policy provided for the cluster and ensure that it covers at least the following areas:\n    - Access to Secrets managed by the cluster. Care should be taken to only log Metadata for requests to Secrets, ConfigMaps, and TokenReviews, in order to avoid the risk of logging sensitive data.\n    - Modification of `pod` and deployment objects.\n    - Use of `pods/exec`, `pods/portforward `, `pods/proxy` and `services/proxy`.\n\nFor most requests, minimally logging at the Metadata level is recommended (the most basic level of logging).",
    "weakness_title_read_only": "Improper logs configuration (Kubernetes)",
    "weakness_id_read_only": "P1115",
    "weakness": "a16d7d68-abe5-4bda-9f08-e567be64feb1",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2018-09-24T13:28:53.556000-04:00",
    "last_updated": "2021-10-01T09:33:59.650000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1254",
    "universal_id": "1c4e932f-f513-4a76-bd2f-b0d700edbdec",
    "countermeasure_name": "Do not always authorize all requests (Kubernetes)",
    "countermeasure_solution": "The _apiserver_, by default, allows all requests. Restrict this behavior to only allow the authorization modes that you explicitly use in your environment. For example, if you don't use REST APIs in your environment, it is a good security best practice to switch off that capability.\n\n- Ensure that the` --authorization-mode` argument is not set to _AlwaysAllow_:\n Do not always authorize all requests and only allow explicitly authorized requests.\n\n_Kubelets_, by default, allow all authenticated requests (even anonymous ones) without needing explicit authorization checks from the apiserver. \n\n- Ensure that the `--authorization-mode` argument is not set to _AlwaysAllow_:\n Do not allow all requests. Enable explicit authorization. \n\n- Ensure that the `--authorization-mode` argument is not set to _AlwaysAllow_:\n Do not always authorize all requests. Only authorized requests will be served.",
    "weakness_title_read_only": "Always authorizing all requests (Kubernetes)",
    "weakness_id_read_only": "P1116",
    "weakness": "8302c1ce-152e-43cd-85ba-fa3d857b8193",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2018-09-24T13:28:53.833000-04:00",
    "last_updated": "2021-09-13T14:58:01.003000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1255",
    "universal_id": "92f52fd0-64ba-4c50-996b-6ecc99ba1583",
    "countermeasure_name": "Verify that all requests are always authorized (Kubernetes)",
    "countermeasure_solution": "Follow the instruction below to check whether all requests are not always allowed:\n\n- Run the following command on the master node: ``` ps -ef | grep kube-apiserver ``` Verify that the `--authorization-mode` argument exists and is not set to `AlwaysAllow`.\n\n- Run the following command on each node: ``` ps -ef | grep kubelet ``` Verify that the `--authorization-mode` argument exists and is not set to `AlwaysAllow`.",
    "weakness_title_read_only": "Always authorizing all requests (Kubernetes)",
    "weakness_id_read_only": "P1116",
    "weakness": "8302c1ce-152e-43cd-85ba-fa3d857b8193",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2018-09-24T13:28:53.855000-04:00",
    "last_updated": "2021-09-13T13:39:29.676000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1256",
    "universal_id": "b97a61a4-ac6c-497a-9068-bed6ac2bbf5b",
    "countermeasure_name": "Configure HTTPS securely (Kubernetes)",
    "countermeasure_solution": "Use in-transit encryption for any communication between the _apiserver_ and _kubelets_.\n\n- Ensure that the `--kubelet-https` argument is set to true:\n Use https for kubelet connections.\n\n- Configure the Kubelets to serve only HTTPS traffic. \n\n- Configure TLS on apiserver as well as kubelets.\n\n- Set up certificate-based kubelet authentication to ensure that the apiserver authenticates itself to kubelets when submitting requests. \n\n    - Ensure that the` --kubelet-certificate-authority` argument is set as appropriate:\n       Verify kubelet's certificate before establishing connection.\n\n    -Ensure that the `--kubelet-client-certificate` and `--kubelet-client-key` arguments are set as appropriate.\n\n    - Enable certificate based kubelet authentication.\n\n _API server_ communication contains sensitive parameters that should remain encrypted in transit. \n\n- Configure the API server to serve only HTTPS traffic.\n\n\n If `--client-ca-file` argument is set, any request presenting a client certificate signed by one of the authorities in the `client-ca-file` is authenticated with an identity corresponding to the CommonName of the client certificate.\n\n- Ensure that the `--tls-cert-file` and `--tls-private-key-file` arguments are set as appropriate:\n Setup TLS connection on the API server.\n\n - Configure TLS and client certificate authentication for your Kubernetes cluster deployment.\n\n- Ensure that the `--client-ca-file` argument is set as appropriate.\n \n- Ensure that the` --root-ca-`file argument is set as appropriate:\n Allow pods to verify the API server's serving certificate before establishing connections.\n\n - setup and maintain root certificate authority file.\n\n_etcd_ is a highly-available key value store used by Kubernetes deployments for persistent storage of all of its REST API objects. These objects are sensitive in nature and:\n\n- should not be available to unauthenticated clients. You should enable the client authentication via valid certificates to secure the access to the *etcd* service. \n- should be encrypted in transit and also amongst peers in the *etcd* clusters.\n- should be accessible only by authenticated *etcd* peers in the *etcd* cluster.Hence, do not use self-signed certificates for authentication.\n\n- Ensure that the `--etcd-certfile` and `--etcd-keyfile` arguments are set as appropriate:\n etcd should be configured to make use of TLS encryption for client connections.\n\n - Configure TLS and client certificate authentication for etcd.\n\n- Ensure that the `--cert-file` and `--key-file` arguments are set as appropriate.\n \n- Ensure that the `--client-cert-auth` argument is set to true:\n Enable client authentication on etcd service.\n\n \nAll clients attempting to access the *etcd* server will require a valid client certificate.\n\n- Ensure that the `--auto-tls` argument is not set to true:\n Do not use self-signed certificates for TLS. Clients will not be able to use self-signed certificates for TLS.\n\n- Ensure that the `--peer-cert-file` and `--peer-key-file` arguments are set as appropriate:\n etcd should be configured to make use of TLS encryption for peer connections.\n\n  etcd cluster peers would need to set up TLS for their communication.\n\n- Ensure that the `--peer-client-cert-auth` argument is set to true:\n *etcd* should be configured for peer authentication.\n\n All peers attempting to communicate with the etcd server will require a valid client certificate for authentication.\n\n- Ensure that the `--peer-auto-tls` argument is not set to true:\n Do not use automatically generated self-signed certificates for TLS connections between peers.\n\n- Ensure that the `--client-ca-file` argument is set as appropriate:\n Enable Kubelet authentication using certificates.\n\n- Ensure that the `--tls-cert-file` and `--tls-private-key-file` arguments are set as appropriate:\n Setup TLS connection on the Kubelets.",
    "weakness_title_read_only": "Unsecure HTTPS configuration (Kubernetes)",
    "weakness_id_read_only": "P1117",
    "weakness": "5a9734d8-45f1-4fa2-8954-f083a00080a6",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2018-09-24T13:28:54.086000-04:00",
    "last_updated": "2021-09-13T16:04:39.179000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1257",
    "universal_id": "0c03fcc0-7104-43d6-b638-eb104f336b67",
    "countermeasure_name": "Verify that HTTPS is configured securely (Kubernetes)",
    "countermeasure_solution": "Follow the instruction below for verifying that HTTPS is configured securely:\n\n- Run the following command on the master node: ``` ps -ef | grep kube-apiserver ``` Verify that the `--kubelet-https` argument either does not exist or is set to `true`.\n\n- Run the following command on the master node: ``` ps -ef | grep kube-apiserver ``` Verify that the `--kubelet-certificate-authority` argument exists and is set as appropriate.\n\n- Run the following command on the master node: ``` ps -ef | grep kube-apiserver ``` Verify that the `--kubelet-client-certificate` and `--kubelet-client-key` arguments exist and they are set as appropriate.\n\n- Run the following command on the master node: ``` ps -ef | grep kube-apiserver ``` Verify that the `--tls-cert-file` and `--tls-private-key-file` arguments exist and they are set as appropriate.\n\n- Run the following command on the master node: ``` ps -ef | grep kube-apiserver ``` Verify that the `--client-ca-file` argument exists and it is set as appropriate.\n\n- Run the following command on the master node: ``` ps -ef | grep kube-controller-manager ``` Verify that the `--root-ca-file` argument exists and is set to a certificate bundle file containing the root certificate for the API server's serving certificate.\n\n- Run the following command on the etcd server node ``` ps -ef | grep etcd ``` Verify that the `--cert-file` and the `--key-file` arguments are set as appropriate.\n\n- Run the following command on the etcd server node: ``` ps -ef | grep etcd ``` Verify that the `--client-cert-auth` argument is set to `true`.\n\n- Run the following command on the etcd server node: ``` ps -ef | grep etcd ``` Verify that if the `--auto-tls` argument exists, it is not set to `true`.\n\n- Run the following command on the etcd server node: ``` ps -ef | grep etcd ``` Verify that the `--peer-cert-file` and `--peer-key-file` arguments are set as appropriate. **Note:** This recommendation is applicable only for etcd clusters. If you are using only one etcd server in your environment then this recommendation is not applicable.\n\n- Run the following command on the etcd server node: ``` ps -ef | grep etcd ``` Verify that the `--peer-client-cert-auth` argument is set to `true`. **Note:** This recommendation is applicable only for etcd clusters. If you are using only one etcd server in your environment then this recommendation is not applicable.\n\n- Run the following command on the etcd server node: ``` ps -ef | grep etcd ``` Verify that if the `--peer-auto-tls` argument exists, it is not set to `true`. **Note:** This recommendation is applicable only for etcd clusters. If you are using only one etcd server in your environment then this recommendation is not applicable.\n\n- Run the following command on each node: ``` ps -ef | grep kubelet ``` Verify that the `--client-ca-file` argument exists and is set as appropriate.\n\n- Run the following command on each node: ``` ps -ef | grep kubelet ``` Verify that the `--tls-cert-file` and `--tls-private-key-file` arguments exist and they are set as appropriate.",
    "weakness_title_read_only": "Unsecure HTTPS configuration (Kubernetes)",
    "weakness_id_read_only": "P1117",
    "weakness": "5a9734d8-45f1-4fa2-8954-f083a00080a6",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2018-09-24T13:28:54.165000-04:00",
    "last_updated": "2021-09-13T16:09:11.565000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1258",
    "universal_id": "ce60d22d-696d-47e2-bef7-d17e2ec26ea6",
    "countermeasure_name": "Configure service account securely (Kubernetes)",
    "countermeasure_solution": "To ensure that the keys for service account tokens can be rotated as needed, use a separate public/private key pair for signing service account tokens. Specify the public key to the apiserver with `--service-account-key-file`.\n\n- Ensure that the `--service-account-lookup` argument is set to true:\n\n    Validate service account before validating token.\n\n- Ensure that the `--service-account-key-file` argument is set as appropriate:\n\n    Explicitly set a service account public key file for service accounts on the _apiserver_. \n\n    By default, if no `--service-account-key-file` is specified to the apiserver, it uses the private key from the TLS serving certificate to verify service account tokens. \n\n- Ensure that the `--service-account-private-key-file` argument is set as appropriate:\n\n    Explicitly set a service account private key file for service accounts on the controller manager.\n\n    The controller manager creates a service account per controller in the `kube-system` namespace, generates a credential for it, and builds a dedicated API client with that service account credential for each controller loop to use. \n\n- Ensure that the `--use-service-account-credentials` argument is set to true:\n\n    Setting the `--use-service-account-credentials` to `true` runs each control loop within the controller manager using a separate service account credential. When used in combination with RBAC, this ensures that the control loops run with the minimum permissions required to perform their intended tasks. Use individual service account credentials for each controller.\n\n    Whatever authorizer is configured for the cluster, it must grant sufficient permissions to the service accounts to perform their intended tasks. When using the RBAC authorizer, those roles are created and bound to the appropriate service accounts in the `kube-system` namespace automatically with default roles and rolebindings that are auto-reconciled on startup. If using other authorization methods (ABAC, Webhook, etc), the cluster deployer is responsible for granting appropriate permissions to the service accounts (the required permissions can be seen by inspecting the `controller-roles.yaml` and `controller-role-bindings.yaml` files for the RBAC roles.\n\n    You would need to securely maintain the key file and rotate the keys based on your organization's key rotation policy.\n\n - Ensure that the `--service-account-lookup` argument is set to true:",
    "weakness_title_read_only": "Unsecure service account configuration (Kubernetes)",
    "weakness_id_read_only": "P1118",
    "weakness": "dbb987cd-1c40-4879-95c2-e0be9c722581",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2018-09-24T13:28:54.466000-04:00",
    "last_updated": "2022-09-01T12:16:57.266000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1259",
    "universal_id": "a9d3d073-92f3-40d6-bca0-3772846a9b07",
    "countermeasure_name": "Verify that service account is securely configured (Kubernetes)",
    "countermeasure_solution": "Follow the instruction below to verify that service account is securely configured:\n\n- Run the following command on the master node: ``` ps -ef | grep kube-apiserver ``` Verify that the `--service-account-lookup` argument exists and is set to `true`.\n\n- Run the following command on the master node: ``` ps -ef | grep kube-apiserver ``` Verify that the `--service-account-key-file` argument exists and is set as appropriate.\n\n- Run the following command on the master node: ``` ps -ef | grep kube-controller-manager ``` Verify that the `--use-service-account-credentials` argument is set to `true`.\n\n- Run the following command on the master node: ``` ps -ef | grep kube-controller-manager ``` Verify that the `--service-account-private-key-file` argument is set as appropriate.",
    "weakness_title_read_only": "Unsecure service account configuration (Kubernetes)",
    "weakness_id_read_only": "P1118",
    "weakness": "dbb987cd-1c40-4879-95c2-e0be9c722581",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2018-09-24T13:28:54.503000-04:00",
    "last_updated": "2021-09-14T17:59:14.063000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1260",
    "universal_id": "f60bc22a-cebf-450a-822c-6bbc49f89d5c",
    "countermeasure_name": "Configure etcd keys and certificates securely (Kubernetes)",
    "countermeasure_solution": "Configure etcd to make use of TLS encryption for client connections.\n\n- Set the --etcd-certfile and --etcd-keyfile arguments as appropriate.\n- Set the --etcd-cafile argument as appropriate.",
    "weakness_title_read_only": "Unsecure configuration of etcd keys and certificates (Kubernetes)",
    "weakness_id_read_only": "P1119",
    "weakness": "806fb6c0-efae-4fa5-a9da-19f1fd9e1423",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "deployment",
    "created": "2018-09-24T13:28:54.691000-04:00",
    "last_updated": "2021-09-15T11:51:33.162000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1261",
    "universal_id": "180ba696-9db6-4e4c-b788-04c8a8dd5cca",
    "countermeasure_name": "Verify that etcd keys and certificates are configured correctly (Kubernetes)",
    "countermeasure_solution": "Run the following command on the master node:\n\n    ps -ef | grep kube-apiserver\n\n- Verify that the `--etcd-certfile` and `--etcd-keyfile` arguments exist and they are set as appropriate.\n- Verify that the `--etcd-cafile` argument exists and it is set as appropriate.",
    "weakness_title_read_only": "Unsecure configuration of etcd keys and certificates (Kubernetes)",
    "weakness_id_read_only": "P1119",
    "weakness": "806fb6c0-efae-4fa5-a9da-19f1fd9e1423",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "testing",
    "created": "2018-09-24T13:28:54.709000-04:00",
    "last_updated": "2021-09-15T11:56:58.825000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1262",
    "universal_id": "ebd294f8-ca57-4c32-abce-58917ed54041",
    "countermeasure_name": "Set --terminated-pod-gc-threshold argument as appropriate (Kubernetes)",
    "countermeasure_solution": "Activate garbage collector on pod termination and based on your system resources and tests, choose an appropriate threshold value.",
    "weakness_title_read_only": "Incorrect --terminated-pod-gc-threshold argument (Kubernetes)",
    "weakness_id_read_only": "P1120",
    "weakness": "d56927e9-bb89-44ca-b1c1-0762b7007f58",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2018-09-24T13:28:54.957000-04:00",
    "last_updated": "2021-09-15T14:51:57.710000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1263",
    "universal_id": "a33568f9-448f-4b47-8517-0c07535271d1",
    "countermeasure_name": "Verify that the --terminated-pod-gc-threshold argument is set as appropriate (Kubernetes)",
    "countermeasure_solution": "Run the following command on the master node:\n\n    ps -ef | grep kube-controller-manager\n\nVerify that the `--terminated-pod-gc-threshold` argument is set as appropriate.",
    "weakness_title_read_only": "Incorrect --terminated-pod-gc-threshold argument (Kubernetes)",
    "weakness_id_read_only": "P1120",
    "weakness": "d56927e9-bb89-44ca-b1c1-0762b7007f58",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2018-09-24T13:28:54.970000-04:00",
    "last_updated": "2021-09-15T14:52:51.583000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1266",
    "universal_id": "63f7278c-447e-4ad0-9d24-c99a4e0ce396",
    "countermeasure_name": "Set permissions for sensitive files properly (Kubernetes)",
    "countermeasure_solution": "__On the master node__:\n\n- The `apiserver` file should be writable by only the administrators on the system.\n    - Set apiserver file permissions to 644 or more restrictive.\n    - Set the apiserver file ownership to root:root.\n- The master `config` file should be writable by only the administrators on the system.\n    - Set the config file permissions to 644 or more restrictive.\n    - Set the config file ownership to root:root.\n- The `scheduler` file should be writable by only the administrators on the system.\n    - Set the scheduler file permissions to 644 or more restrictive.\n    - Set the scheduler file ownership to root:root.\n- The `etcd.conf` file should be writable by only the administrators on the system.\n    - Set the etcd.conf file permissions to 644 or more restrictive.\n    - Set the etcd.conf file ownership to root:root.\n- The `flanneld` file should be writable by only the administrators on the system.\n    - Set the flanneld file permissions to 644 or more restrictive.\n    - Set the flanneld file ownership to root:root.\n    - Flannel is an optional component of Kubernetes. If you are not using Flannel then this requirement is not applicable. If you are using any other option for configuring your networking, please extend this recommendation to cover important configuration files as appropriate.\n- The `etcd` directory should be protected from any unauthorized reads or writes. It should not be readable or writable by any group members or the world.\n    - Set the etcd data directory permissions to 700 or more restrictive.\n    - Set the etcd data directory ownership to etcd:etcd.\n\n__On each worker node:__\n\n- The `kubelet` file should be writable by only the administrators on the system.\n    - Set the kubelet file permissions to 644 or more restrictive.\n    - Set the kubelet file ownership to root:root.\n- If 'kube-proxy' is running, and if it is using a file-based kubeconfig file, it should be writable by only the administrators on the system.\n    - Set the proxy file permissions to 644 or more restrictive.\n    - Set the proxy file ownership to root:root.\n- The worker `config` file should be writable by only the administrators on the system.\n    - Set the kubelet --config configuration file to 644 or more restrictive\n    - Set the kubelet --config configuration file ownership to root:root",
    "weakness_title_read_only": "Incorrect permissions for sensitive files (Kubernetes)",
    "weakness_id_read_only": "P1122",
    "weakness": "9fdb7dc7-0dac-49d0-aef7-efcc4c2cca82",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2018-09-24T13:28:55.379000-04:00",
    "last_updated": "2021-09-30T18:02:00.348000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1267",
    "universal_id": "e1c4d068-27e8-41b6-852c-4b88e54db54e",
    "countermeasure_name": "Verify that permissions for sensitive files are properly set (Kubernetes)",
    "countermeasure_solution": "__Master:__\n\n- Run the below commands (based on the file location on your system) on the master node:\n\n        stat -c %a /etc/kubernetes/apiserver\n        stat -c %a /etc/kubernetes/config\n        stat -c %a /etc/kubernetes/scheduler\n        stat -c %a /etc/etcd/etcd.conf\n        stat -c %a /etc/sysconfig/flanneld\n\n    Verify that the permissions are `644` or more restrictive.\n\n- Run the below command (based on the file location on your system) on the master node:\n \n        stat -c %U:%G /etc/kubernetes/apiserver\n        stat -c %U:%G /etc/kubernetes/config\n        stat -c %U:%G /etc/kubernetes/scheduler\n        stat -c %U:%G /etc/etcd/etcd.conf\n        stat -c %U:%G /etc/sysconfig/flanneld\n\n    Verify that the ownership is set to `root:root`.\n\n- On the etcd server node, get the etcd data directory, passed as an argument `--data-dir`, from the below command:\n\n        ps -ef | grep etcd\n\n    Run the below commands (based on the etcd data directory found above):\n\n        stat -c %a /var/lib/etcd/default.etcd\n        stat -c %U:%G /var/lib/etcd/default.etcd\n\n    Verify that the permissions are `700` or more restrictive and that the ownership is set to `etcd:etcd`.\n\n__Worker:__\n\n- Run the below commands (based on the file location on your system) on each worker node:\n\n        stat -c %a /etc/kubernetes/kubelet\n        stat -c %a /etc/kubernetes/config\n\n    Verify that the permissions are `644` or more restrictive.\n\n- Run the below command (based on the file location on your system) on each worker node:\n \n        stat -c %U:%G /etc/kubernetes/kubelet\n        stat -c %U:%G /etc/kubernetes/config\n\n    Verify that the ownership is set to `root:root`.\n\n- Find the kubeconfig file being used by ' kube-proxy ' by running the following command:\n\n        ps -ef | grep kube-proxy\n\nIf ` kube-proxy ` is running, get the kubeconfig file location from the   ` --kubeconfig  ` parameter.\nRun the below command (based on the file location on your system) on the each worker node\n    \n       stat -c %U:%G <path><filename>\n\n    Verify that the ownership is set to  `root:root `",
    "weakness_title_read_only": "Incorrect permissions for sensitive files (Kubernetes)",
    "weakness_id_read_only": "P1122",
    "weakness": "9fdb7dc7-0dac-49d0-aef7-efcc4c2cca82",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2018-09-24T13:28:55.475000-04:00",
    "last_updated": "2021-10-01T10:18:21.026000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1268",
    "universal_id": "be0924e7-38c1-457d-929b-ab69bf36112b",
    "countermeasure_name": "Use cluster-admin role only where required (Kubernetes)",
    "countermeasure_solution": "Remove any unneeded `clusterrolebindings` that use `cluster-admin`.\n\nThe RBAC role `cluster-admin` provides wide-ranging powers over the environment and should be used only where and when needed.\n\nCare should be taken before removing any `clusterrolebindings` from the environment to ensure they were not required for operation of the cluster. Specifically, modifications should not be made to `clusterrolebindings` with the `system:` prefix as they are required for the operation of system components.",
    "weakness_title_read_only": "Unnecessary usage of cluster-admin role (Kubernetes)",
    "weakness_id_read_only": "P1123",
    "weakness": "054f14eb-7f8c-4fbe-b374-1ef37de8bb73",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2018-09-24T13:28:56.368000-04:00",
    "last_updated": "2021-09-14T18:09:06.950000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1269",
    "universal_id": "183b4cc1-d56c-407f-92e6-3691a64ee065",
    "countermeasure_name": "Verify that the cluster-admin role is only used where required (Kubernetes)",
    "countermeasure_solution": "Obtain a list of the principals who have access to the `cluster-admin` role by reviewing the `clusterrolebinding` output for each role binding that has access to the `cluster-admin` role:\n\n    kubectl get clusterrolebindings -o=custom-columns=NAME:.metadata.name,ROLE:.roleRef.name,SUBJECT:.subjects[*].name\n\nReview each principal listed and ensure that `cluster-admin` privilege is required for it.",
    "weakness_title_read_only": "Unnecessary usage of cluster-admin role (Kubernetes)",
    "weakness_id_read_only": "P1123",
    "weakness": "054f14eb-7f8c-4fbe-b374-1ef37de8bb73",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2018-09-24T13:28:56.381000-04:00",
    "last_updated": "2021-09-14T18:10:06.771000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1272",
    "universal_id": "d7bc9084-877a-40ab-bc4e-724782dc4137",
    "countermeasure_name": "Create administrative boundaries between resources using namespaces (Kubernetes)",
    "countermeasure_solution": "Follow the documentation and create namespaces for objects in your deployment as you need them. Namespaces would help to isolate your Kubernetes objects. However, you would need to switch between namespaces for administration.",
    "weakness_title_read_only": "No scope for user permissions (Kubernetes)",
    "weakness_id_read_only": "P1125",
    "weakness": "5ad0987e-42ae-4a48-b7bf-57943a9da761",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2018-09-24T13:28:56.515000-04:00",
    "last_updated": "2021-09-15T08:46:24.586000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1273",
    "universal_id": "088765a2-eb17-4281-a337-de75875595ae",
    "countermeasure_name": "Verify the namespaces (Kubernetes)",
    "countermeasure_solution": "Run the below command and review the namespaces created in the cluster.\n\n    kubectl get namespaces\n\nEnsure that these namespaces are the ones you need and are adequately administered as per your requirements.",
    "weakness_title_read_only": "No scope for user permissions (Kubernetes)",
    "weakness_id_read_only": "P1125",
    "weakness": "5ad0987e-42ae-4a48-b7bf-57943a9da761",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2018-09-24T13:28:56.528000-04:00",
    "last_updated": "2021-09-15T08:49:24.812000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1274",
    "universal_id": "6e43a600-fe3a-46e7-bf06-2fd6986cc0d9",
    "countermeasure_name": "Ensure that the --read-only-port argument is set to 0 (Kubernetes)",
    "countermeasure_solution": "Disable the read-only port.\n\nRemoval of the read-only port will require that any service which made use of it will need to be re-configured to use the main Kubelet API.",
    "weakness_title_read_only": "The --read-only-port argument is not set to 0 (Kubernetes)",
    "weakness_id_read_only": "P1126",
    "weakness": "2e1c1872-5b63-443e-9e8a-898ea7bbe08b",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2018-09-24T13:28:56.728000-04:00",
    "last_updated": "2021-09-14T18:16:20.457000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1275",
    "universal_id": "7b6d56a2-a48e-4273-951c-5a202679ef8d",
    "countermeasure_name": "Verify if the --read-only-port argument is set to 0 (Kubernetes)",
    "countermeasure_solution": "Run the following command on each node: \n``` \nps -ef | grep kubelet\n``` \nVerify that the ' --read-only-port ' argument exists and is set to '0'. If the  '--read-only-port ' argument is not present, check that there is a Kubelet config file specified by '--config'. Check that if there is a 'readOnlyPort' entry in the file, it is set to '0'.",
    "weakness_title_read_only": "The --read-only-port argument is not set to 0 (Kubernetes)",
    "weakness_id_read_only": "P1126",
    "weakness": "2e1c1872-5b63-443e-9e8a-898ea7bbe08b",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2018-09-24T13:28:56.742000-04:00",
    "last_updated": "2021-10-01T10:13:19.025000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1276",
    "universal_id": "14147832-5d79-46da-a211-1efa8f0b31ed",
    "countermeasure_name": "Ensure that the --streaming-connection-idle-timeout argument is not set to 0 (Kubernetes)",
    "countermeasure_solution": "Do not disable timeouts on streaming connections.\n\nLong-lived connections could be interrupted.",
    "weakness_title_read_only": "The --streaming-connection-idle-timeout argument is set to 0 (Kubernetes)",
    "weakness_id_read_only": "P1127",
    "weakness": "b159522e-9d78-4bf3-8de0-f226e1a13be4",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2018-09-24T13:28:56.803000-04:00",
    "last_updated": "2021-09-14T15:12:31.857000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1277",
    "universal_id": "6f110a1f-15dd-4d4c-858c-7b4a9cbbbcde",
    "countermeasure_name": "Verify if the --streaming-connection-idle-timeout argument is not set to 0 (Kubernetes)",
    "countermeasure_solution": "Run the following command on each node: \n``` \nps -ef | grep kubelet \n``` \nVerify that the `--streaming-connection-idle-timeout` argument is not set to `0`.",
    "weakness_title_read_only": "The --streaming-connection-idle-timeout argument is set to 0 (Kubernetes)",
    "weakness_id_read_only": "P1127",
    "weakness": "b159522e-9d78-4bf3-8de0-f226e1a13be4",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2018-09-24T13:28:56.816000-04:00",
    "last_updated": "2021-09-14T15:13:10.148000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1278",
    "universal_id": "822095b5-c2ed-4ad2-a3fa-ed332bc9551f",
    "countermeasure_name": "Ensure that the --protect-kernel-defaults argument is set to true (Kubernetes)",
    "countermeasure_solution": "Protect tuned kernel parameters from overriding kubelet default kernel parameter values.\n\nYou would have to re-tune kernel parameters to match kubelet parameters.",
    "weakness_title_read_only": "The --protect-kernel-defaults argument is not set to true (Kubernetes)",
    "weakness_id_read_only": "P1128",
    "weakness": "ad88b17d-f922-4cc2-8cd6-8e54596e1a35",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2018-09-24T13:28:56.877000-04:00",
    "last_updated": "2021-09-14T15:06:58.751000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1279",
    "universal_id": "14253b43-c960-479c-a423-fd59787a559d",
    "countermeasure_name": "Verify if the --protect-kernel-defaults argument is set to true (Kubernetes)",
    "countermeasure_solution": "Run the following command on each node: \n``` \nps -ef | grep kubelet \n``` \nVerify that the `--protect-kernel-defaults` argument is set to `true`.",
    "weakness_title_read_only": "The --protect-kernel-defaults argument is not set to true (Kubernetes)",
    "weakness_id_read_only": "P1128",
    "weakness": "ad88b17d-f922-4cc2-8cd6-8e54596e1a35",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2018-09-24T13:28:56.890000-04:00",
    "last_updated": "2021-09-14T15:08:05.715000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1280",
    "universal_id": "11bd487e-4483-47de-b2d4-2498d624df3e",
    "countermeasure_name": "Configure network securely (Kubernetes)",
    "countermeasure_solution": " - Ensure that the `--make-iptables-util-chains` argument is set to true:\n    - Allow Kubelet to manage iptables.\n\nKubelet would manage the iptables on the system and keep it in sync. If you are using any other iptables management solution, then there might be some conflicts.\n\n- Ensure that the `--hostname-override` argument is not set:\n    - Do not override node hostnames.\n    - Node hostnames should have resolvable FQDNs.",
    "weakness_title_read_only": "Misconfiguring network (Kubernetes)",
    "weakness_id_read_only": "P1129",
    "weakness": "8681dffb-54ab-4335-9360-6d6e562fbc28",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2018-09-24T13:28:56.967000-04:00",
    "last_updated": "2021-09-14T16:50:35.540000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1281",
    "universal_id": "e953b863-1791-4fbe-ab4e-7d71ea259a23",
    "countermeasure_name": "Verify if the network is configured securely (Kubernetes)",
    "countermeasure_solution": " - Run the following command on each node: \n```\nps -ef | grep kubelet \n``` \nVerify that if the `--make-iptables-util-chains` argument exists then it is set to `true`.\n\n- Run the following command on each node: \n``` \nps -ef | grep kubelet \n``` \nVerify that `--hostname-override` argument does not exist.",
    "weakness_title_read_only": "Misconfiguring network (Kubernetes)",
    "weakness_id_read_only": "P1129",
    "weakness": "8681dffb-54ab-4335-9360-6d6e562fbc28",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2018-09-24T13:28:56.986000-04:00",
    "last_updated": "2021-09-14T16:53:56.693000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1286",
    "universal_id": "ec94242b-b6dc-409e-b47a-c3b92a833b06",
    "countermeasure_name": "Avoid using Kubernetes Secrets (Kubernetes)",
    "countermeasure_solution": "Avoid using Kubernetes _secret_. You need to use other mechanisms for managing secrets in your cluster.",
    "weakness_title_read_only": "Using Kubernetes Secrets (Kubernetes)",
    "weakness_id_read_only": "P1132",
    "weakness": "6fd34034-8eb0-4b4d-bc1d-76bdf940a809",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "deployment",
    "created": "2018-09-24T13:53:28.772000-04:00",
    "last_updated": "2021-06-25T14:47:44.070000-04:00",
    "custom": "False",
    "rules": "ac5f73c4-566a-4e69-975a-c497b00c10ee",
    "rules_read_only": "A1161"
  },
  {
    "countermeasure_id": "T1287",
    "universal_id": "e489e7c2-f23b-46cc-8863-39eff5d21a86",
    "countermeasure_name": "Verify that Kubernetes Secrets are not used (Kubernetes)",
    "countermeasure_solution": "Run the below command and review if there are any _secret_ objects created in the cluster. \n\n``` kubectl get secrets ``` \n\nEnsure that these _secret_ objects are the ones you need and are adequately administered as per your requirements.",
    "weakness_title_read_only": "Using Kubernetes Secrets (Kubernetes)",
    "weakness_id_read_only": "P1132",
    "weakness": "6fd34034-8eb0-4b4d-bc1d-76bdf940a809",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2018-09-24T13:53:28.798000-04:00",
    "last_updated": "2021-06-25T14:47:44.113000-04:00",
    "custom": "False",
    "rules": "ac5f73c4-566a-4e69-975a-c497b00c10ee",
    "rules_read_only": "A1161"
  },
  {
    "countermeasure_id": "T1288",
    "universal_id": "434fef3e-9ea2-4c16-81ed-1d0750afa70a",
    "countermeasure_name": "Ensure that the seccomp profile is set to docker/default in your pod definitions (Kubernetes)",
    "countermeasure_solution": "Enable `docker/default` seccomp profile in your pod definitions to ensure that the workloads have restricted actions available within the container.\n\nIf the `docker/default` seccomp profile is too restrictive for you, you would have to create/manage your own seccomp profiles. Also, enable all alpha features for this to work. There is no individual switch to turn on this feature.",
    "weakness_title_read_only": "Disabled seccomp profile (Kubernetes)",
    "weakness_id_read_only": "P1133",
    "weakness": "68509748-f4be-4b55-942e-9a200a826097",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "deployment",
    "created": "2018-09-24T13:53:28.875000-04:00",
    "last_updated": "2021-09-15T08:50:16.535000-04:00",
    "custom": "False",
    "rules": "ac5f73c4-566a-4e69-975a-c497b00c10ee",
    "rules_read_only": "A1161"
  },
  {
    "countermeasure_id": "T1289",
    "universal_id": "402e7914-4123-4edb-aab1-464c017e2a39",
    "countermeasure_name": "Verify that the seccomp profile is set to docker/default in your pod definitions (Kubernetes)",
    "countermeasure_solution": "Review the pod definitions in your cluster. It should create a line as below: \n\n``` annotations: seccomp.security.alpha.kubernetes.io/pod: docker/default ```",
    "weakness_title_read_only": "Disabled seccomp profile (Kubernetes)",
    "weakness_id_read_only": "P1133",
    "weakness": "68509748-f4be-4b55-942e-9a200a826097",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2018-09-24T13:53:28.901000-04:00",
    "last_updated": "2021-09-15T08:51:06.465000-04:00",
    "custom": "False",
    "rules": "ac5f73c4-566a-4e69-975a-c497b00c10ee",
    "rules_read_only": "A1161"
  },
  {
    "countermeasure_id": "T1290",
    "universal_id": "609de689-8cd8-40fd-99d3-d6a5cd15f47e",
    "countermeasure_name": "Apply security context to your pods and containers (Kubernetes)",
    "countermeasure_solution": "Apply security context to your pods and containers so that security parameters can be assigned to the pod/container/volume.",
    "weakness_title_read_only": "Pods and Containers without security context (Kubernetes)",
    "weakness_id_read_only": "P1134",
    "weakness": "80517a1f-505f-4640-9fb6-b72cde3f16ed",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2018-09-24T13:53:28.976000-04:00",
    "last_updated": "2021-09-15T08:56:55.788000-04:00",
    "custom": "False",
    "rules": "ac5f73c4-566a-4e69-975a-c497b00c10ee",
    "rules_read_only": "A1161"
  },
  {
    "countermeasure_id": "T1291",
    "universal_id": "029706ac-bb70-42af-9540-184ba1059f35",
    "countermeasure_name": "Verify that security context is defined to your pods and containers (Kubernetes)",
    "countermeasure_solution": "Review the pod definitions in your cluster and verify that you have security contexts defined as appropriate.",
    "weakness_title_read_only": "Pods and Containers without security context (Kubernetes)",
    "weakness_id_read_only": "P1134",
    "weakness": "80517a1f-505f-4640-9fb6-b72cde3f16ed",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2018-09-24T13:53:29.001000-04:00",
    "last_updated": "2021-09-15T08:57:35.657000-04:00",
    "custom": "False",
    "rules": "ac5f73c4-566a-4e69-975a-c497b00c10ee",
    "rules_read_only": "A1161"
  },
  {
    "countermeasure_id": "T1292",
    "universal_id": "d9411041-d69e-4286-b14e-f0a8414156b1",
    "countermeasure_name": "Configure Image Provenance (Kubernetes)",
    "countermeasure_solution": "Configure Image Provenance for your deployment using _ImagePolicyWebhook_ admission controller.\n\nYou need to regularly maintain your provenance configuration based on container image updates.",
    "weakness_title_read_only": "Not using Image Provenance rules (Kubernetes)",
    "weakness_id_read_only": "P1135",
    "weakness": "174721ab-c5ec-4ac8-9beb-07020932c4ab",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2018-09-24T13:53:29.078000-04:00",
    "last_updated": "2021-09-15T08:23:44.100000-04:00",
    "custom": "False",
    "rules": "ac5f73c4-566a-4e69-975a-c497b00c10ee",
    "rules_read_only": "A1161"
  },
  {
    "countermeasure_id": "T1293",
    "universal_id": "2b662a22-d0a6-4f94-a1b0-9138ebb1adb0",
    "countermeasure_name": "Verify that Image Provenance is configured properly (Kubernetes)",
    "countermeasure_solution": "Review the pod definitions in your cluster and verify that image provenance is configured as appropriate.",
    "weakness_title_read_only": "Not using Image Provenance rules (Kubernetes)",
    "weakness_id_read_only": "P1135",
    "weakness": "174721ab-c5ec-4ac8-9beb-07020932c4ab",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2018-09-24T13:53:29.104000-04:00",
    "last_updated": "2021-09-15T08:24:38.452000-04:00",
    "custom": "False",
    "rules": "ac5f73c4-566a-4e69-975a-c497b00c10ee",
    "rules_read_only": "A1161"
  },
  {
    "countermeasure_id": "T1294",
    "universal_id": "213869bd-e80c-4561-a51e-0978e1387ea7",
    "countermeasure_name": "Use managed identities for Azure resources (Microsoft Azure)",
    "countermeasure_solution": "Use managed identities for authenticating to cloud services. It provides Azure services with an automatically managed identity in Azure AD. For example, you can use this identity to authenticate to a service such as Key Vault without hardcoding credentials in the code.\n\nAnother use case is, using managed identities for App Service and Azure Functions.\n\n## References\n\n- [How to use managed identities for App Service and Azure Functions](https://docs.microsoft.com/en-us/azure/app-service/app-service-managed-service-identity)\n- [What is managed identities for Azure resources?](https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/overview)",
    "weakness_title_read_only": "Lack of managed identities for Azure resources (Microsoft Azure)",
    "weakness_id_read_only": "P1136",
    "weakness": "03938a77-6e22-4070-95c3-e29e74d1eb68",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2018-11-01T19:58:56.668000-04:00",
    "last_updated": "2021-06-25T14:47:41.672000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1295",
    "universal_id": "186dac52-5294-436f-a172-e5e87feccc2b",
    "countermeasure_name": "Verify that managed identities are used for Azure resources (Microsoft Azure)",
    "countermeasure_solution": "Check all Azure resources usage and verify that managed identities is used for authenticating to these services.",
    "weakness_title_read_only": "Lack of managed identities for Azure resources (Microsoft Azure)",
    "weakness_id_read_only": "P1136",
    "weakness": "03938a77-6e22-4070-95c3-e29e74d1eb68",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2018-11-01T20:03:11.728000-04:00",
    "last_updated": "2021-06-25T14:47:41.641000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1296",
    "universal_id": "2af6c7b4-dd64-426f-946d-1e4a50d4d1e4",
    "countermeasure_name": "Implement authentication and authorization to HTTP trigger-based Azure Functions (Microsoft Azure)",
    "countermeasure_solution": "Choose and implement proper authentication and authorization methods to protect HTTP trigger-based Azure Functions from unauthorized invocation.\n\nRefer to the following document for detailed steps on how to integrate http-based Azure Functions with Azure App Service Authentication (aka EasyAuth):\n\n- [Azure Functions and App Service Authentication](https://blogs.msdn.microsoft.com/stuartleeks/2018/02/19/azure-functions-and-app-service-authentication/)\n\nRefer to the following documents for detailed steps on how to import an Azure Function App as an API in Azure API Management or restrict its static IP:\n\n- [Import an Azure Function App as an API in Azure API Management](https://docs.microsoft.com/en-us/azure/api-management/import-function-app-as-api)\n- [Protect an API by using OAuth 2.0 with Azure Active Directory and API Management](https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-protect-backend-with-aad)\n- [Azure App Service Static IP Restrictions](https://docs.microsoft.com/en-us/azure/app-service/app-service-ip-restrictions)\n\n## References\n\n- [Azure Functions and App Service Authentication](https://blogs.msdn.microsoft.com/stuartleeks/2018/02/19/azure-functions-and-app-service-authentication/)\n- [Secure Azure Functions with JWT access tokens](https://blog.wille-zone.de/post/secure-azure-functions-with-jwt-token/)\n- [Import an Azure Function App as an API in Azure API Management](https://docs.microsoft.com/en-us/azure/api-management/import-function-app-as-api)\n- [Protect an API by using OAuth 2.0 with Azure Active Directory and API Management](https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-protect-backend-with-aad)\n- [Azure App Service Static IP Restrictions](https://docs.microsoft.com/en-us/azure/app-service/app-service-ip-restrictions)",
    "weakness_title_read_only": "Lack of authentication and authorization to Azure Functions (Microsoft Azure)",
    "weakness_id_read_only": "P1137",
    "weakness": "3f41cccf-a54b-43a6-80ee-4f983c5046c6",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2018-11-07T18:54:26.516000-05:00",
    "last_updated": "2021-06-25T14:47:42.069000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1297",
    "universal_id": "686bd959-0bac-44b1-91b0-38dfa30bb872",
    "countermeasure_name": "Test that access to HTTP trigger-based Azure Functions is authenticated and authorized (Microsoft Azure)",
    "countermeasure_solution": "Try invoking an HTTP trigger-based Azure Functions without authentication but with a valid `{source.Name}` string. If the request does not fail, this test fails.\n\nTry invoking an unauthorized HTTP trigger-based Azure Function on behalf of an authenticated user. If the request does not fail, this test fails.",
    "weakness_title_read_only": "Lack of authentication and authorization to Azure Functions (Microsoft Azure)",
    "weakness_id_read_only": "P1137",
    "weakness": "3f41cccf-a54b-43a6-80ee-4f983c5046c6",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2018-11-07T19:02:26.616000-05:00",
    "last_updated": "2021-06-25T14:47:42.032000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1298",
    "universal_id": "1d24f2b3-8906-44f6-bcac-cb2d47a495ea",
    "countermeasure_name": "Use corporate login credentials instead of Gmail accounts (Google Cloud)",
    "countermeasure_solution": "Follow the documentation and set up corporate login accounts to be used by your cloud platform.",
    "weakness_title_read_only": "Mixing corporate and personal login credentials (Google Cloud)",
    "weakness_id_read_only": "P1138",
    "weakness": "e3a28c07-837b-4d5f-a20d-35ed9b9e3d36",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "deployment",
    "created": "2018-11-20T13:40:21.966000-05:00",
    "last_updated": "2021-06-25T14:47:42.050000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1299",
    "universal_id": "175fbdd6-3a65-451e-af14-1f55a420d350",
    "countermeasure_name": "Verify that corporate login credentials are used instead of Gmail accounts (Google Cloud)",
    "countermeasure_solution": "For each Google Cloud Platform project, list the accounts configured in that project:\n\n```\ngcloud projects get-iam-policy <Project-ID> | grep gmail.com\n```\nNo Gmail accounts should be listed.",
    "weakness_title_read_only": "Mixing corporate and personal login credentials (Google Cloud)",
    "weakness_id_read_only": "P1138",
    "weakness": "e3a28c07-837b-4d5f-a20d-35ed9b9e3d36",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2018-11-20T13:40:21.982000-05:00",
    "last_updated": "2021-06-25T14:47:42.249000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1300",
    "universal_id": "27d2f386-8711-4bcf-8915-a42a8198f874",
    "countermeasure_name": "Enable multi-factor authentication for all non-service accounts (Google Cloud)",
    "countermeasure_solution": "For each Google Cloud Platform project:\n\n**Step 1**: Identify the non-service accounts.\n\n**Step 2**: Setup multi-factor authentication for each account.",
    "weakness_title_read_only": "Weak Authentication",
    "weakness_id_read_only": "P1139",
    "weakness": "4bcb2026-5bef-4208-94e0-9353576a5abc",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2018-11-20T13:40:22.053000-05:00",
    "last_updated": "2021-06-25T14:47:43.064000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1301",
    "universal_id": "7695ada1-cf41-4627-bda7-b55c4b5e1784",
    "countermeasure_name": "Verify that multi-factor authentication is enabled for all non-service accounts (Google Cloud)",
    "countermeasure_solution": "For each Google Cloud Platform project:\n\n**Step 1**: Identify the non-service accounts.\n\n**Step 2**: Manually verify that multi-factor authentication for each account is set.",
    "weakness_title_read_only": "Weak Authentication",
    "weakness_id_read_only": "P1139",
    "weakness": "4bcb2026-5bef-4208-94e0-9353576a5abc",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2018-11-20T13:40:22.068000-05:00",
    "last_updated": "2021-06-25T14:47:42.973000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1302",
    "universal_id": "51376760-7204-46ea-a9b1-4740b6865508",
    "countermeasure_name": "Use GCP-managed service account keys (Google Cloud)",
    "countermeasure_solution": "Use GCP-managed keys for each service account.\n\nGCP-managed keys are used by Cloud Platform services such as App Engine and Compute Engine. These keys cannot be downloaded. Google will keep the keys and automatically rotate them on an approximately weekly basis.\n\n__Note:__\nDeleting user-managed service account keys may break communication with the applications using the corresponding keys.",
    "weakness_title_read_only": "Using user-managed service account keys (Google Cloud)",
    "weakness_id_read_only": "P1140",
    "weakness": "34a3a552-45d6-4c47-932e-a77c9d234dbb",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2018-11-20T13:40:22.136000-05:00",
    "last_updated": "2023-03-07T10:39:11.946000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1303",
    "universal_id": "8f4c953b-74b1-4a0d-91bc-6ee465d3a3b0",
    "countermeasure_name": "Verify that there are only GCP-managed service account keys for each service account (Google Cloud)",
    "countermeasure_solution": "**From CLI:**\n\nList All the service accounts:\n\n```\ngcloud iam service-accounts list\n```\n\nIdentify user-managed service accounts as such account's `EMAIL` ends with `iam.gserviceaccount.com`.\n\nFor each user-managed service account, list the keys managed by the user:\n\n```\ngcloud iam service-accounts keys list --iam-account=<Service Account> --managed-by=user\n```\n\nNo keys should be listed.",
    "weakness_title_read_only": "Using user-managed service account keys (Google Cloud)",
    "weakness_id_read_only": "P1140",
    "weakness": "34a3a552-45d6-4c47-932e-a77c9d234dbb",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2018-11-20T13:40:22.151000-05:00",
    "last_updated": "2021-06-25T14:47:43.833000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1304",
    "universal_id": "ee7dd1a1-ca5f-4a65-98c6-85f1ba8dc5f0",
    "countermeasure_name": "Properly scope service accounts (Google Cloud)",
    "countermeasure_solution": "Perform the following:\n\n- Do not assign admin access to user-managed service accounts:\n \n    Note that removing `*Admin` or `Editor` or `Owner` roles from a service account may break its functionality. Assign required non-admin role(s) to the impacted service account in order to restore its broken functionalities.\n\n    This is applicable only to user-managed service accounts, which have the following nomenclature: `SERVICE_ACCOUNT_NAME@PROJECT_ID.iam.gserviceaccount.com`.\n\n- Do not assign `Service Account User` role to IAM users at the project level:\n\n    It is recommended to assign `Service Account User` (iam.serviceAccountUser) role to a user for a specific service account rather than assigning the role to a user at the project level.\n\n    After revoking `Service Account User` role at the project level from all impacted user accounts, `Service Account User` role should be assigned to a user for specific service account(s) as per business needs.\n\n- Ensure that instances are not configured to use the default service account with full access to all Cloud APIs:\n\n    To support the principle of least privileges and prevent potential privilege escalation, it is recommended that instances are not assigned to default service account `Compute Engine default service account` with Scope `Allow full access to all Cloud APIs`.\n\n    Note that, in order to change the service account or scope for an instance, it needs to be stopped.",
    "weakness_title_read_only": "Improper scoping of service accounts (Google Cloud)",
    "weakness_id_read_only": "P1141",
    "weakness": "3e758083-93fe-466b-a2cc-f8f306a98017",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2018-11-20T13:40:22.251000-05:00",
    "last_updated": "2021-06-25T14:47:51.861000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1305",
    "universal_id": "a89c73fb-626c-4f1f-bd2b-f15360d23303",
    "countermeasure_name": "Verify that service accounts are scoped properly (Google Cloud)",
    "countermeasure_solution": "Perform the following:\n\n**From Console**:\n\n- First:\n\n    1. Go to `IAM & admin/IAM` using `https://console.cloud.google.com/iam-admin/iam`.\n    2. Go to the `Members`.\n    3. Ensure that there are no `User-Managed user created service account(s)` with roles containing `*Admin` or role matching `Editor` or role matching `Owner`.\n\n- Second:\n\n    1. Go to the IAM page in the GCP Console using `https://console.cloud.google.com/iam-admin/iam`.\n    2. Click on the filter table text bar, Type `Role: Service Account User`.\n    3. Ensure no user is listed as a result of the filter.\n\n- Third:\n\n    1. Go to the VM instances page in the Compute Engine using `https://console.cloud.google.com/compute/instances`.\n    2. Click on the VM instance. It will display Instance metadata/properties.\n    3. Scroll down to the Service Account section.\n    4. Ensure scope `Allow full access to all Cloud APIs` is not selected.\n\nOr **Via CLI gcloud**:\n\n- First:\n\n    1. Get the policy that you want to modify, and write it to a JSON file:\n\n            gcloud projects get-iam-policy PROJECT_ID --format json > iam.json\n\n    2. The contents of the JSON file will look similar to the following. Note that `role` of members group associated with each `serviceaccount` does not contains `*Admin` or does not matches `roles/editor` or does not matches `roles/owner`:\n\n            **Sample Json output:**\n            \n            {\n                \"bindings\": [\n                    {\n                        \"members\": [\n                            \"serviceAccount:our-project-123@appspot.gserviceaccount.com\",\n                        ],\n                        \"role\": \"roles/appengine.appAdmin\"\n                    },\n                    {\n                        \"members\": [\n                            \"user:email1@gmail.com\"\n                        ],\n                        \"role\": \"roles/owner\"\n                    },\n                    {\n                        \"members\": [\n                            \"serviceAccount:our-project-123@appspot.gserviceaccount.com\",\n                            \"serviceAccount:123456789012-compute@developer.gserviceaccount.com\"\n                        ],\n                        \"role\": \"roles/editor\"\n                    }\n                ],\n                \"etag\": \"BwUjMhCsNvY=\",\n                \"version\": 1\n            }\n\n- Second:\n\n    To ensure IAM users are not assigned Service Account User role at the project level:\n\n        gcloud projects get-iam-policy zeta-environs-192610 --format json | jq '.bindings[].role' | grep \"roles/iam.serviceAccountUser\"\n\n    The command should not return any output.\n\n- Third:\n\n    1. List Instances from the project:\n\n            gcloud compute instances list\n\n    2. For every Instance, get Instance metadata:\n\n            gcloud compute instances describe [Instance_Name]\n\n    3. Ensure instance does not have section `scopes` containing `https://www.googleapis.com/auth/cloud-platform`.",
    "weakness_title_read_only": "Improper scoping of service accounts (Google Cloud)",
    "weakness_id_read_only": "P1141",
    "weakness": "3e758083-93fe-466b-a2cc-f8f306a98017",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2018-11-20T13:40:22.281000-05:00",
    "last_updated": "2021-06-25T14:47:51.322000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1306",
    "universal_id": "501d11df-a0fe-4d20-bd6f-6f9d1f137ce9",
    "countermeasure_name": "Rotate keys regularly (Google Cloud)",
    "countermeasure_solution": " - Rotate user-managed/external keys for service accounts every 90 days or less:\n\n    Service Account keys consist of a key ID (Private_key_Id) and Private key, which are used to sign programmatic requests that you make to Google cloud services accessible to that particular Service account. It is recommended that all Service Account keys are regularly rotated.\n\n    Rotating service account keys will break communication for depending applications. Dependent applications need to be configured manually with the new key `id` displayed in the section `Service account keys` and `private key` downloaded by the user.\n\n- Rotate encryption keys within a period of 365 days. For each encryption key, set a key rotation period and starting time:\n\n    An encryption key is a named object representing a `cryptographic key` used for a specific purpose. The key material, the actual bits used for `encryption`, can change over time as new key versions are created.\n\n    A key is used to protect some `corpus of data`. You could encrypt a collection of files with the same key, and people with `decrypt` permissions on that key would be able to decrypt those files. Hence, it's necessary to make sure `rotation period` is set to a specific time.\n\n    A key can be created with a specified `rotation period`, which is the time between when new key versions are generated automatically. A key can also be created with a specified next rotation time.\n\n    The format for the rotation schedule depends on the client library that is used. For the gcloud command-line tool, the next rotation time must be in `ISO` or `RFC3339` format, and the rotation period must be in the form `INTEGER[UNIT]`, where units can be one of the seconds (s), minutes (m), hours (h) or days (d).\n\n    After successful key rotation, older key version is required in order to decrypt the data encrypted by that specific key version.\n\n- Rotate API keys every 90 days:\n\n    Note that regenerating API keys may break existing client connectivity as clients will try to connect with older API keys they have stored on devices.",
    "weakness_title_read_only": "Lack of key rotation (Google Cloud)",
    "weakness_id_read_only": "P1142",
    "weakness": "1fa40129-3171-4aeb-8638-f0af6b7715e9",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2018-11-20T13:40:22.435000-05:00",
    "last_updated": "2023-03-07T10:40:06.951000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1307",
    "universal_id": "6c6b100f-8b44-4e26-9de2-28eec7455829",
    "countermeasure_name": "Verify that keys are set to be rotated regularly (Google Cloud)",
    "countermeasure_solution": "**From Console:**\n\n- First:\n\n    1. Go to `APIs & Services\\Credentials` using `https://console.cloud.google.com/apis/credentials`.\n    2. In Section `Service Account Keys`, for every External (user-managed) Service account key listed ensure `creation date` is less than the past 90 days.\n\n- Second:\n\n    1. Go to `IAM & admin`.\n    2. Go to the `Encryption keys`.\n    3. Click on `key name` Ensure Key Rotation is less than 365 days from the current date.\n\n- Third:\n\n    1. Go to `APIs & Services\\Credentials` using `https://console.cloud.google.com/apis/credentials`.\n    2. In Section `API Keys`, for every key, ensure `creation date` is less than 90 days.\n\nOr **via CLI gcloud:**\n\n- First:\n\n    1. List all Service accounts from a project:\n\n            gcloud iam service-accounts list\n\n    2. For every service account list service account keys:\n\n            gcloud iam service-accounts keys list --iam-account [Service_Account_Email_Id] --format=json\n\n    3. Ensure every service account key for a service account has `\"validAfterTime\"` less than past 90 days.\n\n- Second:\n\n    1. Ensure rotation is scheduled by `ROTATION_PERIOD` and `NEXT_ROTATION_TIME` for each key :\n\n            gcloud kms keys list --keyring=<KEY_RING> --location=<LOCATION> --format=json'(rotationPeriod)'\n\n        Ensure outcome values for `rotationPeriod` and `nextRotationTime` satisfies the below criteria:\n\n        - rotationPeriod is <= 525600m\n        - rotationPeriod is <= 31536000s\n        - rotationPeriod is <= 8760h\n        - rotationPeriod is <= 365d\n        - nextRotationTime is <= 365days from current DATE",
    "weakness_title_read_only": "Lack of key rotation (Google Cloud)",
    "weakness_id_read_only": "P1142",
    "weakness": "1fa40129-3171-4aeb-8638-f0af6b7715e9",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2018-11-20T13:40:22.461000-05:00",
    "last_updated": "2021-06-25T14:47:43.925000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1308",
    "universal_id": "37dd1a03-6afa-4763-9aa6-d654ea5f24ef",
    "countermeasure_name": "Restrict usage of API keys (Google Cloud)",
    "countermeasure_solution": "Perform the following:\n\n- Restrict API keys to be used only by specified Hosts and Apps:\n- Restrict API keys to the only APIs that the application needs access:\n\nUnrestricted keys are insecure because they can be viewed publicly, such as from within a browser, or they can be accessed on a device where the key resides. It is recommended to restrict API key usage only from trusted hosts, HTTP referrers and apps and to restrict API keys to use (call) only the APIs required by the application.\n\n__Note:__\n\nSetting `Application Restrictions` may break existing application functioning, if not done carefully.",
    "weakness_title_read_only": "Using API keys (Google Cloud)",
    "weakness_id_read_only": "P1143",
    "weakness": "be43d5df-85eb-4912-a1b7-25623e4a9f73",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2018-11-20T13:40:22.604000-05:00",
    "last_updated": "2021-06-25T14:47:51.020000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1309",
    "universal_id": "7f2e9de0-db09-4df0-ba7e-31bde204004d",
    "countermeasure_name": "Verify that usage of API keys is restricted (Google Cloud)",
    "countermeasure_solution": "Perform the following:\n\n**From Console:**\n\n1. Go to `APIs & Services\\Credentials` using `https://console.cloud.google.com/apis/credentials`.\n2. In Section `API Keys`, Click on the `API Key Name`. it will display API Key properties on a new page.\n3. For every API Key, ensure section `Key restrictions` parameter `Application restrictions` is not set to `None`.\n    - If `Application restrictions` is set to `HTTP referrers`, verify that the referrer is not set to wild-cards (`*` or `*.[TLD]` or `*.[TLD]/*`) allowing access to any/wide HTTP referrer(s).\n    - If `Application restrictions` is set to `IP addresses`, verify that referrer is not set to \"any host\" (`0.0.0.0` or `0.0.0.0/0` or `::0`).\n\n4. For every API Key, ensure section `Key restrictions` parameter `API restrictions` is not set to `None` or `Google Cloud APIs`.\n\n    **Note:** `Google Cloud APIs` represents API collection of all cloud services/APIs offered by Google cloud.",
    "weakness_title_read_only": "Using API keys (Google Cloud)",
    "weakness_id_read_only": "P1143",
    "weakness": "be43d5df-85eb-4912-a1b7-25623e4a9f73",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2018-11-20T13:40:22.625000-05:00",
    "last_updated": "2021-06-25T14:47:51.168000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1310",
    "universal_id": "171fb8b6-a9c4-4d92-9821-861b1a0eea06",
    "countermeasure_name": "Include sufficient information in the log files (Google Cloud)",
    "countermeasure_solution": "Perform the following:\n\n- Configure Cloud Audit Logging properly across all services and all users from a project:\n\n    1. Configure Cloud Audit Logging to track all Admin activities and read, write access to user data. To do this, set logtype to DATA_READ (to log user activity) and DATA_WRITES (to log changes/tampering to user data).\n    2. Enable audit config for all the services supported by Data Access audit logs feature.\n    3. Capture logs for all users. i.e. there should be no exempted users in any of the audit config sections. This will ensure overriding audit config will not contradict the requirement.\n\n    There is no charge for Admin Activity audit logs. However, enabling the Data Access audit logs might result in your project being charged for the additional logs usage.\n\n- Enable VPC Flow Logs for every subnet in VPC Network:\n\n    VPC Flow Logs is a feature that enables you to capture information about the IP traffic going to and from network interfaces in your VPC Subnets. After you've created a flow log, you can view and retrieve its data in Stackdriver Logging. It is recommended that VPC Flow Logs be enabled for every business critical VPC subnet.\n\n    Standard pricing for Stackdriver Logging, BigQuery, or Cloud Pub/Sub apply. VPC flow logs generation will be charged starting in GA as described in reference: [https://cloud.google.com/vpc/](https://cloud.google.com/vpc/)\n\n- Enable logging for cloud storage buckets:\n\n    Storage Access Logging generates a log that contains access records for each request made to the Storage bucket. An access log record contains details about the request, such as the request type, the resources specified in the request worked, and the time and date the request was processed.\n\n    Cloud Storage offers access logs and storage logs in the form of CSV files that can be downloaded and used for analysis/incident response. Access logs provide information for all of the requests made on a specified bucket and are created hourly, while the daily storage logs provide information about the storage consumption of that bucket for the last day. The access logs and storage logs are automatically created as new objects in a bucket that you specify.\n\n    An access log record contains details about the request, such as the request type, the resources specified in the request worked, and the time and date the request was processed. While storage Logs helps to keep track the amount of data stored in the bucket.\n\n    It is recommended that storage Access Logs and Storage logs are enabled for every Storage Bucket.",
    "weakness_title_read_only": "Insufficient information included in the log files (Google Cloud)",
    "weakness_id_read_only": "P1144",
    "weakness": "b0ef4093-7f73-4343-bbca-22b8f1fc0176",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2018-11-20T13:40:22.804000-05:00",
    "last_updated": "2021-06-25T14:47:57.836000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1311",
    "universal_id": "15df61f7-b70f-41bc-a5b0-8482ba294b68",
    "countermeasure_name": "Verify that sufficient information is included in log files (Google Cloud)",
    "countermeasure_solution": "Perform the following:\n\n- First:\n    - **Using Command line:**\n\n        1. Run this command:\n\n                gcloud projects get-iam-policy [PROJECT_ID]\n\n        2. Policy should have default auditConfigs section which should have logtype set to `DATA_WRITE` and `DATA_READ` for all services.\n\n            Sample output for default audit configs would look like this:\n\n                auditConfigs:\n                    - auditLogConfigs:\n                        - logType: ADMIN_READ\n                        - logType: DATA_WRITE\n                        - logType: DATA_READ\n                    - service: allServices\n\n        3. Any of the auditConfigs sections should not have parameter \"exemptedMembers:\" set which will ensure that Logging is enabled for all users and no user is exempted.\n\n- Second:\n    - **Using Console:**\n\n        1. Go to VPC network GCP Console visiting `https://console.cloud.google.com/networking/networks/list`.\n        2. From the list of network subnets, make sure for each subnet `Flow Logs` is set to `On`.\n\n    - Or **Using Command line:**\n\n            gcloud compute networks subnets describe [SUBNET_NAME] --region [REGION] --format json | jq '.enableFlowLogs'\n\n        The output of the above command returns `true`, if `Flow Logs` is set to On.\n\n        If `Flow Logs` is set to Off above command will return false or null (no-output).\n\n- Third:\n    - **Using Gsutils:**\n\n        1. To list all the buckets, run command: `gsutil ls`.\n        2. For every bucket, to ensure if storage logging is enabled or not run command: `gsutil logging get gs://<bucketName>/`.\n        3. If output is `\"gs://<bucketName>/ has no logging configuration.\"`, Storage Access Logs and Storage logs are not enabled for a bucket.\n        4. Expected output for a bucket with logging enabled:\n\n                {\n                    \"logBucket\": \"<bucketName for a bucket used to store logs>\",\n                    \"logObjectPrefix\": \"<prefix set to identify specific storage bucket logs, bucketName by default>\"}",
    "weakness_title_read_only": "Insufficient information included in the log files (Google Cloud)",
    "weakness_id_read_only": "P1144",
    "weakness": "b0ef4093-7f73-4343-bbca-22b8f1fc0176",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2018-11-20T13:40:22.836000-05:00",
    "last_updated": "2021-06-25T14:47:58.165000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1312",
    "universal_id": "8c518382-e5d9-4cff-bbb2-62d6001f3ae3",
    "countermeasure_name": "Version and backup logs (Google Cloud)",
    "countermeasure_solution": " - **Configure sinks for all Log entries:** It is recommended to create sink which will export copies of all the log entries.\n    - Exporting involves writing a filter that selects the log entries to export, and choosing a destination in Cloud Storage, BigQuery, or Cloud Pub/Sub. The filter and destination are held in an object called a sink. To ensure all log entries are exported using sink ensure that there is no filter configured for a sink.\n    - There are no costs or limitations in *Stackdriver Logging* for exporting logs, but the export destinations charge for storing or transmitting the log data.\n    - Sinks can be created in projects, organizations, folders, and billing accounts.\n- **Enable object versioning on log-buckets:** Sinks can be configured to export logs in Storage buckets. To support the retrieval of objects that are deleted or overwritten, enable **Object Versioning** feature on all such storage buckets where sinks are configured.",
    "weakness_title_read_only": "Insufficient versioning and logs backup (Google Cloud)",
    "weakness_id_read_only": "P1145",
    "weakness": "694d0603-7a83-41aa-a759-dc196b81b1d1",
    "tags": "",
    "countermeasure_priority": "3",
    "phase": "deployment",
    "created": "2018-11-20T13:40:22.945000-05:00",
    "last_updated": "2021-06-25T14:47:41.332000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1313",
    "universal_id": "d7358e58-e532-49c0-91af-656767189a31",
    "countermeasure_name": "Verify that logs are versioned and backed up (Google Cloud)",
    "countermeasure_solution": "**From Console:**\n\n1. Go to `Logging/Exports` by visiting `https://console.cloud.google.com/logs/exports?`\n2. For every sing, click 3 dot button for Menu option and select `View Filter`.\n3. Ensure that there is at least one sink with `empty` Sink Filter\n4. Additionally for Sink with `empty` sink filter, Ensure resource mentioned in `Destination` Exists.\n\n**Via CLI gcloud:**\n\n1. Ensure sink with `empty filter` exists:\n\n    - ```\n    gcloud logging sinks list\n    ```\n    - Output should list at least one sink with `empty filter`.\n\n2. Additionally Ensure that `Destination` for a sink with `Empty filter` exists.\n\n    - If sink is destined to a `Specific Cloud Storage Bucket` ensure `Destination` Storage bucket exists using CLI gsutils:\n        - ```\n        gsutil list | grep <destination_Bucket_name>\n        ```\n        - should not return empty Output.\n\n**Using Command-Line:**\n\n1. To list all sinks destined to storage buckets:\n\n    - ```\n    gcloud logging sinks list | grep storage.googleapis.com\n    ```\n\n 2. For every storage bucket listed above, verify that Object Versioning is Enabled:\n\n    - ```\n    gsutil versioning get gs://<Bucket>\n    ```\n    - Output for command should return `Enabled`",
    "weakness_title_read_only": "Insufficient versioning and logs backup (Google Cloud)",
    "weakness_id_read_only": "P1145",
    "weakness": "694d0603-7a83-41aa-a759-dc196b81b1d1",
    "tags": "",
    "countermeasure_priority": "3",
    "phase": "testing",
    "created": "2018-11-20T13:40:22.965000-05:00",
    "last_updated": "2021-06-25T14:47:41.358000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1314",
    "universal_id": "865b4be0-6fef-4ab2-9276-72256775d599",
    "countermeasure_name": "Create log metric filters and alerts (Google Cloud)",
    "countermeasure_solution": "In order to prevent unnecessarily project ownership assignments to users/service-accounts and further misuses of project and resources, all `roles/Owner` assignments should be monitored including:\n \n - Sending project ownership Invites\n\n - Acceptance/Rejection of project ownership invite by user\n\n - Adding `role\\owner` to a user/service-account\n\n - Removing a user/Service account from `role\\owner`\n\n Ensure log metric filter and alerts exists for Project Ownership assignments/changes:\n\n- Admin activity and Data access logs produced by Cloud audit logging enables security analysis, resource change tracking, and compliance auditing.\n\n- Configure metric filter and alerts for Audit Configuration Changes to ensure recommended state of audit configuration and hence, all the activities in project are audit-able at any point in time.\n\nGoogle Cloud Identity and Access Management (Cloud IAM) provides predefined roles that give granular access to specific Google Cloud Platform resources and prevent unwanted access to other resources. However to cater organization specific needs, Cloud IAM also provides ability to create custom roles. Project Owner and administrators with Organization Role Administrator role or the IAM Role Administrator role can create custom roles.\n\n - Monitor role creation, deletion and updating activities and identify over-privileged role at early stages.\n\n- Monitor create or update firewall rule events and network access changes to reduce the time it takes to detect suspicious activity.\n\nGoogle Cloud Platform (GCP) routes define the paths network traffic takes from a VM instance to another destinations. The other destination can be inside your VPC network (such as another VM) or outside of it. Every route consists of a destination and a next hop. Traffic whose destination IP is within the destination range is sent to the next hop for delivery.\n\n- Monitor changes to route tables to ensure that all VPC traffic flows through an expected path.\n\n- It is possible to have more than 1 VPC within an project, in addition it is also possible to create a peer connection between 2 VPCs enabling network traffic to route between VPCs.\n\n- Monitor changes to VPC to ensure VPC traffic flow is not getting impacted.\n\n- Monitor changes to Cloud Storage bucket permissions to reduce time to detect and correct permissions on sensitive Cloud Storage bucket and objects inside the bucket.\n\n- Monitor changes to Sql Instance configuration changes to reduce time to detect and correct misconfigurations done on sql server.\n\n\n Below are the few of configurable Options which may impact security posture of a SQL Instance:\n\n - Enable auto backups and high availability: Misconfiguration may adversely impact Business continuity, Disaster Recovery and High Availability\n\n - Authorize networks : Misconfiguration may increase exposure to the untrusted networks.\n\n\n Members (users/Service-Accounts) with role assignment to primitive role `roles/owner` are Project Owners. Project Owner has all the privileges on a project it belongs to. These can be summarized as below:\n\n\n - All viewer permissions on All GCP Services part within the project\n \n - Permissions for actions that modify state of All GCP Services within the project\n\n - Manage roles and permissions for a project and all resources within the project\n\n - Set up billing for a project\n\n Granting owner role to a member (user/Service-Account) will allow members to modify the IAM policy. Therefore grant the owner role only if the member has a legitimate purpose to manage the IAM policy. This is because as project IAM policy contains sensitive access control data and having a minimal set of users manage it will simplify any auditing that you may have to do.\nBased on Service Tiers, Stackdriver account may be charged.\n\nEnsure log metric filter and alerts exists for Audit Configuration Changes:\n\n- Google Cloud Platform services write audit log entries to Admin Activity and Data Access logs to helps answer the questions of \"who did what, where, and when?\" within Google Cloud Platform projects.\n\nCloud Audit logging records information includes the identity of the API caller, the time of the API call, the source IP address of the API caller, the request parameters, and the response elements returned by the GCP services. Cloud Audit logging provides a history of AWS API calls for an account, including API calls made via the Console, SDKs, command line tools, and other GCP services.\n\n- Ensure log metric filter and alerts exists for Custom Role changes: It is recommended that a metric filter and alarm be established for changes IAM Role creation, deletion and updating activities.\n\n- Ensure log metric filter and alerts exists for VPC Network Firewall rule changes:\n It is recommended that a metric filter and alarm be established for VPC Network Firewall rule changes.\n\n- Ensure log metric filter and alerts exists for VPC network route changes:\n It is recommended that a metric filter and alarm be established for VPC network route changes.\n\n- Ensure log metric filter and alerts exists for VPC network changes:\n It is recommended that a metric filter and alarm be established for VPC network changes.\n\n- Ensure log metric filter and alerts exists for Cloud Storage IAM permission changes:\n It is recommended that a metric filter and alarm be established for Cloud Storage Bucket IAM changes.\n\n\n- Ensure log metric filter and alerts exists for SQL instance configuration changes:\n It is recommended that a metric filter and alarm be established for SQL Instance configuration changes.",
    "weakness_title_read_only": "Lack of log metric filters and alerts (Google Cloud)",
    "weakness_id_read_only": "P1146",
    "weakness": "b8f76cae-b2a8-4800-a18e-64a8188dd631",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2018-11-20T13:40:23.140000-05:00",
    "last_updated": "2021-06-25T14:47:57.462000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1315",
    "universal_id": "c49189bd-e656-44d8-98bd-383a7465e95c",
    "countermeasure_name": "Verify that log metric filters and alerts are created (Google Cloud)",
    "countermeasure_solution": "Ensure log metric filter and alerts exists for Project Ownership assignments/changes:\n\n**From GCP Console:**\n\n \n1. Go to `Logging/Metrics` by visiting `https://console.cloud.google.com/logs/metrics?` \n\n2. In `User-defined Metrics` ensure at least one metric `<Log_Metric_Name>` present with filter text:\n\n  ````protoPayload.methodName=\"SetIamPolicy\" AND protoPayload.serviceData.policyDelta.auditConfigDeltas:*````\n\n \n Ensure Alerting Policy Notifications are configured:\n \n **From Stackdriver Console:**\n\n\n 1. Go to stackdriver account at `https://app.google.stackdriver.com/` and select target GCP project on top bar by clicking drop-down arrow symbol.\n\n \n 2. Go to in Left column click `Alerting` select `Policies Overview`\n\n\n 3. on `POLICIES WITH BASIC CONDITIONS` page ensure at least one of the Policies with the condition `Violates when: Any logging.googleapis.com/user/<Log_Metric_Name> stream is above a threshold of .001 for greater than 1 minute` present and state is `ON`\n\n \n Ensure Alerting Policy Notifications are configured to appropriate subscribers/recipients:\n\n \n on `POLICIES WITH BASIC CONDITIONS` page click target `Policy Name` to open policy configuration. Check Notifications section for appropriate subscribers/Recipients.\n\n \n**Using CLI, ensure prescribed log metric present:**\n\n ````gcloud beta logging metrics list --format json````\n\n Output should contain a metric with filter set to\n\n ````(protoPayload.serviceName=\"cloudresourcemanager.googleapis.com\") AND (ProjectOwnership OR projectOwnerInvitee) OR (protoPayload.serviceData.policyDelta.bindingDeltas.action=\"REMOVE\" AND protoPayload.serviceData.policyDelta.bindingDeltas.role=\"roles/owner\") OR (protoPayload.serviceData.policyDelta.bindingDeltas.action=\"ADD\" AND protoPayload.serviceData.policyDelta.bindingDeltas.role=\"roles/owner\")````\n\n property `metricDescriptor.name` for the identified metric that will be used in next step.\n\n \n **Using CLI, ensure prescribed Alerting Policy present:**\n\n ````gcloud alpha monitoring policies list --format json````\n\n Output should contain an alert policy where:\n\n - `conditions.filter` is set to `\"project=<ProjectID>\"\n\n \" AND metric.type=\"<metricDescriptor.type from previous command output>\"\"`\n\n - AND `conditions.filter` does not contain any other parameter than `metric.type` and `project` which will restrict alerting to a particular resource/type e.g.. `resource.type`\n\n - AND `conditions.thresholdValue` set to `0.001`\n\n - AND `conditions.conditionThreshold.aggregations.alignmentPeriod` set to `60s`\n\n - AND `conditions.conditionThreshold.aggregations.crossSeriesReducer` set to `REDUCE_COUNT`\n\n - AND `conditions.conditionThreshold.aggregations.perSeriesAligner` set to `ALIGN_RATE`,\n\n - AND `enabled` is set to `true`",
    "weakness_title_read_only": "Lack of log metric filters and alerts (Google Cloud)",
    "weakness_id_read_only": "P1146",
    "weakness": "b8f76cae-b2a8-4800-a18e-64a8188dd631",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2018-11-20T13:40:23.191000-05:00",
    "last_updated": "2021-06-25T14:47:57.524000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1316",
    "universal_id": "560f8a8e-0634-4596-822e-895b26a74a9d",
    "countermeasure_name": "Do not use default and legacy networks (Google Cloud)",
    "countermeasure_solution": "Ensure the **default network** and **legacy networks** do not exist in a project to prevent use of them. Create your network security and networking requirements and delete the `default` network.",
    "weakness_title_read_only": "Using default and legacy networks (Google Cloud)",
    "weakness_id_read_only": "P1147",
    "weakness": "be35238c-a041-405d-92cd-72e350c7a2e5",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2018-11-20T13:40:23.616000-05:00",
    "last_updated": "2021-06-25T14:47:53.109000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1317",
    "universal_id": "bb69aabc-68ee-4010-9083-433cda4ca996",
    "countermeasure_name": "Verify that default and legacy networks are not used (Google Cloud)",
    "countermeasure_solution": "For each Google Cloud Platform project,\n\n1. Set the project name in the Google Cloud Shell:\n\n    - ```\n    gcloud config set project <Project-ID>\n    ```\n\n2. List the networks configured in that project:\n\n    - ```\n    gcloud compute networks list\n    ```\n    - It should not list `default` as one of the available networks in that project.\n\nFor each Google Cloud Platform project,\n\n1. Set the project name in the Google Cloud Shell:\n\n    - ```\n    gcloud config set project <Project-ID>\n    ```\n\n2. List the networks configured in that project:\n\n    - ```\n    gcloud compute networks list\n    ```\n    - None of the listed networks should be in the `legacy` mode.",
    "weakness_title_read_only": "Using default and legacy networks (Google Cloud)",
    "weakness_id_read_only": "P1147",
    "weakness": "be35238c-a041-405d-92cd-72e350c7a2e5",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2018-11-20T13:40:23.636000-05:00",
    "last_updated": "2021-06-25T14:47:53.165000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1318",
    "universal_id": "954ec8e5-a375-4aef-9e75-759c9b372247",
    "countermeasure_name": "Enable and configure DNSSEC (Google Cloud)",
    "countermeasure_solution": " - **Enable DNSSEC for Cloud DNS:** DNSSEC in Cloud DNS enables domain owners to take easy steps to protect their domains against DNS hijacking and man-in-the-middle and other attacks.\n- **Do not use RSASHA1 for key-signing key in Cloud DNS DNSSEC:** DNSSEC algorithm numbers in this registry may be used in CERT RRs. Zone signing (DNSSEC) and transaction security mechanisms (SIG(0) and TSIG) make use of particular subsets of these algorithms. The algorithm used for key signing should be a recommended one and it should not be weak.\n- **Do not use RSASHA1 for zone-signing key in Cloud DNS DNSSEC:** DNSSEC algorithm numbers in this registry may be used in CERT RRs. Zone signing (DNSSEC) and transaction security mechanisms (SIG(0) and TSIG) make use of particular subsets of these algorithms. The algorithm used for key signing should be a recommended one and it should not be weak.\n    - **Note:** When enabling DNSSEC for a managed zone, or creating a managed zone with DNSSEC, you can select the DNSSEC signing algorithms and the denial-of-existence type. Changing the DNSSEC settings is only effective for a managed zone if DNSSEC is not already enabled. If you need to change the settings for a managed zone where it has been enabled, you can turn DNSSEC off and then re-enable it with different settings.",
    "weakness_title_read_only": "Insecure DNS configuration (Google Cloud)",
    "weakness_id_read_only": "P1148",
    "weakness": "4ffe2705-7b0d-4c65-b260-d360714f9a87",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2018-11-20T13:40:23.765000-05:00",
    "last_updated": "2021-06-25T14:47:52.327000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1319",
    "universal_id": "4a80dbd6-c741-48ee-9009-d316c5bdcafb",
    "countermeasure_name": "Verify that DNSSEC is enabled and configured (Google Cloud)",
    "countermeasure_solution": "To ensure DNSSEC is enabled\n\n- Via console:\n    - Go to `Network services`\n    - For each `Zone name` in `Cloud DNS`\n    - Ensure `DNSSEC` is set to `On`\n- Via CLI:\n    - Ensure `state` property in below command's output is `on`\n        - `gcloud beta dns managed-zones describe <zoneName> --format=\"json(dnsName,dnssecConfig.state)\"`\n\nTo ensure a proper key signing algorithm is used:\n\n- Via CLI:\n    - Ensure the property algorithm for keyType keySigning is not using `RSASHA1`.\n        - `gcloud beta dns managed-zones describe <zoneName> --format=\"json(dnsName,dnssecConfig.state,dnssecConfig.defaultKeySpecs)\"`\n- Currently there is no support to audit this setting through console.\n\nTo ensure a proper zone signing algorithm is used:\n\n- Via CLI :\n    - Ensure the property algorithm for keyType zoneSigning is not using `RSASHA1`.\n    - ```\n    gcloud beta dns managed-zones describe <zoneName> --format=\"json(dnsName,dnssecConfig.state,dnssecConfig.defaultKeySpecs)\"\n    ```\n- Currently there is no support to audit this setting through console.",
    "weakness_title_read_only": "Insecure DNS configuration (Google Cloud)",
    "weakness_id_read_only": "P1148",
    "weakness": "4ffe2705-7b0d-4c65-b260-d360714f9a87",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2018-11-20T13:40:23.789000-05:00",
    "last_updated": "2021-06-25T14:47:52.900000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1320",
    "universal_id": "c5ba9666-38b7-4fa2-9a95-b309cd288e53",
    "countermeasure_name": "Configure SSH Keys and Certificates (Google Cloud)",
    "countermeasure_solution": " - Enable **Block Project-wide SSH keys** for VM instances: It is recommended to user Instance specific SSH key(s) instead of using common/shared project-wide SSH key(s) to access Instances.\n    - **Note:** Users already having Project-wide ssh key pairs and using third party SSH clients will lose access to the impacted Instances. For Project users using gcloud or GCP Console based SSH option, no manual key creation and distribution is required and will be handled by GCE (Google compute Engine) itself. To access Instance using third party SSH clients Instance specific SSH key pairs needs to be created and distributed to the required users.\n- Ensure **oslogin** is enabled for a Project: Enabling OS login binds SSH certificates to IAM users and facilitates effective SSH certificate management.\n    - **Note:** Enabling OS Login on project disables metadata-based SSH key configurations on all instances from a project. Disabling OS Login restores SSH keys that you have configured in project or instance meta-data.",
    "weakness_title_read_only": "Improper Configuration of SSH Keys (Google Cloud)",
    "weakness_id_read_only": "P1149",
    "weakness": "52fe55d2-3b9a-40c0-a6e2-556fb1935286",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2018-11-20T13:40:24.038000-05:00",
    "last_updated": "2021-06-25T14:47:44.088000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1321",
    "universal_id": "10a6aa01-1062-4193-b567-d6b48f812146",
    "countermeasure_name": "Verify SSH Keys are configured properly (Google Cloud)",
    "countermeasure_solution": "**To verify that project-wide SSH keys are blocked:**\n\n- Using Console:\n    1. Go to the VM instances page using `https://console.cloud.google.com/compute/instances?`. It will list all the instances from project.\n    2. Click on the name of the instance\n    3. Under SSH Keys, Ensure `Block project-wide SSH keys` is selected.\n    4. Check for every Instance.\n- Via CLI gcloud:\n    1. List all Instances from a project:\n        - ```\n        gcloud compute instances list\n        ```\n    2. Get instance metadata\n        - ```\n        gcloud compute instacnces describe [Instance_Name]\n        ```\n    3. for every instance Ensure `key: block-project-ssh-keys` set to `value: 'true'`\n\n**To verify that onlogin is enabled:**\n\n- Using Console:\n    1. Go to the VM compute metadata page using `https://console.cloud.google.com/compute/metadata?`.\n    2. Ensure key `enable-oslogin` present with value set to `TRUE`\n- Via CLI gcloud:\n    - Run this command: ```\n    gcloud compute project-info describe\n    ```\n    - Ensure section `commonInstanceMetadata` has key `enable-oslogin` set to value `TRUE`",
    "weakness_title_read_only": "Improper Configuration of SSH Keys (Google Cloud)",
    "weakness_id_read_only": "P1149",
    "weakness": "52fe55d2-3b9a-40c0-a6e2-556fb1935286",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2018-11-20T13:40:24.058000-05:00",
    "last_updated": "2021-06-25T14:47:43.801000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1322",
    "universal_id": "37b7ed93-c807-4393-af96-ed33939dc421",
    "countermeasure_name": "Disable connection to serial ports for VM Instance (Google Cloud)",
    "countermeasure_solution": "Disable interactive serial console support.",
    "weakness_title_read_only": "Enabling interactive serial console access (Google Cloud)",
    "weakness_id_read_only": "P1150",
    "weakness": "2f39808d-99cd-4693-9326-a5eb6d194479",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2018-11-20T13:40:24.171000-05:00",
    "last_updated": "2021-06-25T14:47:48.006000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1323",
    "universal_id": "791fd116-23df-41bb-ba0d-f8a932583a72",
    "countermeasure_name": "Verify that 'Enable connecting to serial ports' is not enabled for VM Instance (Google Cloud)",
    "countermeasure_solution": "To ensure 'Enable connecting to serial ports' is not enabled for VM Instances:\n\n- Via console:\n    1. Login to Google Cloud console\n    2. Go to Computer Engine\n    3. Go to VM instances\n    4. Click on the Specific VM\n    5. Ensure `Enable connecting to serial ports` below `Remote access` block is unselected.\n- Via CLI gcloud:\n    - Ensure the below command's output shows `null`\n        `gcloud compute instances describe <vmName> --zone=<region> --format=json(metadata.items[].key,metadata.items[].value)`\n    - or `key` and `value` properties from the command's json response are equal to `serial-port- enable` and `0` or `false` respectively. I.e.:\n\n```\n{\n  \"metadata\": {\n    \"items\": [\n      {\n        \"key\": \"serial-port-enable\",\n        \"value\": \"0\"\n      }\n    ]\n  }\n}\n```",
    "weakness_title_read_only": "Enabling interactive serial console access (Google Cloud)",
    "weakness_id_read_only": "P1150",
    "weakness": "2f39808d-99cd-4693-9326-a5eb6d194479",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2018-11-20T13:40:24.186000-05:00",
    "last_updated": "2021-06-25T14:47:47.944000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1324",
    "universal_id": "adc8958c-955e-4bf5-8294-02394b42902f",
    "countermeasure_name": "Disable IP forwarding on Instances (Google Cloud)",
    "countermeasure_solution": "To enable source and destination IP check, disable the `canIpForward` field, which allows an instance to send and receive packets with non-matching destination or source IPs.\n\n**Note:** You may need IP Forwarding if you want to use instances to help route packets. However, deleting instance(s) acting as routers/packet forwarders may break the network connectivity.",
    "weakness_title_read_only": "Enabling IP forwarding on Instances (Google Cloud)",
    "weakness_id_read_only": "P1151",
    "weakness": "47afd782-56ac-4c13-986a-ef1d47821b0b",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2018-11-20T13:40:24.250000-05:00",
    "last_updated": "2021-06-25T14:47:52.795000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1325",
    "universal_id": "b297a49a-786c-4cff-a390-2b66d6a6586f",
    "countermeasure_name": "Verify that that IP forwarding is not enabled on Instances (Google Cloud)",
    "countermeasure_solution": "To verify via console:\n\n1. Go to `Compute Engine`\n2. Go to the `VM Instances`\n3. For every `VM Instance`\n4. Ensure `IP forwarding` is set to `Off` under `Network interfaces` section.\n\nTo verify via CLI gcloud:\n\n- Run: `gcloud compute instances list --format='table(name,canIpForward)'`\n- Ensure that `CAN_IP_FORWARD` column in the output of above command does not contain `True` against any VM Instance.",
    "weakness_title_read_only": "Enabling IP forwarding on Instances (Google Cloud)",
    "weakness_id_read_only": "P1151",
    "weakness": "47afd782-56ac-4c13-986a-ef1d47821b0b",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2018-11-20T13:40:24.264000-05:00",
    "last_updated": "2021-06-25T14:47:53.122000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1326",
    "universal_id": "33c7cc19-b8e3-43c5-9258-832494021951",
    "countermeasure_name": "Disable public or anonymous access to storage and database (Google Cloud)",
    "countermeasure_solution": " - Modify IAM policy on Cloud Storage bucket to prevent anonymous and/or public access.\n    - No storage buckets would be publicly accessible. You have to explicitly administer bucket access.\n\n- Configure storage object ACL so that it does not grant access to `allUsers` to ensure that there are no publicly accessible objects in storage buckets.\n    - There might be be a business need to share/access certain objects publicly.\n\n- Configure your Database Server so that it accepts connections only from trusted Network(s)/IP(s) and restrict access from the world.",
    "weakness_title_read_only": "Allowing public access to storage and database (Google Cloud)",
    "weakness_id_read_only": "P1152",
    "weakness": "7ff86d1f-8eb8-4b11-8fde-ea88e110ac27",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2018-11-20T13:40:24.346000-05:00",
    "last_updated": "2021-06-25T14:47:42.850000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1327",
    "universal_id": "43c28dfd-366b-48fb-bc25-db77ed7295be",
    "countermeasure_name": "Verify that public or anonymous access to storage and database is disabled (Google Cloud)",
    "countermeasure_solution": "**Verify that proper IAM policy is set on Cloud Storage bucket to prevent anonymous and/or public access:**\n\n- From Console:\n    1. Go to the Google Cloud Portal\n    2. Go to `Storage` Section\n    3. In Storage, Click `Browser`\n    4. Select each storage bucket and `click on menu` in right most column\n    5. Select `Edit Bucket Permissions`\n    6. Expand every role displayed.\n    7. No role should have `allUsers` and/or `allAuthenticatedUsers` as a member.\n\n- Using Rest API**\n    1. List all buckets in a project\n        - ```\n        Get https://www.googleapis.com/storage/v1/b?project=<ProjectName>\n        ```\n    2. Check the IAM Policy for each bucket\n        - ```\n        GET https://www.googleapis.com/storage/v1/b/<bucketName>/iam\n        ```\n    3. No role should contain `allUsers` and/or `allAuthenticatedUsers` as a member.\n\n- Using Command Line**\n    1. List all buckets in a project\n        - ```\n        gsutil ls\n        ```\n    2. Check the IAM Policy for each bucket\n        - ```\n        gsutil iam get <bucketName>\n        ```\n    3. No role should contain `allUsers` and/or `allAuthenticatedUsers` as a member.\n\n**Verify that storage object ACL is configured properly so that it does not grant access to `allUsers`:**\n\n- Using Console:\n    1. Go to `console.cloud.google.com`\n    2. Go to `Storage` Section\n    3. In Storage, Click `Browser`\n    4. Click on listed Storage bucket, This will open bucket showing objects and directories inside the bucket\n    5. For every object at every directory level, check if column \"`Share publicly`\" is blank. If it represents \"`Public Link`\", It means object is publicly accessible using Public Link\n    6. Repeat steps 4, 5 for every storage bucket\n\n- Using Rest API:\n    1. List All the storage buckets by calling: `Get https://www.googleapis.com/storage/v1/b?project=<projectName>`\n    2. For Every bucket, List objects inside the bucket by calling: `GET https://www.googleapis.com/storage/v1/b/<buvketName>/o/`\n    3. For Every Object, get object ACL by calling: `GET https://www.googleapis.com/storage/v1/b/pp-test-storage-bucket/o/<objectName>/acl`\n    4. In Object ACL returned check if `entity \"allUsers\"` does not exist. If it exists, the object is publicly accessible.\n\n**Verify that Database Server is configured properly so that it accept connections only from trusted Network(s)/IP(s):**\n\n- Using Command-line:\n    1. List all Cloud SQL database Instances\n        - ```\n        gcloud sql instances list\n        ```\n    2. Get detailed configuration for every Cloud SQL database instance\n        - ```\n        gcloud sql instances describe [INSTANCE_NAME]\n        ```\n    3. Ensure that the section `settings: ipConfiguration : authorizedNetworks` does not have any parameter `value` containing `0.0.0.0` or `<Network>/0`.",
    "weakness_title_read_only": "Allowing public access to storage and database (Google Cloud)",
    "weakness_id_read_only": "P1152",
    "weakness": "7ff86d1f-8eb8-4b11-8fde-ea88e110ac27",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2018-11-20T13:40:24.370000-05:00",
    "last_updated": "2021-06-25T14:47:42.819000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1328",
    "universal_id": "c12bed7b-874f-49a3-a376-55777f412be4",
    "countermeasure_name": "Configure cloud SQL database instance to require all incoming connections to use TLS (Google Cloud)",
    "countermeasure_solution": "Enforce all incoming connections to SQL database instance to use TLS.\n\nAfter enforcing TLS connection, existing client will not be able to communicate with SQL server unless configured with appropriate client-certificates to communicate to SQL database instance.",
    "weakness_title_read_only": "Unprotected connection to cloud SQL database instance (Google Cloud)",
    "weakness_id_read_only": "P1153",
    "weakness": "a18b50af-1341-40a6-bf5e-3102c1e49d85",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2018-11-20T13:40:24.533000-05:00",
    "last_updated": "2021-06-25T14:47:36.991000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1329",
    "universal_id": "333b90eb-394d-4c9d-824a-994fb2baf4ce",
    "countermeasure_name": "Verify that cloud SQL database instance requires all incoming connections to use TLS (Google Cloud)",
    "countermeasure_solution": "Using Command-line:\n\n1. List all SQL database Instances \n    - ```\n    gcloud sql instances list\n    ```\n2. Get detailed configuration for every SQL database instance\n    - ```\n    gcloud sql instances describe [INSTANCE_NAME]\n    ```\n3. Ensure that section `settings: ipConfiguration` has parameter `requireSsl` set to `true`.",
    "weakness_title_read_only": "Unprotected connection to cloud SQL database instance (Google Cloud)",
    "weakness_id_read_only": "P1153",
    "weakness": "a18b50af-1341-40a6-bf5e-3102c1e49d85",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2018-11-20T13:40:24.548000-05:00",
    "last_updated": "2021-06-25T14:47:36.278000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1330",
    "universal_id": "9405b967-a219-4a85-83bf-45152f2d3db4",
    "countermeasure_name": "Do not allow anyone to connect to database using root or admin privileges (Google Cloud)",
    "countermeasure_solution": "Ensure that MySql database instance does not allow anyone to connect with administrative privileges: \n\n It is recommended to set a password for the administrative user (`root` by default) to prevent unauthorized access to the SQL database Instances.\nThis recommendation is applicable only for MySql Instances. PostgreSQL does not offer any setting for No Password from cloud console.\n\n- Reconfigure connection strings for administrative clients needs to use password.\n\n- Ensure that MySQL Database Instance does not allows root login from any Host:\n It is recommended that root access to a MySql Database Instance should be allowed only through specific white-listed trusted IPs.\n\n Only configured hosts will be able access MySql database Instance with root privileges.",
    "weakness_title_read_only": "Not restricting root or admin access to the database instance (Google Cloud)",
    "weakness_id_read_only": "P1154",
    "weakness": "a64647d5-eaff-4eff-9749-6109298db4fd",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2018-11-20T13:40:24.658000-05:00",
    "last_updated": "2021-06-25T14:47:45.748000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1331",
    "universal_id": "12d32d45-b9b3-4ab7-8c04-70d6156ed209",
    "countermeasure_name": "Verify that no one is allowed to connect to database using root or admin privileges (Google Cloud)",
    "countermeasure_solution": "**Using Command Line:**\n\n 1.List all SQL database instances of type MySql\n\n \n\n ```gcloud sql instances list --filter='DATABASE_VERSION:MYSQL*' ```\n\n \n2.For every MySql instance try to connect from `authorized network`:\n\n \n\n ````mysql -u root -h <Instance_IP>````\n\n \n\n Command should return Either Error message or password prompt.\n\n \n\n Sample Error message:\n\n \n\n ````ERROR 1045 (28000): Access denied for user 'root'@'[Inatance_IP]' (using password: NO)````\n\n \n\n If command produces `mysql prompt`, SQL Instance allows anyone to connect with administrative privileges without needing password.\n\n \n\n **Note:** `No Password` setting is exposed only at the time of MySql Instance Creation. Once Instance is created, Google cloud UI does not exposes setting to confirm whether password for administrative user is set to a mysql instance.\n\n**Using Google Cloud Console:**\n\n1.Go to the MySql Instances page in the Google Cloud Platform Console using `https://console.cloud.google.com/MySql/`\n \n2.Select the instance to open its Overview page.\n\n3.Select `Access Control > Users`.\n\n4.User Name root should not be associated with Host Name containing %(any host) or 0.0.0.0 or /0\n\n \n\n **Using Command-line:**\n\n \n1.List all MySql database Instances\n\n \n\n ````gcloud MySql instances list --filter='DATABASE_VERSION:MYSQL*' ````\n\n \n2.For Every MySql Database Instance Listed above,\n\n \n\n ````gcloud MySql users list --instance [INSTANCE_NAME]````\n\n \n\n User `root` should not have host configured to `% (any)` or `0.0.0.0` or `/0`",
    "weakness_title_read_only": "Not restricting root or admin access to the database instance (Google Cloud)",
    "weakness_id_read_only": "P1154",
    "weakness": "a64647d5-eaff-4eff-9749-6109298db4fd",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2018-11-20T13:40:24.678000-05:00",
    "last_updated": "2021-06-25T14:47:50.080000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1332",
    "universal_id": "1cbbf7b4-8ef9-45b7-b963-019e0297ffb5",
    "countermeasure_name": "Ensure Stackdriver Monitoring is set to enabled on Kubernetes Engine Clusters (Google Cloud)",
    "countermeasure_solution": "Enable Stackdriver Monitoring to have system metrics and custom metrics. System metrics are measurements of the cluster's infrastructure, such as CPU or memory usage. For system metrics, Stackdriver creates a Deployment that periodically connects to each node and collects metrics about its Pods and containers, then sends the metrics to Stackdriver. Metrics for usage of system resources are collected from the CPU, Memory, Evictable memory, Non-evictable memory, and Disk sources.\n\nStackdriver Monitoring monitor signals and build operations in your Kubernetes Engine clusters. Stackdriver Monitoring can access metrics about CPU utilization, some disk traffic metrics, network traffic, and uptime information. Stackdriver Monitoring uses the Monitoring agent to access additional system resources and application services in virtual machine instances.\n\nYou can be charged for the accrued storage costs when you export logs to another Google Cloud Platform service, such as BigQuery. Exporting logs from Stackdriver has no Stackdriver charge.",
    "weakness_title_read_only": "Disabled Stackdriver Monitoring on Kubernetes Engine Clusters (Google Cloud)",
    "weakness_id_read_only": "P1155",
    "weakness": "68fa04f5-7887-4423-b3fb-7fd08ef8cb19",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "deployment",
    "created": "2018-11-20T13:40:24.831000-05:00",
    "last_updated": "2021-06-25T14:47:57.444000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1333",
    "universal_id": "d8b7f607-9629-4297-a5b8-90e81b8c114b",
    "countermeasure_name": "Verify that Stackdriver Monitoring is set to enabled on Kubernetes Engine Clusters (Google Cloud)",
    "countermeasure_solution": "**Using Console:**\n\n1. Go to Kubernetes GCP Console visiting `https://console.cloud.google.com/kubernetes/list?` \n2. From the list of clusters, \nmake sure for each cluster 'Stackdriver Monitoring' is set to enabled under cluster section.\n\n**Using Command line:**\n\nTo check monitoring status for an existing cluster, run the following command,\n\n````gcloud container clusters describe [CLUSTER_NAME] --zone [COMPUTE_ZONE] --format json | jq '.monitoringService' ````\n\nThe output should return `monitoring.googleapis.com` if monitoring is Enabled.",
    "weakness_title_read_only": "Disabled Stackdriver Monitoring on Kubernetes Engine Clusters (Google Cloud)",
    "weakness_id_read_only": "P1155",
    "weakness": "68fa04f5-7887-4423-b3fb-7fd08ef8cb19",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2018-11-20T13:40:24.846000-05:00",
    "last_updated": "2021-06-25T14:47:57.961000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1334",
    "universal_id": "994d9147-d2ff-49e3-b939-835b22b06917",
    "countermeasure_name": "Ensure legacy authorization is set to disabled on Kubernetes Engine Clusters (Google Cloud)",
    "countermeasure_solution": "You can use role-based access control in Kubernetes to grant permissions to resources at the cluster and namespace levels. RBAC allows you to define roles with rules containing a set of permissions.\n\nIn Kubernetes, whenever any authorizer grants a permission, other authorizers also grant the same permission. The legacy authorizer in Kubernetes Engine grants broad, statically defined permissions, so to ensure that RBAC limits permissions correctly, disable the legacy authorizer. RBAC has significant security advantages, and can help you ensure that users only have access to cluster resources within their own namespace.\n\nOnce a cluster has the legacy authorizer disabled, grant your user the ability to create authorization roles. This ensures that your role-based access control permissions take effect.\n\nKubernetes Engine clusters running GKE version 1.8 and later disable the legacy authorization system by default, and thus role-based access control permissions take effect with no special action required.",
    "weakness_title_read_only": "Enabled Legacy Authorization on Kubernetes Engine Clusters (Google Cloud)",
    "weakness_id_read_only": "P1156",
    "weakness": "53dcf4e4-7ca7-45f0-a97d-42758f5caa55",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2018-11-20T13:40:24.914000-05:00",
    "last_updated": "2023-03-16T11:18:03.172000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1335",
    "universal_id": "bae092c3-68ec-4f06-8d34-3f26b33ec5a0",
    "countermeasure_name": "Verify that legacy authorization is set to disabled on Kubernetes Engine Clusters (Google Cloud)",
    "countermeasure_solution": "**Using Console:**\n\n1. Go to Kubernetes GCP Console visiting `https://console.cloud.google.com/kubernetes/list?` \n2. From the list of clusters, \nmake sure for each cluster 'Legacy Authorization' is set to Disabled under Cluster section\n\n**Using Command line:**\n\nTo check Legacy Authorization status for an existing cluster, run the following command:\n\n````gcloud container clusters describe [CLUSTER_NAME] --zone [COMPUTE_ZONE] --format json | jq '.legacyAbac' ````\n\nThe output should return `null set({})` if Legacy Authorization is Disabled. \n\nIf Legacy Authorization is enabled above command will return true value set to enabled.",
    "weakness_title_read_only": "Enabled Legacy Authorization on Kubernetes Engine Clusters (Google Cloud)",
    "weakness_id_read_only": "P1156",
    "weakness": "53dcf4e4-7ca7-45f0-a97d-42758f5caa55",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2018-11-20T13:40:24.929000-05:00",
    "last_updated": "2021-06-25T14:47:47.051000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1336",
    "universal_id": "6eea1e54-c378-4841-8470-94915fb0a04a",
    "countermeasure_name": "Configure network settings securely for Kubernetes (Google Cloud)",
    "countermeasure_solution": "Ensure master authorized networks is set to enabled on Kubernetes Engine Clusters:\n\n- Authorized networks are a way of specifying a restricted range of IP addresses that are permitted to access your container cluster's Kubernetes master endpoint. Kubernetes Engine uses both Transport Layer Security (TLS) and authentication to provide secure access to your container cluster's Kubernetes master endpoint from the public internet. This provides you the flexibility to administer your cluster from anywhere; however, you might want to further restrict access to a set of IP addresses that you control. You can set this restriction by specifying an authorized network.\n\n\n- Restricting access to an authorized network can provide additional security benefits for your container cluster, including: \n\n    - Better Protection from Outsider Attacks: Authorized networks provide an additional layer of security by limiting external, non-GCP access to a specific set of addresses you designate, such as those that originate from your premises. This helps protect access to your cluster in the case of a vulnerability in the cluster's authentication or authorization mechanism.\n\n    - Better Protection from Insider Attacks: Authorized networks help protect your cluster from accidental leaks of master certificates from your company's premises. Leaked certificates used from outside GCP and outside the authorized IP ranges--for example, from addresses outside your company--are still denied access.\n\nEnsure Network policy is enabled on Kubernetes Engine clusters:\n\n- A network policy is a specification of how groups of pods are allowed to communicate with each other and other network endpoints. NetworkPolicy resources use labels to select pods and define rules which specify what traffic is allowed to the selected pods. The Kubernetes Network Policy API allows the cluster administrator to specify what pods are allowed to communicate with each other.\n\n - By default, pods are non-isolated; they accept traffic from any source. Pods become isolated by having a NetworkPolicy that selects them. Once there is any NetworkPolicy in a namespace selecting a particular pod, that pod will reject any connections that are not allowed by any NetworkPolicy. (Other pods in the namespace that are not selected by any NetworkPolicy will continue to accept all traffic.)\n\n- Enabling/Disabling Network Policy causes a rolling update of all cluster nodes, similar to performing a cluster upgrade. This operation is long-running and will block other operations on the cluster (including delete) until it has run to completion.\n\nEnsure Kubernetes cluster is created with private cluster enabled:\n\n- A private cluster is a cluster that makes your master inaccessible from the public internet. In a private cluster, nodes do not have public IP addresses, so your workloads run in an environment that is isolated from the internet. Nodes have addressed only in the private RFC 1918 address space. Nodes and masters communicate with each other privately using VPC peering.\n\n- With a Private cluster enabled, VPC network peering gives you several advantages over using external IP addresses or VPNs to connect networks, including:\n\n     - Network Latency: Public IP networking suffers higher latency than private networking.\n\n    - Network Security: Service owners do not need to have their services exposed to the public Internet and deal with its associated risks.\n\n    - Network Cost: GCP charges egress bandwidth pricing for networks using external IPs to communicate even if the traffic is within the same zone. If however, the networks are peered they can use internal IPs to communicate and save on those egress costs. Regular network pricing still applies to all traffic.\n\n- VPC networks and subnetworks provide logically isolated and secure network partitions where you can launch GCP resources. When Private Google Access is enabled, VM instances in a subnet can reach the Google Cloud and Developer APIs and services without needing an external IP address. Instead, VMs can use their internal IP addresses to access Google managed services. Instances with external IP addresses are not affected when you enable the ability to access Google services from internal IP addresses. These instances can still connect to Google APIs and managed services.\n\nEnsure private google access is set on Kubernetes Engine Cluster Subnets:\n\n- Private google access enables your cluster hosts, which have only private IP addresses, to communicate with Google APIs and services using an internal IP address rather than an external IP address. External IP addresses are routable and reachable over the Internet. Internal (private) IP addresses are internal to Google Cloud Platform and are not routable or reachable over the Internet. You can use Private Google Access to allow VMs without Internet access to reach Google APIs, services, and properties that are accessible over HTTP/HTTPS.\n\n- Instances with external IP addresses are not affected when you enable the ability to access Google services from internal IP addresses. These instances can still connect to Google APIs and managed services.",
    "weakness_title_read_only": "Unsecure network settings for Kubernetes (Google Cloud)",
    "weakness_id_read_only": "P1157",
    "weakness": "77b34c2d-0c0c-4b0a-8afa-9c983a0a4faa",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2018-11-20T13:40:25.018000-05:00",
    "last_updated": "2023-03-17T16:44:09.332000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1337",
    "universal_id": "00500c0b-63d3-468f-8446-e1f8cadf29a7",
    "countermeasure_name": "Verify that network settings are configured securely for Kubernetes (Google Cloud)",
    "countermeasure_solution": "**Using Console:**\n\n 1. Go to Kubernetes GCP Console visiting `https://console.cloud.google.com/kubernetes/list?`\n\n 2. From the list of clusters,\n\n make sure for each cluster `Master authorized networks (beta)` is set to `Enabled` under Cluster section.\n\n \n\n **Using Command line:**\n\n \n\n To check master authorized networks status for an existing cluster, run the following command:\n\n ````gcloud container clusters describe [CLUSTER_NAME] --zone [COMPUTE_ZONE] --format json | jq '.masterAuthorizedNetworksConfig'````\n\n \n\n The output should return `\"enabled\": true` in set if Master authorized networks is Enabled.\n\n If Master authorized networks disabled above command will return null set.\n\n**Using Console:**\n\n \n\n 1. Go to Kubernetes GCP Console visiting `https://console.cloud.google.com/kubernetes/list?`\n\n \n\n 2. From the list of clusters,\n\n make sure for each cluster `Network policy for master` and `Network policy for nodes` are Enabled under Cluster section.\n\n \n\n **Using Command line:**\n\n \n\n To check Network policy is enabled for an existing cluster, run the following command,\n\n ````gcloud container clusters describe [CLUSTER_NAME] --zone [COMPUTE_ZONE] --format json | jq '.networkPolicy'````\n\n \n\n Ensure the output of the above command has JSON key attribute `enabled` set to `true`:\n\n `{\"enabled\": true}`\n\n If Network policy is disabled above command output will return null.\n\n**Using Console:**\n\n 1. Go to Kubernetes GCP Console visiting `https://console.cloud.google.com/kubernetes/list?`\n\n \n\n 2. From the list of clusters,\n\n make sure for each cluster `Private cluster` is Enabled under Cluster section\n\n \n\n **Using Command line:**\n\n \n\n To check Private cluster is enabled for an existing cluster, run the following command,\n\n ````gcloud beta container clusters describe [CLUSTER_NAME] --zone [COMPUTE_ZONE] --format json | jq '.privateCluster'````\n\n \n\n The output of the above command should return `true`, if the Private cluster is enabled.\n\n If the Private cluster is disabled above command will return null.\n\n**Using Console:**\n\n 1. Go to Kubernetes GCP Console visiting `https://console.cloud.google.com/kubernetes/list`\n\n 2. From the list of clusters, for each clusters note the `Subnet` name\n\n 3. Go to VPC network GCP Console visiting `https://console.cloud.google.com/networking/networks/list`\n\n 4. From the list of network subnets, choose noted subnet and\n\n make sure subnet has `Private Google access` is set to `On`\n\n \n\n **Using Command line:**\n\n \n\n To get subnet name of the Cluster, run the following command:\n\n ````gcloud beta container clusters describe [CLUSTER_NAME] --zone [COMPUTE_ZONE] --format json | jq '.subnetwork'````\n\n The command will return you subnet name.\n\n Note down the subnet name and mention the same name at following command which will check Private Google access status, run the following command:\n\n ````gcloud compute networks subnets describe [SUBNET_NAME] --region [REGION] --format json | jq '.privateIpGoogleAccess'````\n\n \n The output of the above command returns `true`, if Private Google access is set on Cluster subnetwork.\n\n If Private Google access is set to Off above command will return false.",
    "weakness_title_read_only": "Unsecure network settings for Kubernetes (Google Cloud)",
    "weakness_id_read_only": "P1157",
    "weakness": "77b34c2d-0c0c-4b0a-8afa-9c983a0a4faa",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2018-11-20T13:40:25.049000-05:00",
    "last_updated": "2021-06-25T14:47:52.887000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1338",
    "universal_id": "68d34f53-f56a-448e-a539-ec674a85b0a2",
    "countermeasure_name": "Ensure Kubernetes clusters are configured with Labels (Google Cloud)",
    "countermeasure_solution": "A cluster label is a key-value pair that helps you organize your Google Cloud Platform resources, such as clusters. Configured Labels can be used to organize and to select subsets of objects.\n\nAttach a label to objects at creation time and subsequently added and modified at any time. Each object can have a set of key/value labels defined. Each Key must be unique for a given object. Labels enable users to map their own organizational structures onto system objects in a loosely coupled fashion, without requiring clients to store these mappings. Labels can also be used to apply specific security settings and 'auto configure' objects at creation.\n\nAttach a label to each resource, then filter the resources based on their labels. Information about labels is forwarded to the billing system, so you can break down your billing charges by the label.\n\nAny labels you apply to your clusters propagate via a background process that runs hourly. It can take up to one hour for a label to appear on all resources associated with a given cluster.",
    "weakness_title_read_only": "Kubernetes clusters configured without Labels (Google Cloud)",
    "weakness_id_read_only": "P1158",
    "weakness": "14fac843-5f02-41d8-8c53-a4ef7d0e6086",
    "tags": "",
    "countermeasure_priority": "2",
    "phase": "deployment",
    "created": "2018-11-20T13:40:25.146000-05:00",
    "last_updated": "2021-06-25T14:47:41.529000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1339",
    "universal_id": "5b8835bd-d779-443a-b5d3-c49d7b65d9f6",
    "countermeasure_name": "Verify that Kubernetes clusters are configured with Labels (Google Cloud)",
    "countermeasure_solution": "**Using Console:**\n\n1. Go to Kubernetes GCP Console visiting `https://console.cloud.google.com/kubernetes/list?` \n2. From the list of clusters, \nmake sure for each cluster the Key and value pair is set under Clusters 'Labels' section\n\n**Using Command line:**\n\nTo check for the existence of Labels for an existing cluster, run the following command,\n\n````gcloud container clusters describe [CLUSTER_NAME] --zone [COMPUTE_ZONE] --format json | jq '.resourceLabels'````\n\nThe output should return Key and value pairs in set if Labels are configured. \n\nIf Labels are not configured above command will return null set.",
    "weakness_title_read_only": "Kubernetes clusters configured without Labels (Google Cloud)",
    "weakness_id_read_only": "P1158",
    "weakness": "14fac843-5f02-41d8-8c53-a4ef7d0e6086",
    "tags": "",
    "countermeasure_priority": "2",
    "phase": "testing",
    "created": "2018-11-20T13:40:25.160000-05:00",
    "last_updated": "2021-06-25T14:47:41.511000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1340",
    "universal_id": "dc003809-fd05-4075-86e2-fb42b6189e1b",
    "countermeasure_name": "Ensure Kubernetes web UI / Dashboard is disabled (Google Cloud)",
    "countermeasure_solution": "Disable Kubernetes Web UI (Dashboard) because it is backed by highly privileged service account.\n\nDashboard is a web-based Kubernetes user interface. You can use Dashboard to deploy containerized applications to a Kubernetes cluster, troubleshoot your containerized application, and manage the cluster itself along with its attendant resources. You can use Dashboard to get an overview of applications running on your cluster, as well as for creating or modifying individual Kubernetes resources (such as Deployments, Jobs, DaemonSets, etc). For example, you can scale a Deployment, initiate a rolling update, restart a pod or deploy new applications using a deploy wizard.",
    "weakness_title_read_only": "Enabled Kubernetes web UI / Dashboard (Google Cloud)",
    "weakness_id_read_only": "P1159",
    "weakness": "73ecc18d-9fe3-4064-969f-985f93693ef8",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "deployment",
    "created": "2018-11-20T13:40:25.225000-05:00",
    "last_updated": "2021-06-25T14:47:50.141000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1341",
    "universal_id": "4a5b99bc-a41e-4641-93e6-8ab3592c4d6c",
    "countermeasure_name": "Verify that Ensure Kubernetes web UI / Dashboard is disabled (Google Cloud)",
    "countermeasure_solution": "**From Console**\n\n1. Go to `Kubernetes Engine`.\n2. Go to `Kubernetes clusters`.\n3. For every `Kubernetes cluster`. \n4. Click on `Add-ons`.\n4. Ensure `Kubernetes dashboard` is `Disabled`\n\n**Using Command line:**\n\n `gcloud container clusters describe [CLUSTER_NAME] --zone [ZONE] --format json | jq '.addonsConfig.kubernetesDashboard'`\n\nEnsure the output of the above command has JSON key attribute `disabled` set to `true`:\n\n`{\"disabled\": true}`",
    "weakness_title_read_only": "Enabled Kubernetes web UI / Dashboard (Google Cloud)",
    "weakness_id_read_only": "P1159",
    "weakness": "73ecc18d-9fe3-4064-969f-985f93693ef8",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2018-11-20T13:40:25.239000-05:00",
    "last_updated": "2021-06-25T14:47:48.824000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1342",
    "universal_id": "5d636aec-19e1-47fe-a1bb-3ebcec7e35cb",
    "countermeasure_name": "Enable automatic node repair and upgrades for Kubernetes clusters (Google Cloud)",
    "countermeasure_solution": "Ensure `Automatic node repair` is enabled for Kubernetes clusters:\n\n- Kubernetes Engine's node auto-repair feature helps you keep the nodes in your cluster in a healthy, running state. When enabled, Kubernetes Engine makes periodic checks on the health state of each node in your cluster. If a node fails consecutive health checks over an extended time period, Kubernetes Engine initiates a repair process for that node. If you disable node auto-repair at any time during the repair process, the in-progress repairs are not cancelled and still complete for any node currently under repair.\n\n- If multiple nodes require repair, Kubernetes Engine might repair them in parallel. Kubernetes Engine limits number of repairs depending on the size of the cluster (bigger clusters have a higher limit) and the number of broken nodes in the cluster (limit decreases if many nodes are broken)\n\nEnsure Automatic node upgrades is enabled on Kubernetes Engine Clusters nodes:\n\n- Node auto-upgrades help you keep the nodes in your cluster or node pool up to date with the latest stable version of Kubernetes. Auto-Upgrades use the same update mechanism as manual node upgrades.\n\n- Enabling auto-upgrades does not cause your nodes to upgrade immediately. Automatic upgrades occur at regular intervals at the discretion of the Kubernetes Engine team.\n\n Kubernetes Engine uses the node's health status to determine if a node needs to be repaired. A node reporting a Ready status is considered healthy. Kubernetes Engine triggers a repair action if a node reports consecutive unhealthy status reports for a given time threshold. \n\n You can enable node auto-repair on a per-node pool basis. When you create a cluster, you can enable or disable auto-repair for the cluster's default node pool. If you create additional node pools, you can enable or disable node auto-repair for those node pools, independent of the auto-repair setting for the default node pool.\n\n Kubernetes Engine generates an entry in its operation logs for any automated repair event. You can check the logs by using the gcloud container operations list command.\n\nNode pools with auto-upgrades enabled are automatically scheduled for upgrades when a new stable Kubernetes version becomes available. When the upgrade is performed, the node pool is upgraded to match the current cluster master version. Some benefits of using enabling auto-upgrades are:\n\n - Lower management overhead: You don't have to manually track and update to the latest version of Kubernetes.\n\n - Better security: Sometimes new binaries are released to fix a security issue. With auto-upgrades, Kubernetes Engine automatically ensures that security updates are applied and kept up to date.\n\n - Ease of use: Provides a simple way to keep your nodes up to date with the latest Kubernetes features.",
    "weakness_title_read_only": "Disabled automatic node repair and upgrades for Kubernetes clusters (Google Cloud)",
    "weakness_id_read_only": "P1160",
    "weakness": "4d7cb4ac-7850-48db-a986-61e357f8e4b9",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2018-11-20T13:40:25.313000-05:00",
    "last_updated": "2021-06-25T14:47:56.620000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1343",
    "universal_id": "b277716f-28ae-4eee-a4ff-25bd6be21990",
    "countermeasure_name": "Verify that automatic node repair and upgrades is enabled for Kubernetes clusters (Google Cloud)",
    "countermeasure_solution": "**From Console**\n\n 1. Go to Kubernetes GCP Console by visiting `https://console.cloud.google.com/kubernetes/list?`\n\n 2. From the list of clusters, make sure for each cluster `Automatic node repair` is set to Enabled under `Node Pools'.\n\n \n **Using Command line:**\n\n \n`gcloud container node-pools describe default-pool --cluster timos-cluster --zone us-central1-a --format json | jq '.management'`\n\n \n\n Ensure the output of the above command has JSON key attribute `autoRepair` set to `true`.\n\n \n\n `{\"autoRepair\": true}`\n\n**Using Console:**\n\n 1. Go to Kubernetes GCP Console visiting `https://console.cloud.google.com/kubernetes/list?`\n\n 2. From the list of clusters,\n\n make sure for each cluster `Automatic node upgrades` is set to Enabled under Node Pools section.\n\n \n\n **Using Command line:**\n\n \n\n To check existence of Automatic node upgrades for an existing cluster's node pool, run the following command,\n\n `$ gcloud container node-pools describe [NODE_POOL] --cluster [CLUSTER_NAME] --zone [COMPUTE_ZONE] --format json | jq '.management'`\n\n \n\n Ensure the output of the above command has JSON key attribute `autoUpgrade` set to `true`:\n\n`{\"autoUpgrade\": true}`\n\n \n\n If autoUpgrade is disabled above command output will not contain the autoUpgrade entry.",
    "weakness_title_read_only": "Disabled automatic node repair and upgrades for Kubernetes clusters (Google Cloud)",
    "weakness_id_read_only": "P1160",
    "weakness": "4d7cb4ac-7850-48db-a986-61e357f8e4b9",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2018-11-20T13:40:25.332000-05:00",
    "last_updated": "2021-06-25T14:47:56.386000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1344",
    "universal_id": "b122fac7-1583-47f0-8fb7-4439a6d8530d",
    "countermeasure_name": "Configure authentication securely for Kubernetes cluster (Google Cloud)",
    "countermeasure_solution": " - Ensure Basic Authentication is disabled on Kubernetes Engine Clusters\n\nBasic authentication allows a user to authenticate to the cluster with a username and password and it is stored in plain text without any encryption. Disabling Basic authentication will prevent attacks like brute force. It is recommended to use either client certificate or IAM for authentication.",
    "weakness_title_read_only": "Authentication misconfiguration for Kubernetes cluster (Google Cloud)",
    "weakness_id_read_only": "P1161",
    "weakness": "d5efea74-8581-4233-9270-ce0d5286f8c6",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2018-11-20T13:40:25.452000-05:00",
    "last_updated": "2021-06-25T14:47:42.300000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1345",
    "universal_id": "92574d05-bce0-4cb5-b5db-1fc3f4e2e011",
    "countermeasure_name": "Verify if authentication is securely configured for Kubernetes cluster (Google Cloud)",
    "countermeasure_solution": "**Using Console:**\n\n1. Go to Kubernetes GCP Console visiting [https://console.cloud.google.com/kubernetes/list?](https://console.cloud.google.com/kubernetes/list?)\n2. From the list of clusters, Click on EDIT button and make sure for each cluster nodes `Basic authentication` is set to Disabled under Clusters section.\n3. From the list of clusters, make sure for each cluster `Client certificate` is Enabled under Cluster section.\n\n **Using Command line:**\n\n- To check Basic authentication status for an existing cluster nodes, run the following command:\n\n ```\n gcloud container clusters describe [CLUSTER_NAME] --zone [COMPUTE_ZONE] --format json | jq '.masterAuth.password and .masterAuth.username'\n ```\n \nThe output of the above command should return `false`, if Basic authentication is disabled.\n If Basic authentication is enabled above command will return true.\n\n- To check Client certificate is enabled for an existing cluster, run the following command,\n\n ```\ngcloud container clusters describe change-acc-group-test-cluster --zone us-central1-a --format json | jq '.masterAuth.clientKey'\n ```\n \nEnsure the output of the above command should not return null or empty value.",
    "weakness_title_read_only": "Authentication misconfiguration for Kubernetes cluster (Google Cloud)",
    "weakness_id_read_only": "P1161",
    "weakness": "d5efea74-8581-4233-9270-ce0d5286f8c6",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2018-11-20T13:40:25.472000-05:00",
    "last_updated": "2021-06-25T14:47:42.119000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1346",
    "universal_id": "33af0561-8341-4603-af52-43c1b289c087",
    "countermeasure_name": "Ensure Kubernetes clusters are created with Alias IP ranges enabled (Google Cloud)",
    "countermeasure_solution": "Ensure Kubernetes cluster is created with Alias IP ranges enabled.\n\nGoogle Cloud Platform Alias IP Ranges lets you assign ranges of internal IP addresses as aliases to a virtual machine's network interfaces. This is useful if you have multiple services running on a VM and you want to assign each service a different IP address.\n\nYou cannot currently migrate an existing cluster that uses routes for Pod routing to a cluster that uses Alias IPs. Cluster IPs for internal Services remain only available from within the cluster. If you want to access a Kubernetes Service from within the VPC, but from outside of the cluster, use an internal load balancer.",
    "weakness_title_read_only": "Kubernetes cluster created without Alias IP ranges enabled (Google Cloud)",
    "weakness_id_read_only": "P1162",
    "weakness": "b3d26648-63e3-4aca-95fa-b1f6943ed48f",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2018-11-20T13:40:25.626000-05:00",
    "last_updated": "2021-06-25T14:47:53.079000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1347",
    "universal_id": "fb967118-e1ac-46aa-8977-e420ce32862a",
    "countermeasure_name": "Verify if Kubernetes clusters are created with Alias IP ranges enabled (Google Cloud)",
    "countermeasure_solution": "**Using Console:**\n\n1. Go to Kubernetes GCP Console visiting [https://console.cloud.google.com/kubernetes/list?](https://console.cloud.google.com/kubernetes/list?)\n2. From the list of clusters, \nmake sure for each cluster `VPC native (using alias IP)` is Enabled under Cluster section\n\n**Using Command line:**\n\nTo check Alias IP is enabled for an existing cluster, run the following command:\n```\ngcloud container clusters describe [CLUSTER_NAME] --zone [COMPUTE_ZONE] --format json | jq '.ipAllocationPolicy.useIpAliases'\n```\n\nThe output of the above command should return `true`, if VPC native (using alias IP) is enabled.\nIf VPC native (using alias IP) is disabled above command will return null.",
    "weakness_title_read_only": "Kubernetes cluster created without Alias IP ranges enabled (Google Cloud)",
    "weakness_id_read_only": "P1162",
    "weakness": "b3d26648-63e3-4aca-95fa-b1f6943ed48f",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2018-11-20T13:40:25.640000-05:00",
    "last_updated": "2021-06-25T14:47:52.722000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1348",
    "universal_id": "cbf53a69-814e-413d-84aa-3407f2440321",
    "countermeasure_name": "Ensure PodSecurityPolicy controller is enabled on the Kubernetes Engine Clusters (Google Cloud)",
    "countermeasure_solution": "Ensure PodSecurityPolicy controller is enabled on the Kubernetes Engine Clusters.\n\nA Pod Security Policy is a cluster-level resource that controls security sensitive aspects of the pod specification. The PodSecurityPolicy objects define a set of conditions that a pod must run with in order to be accepted into the system, as well as defaults for the related fields.\n\nIf you enable the PodSecurityPolicy controller without first defining and authorizing any actual policies, no users, controllers, or service accounts can create or update Pods. If you are working with an existing cluster, you should define and authorize policies before enabling the controller.",
    "weakness_title_read_only": "Disabled PodSecurityPolicy controller on Kubernetes Engine Clusters (Google Cloud)",
    "weakness_id_read_only": "P1163",
    "weakness": "be03942f-5221-48fa-978f-fa3d3ea748cc",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2018-11-20T13:40:25.704000-05:00",
    "last_updated": "2021-06-25T14:47:48.892000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1349",
    "universal_id": "4361f4b1-e74f-407e-92a2-03ad2c24b9b5",
    "countermeasure_name": "Verify that PodSecurityPolicy controller is enabled on the Kubernetes Engine Clusters (Google Cloud)",
    "countermeasure_solution": "**Using Command line:**\n\nTo check Pod Security Policy is enabled for an existing cluster, run the following command,\n```\ngcloud beta container clusters describe [CLUSTER_NAME] --zone [COMPUTE_ZONE] --format json | jq '.podSecurityPolicyConfig'\n```\n\nEnsure the output of the above command has JSON key attribute `enabled` set to `true`\n\n```\n{\n \"enabled\": true\n}\n```\n\nIf Pod Security Policy is disabled above command output will return null set.",
    "weakness_title_read_only": "Disabled PodSecurityPolicy controller on Kubernetes Engine Clusters (Google Cloud)",
    "weakness_id_read_only": "P1163",
    "weakness": "be03942f-5221-48fa-978f-fa3d3ea748cc",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2018-11-20T13:40:25.718000-05:00",
    "last_updated": "2021-06-25T14:47:46.961000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1350",
    "universal_id": "f5695872-88fa-4ae6-9be6-f94aa2054678",
    "countermeasure_name": "Enforce the separation of duties among users (Google Cloud)",
    "countermeasure_solution": "**Ensure that Separation of duties is enforced while assigning service account related and KMS roles to users:**\n\nIt is recommended that the principle of 'Separation of Duties' is enforced while assigning service account related and KMS roles to users.\n\n- **Service Account:**\n    - Any user(s) should not have `Service Account Admin` and `Service Account User`, both roles assigned at a time.\n- **Cloud KMS:**\n    - Any user(s) should not have `Cloud KMS Admin` and any of the `Cloud KMS CryptoKey Encrypter/Decrypter`, `Cloud KMS CryptoKey Encrypter`, `Cloud KMS CryptoKey Decrypter` roles assigned at a time.",
    "weakness_title_read_only": "Inadequate separation of duties among users (Google Cloud)",
    "weakness_id_read_only": "P1164",
    "weakness": "7a2a4046-15b8-4f66-bdde-af0ab063e1b2",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2018-11-20T13:40:25.913000-05:00",
    "last_updated": "2021-06-25T14:47:51.712000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1351",
    "universal_id": "6536a26d-80cc-46c3-9562-83bedc5767ba",
    "countermeasure_name": "Verify if separation of duties is enforced among users (Google Cloud)",
    "countermeasure_solution": "**From Console:**\n\n1. Go to `IAM & Admin/IAM` using [https://console.cloud.google.com/iam-admin/iam](https://console.cloud.google.com/iam-admin/iam)\n2. Ensure no member has roles `Service Account Admin` and `Service account User` assigned.\n3. Ensure no member has roles `Cloud KMS Admin` and any of the `Cloud KMS CryptoKey Encrypter/Decrypter`, `Cloud KMS CryptoKey Encrypter`, `Cloud KMS CryptoKey Decrypter` assigned.\n\n **Via CLI gcloud:**\n\n1. List all users and role assignments:\n`gcloud projects get-iam-policy [Project_ID]`\n2. Ensure that there are no common users found in member section for roles `roles/iam.serviceAccountAdmin` and `roles/iam.serviceAccountUser`\n3. Ensure that there are no common users found in member section for roles `cloudkms.admin` and any one of `Cloud KMS CryptoKey Encrypter/Decrypter`, `Cloud KMS CryptoKey Encrypter`, `Cloud KMS CryptoKey Decrypter`",
    "weakness_title_read_only": "Inadequate separation of duties among users (Google Cloud)",
    "weakness_id_read_only": "P1164",
    "weakness": "7a2a4046-15b8-4f66-bdde-af0ab063e1b2",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2018-11-20T13:40:25.945000-05:00",
    "last_updated": "2021-06-25T14:47:51.467000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1352",
    "universal_id": "725142cf-73b1-431c-8243-1a9ef4a1366f",
    "countermeasure_name": "Restrict remote access (Google Cloud)",
    "countermeasure_solution": " - Ensure that SSH access is restricted from the internet\n- Ensure that RDP access is restricted from the internet:\n\nGCP `Firewall Rules` are specific to a `VPC Network`. Each rule either `allows` or `denies` traffic when its conditions are met. Its conditions allow you to specify the type of traffic, such as ports and protocols, and the source or destination of the traffic, including IP addresses, subnets, and instances.\n\nFirewall rules are defined at the VPC network level, and are specific to the network in which they are defined. The rules themselves cannot be shared among networks. Firewall rules only support IPv4 traffic. When specifying a source for an ingress rule or a destination for an egress rule by address, you can only use an `IPv4` address or `IPv4 block in CIDR` notation. Generic `(0.0.0.0/0)` incoming traffic from internet to VPC or VM instance using `SSH` on `Port 22` can be avoided.\n\n- All SSH connections from outside of the network to the concerned VPC(s) will be blocked. There could be a business need where ssh access is required from outside of the network to access resources associated with the VPC. In that case, specific source IP(s) should be mentioned in firewall rules to white-list access to SSH port for the concerned VPC(s).\n\n- All RDP connections from outside of the network to the concerned VPC(s) will be blocked. There could be a business need where ssh access is required from outside of the network to access resources associated with the VPC. In that case, specific source IP(s) should be mentioned in firewall rules to white-list access to RDP port for the concerned VPC(s).",
    "weakness_title_read_only": "Unrestricted remote access (Google Cloud)",
    "weakness_id_read_only": "P1165",
    "weakness": "6a24889a-6211-4c70-ac01-d1b1005cf3fb",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2018-11-20T13:40:26.173000-05:00",
    "last_updated": "2021-06-25T14:47:53.239000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1353",
    "universal_id": "21f10e21-b11d-4e7e-b333-bac3103efd0f",
    "countermeasure_name": "Verify if remote access is restricted (Google Cloud)",
    "countermeasure_solution": "**From Console**\n\n1. Go to `VPC network`.\n2. Go to the `Firewall Rules`.\n3. Ensure `Port` is not equal to `22` and `Action` is not `Allow`.\n4. Ensure `Port` is not equal to `3389` and `Action` is not `Allow`.\n5. Ensure `IP Ranges` is not equal to `0.0.0.0` under `Source filters`.\n\n **Via CLI gcloud :**\n``` \ngcloud compute firewall-rules list --format=table'(name,direction,sourceRanges,allowed.ports)'\n\n``` \nEnsure that `SOURCE_RANGES` column in the output of above command does not contain `0.0.0.0` or `/0`.\n\n- If `DIRECTION` column is `INGRESS`, `PORTS` is set to `22` and `Range` includes `22` against any `Firewall Rule`.\n- If `DIRECTION` column is `INGRESS`, `PORTS` is set to `3389` and `Range` includes `3389` against any `Firewall Rule`.",
    "weakness_title_read_only": "Unrestricted remote access (Google Cloud)",
    "weakness_id_read_only": "P1165",
    "weakness": "6a24889a-6211-4c70-ac01-d1b1005cf3fb",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2018-11-20T13:40:26.205000-05:00",
    "last_updated": "2021-06-25T14:47:52.648000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1354",
    "universal_id": "7066129c-90f0-4b49-9fe7-dd29406097d0",
    "countermeasure_name": "Enable Private Google Access for all subnetwork in VPC Network (Google Cloud)",
    "countermeasure_solution": "Enable Private Google Access for all subnetwork in VPC Network.\n\nPrivate Google Access enables virtual machine instances on a subnet to reach Google APIs and services using an internal IP address rather than an external IP address. External IP addresses are routable and reachable over the Internet. Internal (private) IP addresses are internal to Google Cloud Platform and are not routable or reachable over the Internet. You can use Private Google Access to allow VMs without Internet access to reach Google APIs, services, and properties that are accessible over HTTP/HTTPS.\n\nInstances with external IP addresses are not affected when you enable the ability to access Google services from internal IP addresses. These instances can still connect to Google APIs and managed services.",
    "weakness_title_read_only": "Disabled Private Google Access for all subnetworks in VPC Network (Google Cloud)",
    "weakness_id_read_only": "P1166",
    "weakness": "c335a80a-542a-41fd-bdea-6f37025b633a",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2018-11-20T13:40:26.335000-05:00",
    "last_updated": "2021-06-25T14:47:52.604000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1355",
    "universal_id": "0755f7ec-1601-46a9-aa14-47401645702c",
    "countermeasure_name": "Verify if Private Google Access is enabled for all subnetwork in VPC Network (Google Cloud)",
    "countermeasure_solution": "**Using Console:**\n\n1. Go to VPC network GCP Console visiting [https://console.cloud.google.com/networking/networks/list](https://console.cloud.google.com/networking/networks/list) \n2. From the list of network subnets,\nmake sure for each subnet `Private Google access` is set to `On`\n\n**Using Command line:**\n\nTo check Private Google access status for an existing network subnets, run the following command,\n```\ngcloud compute networks subnets describe [SUBNET_NAME] --region [REGION] --format json | jq '.privateIpGoogleAccess'\n```\nThe output of the above command returns `true`, if Private Google access is set to On.\nIf Private Google access is set to Off above command will return false.",
    "weakness_title_read_only": "Disabled Private Google Access for all subnetworks in VPC Network (Google Cloud)",
    "weakness_id_read_only": "P1166",
    "weakness": "c335a80a-542a-41fd-bdea-6f37025b633a",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2018-11-20T13:40:26.362000-05:00",
    "last_updated": "2021-06-25T14:47:53.325000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1356",
    "universal_id": "84479651-0cc2-4aaa-859e-10d17f34c831",
    "countermeasure_name": "Ensure VM disks for critical VMs are encrypted with Customer-Supplied Encryption Keys (CSEK) (Google Cloud)",
    "countermeasure_solution": "Ensure VM disks for critical VMs are encrypted with Customer-Supplied Encryption Keys (CSEK).\n\nCustomer-Supplied Encryption Keys (CSEK) are a feature in Google Cloud Storage and Google Compute Engine. If you supply your own encryption keys, Google uses your key to protect the Google-generated keys used to encrypt and decrypt your data. By default, Google Compute Engine encrypts all data at rest. Compute Engine handles and manages this encryption for you without any additional actions on your part. However, if you wanted to control and manage this encryption yourself, you can provide your own encryption keys.",
    "weakness_title_read_only": "VM disks for critical VMs not encrypted with Customer-Supplied Encryption Keys (CSEK) (Google Cloud)",
    "weakness_id_read_only": "P1167",
    "weakness": "86131111-5bc7-40ef-9f17-1d4259bdaac3",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2018-11-20T13:40:26.442000-05:00",
    "last_updated": "2021-06-25T14:47:36.156000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1357",
    "universal_id": "7b536e11-2ae6-4bc4-bd7d-5e729f20ea3f",
    "countermeasure_name": "Verify if VM disks for critical VMs are encrypted with Customer-Supplied Encryption Keys (CSEK) (Google Cloud)",
    "countermeasure_solution": "**GCP Console**\n\n1. Go to `Compute Engine`\n2. Go to `Disks`\n3. For each disk\n4. Ensure `Encryption` is set to `Customer supplied`\n\n**Via CLI :**\n\nEnsure `diskEncryptionKey` property in the below command's response is not null, and contains key `sha256` with corresponding value\n```\ngcloud beta compute disks describe <diskName> --zone <zone> --format=\"json(diskEncryptionKey,name)\"\n```",
    "weakness_title_read_only": "VM disks for critical VMs not encrypted with Customer-Supplied Encryption Keys (CSEK) (Google Cloud)",
    "weakness_id_read_only": "P1167",
    "weakness": "86131111-5bc7-40ef-9f17-1d4259bdaac3",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2018-11-20T13:40:26.470000-05:00",
    "last_updated": "2021-06-25T14:47:36.090000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1358",
    "universal_id": "d3e61ce9-a218-4a7f-9ef1-5566ace0f677",
    "countermeasure_name": "Use Container-Optimized OS (cos) for Kubernetes Engine Clusters Node image (Google Cloud)",
    "countermeasure_solution": "Use Container-Optimized OS (cos) for Kubernetes Engine Clusters Node image.\n\nContainer-Optimized OS is an operating system image for your Compute Engine VMs that is optimized for running Docker containers. With Container-Optimized OS, you can bring up your Docker containers on Google Cloud Platform quickly, efficiently, and securely.\n\nUpgrade operation is long-running and will block other operations on the cluster (including delete) until it has run to completion.",
    "weakness_title_read_only": "Container-Optimized OS (cos) not used for Kubernetes Engine Clusters Node image (Google Cloud)",
    "weakness_id_read_only": "P1168",
    "weakness": "ed74904e-58ba-405b-812c-a071c8a581dd",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2018-11-20T13:40:26.551000-05:00",
    "last_updated": "2021-06-25T14:47:56.890000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1359",
    "universal_id": "42a2770e-6c57-4a2d-8e9c-89dc1fb74dd1",
    "countermeasure_name": "Verify if Container-Optimized OS (cos) is used for Kubernetes Engine Clusters Node image (Google Cloud)",
    "countermeasure_solution": "**Using Console:**\n\n1. Go to Kubernetes GCP Console visiting [https://console.cloud.google.com/kubernetes/list?](https://console.cloud.google.com/kubernetes/list?) \n2. From the list of clusters, \nmake sure for each cluster nodes `Container-Optimized OS (cos)` is selected under Node Pools section\n\n**Using Command line:**\n\nTo check Node image type for an existing cluster nodes, run the following command:\n```\n$ gcloud container node-pools describe [NODE_POOL] --cluster [CLUSTER_NAME] --zone [COMPUTE_ZONE] --format json | jq '.config.imageType'\n```\n\nThe output of the above command returns `COS`, if Container-Optimized OS (cos) used for Node images.",
    "weakness_title_read_only": "Container-Optimized OS (cos) not used for Kubernetes Engine Clusters Node image (Google Cloud)",
    "weakness_id_read_only": "P1168",
    "weakness": "ed74904e-58ba-405b-812c-a071c8a581dd",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2018-11-20T13:40:26.577000-05:00",
    "last_updated": "2021-06-25T14:47:56.946000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1362",
    "universal_id": "082b8cae-764f-4a5a-b148-440278e0279e",
    "countermeasure_name": "Perform message throttling in Web APIs",
    "countermeasure_solution": "To protect against brute-force DoS attacks, use a feature that enforces a set number of failed attempts by a certain IP, API key, or request route during a set period. For example, a web API could allow an IP to have a maximum number of requests within a second, minute, or hour.\n\nYou should also consider using a feature that throttles multiple requests from, or originating from, the same user (API key). This reduces the likelihood of a brute-force attack.\n\nIf a user goes over the maximum number of requests, the throttling mechanism should automatically do one of the following:\n\n- Lock the account or node for a set period.\n- Lock the account or node until it is released by an administrator.\n- Delay the processing of subsequent requests using a suitable algorithm. \n\nYou can use a delay algorithm to increase the time a user has to wait between requests until it becomes inconvenient to continue a brute-force attack. Some web APIs might have short delays of the same interval, but others might increase exponentially. If this user were an attacker inputting random API keys one by one, the delay between the processing of requests would be too long for the attack to be worth the trouble.\n\n__Note__: Refer to this countermeasure's Additional Requirements for more details about Web API throttling types.",
    "weakness_title_read_only": "Denial of Service (DoS)",
    "weakness_id_read_only": "P750",
    "weakness": "04f3a13f-c7ea-4824-bd73-086d61dd30ba",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "requirements",
    "created": "2019-01-02T10:05:05.798000-05:00",
    "last_updated": "2022-09-01T11:11:05.903000-04:00",
    "custom": "False",
    "rules": "5be24703-9455-4585-9e4c-35d75f2a9def;8359976a-65ff-49fd-92b7-b95ab3d9df68",
    "rules_read_only": "A6;A754"
  },
  {
    "countermeasure_id": "T1363",
    "universal_id": "4a11cff6-4581-409f-ba46-c8dde711e0e2",
    "countermeasure_name": "Verify if message throttling is properly performed in Web APIs",
    "countermeasure_solution": "Write a brief script that makes HTTP requests to the API endpoint every *n* milliseconds. The script can have different inputs such as:\n\n- Set **IP** where requests are made from\n- **API key** by which the requests are made with\n- **n** the frequency by which you send to the endpoint\n\nThis test checks if a message throttling mechanism has been properly implemented for the API endpoint.",
    "weakness_title_read_only": "Denial of Service (DoS)",
    "weakness_id_read_only": "P750",
    "weakness": "04f3a13f-c7ea-4824-bd73-086d61dd30ba",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2019-01-17T14:29:33.311000-05:00",
    "last_updated": "2021-06-25T14:47:39.811000-04:00",
    "custom": "False",
    "rules": "5be24703-9455-4585-9e4c-35d75f2a9def;8359976a-65ff-49fd-92b7-b95ab3d9df68",
    "rules_read_only": "A6;A754"
  },
  {
    "countermeasure_id": "T1364",
    "universal_id": "7e62934d-62d0-477b-8c4d-17396fbedd05",
    "countermeasure_name": "Verify that third party software libraries/modules and open source/COTS components are used securely",
    "countermeasure_solution": "Follow the guidelines below to check whether security risks for using third-party and commercial off the shelf (COTS) components are mitigated:\n\n- Verify that there is a process for choosing a reliable vendor. If not, then this test __fails__.\n\n- Verify that all the software and hardware components are checked against known vulnerabilities, they are acquired from reliable sources, and their digital signatures are checked. If not, then this test __fails__.\n\n- Verify there is a process for conducting risk assessments and threat modeling for third-party solutions. If not, then this test __fails__.\n\n- Verify that there is a least privilege mechanism for restricting third-party component access to resources of your company. If not, then this test __fails__.\n\n- Verify that third-party component communication and performance are being monitored and audited. If not, then this test __fails__.\n\n- Verify that third-party components are configured securely such as by ensuring that all pre-configured defaults are not being used, and all unnecessary accounts and features are disabled. If not, then this test __fails__.\n\n- Verify that there is a list of all components with all necessary information that is kept up to date. If not, then this test __fails__.\n\n- Verify that open source component licensing is properly checked. If not, then this test __fails__.\n\n- Verify that well-maintained code from a master branch is being used. If not, then this test __fails__.\n\n- Verify that open source components are scanned for potential vulnerabilities before using them. If not, then this test __fails__.\n\n- Verify third-party services are authenticated and communicating through a secure channel. If not, then this test __fails__.",
    "weakness_title_read_only": "Lack of control over third-party hardware or software components",
    "weakness_id_read_only": "P755",
    "weakness": "65a71c03-6460-4189-9a90-76ad3d1f21e1",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2019-01-23T14:58:50.526000-05:00",
    "last_updated": "2023-05-23T09:22:01.614000-04:00",
    "custom": "False",
    "rules": "9df8c510-ee65-49b4-ae61-deff6ea425d6;332d0463-71cc-413a-a7c2-5e4c43643b7a;02b7767a-2ae7-4de9-a212-8fef1b55fada;eb5aba31-943f-4f34-a839-24bca9fcec51",
    "rules_read_only": "A1084;A1102;A1157;A1358"
  },
  {
    "countermeasure_id": "T1365",
    "universal_id": "9b75bef9-f9ce-46dd-8215-897b6166c46c",
    "countermeasure_name": "Mitigate Server Side Request Forgery",
    "countermeasure_solution": "Mitigate Server Side Request Forgery (SSRF) by employing the following best practices:\n\n- Utilize whitelists and identify the IP addresses the application needs to access. Do not use blacklists and regular expressions directly on the user input as they are bad practice and can be easily bypassed. The attacker can use HTTP redirect, wildcard DNS services like xip.io, or even alternate IP encoding to bypass blacklists and regular expressions.\n- Sanitize the output of the request before relaying its response to the user. Make sure the response received by the server application is actually what it expects it to be before sending it back to the user. Prevent any information leakage to the attacker.\n- Disable unused URL schemas (i.e. `file://`, `dict://`, `ftp://` and `gopher://`), if your application only makes use of HTTP or HTTPS to make requests.\n- Operational Security Measures: use authentication on internal services such as \nMemcached, Redis, Elasticsearch and MongoDB (they do not require authentication by default).",
    "weakness_title_read_only": "Server Side Request Forgery (SSRF)",
    "weakness_id_read_only": "P1169",
    "weakness": "321fe417-e2b5-4110-acef-180a70d809ee",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "development",
    "created": "2019-02-05T13:12:23.452000-05:00",
    "last_updated": "2021-06-25T14:48:01.563000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1366",
    "universal_id": "fa54fcc1-aa90-43e7-ad4c-615c3151e61d",
    "countermeasure_name": "Identify applicable compliance regulations",
    "countermeasure_solution": "Follow these guidelines to identify and manage applicable compliance regulations:\n\n1. Identify and communicated legal and regulatory requirements affecting information security to [Key security and compliance stakeholders](/library/glossary/G64/).\n2. Establish a process for ensuring compliance with [Key legal and regulatory requirements affecting information security](/library/glossary/G65/).\n3. Discover laws and regulations that affect information security. For example, follow industry watchdog groups that provide updates on new regulations, changes to existing rules and results of litigation (case law or precedent).\n4. Review the information security implications of discovered statutes and regulations, and identify potential legal/regulatory non-compliance (e.g., perform a risk assessment of compliance with laws and regulations). Re-assess regularly or when new legislation or regulatory requirements come into effect.\n5. Track and remediate areas of legal and regulatory non-compliance. Involve [Key security and compliance stakeholders](/library/glossary/G64/), and update information security standards/procedures to accommodate any necessary changes.\n6. Document the compliance process and request sign-off by executive management. \n7. Maintain the compliance process up-to-date (i.e., annually reviewed).",
    "weakness_title_read_only": "Lack of a process for identifying applicable compliance regulation",
    "weakness_id_read_only": "P1171",
    "weakness": "fedd5c48-b273-4205-82fe-4c9d8b0ff015",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "activities",
    "created": "2019-02-13T14:57:42.987000-05:00",
    "last_updated": "2023-04-20T11:26:45.817000-04:00",
    "custom": "False",
    "rules": "a51f437c-40f4-4b75-a1d7-91767230872c;68c64fac-a002-469d-8f74-872b0a3352c9;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9;bba3a932-302b-415e-b24a-6fb715b2d7a1;541a6527-47cc-4100-bb97-53b8b98c7948;2b5f47f2-88fd-484b-899a-023076dbce25;3574b6ec-b55d-4390-99e7-35866abe1e17",
    "rules_read_only": "A1228;A1233;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233;A1229;A1230;A1231;A1232"
  },
  {
    "countermeasure_id": "T1367",
    "universal_id": "5be03ff1-ac8c-4331-b4cf-e01217182459",
    "countermeasure_name": "Identify and classify critical assets",
    "countermeasure_solution": "Follow these guidelines to properly classify your software assets during the SDLC:\n\n*If your organization has an established asset classification process, adopt that process and go to __Step 4__.*\n\n1. Establish an asset classification model or scheme that applies across the organization.\n2. Use the asset classification model to structure varying levels of confidentiality of information (e.g., restricted, confidential, internal use, and public). Each classification level must have a description, taking into account the potential business impact from the loss of confidentiality of information, and examples to guide future classification efforts.\n3. Describe what the handling requirements are for each level of classification at each stage of the application lifecycle, and explain how to handle conflicting classifications (e.g., use the worst case scenario or highest classification level).\n4. Update the security policies and standards to state that information must protected in line with its assigned level of classification.\n5. Review each significant application with its owner to assign a classification level. Ensure the owner sign-off on the agreed classification level, and that the classification level is re-assessed at least annually (and when major changes happen to the application).\n6. Ensure that your asset classification process documents all [Key Asset Attributes](/library/glossary/G66/). \n7. Record your applications (assets) in an inventory or equivalent (e.g. a database, specialized software).\n8. Review what applications are accessed or used by customers, service providers, and external suppliers and mark them as externally accessed or used assets on your inventory. Ensure that they understand the requirements to protect data according to its classification and your requirements. Update existing agreements as required, and ensure that new agreements contain the appropriate data handling requirements. \n9. Communicate the asset classification model and its handling requirements widely across the organization (e.g., as part of communications and training of all staff using assets).\n\n**Note:** You can use an analysis technique to identify critical assets. Some examples include:\n\n- Mission Impact Analysis (MIA)\n- Functional Dependency Network Analysis (FDNA)\n- Mission Threat Analysis\n- Refer to NIST Special Publication 800-160 or in other publications such as EMVCo, ISO, or ANSI for more analysis techniques.",
    "weakness_title_read_only": "Lack of a process for identifying critical assets",
    "weakness_id_read_only": "P1172",
    "weakness": "e5626687-db1a-41e0-8ec1-65b8d9f79538",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "activities",
    "created": "2019-02-13T15:26:11.198000-05:00",
    "last_updated": "2023-04-20T11:28:36.609000-04:00",
    "custom": "False",
    "rules": "a51f437c-40f4-4b75-a1d7-91767230872c;bba3a932-302b-415e-b24a-6fb715b2d7a1;541a6527-47cc-4100-bb97-53b8b98c7948;2b5f47f2-88fd-484b-899a-023076dbce25;3574b6ec-b55d-4390-99e7-35866abe1e17;68c64fac-a002-469d-8f74-872b0a3352c9;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1228;A1229;A1230;A1231;A1232;A1233;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233"
  },
  {
    "countermeasure_id": "T1368",
    "universal_id": "acb6349f-b9f6-4736-96ac-d7f7edd48343",
    "countermeasure_name": "Perform security testing using SAST tools",
    "countermeasure_solution": "Follow these guidelines to perform security testing using Static Application Security Testing (SAST) tools:\n\n1. Choose a SAST tool appropriate for your software architecture (such as monolithic, service-oriented, micro-services, and so on), programming language, and development frameworks. For example, configure and use OS/cloud configuration scanning for cloud environments, such as Microsoft Baseline Security Analyzer or Evident.IO.\n2. Configure the SAST tool to include the entire code base, configuration files, third-party and open-source components, and shared components and libraries.\n3. Where applicable (with a mature development team) add the SAST tool's plug-in to the developer IDE.\n4. Execute SAST routinely on code commit, unit, integration, and regression testing, and after staging the release so that the security team can independently scan static files and component configurations. The frequency and stage at which the scan is performed depends on your pipeline's maturity and team's capacity.\n5. Triage the results and update the scanner profiles to reduce the number of false positives of the following scans. Use [false positive reduction strategies](/library/glossary/G67/) for best results.\n6. Properly document and maintain an inventory of the scanning results and the corresponding actions taken to address the findings.\n7. Identify proper controls to fix discovered vulnerabilities (true positives) permanently.\n8. Include web privacy scans in the SAST process, and track remediation accordingly.\n\n__Note__: This countermeasure will not transition to 'Complete' unless its corresponding scan is run with __zero 'High' and zero 'Critical' findings__.",
    "weakness_title_read_only": "Lack of a process for static application security testing (SAST)",
    "weakness_id_read_only": "P1186",
    "weakness": "8359ae83-feb2-40b4-8a79-f0b4628a17ba",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "activities",
    "created": "2019-02-14T13:10:09.862000-05:00",
    "last_updated": "2023-04-20T11:29:53.750000-04:00",
    "custom": "False",
    "rules": "a51f437c-40f4-4b75-a1d7-91767230872c;bba3a932-302b-415e-b24a-6fb715b2d7a1;68c64fac-a002-469d-8f74-872b0a3352c9;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1228;A1229;A1233;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233"
  },
  {
    "countermeasure_id": "T1369",
    "universal_id": "c6906974-1606-4b42-9f02-7e21c7362f7d",
    "countermeasure_name": "Perform security testing using DAST tools",
    "countermeasure_solution": "Follow these guidelines to perform security testing using Dynamic Application Security Testing (DAST) tools:\n\n1. Choose and configure a dynamic application security testing (DAST) tool that is best for your environment according to the scope of testing and its importance. \n2. Where possible, integrate and automate the process into the application deployment pipeline using available plugins.\n3. Consult with your security team to determine the minimum critical level of findings that block the build.\n4. Perform a partial DAST on the deployed application after each staging release. Set boundaries of testing in the profile and limit the testing parameters so that it doesn't test the whole system if not needed.\n5. Document the results and triage the DAST findings. \n6. Communicate the findings clearly to developers, including actionable solutions or recommendations. Ensure that the findings are passed through the same bug tracking processes used in the standard CI/CD workflow.\n7. After developers fix the identified issues, reperform a partial DAST test. Repeat the find/fix process until the test passes.\n8. Run a complete DAST before rolling out to production and make sure it passes the full test. Otherwise, triage the findings and hand them over to the development team for remediation.\n9. Review the results after each partial or complete DAST test. Then, fine-tune the scanner configuration to reduce false positives, and set the scanner policies to shape the scanning boundaries properly.\n10. Include web privacy scans in the DAST configuration, and track remediation accordingly. \n\n__Notes:__\n\n- This countermeasure will not transition to 'Complete' unless its corresponding scan is completed with __zero 'High' and zero 'Critical' findings__.\n- In addition, if this countermeasure is transitioned to 'Complete', it will __reopen if a scan has not been run with its results imported into SD Elements within its predefined time threshold__.",
    "weakness_title_read_only": "Lack of a process for dynamic application testing",
    "weakness_id_read_only": "P1173",
    "weakness": "946618f1-51ee-4eac-8bca-2068f0496d47",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "activities",
    "created": "2019-02-14T13:12:15.447000-05:00",
    "last_updated": "2023-04-20T11:31:22.936000-04:00",
    "custom": "False",
    "rules": "a51f437c-40f4-4b75-a1d7-91767230872c;bba3a932-302b-415e-b24a-6fb715b2d7a1;68c64fac-a002-469d-8f74-872b0a3352c9;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1228;A1229;A1233;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233"
  },
  {
    "countermeasure_id": "T1370",
    "universal_id": "392c521c-18ab-489f-8954-f1d6ece034a8",
    "countermeasure_name": "Identify and track common software weaknesses and threats",
    "countermeasure_solution": "Follow these guidelines to identify and assess common software weaknesses:\n\n1. Complete the SD Elements project survey to identify common software design weaknesses and threats relevant to your application, such as CWE, OWASP Top 10, and SANS Top 25.\n2. Review internal sources for common software vulnerabilities (such as previously known design weaknesses) and solutions. Add relevant vulnerabilities as customized Weaknesses and Countermeasures in the tool.\n3. Create a new release project for each production release, including [Key change survey considerations](/library/glossary/G68/).\n4. Schedule regular assessments to include the impact of the software changes and new vulnerabilities.\n5. Make sure your instance of SD Elements is updated to the latest version. If applicable, implement [Open-source component controls](/library/glossary/G69/).\n6. Review the Risk Dashboard to assess changes to the scope of risk policies and determine risk criteria.\n7. Create an inventory of the assessment results and record the results and decisions after each regular assessment.",
    "weakness_title_read_only": "Lack of a process for identifying and assessing threats",
    "weakness_id_read_only": "P1187",
    "weakness": "f5cb4ac0-7383-4dc2-8f5d-90c95dfdc280",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "activities",
    "created": "2019-02-14T13:12:54.454000-05:00",
    "last_updated": "2023-05-17T10:23:05.390000-04:00",
    "custom": "False",
    "rules": "a51f437c-40f4-4b75-a1d7-91767230872c;bba3a932-302b-415e-b24a-6fb715b2d7a1;541a6527-47cc-4100-bb97-53b8b98c7948;2b5f47f2-88fd-484b-899a-023076dbce25;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9;68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1228;A1229;A1230;A1231;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233;A1233"
  },
  {
    "countermeasure_id": "T1371",
    "universal_id": "4412b9eb-f3f6-4362-b6d7-825d96720510",
    "countermeasure_name": "Use a software security management solution to select and track security controls",
    "countermeasure_solution": "Follow these guidelines to monitor, track, and manage known software vulnerabilities:\n\n1. Document a security standard to mandate software vulnerability management as a requirement to track and manage software vulnerabilities until they are fully remediated, and get it reviewed and approved by management. The standard must specify the need to test business applications regularly.\n2. Document a software vulnerability management process explaining the approach used to test applications, with an assigned owner responsible for its completeness, currency, and ongoing execution. Explain the method(s) used to identify vulnerabilities (e.g., code reviews, software testing, penetration testing, quality control) as well as software re-testing and publication.\n3. Perform vulnerability testing using automated scanning software or a commercial vulnerability scanning service. Testing should be run regularly based on a combination of code reviews, dynamic and static analysis tests.\n4. Ensure that only a limited number of authorized individuals can execute vulnerability scans, and that tests are monitored to identify misuse and help detect unauthorized testing.\n5. Set priorities and timelines for remediating all significant vulnerabilities based on their [criticality of software vulnerabilities](/library/glossary/G72/).\n6. Select one or more support tools to assist with the software vulnerability management process. \n7 .Establish and follow a [software vulnerability remediation process](/library/glossary/G71/) to ensure that vulnerabilities are fixed in a consistent manner.\n8. Set compensating controls to protect information in the event a vulnerability cannot be fixed (e.g., by adding additional access controls or performing detailed monitoring).",
    "weakness_title_read_only": "Lack of software security management solution to track security controls",
    "weakness_id_read_only": "P1188",
    "weakness": "c8e5c6f3-c934-4798-a44b-40240d9889b6",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "activities",
    "created": "2019-02-14T13:13:00.603000-05:00",
    "last_updated": "2023-04-20T11:34:37.309000-04:00",
    "custom": "False",
    "rules": "a51f437c-40f4-4b75-a1d7-91767230872c;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9;bba3a932-302b-415e-b24a-6fb715b2d7a1;541a6527-47cc-4100-bb97-53b8b98c7948;2b5f47f2-88fd-484b-899a-023076dbce25;68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1228;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233;A1229;A1230;A1231;A1233"
  },
  {
    "countermeasure_id": "T1372",
    "universal_id": "98406067-9b31-44b5-bb02-e63897f09722",
    "countermeasure_name": "Follow software change management process",
    "countermeasure_solution": "Follow these guidelines to manage changes to software applications:\n\n1. Document a change management process covering all [types of software changes](/library/glossary/G73/) that tests and approves changes that meet [change management security criteria](/library/glossary/G75/).\n2. Document change requests before applying changes to the production environment using a change request form. Only authorized individuals should be able to submit change requests. \n3. Assess the potential risk and potential negative consequences on other components of the environment when creating and submitting a change request.\n4. Establish back-out positions so that applications can recover from failed changes or unexpected results.\n5. Ensure that changes to applications are performed by skilled individuals who are capable of making changes correctly and securely, supervised, and signed off by management.\n6. Ensure that [post-change implementation controls](/library/glossary/G76/) are in place.",
    "weakness_title_read_only": "Lack of software change management process",
    "weakness_id_read_only": "P1174",
    "weakness": "8b84daf4-233b-4a10-8557-666842ad0da1",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "activities",
    "created": "2019-02-14T13:13:06.263000-05:00",
    "last_updated": "2023-04-20T11:46:26.704000-04:00",
    "custom": "False",
    "rules": "a51f437c-40f4-4b75-a1d7-91767230872c;bba3a932-302b-415e-b24a-6fb715b2d7a1;541a6527-47cc-4100-bb97-53b8b98c7948;2b5f47f2-88fd-484b-899a-023076dbce25;68c64fac-a002-469d-8f74-872b0a3352c9;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1228;A1229;A1230;A1231;A1233;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233"
  },
  {
    "countermeasure_id": "T1373",
    "universal_id": "aaf25d0c-af14-4bb2-9ac6-3105e9bcd7cf",
    "countermeasure_name": "Maintain the integrity of all software code",
    "countermeasure_solution": "Follow these guidelines to maintain the integrity of your software code repository:\n\n1. Whenever possible implement [code repository safeguards](/library/glossary/G77/).\n2. Document all the actions above, designate a responsible individual to own your software code repository, and maintain a consistent practice around detection of unauthorized attempts to tamper with or access software code and its protection.\n\nFor more information on maintaining the integrity of your software code, see PCI's [Secure Software Lifecycle\nRequirements and Assessment Procedures](https://www.pcisecuritystandards.org/documents/PCI-Secure-SLC-Standard-v1_1.pdf?agreement=true&time=1631212033305).",
    "weakness_title_read_only": "Insufficient software code control",
    "weakness_id_read_only": "P1175",
    "weakness": "cb8f36c8-6daf-4732-9349-b6e50649dc6c",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "activities",
    "created": "2019-02-14T13:13:12.594000-05:00",
    "last_updated": "2023-04-20T12:03:53.152000-04:00",
    "custom": "False",
    "rules": "a51f437c-40f4-4b75-a1d7-91767230872c;bba3a932-302b-415e-b24a-6fb715b2d7a1;541a6527-47cc-4100-bb97-53b8b98c7948;2b5f47f2-88fd-484b-899a-023076dbce25;68c64fac-a002-469d-8f74-872b0a3352c9;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1228;A1229;A1230;A1231;A1233;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233"
  },
  {
    "countermeasure_id": "T1374",
    "universal_id": "865687d2-6d4d-4905-b9f6-82222f3e3d98",
    "countermeasure_name": "Ensure the integrity of software release and update delivery",
    "countermeasure_solution": "Follow these guidelines to maintain the integrity of software code and components for releases and updates:\n\n1. Control access to source code and configuration files and ensure that only authorized entities can make changes to them.\n2. Use [integrity check methods](/library/glossary/G81/) (e.g., checksum or digitally signed certificates ensure that code is not tampered with or replaced by malicious attackers during update cycles).\n3. Make sure that your software distribution method provides a chain of trust (such as through use of a TLS connection that provides compliant cipher-suite implementations), where the integrity method implemented is not cryptographically secure (such as through the use of digital signatures).\n4. Use cryptographic functions to protect software code, especially proprietary code, files, and business logic.\n5. Keep software releases consistent and ensure that older versions cannot replace a new version, treating them as separate entities.\n6. Use version identifiers to distinguish different variants of software components to make sure that users download, and use the correct version.\n7. Provide patch information for each update of a component, including bug-fix information and component versions. \n8. Change or withdraw components from a release in a controlled manner: removing a component should only be possible if there is no dependency from another component. Alternatively, change the scope of the release for that particular component by removing it from one or more release groups.\n9. Use update mechanisms that cover all software, configuration files, and other metadata that may be used by the software for security purposes, or which may in some way affect security.\n10. Follow a [release management process (RMP)](/library/glossary/G82/) within the SDLC.",
    "weakness_title_read_only": "Lack of a process for ensuring the integrity of software release and update",
    "weakness_id_read_only": "P1178",
    "weakness": "c119cada-d03f-44c4-9384-44c40d5b472e",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "activities",
    "created": "2019-02-14T13:13:18.347000-05:00",
    "last_updated": "2023-04-20T12:07:18.109000-04:00",
    "custom": "False",
    "rules": "a51f437c-40f4-4b75-a1d7-91767230872c;bba3a932-302b-415e-b24a-6fb715b2d7a1;541a6527-47cc-4100-bb97-53b8b98c7948;2b5f47f2-88fd-484b-899a-023076dbce25;68c64fac-a002-469d-8f74-872b0a3352c9;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1228;A1229;A1230;A1231;A1233;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233"
  },
  {
    "countermeasure_id": "T1375",
    "universal_id": "28cbbbd2-69ce-49e2-90cb-12f1e1741cd0",
    "countermeasure_name": "Properly collect and protect sensitive data",
    "countermeasure_solution": "Follow these guidelines to protect information throughout its lifecycle:\n\n1. Information must be protected during each stage of [information lifecycle management](/library/glossary/G84/). \n2. Establish default classification levels and store data centrally to improve management of data, files, and databases.\n3. Maintain the confidentiality of data during its lifecycle by automatically encrypting data and supporting access controls.\n4. Maintain the integrity of data during its lifecycle by automatically time-stamping data, digitally signing files, and checking backups for integrity.\n5. Maintain the availability of data during its lifecycle by automatically backing up data or designing redundancy on the application architecture.\n6. If the application is storing or processing [Personally Identifiable Information (PII)](/library/glossary/G8/), carefully consider how the [Generally Accepted Privacy Principles (GAPP)](/library/glossary/G86/) will be applied on the application and its supporting processes.",
    "weakness_title_read_only": "Lack of process for collecting and protecting sensitive data",
    "weakness_id_read_only": "P1180",
    "weakness": "d0db87ea-36f4-4f02-9193-5c41d531f433",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "activities",
    "created": "2019-02-14T13:13:24.416000-05:00",
    "last_updated": "2023-04-24T10:26:09.900000-04:00",
    "custom": "False",
    "rules": "a51f437c-40f4-4b75-a1d7-91767230872c;bba3a932-302b-415e-b24a-6fb715b2d7a1;541a6527-47cc-4100-bb97-53b8b98c7948;2b5f47f2-88fd-484b-899a-023076dbce25;3574b6ec-b55d-4390-99e7-35866abe1e17;68c64fac-a002-469d-8f74-872b0a3352c9;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1228;A1229;A1230;A1231;A1232;A1233;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233"
  },
  {
    "countermeasure_id": "T1376",
    "universal_id": "f80b006d-80a9-42e0-b7a5-ee25b022fa80",
    "countermeasure_name": "Provide and maintain guidance on secure installation, maintenance, and configuration of all software components",
    "countermeasure_solution": "Provide details on how to validate the version of your software and clearly indicate for which versions of the software guidance is written.\n\nProvide guidance on:\n\n1) How to implement and operate the software securely.\n\n- Detailed instructions on how to configure all available security options and parameters of the software.\n- Where the software utilizes other systems for maintenance of tracking data, such as a log server, provide clear and sufficient guidance on the correct and complete setup and/or integration of the software with the log storage system. \n- Where third-party or execution-environment features are relied upon for the security of the transmitted data, provide clear and sufficient guidance on how to configure such features are included in the software implementation guidance made available to stakeholders\n- Where cryptographic methods provided by third-party software or aspects of the execution environment or platform on which the application is run are relied upon for the protection of sensitive data, provide clear and sufficient detail for correctly configuring these methods during the installation, initialization, or first use of the software in the implementation guidance.\n\n2) How to set configuration options of the execution environment and system components.\n\n- Clear and sufficient guidance for enabling any software security controls, features, or functions where user input or interaction is required to be mapped to this control correctly.\n- Clear and sufficient guidance for disabling or changing any authentication credentials or keys for built-in accounts where user input or interaction is required.\n- Clear and sufficient guidance for the process of configuring the retention period of sensitive data (transient and persistent) where user input or interaction is required.\n- Clear and sufficient guidance on the process of configuring protection methods where user input or interaction is required.\n- When any mitigation relies on features of the execution environment, provide guidance to the software users to enable those settings as part of the install process.\n- Clear and sufficient guidance for configuring authentication mechanisms where the software recommends, suggests, relies on, or otherwise facilitates the use of additional mechanisms (such as third-party VPNs, remote desktop features, and so on) to facilitate secure non-console access to the system on which the software is executed or directly to the software itself.\n\n3) How to implement security updates.\n\n- Inform users of the software updates, and provide clear and sufficient guidance on how they may be obtained and installed.\n\n4) How and where to report security issues.\n\nThis guidance is necessary even when the specific setting either:\n\n- Cannot be controlled by the software once the software is installed by the customer.\n- Is the responsibility of the customer and not the software vendor. \n    - Specifically outline that identification and authentication parameters must not be shared between individuals, programs, or in any way that prevents the unique identification of each access to a critical asset.\n\n5) Does not instruct the user to disable security settings or parameters within the installed environment, such as anti-malware software or firewall or other network-level protection systems.\n\n6) Does not instruct the user to execute the software in a privileged mode higher than what is required by the software.",
    "weakness_title_read_only": "Lack of guidance on secure installation, maintenance and configuration of all software components",
    "weakness_id_read_only": "P1181",
    "weakness": "7bda3c1f-1eb0-471c-b443-4e2f8132aa94",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "activities",
    "created": "2019-02-14T13:13:30.218000-05:00",
    "last_updated": "2023-04-20T12:09:53.755000-04:00",
    "custom": "False",
    "rules": "a51f437c-40f4-4b75-a1d7-91767230872c;bba3a932-302b-415e-b24a-6fb715b2d7a1;541a6527-47cc-4100-bb97-53b8b98c7948;2b5f47f2-88fd-484b-899a-023076dbce25;68c64fac-a002-469d-8f74-872b0a3352c9;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1228;A1229;A1230;A1231;A1233;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233"
  },
  {
    "countermeasure_id": "T1377",
    "universal_id": "e13ed610-18b6-414a-bd39-b5e39880b025",
    "countermeasure_name": "Establish and maintain a bi-directional communication channel for receiving security reports and sending security notifications",
    "countermeasure_solution": "Follow these guidelines to establish two-way security intelligence sharing channels with vendors and the security community:\n\n1. Establish a process to continuously gather and analyze [Cyber Threat Intelligence (CTI)](/library/glossary/G91/).\n2. Collect and analyze threat-related information from a range of [internal sources of CTI](/library/glossary/G92/).\n3. Establish and maintain a bi-directional communication channel, inbound from external and internal intelligence information sources and outbound to customers, installers, and other stakeholders to receive security updates and reports on security issues and recommendations.\n4. Establish [CTI communication channels](/library/glossary/G93/) used to exchange security information, with guidelines for utilizing them, to all relevant stakeholders (including public users). Stakeholders may use these channels to receive security notifications or submit their security issues. \n5. Notify all stakeholders (e.g., customers, end-users, installers) promptly of the details of a new vulnerability including its potential impact and criticality, schedule of a patch release, and alternative mitigation options before fixes are ready.",
    "weakness_title_read_only": "Lack of a communication channel for reporting security issues",
    "weakness_id_read_only": "P1182",
    "weakness": "77526bf5-eb38-4e55-aaba-1079e679f785",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "activities",
    "created": "2019-02-14T13:13:36.045000-05:00",
    "last_updated": "2023-04-20T12:11:47.811000-04:00",
    "custom": "False",
    "rules": "a51f437c-40f4-4b75-a1d7-91767230872c;bba3a932-302b-415e-b24a-6fb715b2d7a1;68c64fac-a002-469d-8f74-872b0a3352c9;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1228;A1229;A1233;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233"
  },
  {
    "countermeasure_id": "T1378",
    "universal_id": "25032e92-9ea7-4674-8faf-65151c987417",
    "countermeasure_name": "Release a change summary for each software update",
    "countermeasure_solution": "Follow these guidelines to communicate an efficient summary of changes for each software release:\n\n1. Collect all notes about software changes from code developers.\n2. Categorize and organize notes into [software release change categories](/library/glossary/G74/). \n3. Provide short descriptions for each item in the list (e.g., id, title, and summary communicating a bug fix in release notes).\n4. Clearly explain the software functionalities impacted by the change(s).\n5. Where possible, use a tool such as ARENA to automate the release note publication process. ARENA analyzes code changes by comparing code commits from the previous release with the new ones. It then provides a report of all changes, such as added, removed or changed files, classes, methods, variables, and so on.",
    "weakness_title_read_only": "Lack of a process for creating summary of changes upon each software update",
    "weakness_id_read_only": "P1177",
    "weakness": "6c18f08c-df09-4be9-b9ba-b360effa69ba",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "activities",
    "created": "2019-02-14T13:13:42.181000-05:00",
    "last_updated": "2023-04-20T12:18:35.039000-04:00",
    "custom": "False",
    "rules": "a51f437c-40f4-4b75-a1d7-91767230872c;bba3a932-302b-415e-b24a-6fb715b2d7a1;541a6527-47cc-4100-bb97-53b8b98c7948;2b5f47f2-88fd-484b-899a-023076dbce25;68c64fac-a002-469d-8f74-872b0a3352c9;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1228;A1229;A1230;A1231;A1233;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233"
  },
  {
    "countermeasure_id": "T1380",
    "universal_id": "d178cc68-3b05-47c5-8ec4-1e123e860f84",
    "countermeasure_name": "Enforce secure user registration and access control",
    "countermeasure_solution": "Follow these guidelines to manage user authorization and access controls to applications:\n\n1. Establish a processes for authorizing users that is defined in writing, approved by management and applied to all users.\n2. Ensure that the process associate access privileges with unique, designated users, and assign users with default access based on the [principle of least privilege](/library/glossary/G83/). Ensure that redundant UserIDs are not reissued.\n3. Maintain a repository containing details of all authorized users for each application. \n4. Regularly review the details of authorized users to ensure that access privileges remain appropriate, and that redundant authorizations have been deleted (e.g., for individuals who have changed roles or left the organization). Increase the frequency of reviews for users with special access privileges (e.g., from annually to quarterly).\n5. Restrict access to applications by using [sign-on and access control mechanisms](/library/glossary/G94/) such as passwords, tokens, or biometrics. Seek the approval of a senior business representative before any critical features of the sign-on process are bypassed, disabled, or changed.\n6. Identify the privileged access rights associated with each system and process, such as operating system, database management system, and any applications in general. Privileged access rights must be allocated to users based on a [need-to-know principle](/library/glossary/G95/).\n7. Record the allocation of privileged access rights and make sure allocation occurs only after an authorization process has taken place. \n8. Identify the condition under which all access rights must expire.\n9. Avoid the unauthorized usage of generic administration UserIDs. Great care must be exercised to maintain the confidentiality of secret authentication information for generic administrative UserIDs.\n10.Require additional levels of authentication (e.g., enable multi-factor authentication) when performing critical actions that involve [sensitive/personal information](/library/glossary/G8). For example, enable a password prompt when users attempt to change their personal/sensitive information.",
    "weakness_title_read_only": "Lack of process for user registration and enforcement of access control",
    "weakness_id_read_only": "P1185",
    "weakness": "507d8354-63c1-4adf-99cd-7c7e9115be73",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "activities",
    "created": "2019-02-14T13:13:54.212000-05:00",
    "last_updated": "2023-04-20T12:20:25.260000-04:00",
    "custom": "False",
    "rules": "a51f437c-40f4-4b75-a1d7-91767230872c;bba3a932-302b-415e-b24a-6fb715b2d7a1;541a6527-47cc-4100-bb97-53b8b98c7948;2b5f47f2-88fd-484b-899a-023076dbce25;68c64fac-a002-469d-8f74-872b0a3352c9;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9;4fd90244-5770-4b68-88a7-9445cca26ec8",
    "rules_read_only": "A1228;A1229;A1230;A1231;A1233;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233;A1077"
  },
  {
    "countermeasure_id": "T1381",
    "universal_id": "279a5cba-baf0-4ba1-9e1c-8960156c5660",
    "countermeasure_name": "Establish secure processes for key management",
    "countermeasure_solution": "Follow these guidelines to manage cryptographic keys:\n\n1. Document a [cryptographic key management process](/library/glossary/G96/) that covers the lifecycle of cryptographic keys, responsibilities of key owners, protection requirements for cryptographic keys, and how to handle [mandatory key disclosure](/library/glossary/G97/).\n2. Assign the ownership of cryptographic keys to individuals who are aware of their responsibilities for using and protecting keys (and, where necessary, disclosing keys). Discuss and confirm that they clearly understand their responsibilities for using and protecting cryptographic keys.\n3. Use unique cryptographic keys for providing security to critical assets, including both confidentiality and authenticity, as well as for providing other security services to the software (such as authentication of end-point or software updates) have a unique purpose. For example, no key may be used for both encryption and authentication operations.\n4. Implement strict access controls and secure backups to ensure that cryptographic keys are protected against access by unauthorized individuals or applications, accidental or malicious destruction, and unauthorized copying.\n5. Implement methods and procedures to revoke or replace public or open-box keys that are not unique per software instantiation.\n6. Consider revoking encryption keys whenever:\n    - Personnel with knowledge of the key leave the company or the role for which the knowledge was necessary.\n    - A key is suspected of or known to be compromised.\n7. Limit the use of a cryptographic key to a single purpose. This prevents multiple exposures on the occasion of a key compromise.",
    "weakness_title_read_only": "Lack of secure key management process",
    "weakness_id_read_only": "P1434",
    "weakness": "686ddd25-9cae-4deb-993f-9d867c533bb7",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "activities",
    "created": "2019-02-14T13:14:00.103000-05:00",
    "last_updated": "2023-04-20T12:22:21.684000-04:00",
    "custom": "False",
    "rules": "a51f437c-40f4-4b75-a1d7-91767230872c;bba3a932-302b-415e-b24a-6fb715b2d7a1;68c64fac-a002-469d-8f74-872b0a3352c9;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1228;A1229;A1233;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233"
  },
  {
    "countermeasure_id": "T1382",
    "universal_id": "406e15a1-4cfb-4eec-850c-da7e95cf62e0",
    "countermeasure_name": "Manage performance and capacity",
    "countermeasure_solution": "Follow these guidelines to manage software capacity and performance:\n\n1. Implement [software performance and capacity management procedures](/library/glossary/G98/).\n2. Plan for capacity management during the design of a new service, or when hanging an existing one.\n3. Create capacity acquisition plans, and define acquisition thresholds for different types of capacities (at a minimum, storage space, and size of inputs and outputs).\n4. Create capacity troubleshooting procedures to support existing incident management processes.\n5. Monitor existing activities to get an overview of the current state of services and components from a capacity and performance perspective. Define and monitor [application performance and capacity metrics](/library/glossary/G88/).\n6. Analyze any issues identified and promptly remediate them, such as if a storage space threshold is reached.\n7. Based on the result from the previous step, build a capacity baseline and forecast the capacity needs for each service or component.\n8. Define role and responsibilities for monitoring the performance of software activity, performance issues and resolution, and incident management.\n9. Establish capacity management reporting to gather and provide stakeholders with the data related to service capacity, service usage, and service performance.",
    "weakness_title_read_only": "Lack of process for performance and capacity management",
    "weakness_id_read_only": "P1190",
    "weakness": "7d06957a-ebf0-4379-b339-5c30a6c6d9b0",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "activities",
    "created": "2019-02-14T13:14:06.213000-05:00",
    "last_updated": "2023-04-20T12:30:35.798000-04:00",
    "custom": "False",
    "rules": "a51f437c-40f4-4b75-a1d7-91767230872c;bba3a932-302b-415e-b24a-6fb715b2d7a1;541a6527-47cc-4100-bb97-53b8b98c7948;68c64fac-a002-469d-8f74-872b0a3352c9;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1228;A1229;A1230;A1233;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233"
  },
  {
    "countermeasure_id": "T1383",
    "universal_id": "d304e4b9-868c-4fbc-b0c7-5ab2dcd45cd5",
    "countermeasure_name": "Separate development, test, and operational environments",
    "countermeasure_solution": "Follow these guidelines to segregate development environments:\n\n1. Establish two or more environments (e.g., dedicated networks) in which development and testing activities can be performed separately.\n2. Isolate the development and test environments from production environments, and from each other by hosting development and test systems on a separate, standalone network, or segregating the network using a virtual local area network (VLAN) and a firewall.\n3. Protect source code used in development environments by employing malware detection and protection mechanisms.\n4. Remove all unnecessary sensitive information (e.g., authentication details, developer comments in HTML or JavaScript or sensitive information about the organization) before deploying source code on the production environment.\n5. Use access controls to prevent development staff from making unauthorized changes to production environments.\n6. Applying strict version control over development software by using configuration management, recording access in a log, and archiving old versions of software regularly.\n7. Use filtering or blocking methods to prevent malicious mobile code from being downloaded into development environments.\n8. Use integrity-checking software and configuration management tools to protect source code in development environments (including software under development, business information used in the development process, and important system documentation).\n9. If access to externally-generated application source code is not possible, maintain a copy of the code in [escrow](/library/glossary/G99/) by a trusted external party. Verify with the third party and software supplier that the code is checked regularly to ensure it is up-to-date and works correctly.\n10. Provide dedicated development endpoints on non-production networks for implementing all development-related countermeasures, and provide separate endpoints on production networks for typical enterprise tasks.\n11. Prevent differences between environments. If needed, document the difference between the development/test environment and production environment to ease the release deployment process.",
    "weakness_title_read_only": "Deploying software in production on the same environment as development and testing",
    "weakness_id_read_only": "P1191",
    "weakness": "74f1c49d-e232-4d42-bdd6-60c1427f317f",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "activities",
    "created": "2019-02-14T13:14:12.151000-05:00",
    "last_updated": "2023-05-15T18:18:23.477000-04:00",
    "custom": "False",
    "rules": "a51f437c-40f4-4b75-a1d7-91767230872c;bba3a932-302b-415e-b24a-6fb715b2d7a1;541a6527-47cc-4100-bb97-53b8b98c7948;2b5f47f2-88fd-484b-899a-023076dbce25;3574b6ec-b55d-4390-99e7-35866abe1e17;68c64fac-a002-469d-8f74-872b0a3352c9;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1228;A1229;A1230;A1231;A1232;A1233;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233"
  },
  {
    "countermeasure_id": "T1384",
    "universal_id": "47dc9ece-2a58-4f7a-90a9-e76d761fe648",
    "countermeasure_name": "Back up and restore securely",
    "countermeasure_solution": "Follow these guidelines to implement an effective backup strategy:\n\n1. Document a [backup standard and supporting procedure](/library/glossary/G100/).\n2. Utilize a dedicated backup management software to strengthen the security of information backed up.\n3. Ensure that backups include operating systems, database server software, files, virtual machines, and password repositories. \n4. Record backups in a log that includes details about the data backed up, date and time of the backup, the virtual location or the backup media used and its physical location.\n5. Clearly and accurately identify backed up data as such.\n6. Protect backups from accidental overwriting, and subject them to the same level of protection as 'production' information. Additionally, consider implementing [key backup data protection controls](/library/glossary/G101/). \n7. Plan for backups plans considering legal, regulatory and contractual requirements such as the handling of [personally Identifiable Information (PII)](/library/glossary/G8/), document retention schedules and customer information.\n8. Review the backup plans to ensure that data is restored within a critical timescale beyond which a loss of service would be unacceptable to the organization. Backups must be kept as long as required by regulatory needs, a retention schedule, or service-level agreement (SLA) requirements. Remove backups that have expired their retention date from storage. \n9. For incremental backups, only back up data whose archive bit is 1 (changed).\n10. When planning database backups, consider doing logical backups for most databases. For Oracle backups use exp or Data Pump, and for Microsoft SQL Server use the Import and Export Wizard or SQL Server Integration Services utility.\n11. Verify backups to ensure that backed up software and information can be restored successfully. Document and follow [backup restoration best practices](/library/glossary/G102/).\n\nTo learn more about the types of backups and their differences, see [Backup Types](/library/glossary/G61/).\nTo familiarize yourself with the different techniques of performing backups, see [Backup Techniques](/library/glossary/G62/).",
    "weakness_title_read_only": "A secure backup and restore processes are missing or lacking",
    "weakness_id_read_only": "P1179",
    "weakness": "1e6d2e2f-d815-4c63-9ad4-06d2d3aa97ee",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "activities",
    "created": "2019-02-14T13:14:17.964000-05:00",
    "last_updated": "2023-04-20T12:26:36.471000-04:00",
    "custom": "False",
    "rules": "a51f437c-40f4-4b75-a1d7-91767230872c;bba3a932-302b-415e-b24a-6fb715b2d7a1;541a6527-47cc-4100-bb97-53b8b98c7948;2b5f47f2-88fd-484b-899a-023076dbce25;68c64fac-a002-469d-8f74-872b0a3352c9;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1228;A1229;A1230;A1231;A1233;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233"
  },
  {
    "countermeasure_id": "T1385",
    "universal_id": "3cd67d9d-89a7-439b-9ec9-d45f4cb57a40",
    "countermeasure_name": "Institute secure logging and event monitoring",
    "countermeasure_solution": "Follow these guidelines to establish and execute a process for logging and monitoring security events:\n\n1. Define audit log categories and configure the audit policies accordingly.\n2. Centralize the logs using automatic consolidation. Centralization and consolidation require technical configuration for synchronizing system clocks.\n3. Keep the logs in two formats: flat text file and log database file. Flat text files are easily compressible and ideal for archiving.\n4. Configure policies to set up real-time alerts and notifications for monitoring, such as Windows event logs for Windows systems and Syslogs for Nix systems.\n5. Adopt a methodology for continuous log monitoring by defining the frequency with which you want to check logs. Once a log is found with a suspicious pattern, an alert or notification must be issued.\n6. Generate reports for [key stakeholders](/library/glossary/G64/).\n7. Restrict the access to logs based on the [need-to-know principle](/library/glossary/G95/).\n8. Retain log files for a responsible amount of time (decide how long to keep log files based on business needs and regulation compliance).",
    "weakness_title_read_only": "No secure processes for logging and monitoring events",
    "weakness_id_read_only": "P1183",
    "weakness": "5ca54a8f-5a64-4cca-aabd-ecd03878693c",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "activities",
    "created": "2019-02-14T13:14:23.826000-05:00",
    "last_updated": "2023-04-20T12:28:51.743000-04:00",
    "custom": "False",
    "rules": "a51f437c-40f4-4b75-a1d7-91767230872c;bba3a932-302b-415e-b24a-6fb715b2d7a1;541a6527-47cc-4100-bb97-53b8b98c7948;2b5f47f2-88fd-484b-899a-023076dbce25;68c64fac-a002-469d-8f74-872b0a3352c9;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1228;A1229;A1230;A1231;A1233;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233"
  },
  {
    "countermeasure_id": "T1386",
    "universal_id": "b1685aca-8391-4ace-b203-1095da244109",
    "countermeasure_name": "Regulate the use of electronic messaging",
    "countermeasure_solution": "Follow these guidelines to acquire protect information transmitted over electronic messages:\n\n1. Set a clear classification threshold for mandatory encryption of email contents (for example, data classified as 'restricted' must not be sent over the Internet without encryption). Document and communicate the classification scheme, its criteria and handling requirements.\n2. Take steps to identify and protect proprietary data or [Intellectual Property (IP)](/library/glossary/G104/).\n3. Train staff on the means to properly encrypt information such as encrypting files with strong passwords, not sending information in the body of an email, and use of secure portals, and using strong passwords.\n4. Ensure that the IT service desk (or equivalent) is equipped to help staff when they receive questions and requests for assistance to protect sensitive data.\n5. Configure outbound emails sent to external addresses to carry a [standard email disclaimer](/library/glossary/G105/). \n6. Configure mail servers to send via mandatory TLS with clients and business partners.\n7. Implement data loss prevent (DLP) technology to prevent sensitive personal data from being sent through unencrypted emails.\n8. Educate users, suppliers and clients that your organization will never contact them asking for their username or passwords (or PINs or any other method of authentication). Encourage them to treat that such messages as phishing attempts and ignored, or reported to the service desk (or equivalent) for internal awareness and response. Messages asking the receiver to click on links or open attachments must be treated with extreme caution and verified prior to any action being taken (typically, calling the service desk for guidance on how to treat an unexpected message containing links or attachments).",
    "weakness_title_read_only": "Lack of a process for regulating the use of electronic messaging",
    "weakness_id_read_only": "P1226",
    "weakness": "1529e449-ed35-40de-a18d-acb2c22ac0b8",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "requirements",
    "created": "2019-02-14T13:14:29.718000-05:00",
    "last_updated": "2023-04-19T22:52:23.233000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1387",
    "universal_id": "e0d1d0a7-7c9a-4b8b-9bd4-5b7b9008d66b",
    "countermeasure_name": "Ensure the security of products acquired through the supply chain and contractors",
    "countermeasure_solution": "Follow these guidelines to acquire software securely:\n\n1. Document a standard for selecting and acquiring software, with [key third party software considerations](/library/glossary/G106/).\n2. Apply the considerations above to all software acquired throughout the organization, including operating system and virtualization software, enterprise software such as CRM applications, commercial-off-the-shelf software (COTS), and security software.\n3. Acquire or subscribe to software from approved suppliers by implementing [vendor controls](/library/glossary/G78/).\n4. Ensure that all acquired software is supported by maintenance arrangements.\n5. Obtain the adequate number and type of licenses for planned use, and keep proof of ownership of software. \n6. Test all acquired software extensively before distribution, deployment and use. Identify security deficiencies by detailed inspection, malware testing, vulnerability scanning, reference to published sources, or by participating in user/discussion groups. If possible perform penetration and vulnerability tests to help identify and resolve security weaknesses. \n7. Mitigate the risk of security weaknesses in acquired software by requesting and obtaining external [attestations from trusted sources](/library/glossary/G107/).\n8. Once the software has been acquired, update the asset register with its details.",
    "weakness_title_read_only": "Lack of a secure process for outsourcing",
    "weakness_id_read_only": "P1170",
    "weakness": "8a0ca736-65c2-4bc7-a03d-e4a83218fc6a",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "activities",
    "created": "2019-02-14T13:14:35.747000-05:00",
    "last_updated": "2023-04-20T02:41:28.314000-04:00",
    "custom": "False",
    "rules": "a51f437c-40f4-4b75-a1d7-91767230872c;bba3a932-302b-415e-b24a-6fb715b2d7a1;541a6527-47cc-4100-bb97-53b8b98c7948;2b5f47f2-88fd-484b-899a-023076dbce25;3574b6ec-b55d-4390-99e7-35866abe1e17;68c64fac-a002-469d-8f74-872b0a3352c9;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1228;A1229;A1230;A1231;A1232;A1233;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233"
  },
  {
    "countermeasure_id": "T1388",
    "universal_id": "bde8c0ad-435a-4e92-80ff-3c2aab0502fa",
    "countermeasure_name": "Triage and fix vulnerabilities discovered during automated and manual security tests",
    "countermeasure_solution": "Follow these guidelines to consistently triage and remediate software vulnerabilities:\n\n1. Consistently resolve security weaknesses identified during the testing processes (e.g., manual, SAST, DAST, Penetration testing, etc.).\n2. Record all security vulnerabilities details identified by manual and automated testing. \n3. Assess vulnerabilities for risk and impact following a common measuring method such as [CVSS (Common Vulnerability Scoring System)](https://nvd.nist.gov/vuln-metrics/cvss) if possible.\n4. Prioritize all vulnerabilities based on their assessed risk, and assign a designated owner for remediation.\n5. Track all vulnerabilities until remediation, and test before being closing them.",
    "weakness_title_read_only": "Unmanaged test result findings",
    "weakness_id_read_only": "P1225",
    "weakness": "c5309784-a75a-48f0-9bc9-2431d0bceaa5",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "activities",
    "created": "2019-02-14T13:14:41.757000-05:00",
    "last_updated": "2023-04-20T02:42:51.051000-04:00",
    "custom": "False",
    "rules": "a51f437c-40f4-4b75-a1d7-91767230872c;bba3a932-302b-415e-b24a-6fb715b2d7a1;541a6527-47cc-4100-bb97-53b8b98c7948;2b5f47f2-88fd-484b-899a-023076dbce25;68c64fac-a002-469d-8f74-872b0a3352c9;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1228;A1229;A1230;A1231;A1233;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233"
  },
  {
    "countermeasure_id": "T1389",
    "universal_id": "de31e1b2-e607-4957-babd-317f781bf616",
    "countermeasure_name": "Perform penetration testing",
    "countermeasure_solution": "Follow these guidelines to plan and perform penetration testing:\n\n1. Conduct a penetration test regularly (at least annually)  to determine the security and resilience in the design, architecture, coding and implementation of the target application(s).\n    - Determine the frequency of penetration tests based on factors such as exposure, criticality, and compliance.\n2. Identify and maintain a list of recognized external penetration testing entities, along with their availability and expertise.\n3. The penetration test must identify vulnerabilities in the target application that could be exploited by threats through [scoping penetration testing practice](/library/glossary/G63/).\n4. Take into account the [critical steps](/library/glossary/G113/) when testing web applications.\n5. Score and prioritize findings based on risk using an established criteria (e.g., Common Vulnerability Scoring System (CVSS), or a comparing with published references such as from Common Vulnerabilities and Exposures (CVEs), when available).\n6. Associate every vulnerability found with one or more recommendations for [remediation](/library/glossary/G114/). \n7. Combine effectiveness of all application security controls and the findings and:\n    - report to the [point of contact](/library/glossary/G115/) (member of IT team in charge of the application) with supporting recommendations\n    - present to management in clear business language\n    - record in an information [risk register](/library/glossary/G116/) (e.g., a spreadsheet, database, dedicated risk management tool or GRC product for remediation).\n8. Consider penetration testing as sensitive information and treat them as such. Share and communicate results on a need-to-know basis.\n9. Conduct penetration testing on production-like (as close to production as possible) environment instead of development or test environment.",
    "weakness_title_read_only": "Lack of a secure process for penetration testing",
    "weakness_id_read_only": "P1184",
    "weakness": "6e9699bf-acd4-4f8b-a4f7-93215d3e6619",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "activities",
    "created": "2019-02-14T13:14:47.706000-05:00",
    "last_updated": "2023-04-20T02:44:03.664000-04:00",
    "custom": "False",
    "rules": "a51f437c-40f4-4b75-a1d7-91767230872c;bba3a932-302b-415e-b24a-6fb715b2d7a1;68c64fac-a002-469d-8f74-872b0a3352c9;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1228;A1229;A1233;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233"
  },
  {
    "countermeasure_id": "T1392",
    "universal_id": "28eb3046-1603-4200-bba3-19f675206280",
    "countermeasure_name": "Test for Server Side Request Forgery",
    "countermeasure_solution": "Use Burp Suite to craft requests containing `URL` payloads to launch an SSRF attack:\n\n1. Try `http://127.0.0.1:80` as a URL (convert http://127.0.0.1:80 to base64 aHR0cDovLzEyNy4wLjAuMTo4MA== and run it on Burp repeater). This forces the vulnerable application to make a request on behalf of the attacker via its loopback network interface (localhost). If the response contains some information about the hosting (i.e. server banner), then the attack has been successful. This attack can be repeated using other URL payloads such as `http://169.254.169.254/latest/meta-data/` for fetching cloud meta-data, `http://localhost/server-status` for Apache HTTP Servers' status and so on.\n\n2. Try other URL schemes in the URL, such as Gopher, DICT and SFTP. Set up a virtual private server (VPS) and use its IP when crafting these URLs. When you receive a request (on your VPS), the SSRF attack has been successfully launched. This is because the vulnerable application has made a request to your VPS on your behalf. Alternatively, you can try the `file:///etc/passwd` URI payload and see if `passwd` is relayed back to you by the vulnerable application.\n\nFor a comprehensive list of SSRF attacks, see the [SSRF Bible Cheatsheet](https://github.com/jivoi/offsec_pdfs/blob/master/SSRF-Bible-Cheatsheet.pdf).",
    "weakness_title_read_only": "Server Side Request Forgery (SSRF)",
    "weakness_id_read_only": "P1169",
    "weakness": "321fe417-e2b5-4110-acef-180a70d809ee",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2019-02-22T15:10:49.654000-05:00",
    "last_updated": "2021-06-25T14:48:01.621000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1393",
    "universal_id": "d6e90272-b6e3-473a-a218-16b3986b3469",
    "countermeasure_name": "Mitigate Struts Double Evaluation",
    "countermeasure_solution": "Follow below best practices to mitigate Struts double evaluation:\n\n1. Do not use Struts 2's evaluation syntax (`${..}` and `%{..}`) in Struts [tags](https://struts.apache.org/getting-started/using-tags.html) or Struts configurations (neither in xml nor in-line configurations with the [convention plugin](https://struts.apache.org/plugins/convention/)). If you absolutely have to use one of these syntaxes, make sure that no untrusted user input is included in the configurations.\n\n        <s:hidden name=\"%{#parameters['name']}\"/>\n\n2. Do not use the `AliasInterceptor` with names and aliases controlled by user. See the following example:\n    \n        <action name=\"someAction\" class=\"com.examples.SomeAction\">\n            <param name=\"aliases\">#{ name : value }</param>\n            <interceptor-ref name=\"alias\"/>\n            <interceptor-ref name=\"basicStack\"/>\n            <result name=\"success\">result.ftl</result>\n        </action>\nin the above code, _name_ and _value_ must not include user input, because, any value that name and value are assigned to, will be evaluated directly as Object-Graph Navigation Language (OGNL). OGNL is an open-source expression language for Java that can be used for customizing Apache Struts.\n\n###Resources\n- [https://lgtm.com/blog/apache_struts_double_evaluations](https://lgtm.com/blog/apache_struts_double_evaluations)",
    "weakness_title_read_only": "Apache Struts Double Evaluation",
    "weakness_id_read_only": "P1189",
    "weakness": "2afa9b48-3ba9-4429-86e4-1ac0572a55ec",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "development",
    "created": "2019-02-26T18:57:55.473000-05:00",
    "last_updated": "2021-06-25T14:47:58.943000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1394",
    "universal_id": "b0dd62c5-144e-45d9-adf9-8d9637413263",
    "countermeasure_name": "Verify that the Code does not Use Vulnerable Apache Struts OGNL Double Evaluation Syntax",
    "countermeasure_solution": "Use the following guidelines to verify that no vulnerable syntax is present:\n\n1. Use a static code analyzer tool like [Fortify](https://vulncat.fortify.com/en/detail?id=desc.dataflow.java.ognl_expression_injection_double_evaluation) to detect any vulnerable syntax. Alternatively, if you use Eclipse as an IDE, you can use the [QL query language](https://lgtm.com/help/ql/introduction-to-ql) to find vulnerable syntaxes. For more info see this [link](https://lgtm.com/blog/apache_struts_double_evaluations).\n\nIf you absolutely need to use the vulnerable syntaxes, make sure that user inputs are not being used as parameters. Remember that sometimes user inputs may come from unexpected sources. For example, consider the following code snippet:\n\n```\n<action name=\"save\" class=\"org.apache.struts2.showcase.action.SkillAction\" method=\"save\">\n    <result type=\"redirect\">edit.action?skillName=${currentSkill.name}</result>\n</action>\n```\n\n__currentSkill.name__ configuration property may be set from a form submitted by the user.\n\n2. Make sure that  `AliasInterceptor` with names and aliases controlled by the user has not been used. This can cause double evaluation without the vulnerable syntax. Consider the following snippet:\n\n```\n<param name=\"aliases\">#{ #parameters['name'][0] : value }</param>\n<interceptor-ref name=\"alias\"/>\n<interceptor-ref name=\"basicStack\"/>\n<result name=\"success\">good_result.ftl</result>\n```\n\nThis configuration can cause RCE if there is a request like:\n\n```\nhttps://myDomain.com/myApp?name=expr\n```\n\nHere, the value of the request parameter is interpreted as OGNL directly, without needing to be wrapped inside the special `%{..}/${..}` syntax.\n\n3. Verify that the latest version of Apache Struts has been used.\n\nReferences:\n\n- [Apache Struts double evaluation RCE lottery](https://lgtm.com/blog/apache_struts_double_evaluations)",
    "weakness_title_read_only": "Apache Struts Double Evaluation",
    "weakness_id_read_only": "P1189",
    "weakness": "2afa9b48-3ba9-4429-86e4-1ac0572a55ec",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2019-03-11T11:33:58.772000-04:00",
    "last_updated": "2021-06-25T14:47:58.771000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1397",
    "universal_id": "24fe69dc-f9d6-4a31-960e-645032335cd7",
    "countermeasure_name": "Use the most recent service packs and hotfixes (Microsoft SQL Server)",
    "countermeasure_solution": "Ensure Latest SQL Server Service Packs and Hot fixes are Installed:\n\nSQL Server patches contain program updates that fix security and product functionality issues found in the software. These patches can be installed with a hot fix which is a single patch, a cumulative update which is a small group of patches or a service pack which is a large collection of patches. The SQL Server version and patch levels should be the most recent compatible with the organizations' operational needs.",
    "weakness_title_read_only": "Outdated service packs and hotfixes (Microsoft SQL Server)",
    "weakness_id_read_only": "P1192",
    "weakness": "d178d232-d010-48f2-8542-ee490e34c4d2",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2019-04-04T15:44:58.874000-04:00",
    "last_updated": "2021-06-25T14:47:56.462000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1398",
    "universal_id": "3aa94303-3373-47ed-a65e-bb982c533b3f",
    "countermeasure_name": "Verify that most recent service packs and hotfixes are installed (Microsoft SQL Server)",
    "countermeasure_solution": "To determine your SQL Server service pack level, run the following code snippet.\n```\nSELECT SERVERPROPERTY('ProductLevel') as SP_installed,\nSERVERPROPERTY('ProductVersion') as Version;\n```\n\nFirst column returns the installed Service Pack level, the second is the exact build number.",
    "weakness_title_read_only": "Outdated service packs and hotfixes (Microsoft SQL Server)",
    "weakness_id_read_only": "P1192",
    "weakness": "d178d232-d010-48f2-8542-ee490e34c4d2",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2019-04-04T15:44:58.891000-04:00",
    "last_updated": "2021-06-25T14:47:56.817000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1399",
    "universal_id": "ea4ccfcf-340e-44ed-ac7b-ef6aa93d1dde",
    "countermeasure_name": "Use a dedicated server for SQL server (Microsoft SQL Server)",
    "countermeasure_solution": "Ensure Single-Function Member Servers are Used:\n\nIt is recommended that SQL Server software be installed on a dedicated server. This architectural consideration affords security flexibility in that the database server can be placed on a separate subnet allowing access only from particular hosts and over particular protocols. Degrees of availability are easier to achieve as well - over time, an enterprise can move from a single database server to a failover to a cluster using load balancing or to some combination thereof.\n\nIt is difficult to see any reasonably adverse impact to make this architectural change, once the costs of making the change have been paid. Custom applications may need to be modified to accommodate database connections over the wire rather than on the host (i.e. using TCP/IP instead of Named Pipes). Additional hardware and operating system licenses may be required to make these architectural changes.",
    "weakness_title_read_only": "Using a shared machine for deploying SQL server (Microsoft SQL Server)",
    "weakness_id_read_only": "P1193",
    "weakness": "4653b8f3-3499-4290-ad7a-c388dab88bf5",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2019-04-04T15:44:58.969000-04:00",
    "last_updated": "2021-06-25T14:47:51.441000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1400",
    "universal_id": "c729c16f-e86c-4884-9265-ec6fca80efb4",
    "countermeasure_name": "Verify that a dedicated server is used for deploying SQL server (Microsoft SQL Server)",
    "countermeasure_solution": "Ensure that no other roles are enabled for the underlying operating system and no excess tools are Installed other than permitted by enterprise policy.",
    "weakness_title_read_only": "Using a shared machine for deploying SQL server (Microsoft SQL Server)",
    "weakness_id_read_only": "P1193",
    "weakness": "4653b8f3-3499-4290-ad7a-c388dab88bf5",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2019-04-04T15:44:58.985000-04:00",
    "last_updated": "2021-06-25T14:47:51.220000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1401",
    "universal_id": "0172dec8-871b-43a6-8451-f5f08bf87b3f",
    "countermeasure_name": "Disable ad hoc distributed queries (Microsoft SQL Server)",
    "countermeasure_solution": "Ensure 'Ad Hoc Distributed Queries' Server Configuration Option is set to '0':\nEnabling Ad Hoc Distributed Queries allows users to query data and execute statements on external data sources. This functionality should be disabled.",
    "weakness_title_read_only": "Enabled ad hoc distributed queries (Microsoft SQL Server)",
    "weakness_id_read_only": "P1194",
    "weakness": "03f0e4eb-00c1-4114-afc7-d7b30f05e297",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2019-04-04T15:44:59.057000-04:00",
    "last_updated": "2021-06-25T14:47:45.834000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1402",
    "universal_id": "c23eac32-3ab8-45e2-a2e8-e976cdc9ef26",
    "countermeasure_name": "Verify that ad hoc distributed queries are disabled (Microsoft SQL Server)",
    "countermeasure_solution": "Run the following T-SQL command:\n\n```\nSELECT name, CAST(value as int) as value_configured, CAST(value_in_use as int) as value_in_use\n\nFROM sys.configurations\n\nWHERE name = 'Ad Hoc Distributed Queries';\n```\n\nBoth value columns must show 0.",
    "weakness_title_read_only": "Enabled ad hoc distributed queries (Microsoft SQL Server)",
    "weakness_id_read_only": "P1194",
    "weakness": "03f0e4eb-00c1-4114-afc7-d7b30f05e297",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2019-04-04T15:44:59.073000-04:00",
    "last_updated": "2021-06-25T14:47:46.689000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1403",
    "universal_id": "9243906d-daf9-4254-9819-e3429dc33edf",
    "countermeasure_name": "Disable CLR (Microsoft SQL Server)",
    "countermeasure_solution": "Ensure 'CLR Enabled' Server Configuration Option is set to '0':\n\nThe `clr enabled` option specifies whether user assemblies can be run by SQL Server.\n\nIf CLR assemblies are in use, applications may need to be re architected to eliminate their usage before disabling this setting. Alternatively, some organizations may allow this setting to be enabled `1` for assemblies created with the `SAFE` permission set, but disallow assemblies created with the riskier `UNSAFE` and `EXTERNAL_ACCESS` permission sets. To find user-created assemblies, run the following query in all databases, replacing _`<database_name>`_ with each database name:\n```\nUSE [_<database_name>_]\nGO\nSELECT name AS Assembly_Name, permission_set_desc\nFROM sys.assemblies\nWHERE is_user_defined = 1;\nGO\n```",
    "weakness_title_read_only": "Enabled CLR (Microsoft SQL Server)",
    "weakness_id_read_only": "P1195",
    "weakness": "970ac036-e53b-4120-80e5-38d85ecaad64",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2019-04-04T15:44:59.142000-04:00",
    "last_updated": "2021-06-25T14:47:54.327000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1404",
    "universal_id": "b7d74f93-cfe0-47db-93a8-e51f2c9dfab3",
    "countermeasure_name": "Verify that CLR is disabled (Microsoft SQL Server)",
    "countermeasure_solution": "Run the following T-SQL command:\n```\nSELECT name,\n    CAST(value as int) as value_configured,\n    CAST(value_in_use as int) as value_in_use\nFROM sys.configurations\nWHERE name = 'clr enabled';\n```\n\nBoth value columns must show `0` to be compliant.",
    "weakness_title_read_only": "Enabled CLR (Microsoft SQL Server)",
    "weakness_id_read_only": "P1195",
    "weakness": "970ac036-e53b-4120-80e5-38d85ecaad64",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2019-04-04T15:44:59.158000-04:00",
    "last_updated": "2021-06-25T14:47:54.457000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1405",
    "universal_id": "1b20671f-2a0a-4618-b34a-a45843e3b431",
    "countermeasure_name": "Disable cross-database ownership chaining across all databases or at the server level (Microsoft SQL Server)",
    "countermeasure_solution": "Ensure 'Cross DB Ownership Chaining' Server Configuration Option is set to '0': The `cross db ownership chaining` option controls cross-database ownership chaining across all databases at the instance (or server) level.",
    "weakness_title_read_only": "Information disclosure through cross-database ownership chaining (Microsoft SQL Server)",
    "weakness_id_read_only": "P1196",
    "weakness": "2de0520a-3d03-4820-bb5e-754baef5f26d",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2019-04-04T15:44:59.228000-04:00",
    "last_updated": "2021-06-25T14:47:48.470000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1406",
    "universal_id": "3c6b7021-16c3-42b5-acef-e53ae6b85f1d",
    "countermeasure_name": "Verify that cross-database ownership chaining is disabled across all databases or at the server level (Microsoft SQL Server)",
    "countermeasure_solution": "If required, Cross-database ownership chaining should only be enabled for the specific databases at instance level by using the command `ALTER DATABASE_<database_name>_SET DB_CHAINING ON` . This database option may not be changed on the `master`, `model`, or `tempdb` system databases.",
    "weakness_title_read_only": "Information disclosure through cross-database ownership chaining (Microsoft SQL Server)",
    "weakness_id_read_only": "P1196",
    "weakness": "2de0520a-3d03-4820-bb5e-754baef5f26d",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2019-04-04T15:44:59.243000-04:00",
    "last_updated": "2021-06-25T14:47:47.428000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1407",
    "universal_id": "e08914fe-80d4-4d3f-8986-c7eaa26f9da9",
    "countermeasure_name": "Disable 'Database Mail XPs' option (Microsoft SQL Server)",
    "countermeasure_solution": "Ensure 'Database Mail XPs' Server Configuration Option is set to '0':\nThe `Database Mail XPs` option controls the ability to generate and transmit email messages from SQL Server.",
    "weakness_title_read_only": "Enabled 'Database Mail XPs' option (Microsoft SQL Server)",
    "weakness_id_read_only": "P1197",
    "weakness": "23a9f35a-05b8-4c76-8de3-447352c8ba2d",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "deployment",
    "created": "2019-04-04T15:44:59.314000-04:00",
    "last_updated": "2021-06-25T14:47:45.534000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1408",
    "universal_id": "e3f98ac2-fa36-44bb-84ba-df50359fd819",
    "countermeasure_name": "Verify that 'Database Mail XPs' option is disabled (Microsoft SQL Server)",
    "countermeasure_solution": "Run the following T-SQL command:\n```\nSELECT name,\n    CAST(value as int) as value_configured,\n    CAST(value_in_use as int) as value_in_use\nFROM sys.configurations\nWHERE name = 'Database Mail XPs';\n```\nBoth value columns must show `0` to be compliant.",
    "weakness_title_read_only": "Enabled 'Database Mail XPs' option (Microsoft SQL Server)",
    "weakness_id_read_only": "P1197",
    "weakness": "23a9f35a-05b8-4c76-8de3-447352c8ba2d",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "testing",
    "created": "2019-04-04T15:44:59.329000-04:00",
    "last_updated": "2021-06-25T14:47:48.101000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1409",
    "universal_id": "3693c46d-8edd-477c-bedf-eb8bff31c15f",
    "countermeasure_name": "Disable 'Ole Automation Procedures' option (Microsoft SQL Server)",
    "countermeasure_solution": "Ensure 'Ole Automation Procedures' Server Configuration Option is set to '0':\nThe `Ole Automation Procedures` option controls whether OLE Automation objects can be instantiated within Transact-SQL batches. These are extended stored procedures that allow SQL Server users to execute functions external to SQL Server.",
    "weakness_title_read_only": "Enabled 'Ole Automation Procedures' option for executing functions external to SQL server (Microsoft SQL Server)",
    "weakness_id_read_only": "P1198",
    "weakness": "f9239dc1-82c9-40ec-87e9-4f429d3016d8",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2019-04-04T15:44:59.397000-04:00",
    "last_updated": "2021-06-25T14:47:46.383000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1410",
    "universal_id": "afa40352-8c66-4027-966b-fa08e061f4bf",
    "countermeasure_name": "Verify that 'Ole Automation Procedures' is disabled (Microsoft SQL Server)",
    "countermeasure_solution": "Run the following T-SQL command:\n```\nSELECT name,\n    CAST(value as int) as value_configured,\n    CAST(value_in_use as int) as value_in_use\nFROM sys.configurations\nWHERE name = 'Ole Automation Procedures';\n```\nBoth value columns must show `0` to be compliant.",
    "weakness_title_read_only": "Enabled 'Ole Automation Procedures' option for executing functions external to SQL server (Microsoft SQL Server)",
    "weakness_id_read_only": "P1198",
    "weakness": "f9239dc1-82c9-40ec-87e9-4f429d3016d8",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2019-04-04T15:44:59.413000-04:00",
    "last_updated": "2021-06-25T14:47:47.956000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1411",
    "universal_id": "2b55cbc4-ecf3-42dd-8761-fe1276fac8a9",
    "countermeasure_name": "Disable 'Remote Access' option (Microsoft SQL Server)",
    "countermeasure_solution": "Ensure 'Remote Access' Server Configuration Option is set to '0':\nThe `remote access` option controls the execution of local stored procedures on remote servers or remote stored procedures on local server.\nAs per Microsoft this feature will be removed in the next version of Microsoft SQL Server. Do not use this feature in new developments and update applications that are currently using this feature with `sp_addlinkedserver`.",
    "weakness_title_read_only": "Enabled 'Remote Access' option (Microsoft SQL Server)",
    "weakness_id_read_only": "P1199",
    "weakness": "81314ec0-f64f-445a-b301-3cffc66912e6",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2019-04-04T15:44:59.481000-04:00",
    "last_updated": "2021-06-25T14:47:52.861000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1412",
    "universal_id": "e4e8c1be-650b-4007-87a4-854dd85a594c",
    "countermeasure_name": "Verify that 'Remote Access' option is disabled (Microsoft SQL Server)",
    "countermeasure_solution": "Run the following T-SQL command:\n```\nSELECT name,\n    CAST(value as int) as value_configured,\n    CAST(value_in_use as int) as value_in_use\nFROM sys.configurations\nWHERE name = 'remote access';\n```\nBoth value columns must show `0`.",
    "weakness_title_read_only": "Enabled 'Remote Access' option (Microsoft SQL Server)",
    "weakness_id_read_only": "P1199",
    "weakness": "81314ec0-f64f-445a-b301-3cffc66912e6",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2019-04-04T15:44:59.497000-04:00",
    "last_updated": "2021-06-25T14:47:52.573000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1413",
    "universal_id": "605646ac-a993-454e-a899-a780a2ea7709",
    "countermeasure_name": "Disable remote admin connections by default (Microsoft SQL Server)",
    "countermeasure_solution": "Ensure 'Remote Admin Connections' Server Configuration Option is set to '0':\nThe `remote admin connections` option controls whether a client application on a remote computer can use the Dedicated Administrator Connection (DAC).\n\n__Note:__ You can keep this option enabled only for failover clusters in Microsoft SQL Server",
    "weakness_title_read_only": "Allowing remote admin connections (Microsoft SQL Server)",
    "weakness_id_read_only": "P1200",
    "weakness": "fc6b2e6f-d2a5-479a-9abd-772d6185110e",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2019-04-04T15:44:59.564000-04:00",
    "last_updated": "2021-06-25T14:47:52.918000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1414",
    "universal_id": "852f1a54-92ec-4086-9da7-83b1adf0c8af",
    "countermeasure_name": "Verify that remote admin connections are disabled by default (Microsoft SQL Server)",
    "countermeasure_solution": "Run the following T-SQL command:\n```\nUSE master;\nGO\nSELECT name,\n    CAST(value as int) as value_configured,\n    CAST(value_in_use as int) as value_in_use\nFROM sys.configurations\nWHERE name = 'remote admin connections'\nAND SERVERPROPERTY('IsClustered') = 0;\n```\nIf no data is returned, the instance is a cluster and this recommendation is not applicable. If data is returned, then both the value columns must show `0` to be compliant. Note that this option may be enabled only for failover clusters in Microsoft SQL Server.",
    "weakness_title_read_only": "Allowing remote admin connections (Microsoft SQL Server)",
    "weakness_id_read_only": "P1200",
    "weakness": "fc6b2e6f-d2a5-479a-9abd-772d6185110e",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2019-04-04T15:44:59.580000-04:00",
    "last_updated": "2021-06-25T14:47:52.400000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1415",
    "universal_id": "d6e8592f-5cdb-4931-94b2-f986456d4d99",
    "countermeasure_name": "Disable scanning for startup processes (Microsoft SQL Server)",
    "countermeasure_solution": "Ensure 'Scan For Startup Procs' Server Configuration Option is set to '0':\n\nThe `scan for startup procs` option, if enabled, causes SQL Server to scan for and automatically run all stored procedures that are set to execute upon service startup.\n\nSetting scan for startup procedures to `0` will prevent certain audit traces and other commonly used monitoring stored procedures from re-starting on start up. Additionally, replication requires this setting to be enabled (`1`) and will automatically change this setting if needed.",
    "weakness_title_read_only": "Running stored procedures at startup (Microsoft SQL Server)",
    "weakness_id_read_only": "P1201",
    "weakness": "20eae008-4314-46ff-a443-64bf3c969b95",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2019-04-04T15:44:59.648000-04:00",
    "last_updated": "2021-06-25T14:47:48.596000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1416",
    "universal_id": "a9a6c043-9149-45b1-9ab4-3c3955a2a810",
    "countermeasure_name": "Verify that scanning for startup processes is disabled (Microsoft SQL Server)",
    "countermeasure_solution": "Run the following T-SQL command:\n```\nSELECT name,\n    CAST(value as int) as value_configured,\n    CAST(value_in_use as int) as value_in_use\nFROM sys.configurations\nWHERE name = 'scan for startup procs';\n```\nBoth value columns must show `0`.",
    "weakness_title_read_only": "Running stored procedures at startup (Microsoft SQL Server)",
    "weakness_id_read_only": "P1201",
    "weakness": "20eae008-4314-46ff-a443-64bf3c969b95",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2019-04-04T15:44:59.663000-04:00",
    "last_updated": "2021-06-25T14:47:48.263000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1417",
    "universal_id": "53226365-972f-4e16-8ffc-de039945926d",
    "countermeasure_name": "Disable 'Trustworthy' database option (Microsoft SQL Server)",
    "countermeasure_solution": "Ensure 'Trustworthy' database property is set to 'Off':\n\nThe `TRUSTWORTHY` database option allows database objects to access objects in other databases under certain circumstances.",
    "weakness_title_read_only": "Allowing database objects to access objects in other databases (Microsoft SQL Server)",
    "weakness_id_read_only": "P1202",
    "weakness": "1910a497-c5f4-4b41-be84-008dcc1377e8",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2019-04-04T15:44:59.732000-04:00",
    "last_updated": "2021-06-25T14:47:45.633000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1418",
    "universal_id": "6780379d-82a6-4ace-b016-c1ab4586e9cd",
    "countermeasure_name": "Verify that 'Trustworthy' database option is disabled (Microsoft SQL Server)",
    "countermeasure_solution": "Run the following T-SQL query to list any databases with a Trustworthy database property value of `ON`:\n```\nSELECT name\nFROM sys.databases\nWHERE is_trustworthy_on = 1\nAND name != 'msdb';\n```\nNo rows should be returned.",
    "weakness_title_read_only": "Allowing database objects to access objects in other databases (Microsoft SQL Server)",
    "weakness_id_read_only": "P1202",
    "weakness": "1910a497-c5f4-4b41-be84-008dcc1377e8",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2019-04-04T15:44:59.748000-04:00",
    "last_updated": "2021-06-25T14:47:47.204000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1419",
    "universal_id": "fe1ce691-642d-414c-9401-23f77fab44d7",
    "countermeasure_name": "Disable unnecessary SQL server protocols (Microsoft SQL Server)",
    "countermeasure_solution": "Ensure unnecessary SQL server protocols are set to 'Disabled':\n\nSQL Server supports Shared Memory, Named Pipes, and TCP/IP protocols. However, SQL Server should be configured to use the bare minimum required based on the organization's needs. The Database Engine (MSSQL and SQLAgent) services must be stopped and restarted for the changes to take effect.",
    "weakness_title_read_only": "Unnecessary protocols (Microsoft SQL Server)",
    "weakness_id_read_only": "P1203",
    "weakness": "3c23bdd9-084c-43e2-ba82-dbc2333879e0",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "deployment",
    "created": "2019-04-04T15:44:59.819000-04:00",
    "last_updated": "2021-06-25T14:47:55.694000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1420",
    "universal_id": "dba24b23-13c8-4785-bc24-3c46d7cef691",
    "countermeasure_name": "Verify that unnecessary SQL server protocols are disabled (Microsoft SQL Server)",
    "countermeasure_solution": "Open **SQL Server Configuration Manager**; go to the **SQL Server Network Configuration**. Ensure that only required protocols are enabled.",
    "weakness_title_read_only": "Unnecessary protocols (Microsoft SQL Server)",
    "weakness_id_read_only": "P1203",
    "weakness": "3c23bdd9-084c-43e2-ba82-dbc2333879e0",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "testing",
    "created": "2019-04-04T15:44:59.835000-04:00",
    "last_updated": "2021-06-25T14:47:55.875000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1421",
    "universal_id": "30107850-297c-4990-affe-19e797765b83",
    "countermeasure_name": "Do not use default ports (Microsoft SQL Server)",
    "countermeasure_solution": "Ensure SQL Server is configured to use non-standard ports:\n\nIf installed, a default SQL Server instance will be assigned a default port of `TCP:1433` for TCP/IP communication. Administrators can also manually configure named instances to use `TCP:1433` for communication. `TCP:1433` is a widely known SQL Server port and this port assignment should be changed. In a multi-instance scenario, each instance must be assigned its own dedicated TCP/IP port.\n\nChanging the default port will force the DAC (Dedicated Administrator Connection) to listen on a random port. Also, it might make benign applications, such as application firewalls, require special configuration. In general, you should set a static port for consistent usage by applications, including firewalls, instead of using dynamic ports which will be chosen randomly at each SQL Server start up.",
    "weakness_title_read_only": "Using default ports (Microsoft SQL Server)",
    "weakness_id_read_only": "P1204",
    "weakness": "21f4c5f0-838c-4e30-8af3-bbc07dd2e45d",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "deployment",
    "created": "2019-04-04T15:44:59.903000-04:00",
    "last_updated": "2021-06-25T14:47:53.140000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1422",
    "universal_id": "ef17648c-4b43-486d-8894-e733c1dbbc95",
    "countermeasure_name": "Verify that default ports are not used (Microsoft SQL Server)",
    "countermeasure_solution": "Run the following T-SQL script:\n```\nDECLARE @value nvarchar(256);\nEXECUTE master.dbo.xp_instance_regread\n    N'HKEY_LOCAL_MACHINE',\n    N'SOFTWARE\\Microsoft\\Microsoft SQL Server\\MSSQLServer\\SuperSocketNetLib\\Tcp\\IPAll',\n    N'TcpPort',\n    @value OUTPUT,\n    N'no_output';\nSELECT @value AS TCP_Port WHERE @value = '1433';\n```\nThis should return no rows.",
    "weakness_title_read_only": "Using default ports (Microsoft SQL Server)",
    "weakness_id_read_only": "P1204",
    "weakness": "21f4c5f0-838c-4e30-8af3-bbc07dd2e45d",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "testing",
    "created": "2019-04-04T15:44:59.920000-04:00",
    "last_updated": "2021-06-25T14:47:52.617000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1423",
    "universal_id": "04fc0a68-7ce5-472e-8c27-d637c7f59dd8",
    "countermeasure_name": "Enable 'Hide Instance' option (Microsoft SQL Server)",
    "countermeasure_solution": "Ensure 'Hide Instance' option is set to 'Yes' for Production SQL Server instances:\n\nNon-clustered SQL Server instances within production environments should be designated as hidden to prevent advertisement by the SQL Server Browser service. This method only prevents the instance from being listed on the network. If the instance is hidden (not exposed by SQL Browser), then connections will need to specify the server and port in order to connect. It does not prevent users from connecting to server if they know the instance name and port. If you hide a clustered named instance, the cluster service may not be able to connect to the SQL Server. Please refer to the Microsoft documentation reference.",
    "weakness_title_read_only": "Not hidden production SQL server instances (Microsoft SQL Server)",
    "weakness_id_read_only": "P1205",
    "weakness": "a3aaa11c-96bd-4941-ae79-1a902fae6496",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "deployment",
    "created": "2019-04-04T15:44:59.987000-04:00",
    "last_updated": "2021-06-25T14:47:37.864000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1424",
    "universal_id": "2d05daf6-85a0-48b0-b8eb-b0b20c5b0f88",
    "countermeasure_name": "Verify that 'Hide Instance' option is enabled (Microsoft SQL Server)",
    "countermeasure_solution": "Perform either the GUI or T-SQL method shown:\n\n#### GUI Method\n\n1. In **SQL Server Configuration Manager**, expand **SQL Server Network Configuration**, right-click **Protocols for <InstanceName>**, and then select **Properties**.\n\n2. On the **Flags** tab, in the **Hide Instance** box, if `Yes` is selected, it is compliant.\n\n#### T-SQL Method\n\nExecute the following T-SQL.\n```\nDECLARE @getValue INT;\nEXEC master..xp_instance_regread\n    @rootkey = N'HKEY_LOCAL_MACHINE',\n    @key = N'SOFTWARE\\Microsoft\\Microsoft SQL Server\\MSSQLServer\\SuperSocketNetLib',\n    @value_name = N'HideInstance',\n    @value = @getValue OUTPUT;\nSELECT @getValue;\n```\nA value of `1` should be returned to be compliant.",
    "weakness_title_read_only": "Not hidden production SQL server instances (Microsoft SQL Server)",
    "weakness_id_read_only": "P1205",
    "weakness": "a3aaa11c-96bd-4941-ae79-1a902fae6496",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "testing",
    "created": "2019-04-04T15:45:00.002000-04:00",
    "last_updated": "2021-06-25T14:47:37.767000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1425",
    "universal_id": "62e6af4d-c0f2-4614-89f3-a2ec3072dfde",
    "countermeasure_name": "Disable 'sa' login account (Microsoft SQL Server)",
    "countermeasure_solution": "Ensure the 'sa' Login Account is set to 'Disabled':\n\nThe `sa` account is a widely known and often widely used SQL Server account with sysadmin privileges. This is the original login created during installation and always has the `principal_id=1` and `sid=0x01`.\n\nIt is not a good security practice to code applications or scripts to use the `sa` account. However, if this has been done, disabling the `sa` account will prevent scripts and applications from authenticating to the database server and executing required tasks or functions.",
    "weakness_title_read_only": "Enabled SQL server account with sysadmin privileges (Microsoft SQL Server)",
    "weakness_id_read_only": "P1206",
    "weakness": "99c9d0c1-18ed-42a7-8c17-ec6fccf91110",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2019-04-04T15:45:00.072000-04:00",
    "last_updated": "2021-06-25T14:47:46.401000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1426",
    "universal_id": "4c002823-793f-40e5-b8f7-86fac3596412",
    "countermeasure_name": "Verify that 'sa' login account is disabled (Microsoft SQL Server)",
    "countermeasure_solution": "Use the following syntax to determine if the `sa` account is disabled. Checking for `sid=0x01` ensures that the original `sa` account is being checked in case it has been renamed per best practices.\n```\nSELECT name, is_disabled\nFROM sys.server_principals\nWHERE sid = 0x01\nAND is_disabled = 0;\n```\nNo rows should be returned to be compliant.\nAn `is_disabled` value of `0` indicates the login is currently enabled and therefore needs remediation.",
    "weakness_title_read_only": "Enabled SQL server account with sysadmin privileges (Microsoft SQL Server)",
    "weakness_id_read_only": "P1206",
    "weakness": "99c9d0c1-18ed-42a7-8c17-ec6fccf91110",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2019-04-04T15:45:00.088000-04:00",
    "last_updated": "2021-06-25T14:47:46.801000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1427",
    "universal_id": "f1878447-5d67-4aba-b5a6-9e777efc8fbb",
    "countermeasure_name": "Rename 'sa' login account (Microsoft SQL Server)",
    "countermeasure_solution": "Ensure the 'sa' login account has been renamed:\n\nThe `sa` account is a widely known and often widely used SQL Server login with sysadmin privileges. The `sa` login is the original login created during installation and always has `principal_id=1` and `sid=0x01`.\nIt is not a good security practice to code applications or scripts to use the `sa` login. However, if this has been done, renaming the `sa` login will prevent scripts and applications from authenticating to the database server and executing required tasks or functions.\n\nEnsure no login exists with the name 'sa':\n\nThe `sa` login (e.g. principal) is a widely known and often widely used SQL Server account. Therefore, there should not be a login called `sa` even when the original `sa` login (`principal_id = 1`) has been renamed.\n\nIt is not a good security practice to code applications or scripts to use the `sa` account. Given that it is a best practice to rename and disable the `sa` account, some third party applications check for the existence of a login named `sa` and if it doesn't exist they create one. Removing the `sa` login will prevent these scripts and applications from authenticating to the database server and executing required tasks or functions.",
    "weakness_title_read_only": "Using the default 'sa' login account (Microsoft SQL Server)",
    "weakness_id_read_only": "P1207",
    "weakness": "76de9dad-5eff-4705-9ee5-ff50f4d5359d",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2019-04-04T15:45:00.165000-04:00",
    "last_updated": "2021-06-25T14:47:49.943000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1428",
    "universal_id": "417772eb-a403-4982-b75e-975c02830770",
    "countermeasure_name": "Verify that there is no 'sa' login account (Microsoft SQL Server)",
    "countermeasure_solution": "Use the following syntax to determine if the `sa` login (principal) is renamed.\n```\nSELECT name\nFROM sys.server_principals\nWHERE sid = 0x01;\n```\nA name of `sa` indicates the account has not been renamed and therefore needs remediation.\n\nUse the following syntax to determine if there is an account named `sa`.\n```\nSELECT principal_id, name,\nFROM sys.server_principals\nWHERE name = 'sa';\n```\nNo rows should be returned.",
    "weakness_title_read_only": "Using the default 'sa' login account (Microsoft SQL Server)",
    "weakness_id_read_only": "P1207",
    "weakness": "76de9dad-5eff-4705-9ee5-ff50f4d5359d",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2019-04-04T15:45:00.187000-04:00",
    "last_updated": "2021-06-25T14:47:46.505000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1429",
    "universal_id": "55d26184-c22f-4b7f-9267-11b276a4c474",
    "countermeasure_name": "Disable 'xp_cmdshell' option (Microsoft SQL Server)",
    "countermeasure_solution": "Ensure 'xp_cmdshell' Server Configuration Option is set to '0':\n\nThe `xp_cmdshell` option controls whether the `xp_cmdshell` extended stored procedure can be used by an authenticated SQL Server user to execute operating-system command shell commands and return results as rows within the SQL client.",
    "weakness_title_read_only": "Enabled 'xp_cmdshell' option (Microsoft SQL Server)",
    "weakness_id_read_only": "P1208",
    "weakness": "1a4723e4-513a-4a8a-9d40-483d022ed7f3",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2019-04-04T15:45:00.268000-04:00",
    "last_updated": "2021-06-25T14:47:44.991000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1430",
    "universal_id": "9185400a-3baf-41e1-9d74-6ce7215be914",
    "countermeasure_name": "Verify that 'xp_cmdshell' option is disabled (Microsoft SQL Server)",
    "countermeasure_solution": "Run the following T-SQL command:\n```\nSELECT name,\n    CAST(value as int) as value_configured,\n    CAST(value_in_use as int) as value_in_use\nFROM sys.configurations\nWHERE name = 'xp_cmdshell';\n```\nBoth value columns must show `0` to be compliant.",
    "weakness_title_read_only": "Enabled 'xp_cmdshell' option (Microsoft SQL Server)",
    "weakness_id_read_only": "P1208",
    "weakness": "1a4723e4-513a-4a8a-9d40-483d022ed7f3",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2019-04-04T15:45:00.283000-04:00",
    "last_updated": "2021-06-25T14:47:49.279000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1431",
    "universal_id": "f1644a56-335e-4297-a25c-8b38ccbc070d",
    "countermeasure_name": "Do not close the database when the connections are terminated (Microsoft SQL Server)",
    "countermeasure_solution": "Ensure 'AUTO_CLOSE' is set to 'OFF' on contained databases:\n`AUTO_CLOSE` determines if a given database is closed or not after a connection terminates. If enabled, subsequent connections to the given database will require the database to be reopened and relevant procedure caches to be rebuilt.",
    "weakness_title_read_only": "Closing the database after terminating the connections (Microsoft SQL Server)",
    "weakness_id_read_only": "P1209",
    "weakness": "c95446f2-d015-4915-9839-eaf485d40f8d",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2019-04-04T15:45:00.351000-04:00",
    "last_updated": "2021-06-25T14:47:40.629000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1432",
    "universal_id": "0e61cbb7-5c50-4ef8-ad5e-7ff19aa50149",
    "countermeasure_name": "Verify that the database is not closed when the connections are terminated (Microsoft SQL Server)",
    "countermeasure_solution": "Perform the following to find contained databases that are not configured as prescribed:\n```\nSELECT name, containment, containment_desc, is_auto_close_on\nFROM sys.databases\nWHERE containment <> 0 and is_auto_close_on = 1;\n```\nNo rows should be returned.",
    "weakness_title_read_only": "Closing the database after terminating the connections (Microsoft SQL Server)",
    "weakness_id_read_only": "P1209",
    "weakness": "c95446f2-d015-4915-9839-eaf485d40f8d",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2019-04-04T15:45:00.367000-04:00",
    "last_updated": "2021-06-25T14:47:39.974000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1433",
    "universal_id": "61d77689-b954-46f6-b1b9-9b40298242d7",
    "countermeasure_name": "Use Windows authentication mode for server authentication (Microsoft SQL Server)",
    "countermeasure_solution": "Ensure 'Server Authentication' Property is set to 'Windows Authentication Mode': Uses **Windows Authentication** to validate attempted connections.\nChanging the login mode configuration requires a restart of the service.",
    "weakness_title_read_only": "Using SQL server's internal server authentication (Microsoft SQL Server)",
    "weakness_id_read_only": "P1210",
    "weakness": "51db2f4d-bb3a-4b93-8687-61a0d50fba2c",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2019-04-04T15:45:00.477000-04:00",
    "last_updated": "2021-06-25T14:47:42.282000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1434",
    "universal_id": "99d2d43f-321f-4ddb-b064-06e5dbfd0561",
    "countermeasure_name": "Verify that Windows authentication mode is used for server authentication (Microsoft SQL Server)",
    "countermeasure_solution": "Execute the following syntax:\n```\nSELECT SERVERPROPERTY('IsIntegratedSecurityOnly') as [login_mode];\n```\nA `login_mode` of `1` indicates the **Server Authentication** property is set to **Windows Authentication Mode**. A `login_mode` of `0` indicates mixed mode authentication.",
    "weakness_title_read_only": "Using SQL server's internal server authentication (Microsoft SQL Server)",
    "weakness_id_read_only": "P1210",
    "weakness": "51db2f4d-bb3a-4b93-8687-61a0d50fba2c",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2019-04-04T15:45:00.493000-04:00",
    "last_updated": "2021-06-25T14:47:42.186000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1435",
    "universal_id": "128c5b8a-6b4a-4345-ba02-3cd859e54297",
    "countermeasure_name": "Revoke connect permission for guest user (Microsoft SQL Server)",
    "countermeasure_solution": "Ensure CONNECT permissions on the 'guest' user is Revoked within all SQL Server databases excluding the master, msdb and tempdb:\nRevoke the right of the `guest` user to connect to SQL Server databases, except for `master`, `msdb`, and `tempdb`.\n\nWhen `CONNECT` permission for the `guest` user is revoked, a SQL Server instance login must be mapped to a database user explicitly in order to have access to the database.",
    "weakness_title_read_only": "Permitting the guest user to connect to the database (Microsoft SQL Server)",
    "weakness_id_read_only": "P1211",
    "weakness": "a45855f1-7951-45f0-871b-4c78a40d6894",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2019-04-04T15:45:00.562000-04:00",
    "last_updated": "2021-06-25T14:47:42.929000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1436",
    "universal_id": "55d425e3-5ad2-4a13-89ca-b8680801af7a",
    "countermeasure_name": "Verify that connect permission for the guest user is revoked (Microsoft SQL Server)",
    "countermeasure_solution": "Run the following code snippet for each database (replacing `<database_name>` as appropriate) in the instance to determine if the `guest` user has `CONNECT` permission. No rows should be returned.\n```\nUSE [<database_name>];\nGO\n\nSELECT DB_NAME() AS DatabaseName, 'guest' AS Database_User, [permission_name], [state_desc]\nFROM sys.database_permissions\nWHERE [grantee_principal_id] = DATABASE_PRINCIPAL_ID('guest')\nAND [state_desc] LIKE 'GRANT%'\nAND [permission_name] = 'CONNECT'\nAND DB_NAME() NOT IN ('master','tempdb','msdb');\n```",
    "weakness_title_read_only": "Permitting the guest user to connect to the database (Microsoft SQL Server)",
    "weakness_id_read_only": "P1211",
    "weakness": "a45855f1-7951-45f0-871b-4c78a40d6894",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2019-04-04T15:45:00.579000-04:00",
    "last_updated": "2021-06-25T14:47:42.775000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1437",
    "universal_id": "05e6ad1e-a98e-4f58-97fd-067e5701b574",
    "countermeasure_name": "Remove all orphaned users from the database (Microsoft SQL Server)",
    "countermeasure_solution": "Ensure 'Orphaned Users' are dropped from SQL Server databases:\n\nA database user for which the corresponding SQL Server login is undefined or is incorrectly defined on a server instance cannot log in to the instance and is referred to as orphaned and should be removed.",
    "weakness_title_read_only": "Orphan users (Microsoft SQL Server)",
    "weakness_id_read_only": "P1212",
    "weakness": "3740e71d-429b-4e91-adcb-76ba023b0df2",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "deployment",
    "created": "2019-04-04T15:45:00.646000-04:00",
    "last_updated": "2021-06-25T14:47:56.055000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1438",
    "universal_id": "3ed0a164-dffd-476a-adf9-8b3f44a5137d",
    "countermeasure_name": "Verify that all orphaned users are removed (Microsoft SQL Server)",
    "countermeasure_solution": "Run the following T-SQL query in each database to identify orphan users. No rows should be returned.\n```\nUSE [_<database_name>_];\nGO\nEXEC sp_change_users_login @Action='Report';\n```",
    "weakness_title_read_only": "Orphan users (Microsoft SQL Server)",
    "weakness_id_read_only": "P1212",
    "weakness": "3740e71d-429b-4e91-adcb-76ba023b0df2",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2019-04-04T15:45:00.662000-04:00",
    "last_updated": "2021-06-25T14:47:56.121000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1439",
    "universal_id": "8ed888c2-d783-4280-8f52-931a95ea92e5",
    "countermeasure_name": "Do not use SQL server authentication for contained databases (Microsoft SQL Server)",
    "countermeasure_solution": "Leverage Windows authenticated users in contained databases.\n\nContained databases do not enforce password complexity rules for SQL authenticated users. while contained databases provide flexibility in relocating databases to different instances and different environments, This must be balanced with the consideration that no password policy mechanism exists for SQL authenticated users in contained databases.",
    "weakness_title_read_only": "Using SQL server authentication for contained databases (Microsoft SQL Server)",
    "weakness_id_read_only": "P1213",
    "weakness": "3dc747e0-3616-417b-bc1d-ca17d89551c6",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2019-04-04T15:45:00.731000-04:00",
    "last_updated": "2021-06-25T14:47:43.743000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1440",
    "universal_id": "104639d0-6cad-4c89-abc6-f5b42d46d601",
    "countermeasure_name": "Verify that SQL server authentication is not used for contained databases (Microsoft SQL Server)",
    "countermeasure_solution": "Execute the following T-SQL in each contained database to find database users that are using SQL authentication:\n```\nSELECT name AS DBUser\nFROM sys.database_principals\nWHERE name NOT IN ('dbo','Information_Schema','sys','guest')\nAND type IN ('U','S','G')\nAND authentication_type = 2;\nGO\n```",
    "weakness_title_read_only": "Using SQL server authentication for contained databases (Microsoft SQL Server)",
    "weakness_id_read_only": "P1213",
    "weakness": "3dc747e0-3616-417b-bc1d-ca17d89551c6",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2019-04-04T15:45:00.746000-04:00",
    "last_updated": "2021-06-25T14:47:43.541000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1441",
    "universal_id": "7103aa6e-ffa9-4d3e-9554-e84166c8883d",
    "countermeasure_name": "Do not grant administrator privileges to the service accounts (Microsoft SQL Server)",
    "countermeasure_solution": "Ensure the SQL Server's MSSQL Service Account is Not an Administrator:\n\nThe service account and/or service SID used by the `MSSQLSERVER` service for a default instance or `MSSQL$_<InstanceName>_` service for a named instance should not be a member of the Windows Administrator group either directly or indirectly (via a group). This also means that the account known as `LocalSystem` (aka `NT AUTHORITY\\SYSTEM`) should not be used for the `MSSQL` service as this account has higher privileges than the SQL Server service requires.\n\nThe **SQL Server Configuration Manager** tool should always be used to change the SQL Server's service account. This will ensure that the account has the necessary privileges. If the service needs access to resources other than the standard Microsoft defined directories and registry, then additional permissions may need to be granted separately to those resources.\n\nIf using the auto restart feature, then the `SQLAGENT` service must be an Administrator.\n\nEnsure the SQL Server's Full-Text Service Account is Not an Administrator: The service account and/or service SID used by the `MSSQLFDLauncher` service for a default instance or `MSSQLFDLauncher$_<InstanceName>_` service for a named instance should not be a member of the Windows Administrator group either directly or indirectly (via a group). This also means that the account known as `LocalSystem` (aka `NT AUTHORITY\\SYSTEM`) should not be used for the Full-Text service as this account has higher privileges than the SQL Server service requires.\n\nThe **SQL Server Configuration Manager** tool should always be used to change the SQL Server's service account. This will ensure that the account has the necessary privileges. If the service needs access to resources other than the standard Microsoft-defined directories and registry, then additional permissions may need to be granted separately to those resources.",
    "weakness_title_read_only": "Administrator privileges for service accounts (Microsoft SQL Server)",
    "weakness_id_read_only": "P1214",
    "weakness": "6fbf1378-9a46-45e3-882e-114cae970879",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2019-04-04T15:45:00.829000-04:00",
    "last_updated": "2021-06-25T14:47:52.006000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1442",
    "universal_id": "b4e06cff-133a-4497-971c-310200ac21dd",
    "countermeasure_name": "Verify that administrator privileges are not granted to the service accounts (Microsoft SQL Server)",
    "countermeasure_solution": "Verify that the service account (in case of a local or AD account) and service `SID` are not members of the Windows Administrators group.",
    "weakness_title_read_only": "Administrator privileges for service accounts (Microsoft SQL Server)",
    "weakness_id_read_only": "P1214",
    "weakness": "6fbf1378-9a46-45e3-882e-114cae970879",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2019-04-04T15:45:00.856000-04:00",
    "last_updated": "2023-03-07T10:53:08.058000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1443",
    "universal_id": "809da41f-7150-452a-bc88-615951177e3f",
    "countermeasure_name": "Assign only Microsoft specified permissions to the 'public' role (Microsoft SQL Server)",
    "countermeasure_solution": "Ensure only the default permissions specified by Microsoft are granted to the public server role:\n\n`public` is a special fixed server role containing all logins. Unlike other fixed server roles, permissions can be changed for the `public` role. In keeping with the principle of least privileges, the `public` server role should not be used to grant permissions at the server scope as these would be inherited by all users.\n\nWhen the extraneous permissions are revoked from the `public` server role, access may be lost unless the permissions are granted to the explicit logins or to user-defined server roles containing the logins which require the access.",
    "weakness_title_read_only": "Extra permissions assigned to the 'public' role (Microsoft SQL Server)",
    "weakness_id_read_only": "P1215",
    "weakness": "14e265b4-52ae-448f-b451-1a75ad2f029d",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2019-04-04T15:45:01.027000-04:00",
    "last_updated": "2021-06-25T14:47:48.578000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1444",
    "universal_id": "b3651877-d6a1-4c03-b083-ef501ed98992",
    "countermeasure_name": "Verify that only Microsoft specified permissions are assigned to the 'public' role (Microsoft SQL Server)",
    "countermeasure_solution": "Use the following syntax to determine if extra permissions have been granted to the `public` server role.\n```\nSELECT *\nFROM master.sys.server_permissions\nWHERE (grantee_principal_id = SUSER_SID(N'public') and state_desc LIKE 'GRANT%')\nAND NOT (state_desc = 'GRANT' and [permission_name] = 'VIEW ANY DATABASE' and class_desc = 'SERVER')\nAND NOT (state_desc = 'GRANT' and [permission_name] = 'CONNECT' and class_desc = 'ENDPOINT' and major_id = 2)\nAND NOT (state_desc = 'GRANT' and [permission_name] = 'CONNECT' and class_desc = 'ENDPOINT' and major_id = 3)\nAND NOT (state_desc = 'GRANT' and [permission_name] = 'CONNECT' and class_desc = 'ENDPOINT' and major_id = 4)\nAND NOT (state_desc = 'GRANT' and [permission_name] = 'CONNECT' and class_desc = 'ENDPOINT' and major_id = 5);\n```\nThis query should not return any rows.",
    "weakness_title_read_only": "Extra permissions assigned to the 'public' role (Microsoft SQL Server)",
    "weakness_id_read_only": "P1215",
    "weakness": "14e265b4-52ae-448f-b451-1a75ad2f029d",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2019-04-04T15:45:01.044000-04:00",
    "last_updated": "2021-06-25T14:47:47.657000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1445",
    "universal_id": "8821ad50-3195-4740-bfc8-967fdac4394a",
    "countermeasure_name": "Do not use builtin or local Windows groups as SQL server logins (Microsoft SQL Server)",
    "countermeasure_solution": " - Ensure Windows BUILTIN groups are not SQL Logins:\n\n    Prior to SQL Server 2008, the `BUILTIN\\Administrators` group was added a SQL Server login with sysadmin privileges during installation by default. Best practices promote creating an Active Directory level group containing approved DBA staff accounts and using this controlled AD group as the login with sysadmin privileges. The AD group should be specified during SQL Server installation and the `BUILTIN\\Administrators` group would not need login capabilities.\n\n    Before dropping the `BUILTIN` group logins, ensure that alternative AD Groups or Windows logins have been added with equivalent permissions. Otherwise, the SQL Server instance may become totally inaccessible.\n\n- Ensure Windows local groups are not SQL Logins:\n\n    Local Windows groups should not be used as logins for SQL Server instances. Before dropping the local group logins, ensure that alternative AD Groups or Windows logins have been added with equivalent permissions. Otherwise, the SQL Server instance may become totally inaccessible.",
    "weakness_title_read_only": "Using builtin or local Windows groups as login for SQL server (Microsoft SQL Server)",
    "weakness_id_read_only": "P1216",
    "weakness": "cf1f296f-efce-478b-a506-a401320410cf",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "deployment",
    "created": "2019-04-04T15:45:01.121000-04:00",
    "last_updated": "2021-06-25T14:47:42.106000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1446",
    "universal_id": "105d507b-bb71-4d3a-a5f8-451a0b1be16e",
    "countermeasure_name": "Verify that builtin or local Windows groups are not used as SQL server logins (Microsoft SQL Server)",
    "countermeasure_solution": "Use the following syntax to determine if any `BUILTIN` groups or accounts have been added as SQL Server Logins.\n```\nSELECT pr.[name], pe.[permission_name], pe.[state_desc]\nFROM sys.server_principals pr\nJOIN sys.server_permissions pe\nON pr.principal_id = pe.grantee_principal_id\nWHERE pr.name like 'BUILTIN%';\n```\nThis query should not return any rows.\n\nUse the following syntax to determine if any local groups have been added as SQL Server Logins.\n```\nUSE [master]\nGO\nSELECT pr.[name] AS LocalGroupName, pe.[permission_name], pe.[state_desc]\nFROM sys.server_principals pr\nJOIN sys.server_permissions pe\nON pr.[principal_id] = pe.[grantee_principal_id]\nWHERE pr.[type_desc] = 'WINDOWS_GROUP'\nAND pr.[name] like CAST(SERVERPROPERTY('MachineName') AS nvarchar) + '%';\n```\nThis query should not return any rows.",
    "weakness_title_read_only": "Using builtin or local Windows groups as login for SQL server (Microsoft SQL Server)",
    "weakness_id_read_only": "P1216",
    "weakness": "cf1f296f-efce-478b-a506-a401320410cf",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2019-04-04T15:45:01.141000-04:00",
    "last_updated": "2021-06-25T14:47:42.159000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1447",
    "universal_id": "f8b2e885-ddc0-4625-a82c-d36274379a84",
    "countermeasure_name": "Do not grant access to SQL Agent proxies to the 'public' role (Microsoft SQL Server)",
    "countermeasure_solution": "Ensure the public role in the msdb database is not granted access to SQL Agent proxies: The `public` database role contains every user in the `msdb` database. SQL Agent proxies define a security context in which a job step can run.\nBefore revoking the `public` role from the proxy, ensure that alternative logins or appropriate user-defined database roles have been added with equivalent permissions. Otherwise, SQL agent job steps dependent upon this access will fail.",
    "weakness_title_read_only": "Access to SQL Agent proxy for the 'public' role (Microsoft SQL Server)",
    "weakness_id_read_only": "P1217",
    "weakness": "a4a37cee-52d4-451e-a5ff-47f224a95a62",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2019-04-04T15:45:01.261000-04:00",
    "last_updated": "2021-06-25T14:47:46.171000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1448",
    "universal_id": "eae26b62-3ef6-4bab-b91b-96de835c4763",
    "countermeasure_name": "Verify that 'public' role does not have access permissions to SQL Agent proxies (Microsoft SQL Server)",
    "countermeasure_solution": "Use the following syntax to determine if access to any proxies have been granted to the `msdb` database's `public` role.\n```\nUSE [msdb]\nGO\nSELECT sp.name AS proxyname\nFROM dbo.sysproxylogin spl\nJOIN sys.database_principals dp\nON dp.sid = spl.sid\nJOIN sysproxies sp\nON sp.proxy_id = spl.proxy_id\nWHERE principal_id = USER_ID('public');\nGO\n```\nThis query should not return any rows.",
    "weakness_title_read_only": "Access to SQL Agent proxy for the 'public' role (Microsoft SQL Server)",
    "weakness_id_read_only": "P1217",
    "weakness": "a4a37cee-52d4-451e-a5ff-47f224a95a62",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2019-04-04T15:45:01.277000-04:00",
    "last_updated": "2021-06-25T14:47:49.483000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1449",
    "universal_id": "71cfa67e-d947-4aa3-9a1f-2e345673ddbe",
    "countermeasure_name": "Setup a secure password policy (Microsoft SQL Server)",
    "countermeasure_solution": "Ensure 'MUST_CHANGE' Option is set to 'ON' for All SQL Authenticated Logins: Whenever this option is set to `ON`, SQL Server will prompt for an updated password for the first time the new or altered login is used.\n\nBoth `CHECK_EXPIRATION` and `CHECK_POLICY` options must be `ON`. End users must be able to change the password.\n\nEnsure 'CHECK_EXPIRATION' Option is set to 'ON' for All SQL Authenticated Logins Within the Sysadmin Role: Password expiry policy should be same for Windows and SQL Server\n\nThis is a recommendation for systems which are not using Windows authentication logins. Regarding limiting this rule to only logins with `sysadmin` and `CONTROL SERVER` privileges, there are too many applications that run with less than sysadmin level privileges that have hard-coded passwords or effectively hard-coded passwords (whatever is set the first time is nearly impossible to change). There are several lines of business applications that are considered best of breed which have this configuration.\nAlso, keep in mind that the password policy is taken from the computer's local policy, which is similar to domain policy setting. Many organizations have different password policy with regards to service accounts. These are handled in AD by setting the account's password not to expire and having some other process track when they need to be changed. With this second control in place, this is perfectly acceptable from an audit perspective. If you treat a SQL Server login as a service account, then configurations must be similar. This ensures that the password change will take place during a communicated downtime window and not arbitrarily.\n\nEnsure 'CHECK_POLICY' Option is set to 'ON' for All SQL Authenticated Logins: This applies the same password complexity policy for SQL Server that's being used in Windows. This is a recommendation for systems which cannot follow Windows authentication configuration.\n\nWeak passwords can lead to compromised systems. SQL Server authenticated logins password policy is based upon computer's local policy, which is typically set by the default domain policy setting. The setting is only enforced when the password is changed. This setting does not force existing weak passwords to be changed.",
    "weakness_title_read_only": "Weak password security policy (Microsoft SQL Server)",
    "weakness_id_read_only": "P1218",
    "weakness": "8f0f7469-6a50-4943-8a9e-b13dae710206",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2019-04-04T15:45:01.365000-04:00",
    "last_updated": "2021-06-25T14:47:44.242000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1450",
    "universal_id": "ae8f8425-4f19-4b72-abf9-ce0d4d748a6c",
    "countermeasure_name": "Verify that a secure password policy is set up (Microsoft SQL Server)",
    "countermeasure_solution": "1. Open **SQL Server Management Studio**.\n\n2. Open **Object Explorer** and connect to the target instance.\n\n3. Navigate to the **Logins** tab in **Object Explorer** and expand. Right click on the desired login and select **Properties**.\n\n4. Verify the User must change password at next login checkbox is checked.\n\n**Note:** This audit procedure is only applicable immediately after the login has been created or altered to force the password change. Once the password is changed, there is no way to know specifically that this option was the forcing mechanism behind a password change.\n\nRun the following T-SQL statement to find `sysadmin` or equivalent logins with `CHECK_EXPIRATION = OFF`. No rows should be returned.\n```\nSELECT l.[name], 'sysadmin membership' AS 'Access_Method'\nFROM sys.sql_logins AS l\nWHERE IS_SRVROLEMEMBER('sysadmin',name) = 1\nAND l.is_expiration_checked = 1\nUNION ALL\nSELECT l.[name], 'CONTROL SERVER' AS 'Access_Method'\nFROM sys.sql_logins AS l\nJOIN sys.server_permissions AS p\nON l.principal_id = p.grantee_principal_id\nWHERE p.type = 'CL' AND p.state IN ('G', 'W')\nAND l.is_expiration_checked = 1;\n```\nUse the following code snippet to determine the status of SQL Logins and if their password complexity is enforced.\n```\nSELECT name, is_disabled\nFROM sys.sql_logins\nWHERE is_policy_checked = 0;\n```\nThe `is_policy_checked` value of `0` indicates that the `CHECK_POLICY` option is `OFF`; value of `1` indicates its `ON`. If `is_disabled` value is `1`, then the login is disabled and unusable. If no rows are returned then either no SQL Authenticated logins exist or they all have `CHECK_POLICY ON`.",
    "weakness_title_read_only": "Weak password security policy (Microsoft SQL Server)",
    "weakness_id_read_only": "P1218",
    "weakness": "8f0f7469-6a50-4943-8a9e-b13dae710206",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2019-04-04T15:45:01.391000-04:00",
    "last_updated": "2021-06-25T14:47:44.188000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1451",
    "universal_id": "a99feb2e-de02-4661-ba3b-76ad93d34d1e",
    "countermeasure_name": "Maintain audit logs for all database activities (Microsoft SQL Server)",
    "countermeasure_solution": "Ensure 'Maximum number of error log files' is set to greater than or equal to '12':\n\nSQL Server error log files must be protected from loss. The log files must be backed up before they are overwritten. Retaining more error logs helps in identifying weaknesses and problems.\n\nOnce the max number of error logs is reached, the oldest error log file is deleted each time SQL Server restarts or `sp_cycle_errorlog`command is executed.\n\nEnsure 'Default Trace Enabled' Server Configuration Option is set to '1':\nThe default trace provides audit logs of database activities, including account creations, privilege elevation, and execution of DBCC commands.\n\nEnsure 'Login Auditing' is set to 'failed logins':\nThis setting will record failed authentication attempts for SQL Server logins to the **SQL Server Errorlog**. This is the default setting for SQL Server.\n\nHistorically, this setting has been available in all versions and editions of SQL Server. Prior to the availability of **SQL Server Audit**, this was the only provided mechanism for capturing logins (successful or failed).\n\nAt a minimum, we want to ensure failed logins are captured in order to detect if an adversary is attempting to brute force passwords or otherwise attempting to access a SQL Server improperly.\n\nChanging the setting requires a restart of the SQL Server service.\n\nEnsure 'SQL Server Audit' is set to capture both 'failed' and 'successful logins':\n\nSQL Server Audit is capable of capturing both failed and successful logins and writing them to one of three places: the application event log, the security event log, or the file system. We will use it to capture any login attempt to SQL Server, as well as any attempts to change audit policy. This will also serve to be a second source to record failed login attempts.\n\nWith the previous recommendation, only failed logins are captured. If the audit object is not implemented with the appropriate setting, SQL Server will not capture successful logins, which might be useful for forensics.",
    "weakness_title_read_only": "Not logging important events (Microsoft SQL Server)",
    "weakness_id_read_only": "P1219",
    "weakness": "cf098bf0-9e8e-4706-9511-11b099deff08",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2019-04-04T15:45:01.589000-04:00",
    "last_updated": "2022-08-18T17:03:45.945000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1452",
    "universal_id": "ae02e131-08c3-4d96-88ae-093311919343",
    "countermeasure_name": "Verify that audit logs are maintained for all database activities (Microsoft SQL Server)",
    "countermeasure_solution": "Perform either the GUI or T-SQL method shown:\n\n#### GUI Method\n\n1. Open **SQL Server Management Studio**.\n2. Open **Object Explorer** and connect to the target instance.\n3. Navigate to the **Management** tab in **Object Explorer** and expand. Right click on the **SQL Server Logs** file and select **Configure**.\n4. Verify the **Limit the number of error log files before they are recycled** checkbox is checked\n5. Verify the **Maximum number of error log files** is greater than or equal to `12`\n\n#### T-SQL Method\n\nRun the following T-SQL. The `NumberOfLogFiles` returned should be greater than or equal to `12`.\n\n```\nDECLARE @NumErrorLogs int;\nEXEC master.sys.xp_instance_regread\nN'HKEY_LOCAL_MACHINE',\nN'Software\\Microsoft\\MSSQLServer\\MSSQLServer',\nN'NumErrorLogs',\n@NumErrorLogs OUTPUT;\nSELECT ISNULL(@NumErrorLogs, -1) AS [NumberOfLogFiles];\n```\nRun the following T-SQL command:\n\n```\nSELECT name,\n    CAST(value as int) as value_configured,\n    CAST(value_in_use as int) as value_in_use\nFROM sys.configurations\nWHERE name = 'default trace enabled';\n```\nBoth value columns must show `1`.\n```\nEXEC xp_loginconfig 'audit level';\n```\n\nA `config_value` of `failure` indicates a server will maintain the audit logs for **Failed logins only**. If a `config_value` of `all` appears, then both failed and successful logins are being logged. Both settings should also be considered valid, but as mentioned capturing successful logins using this method creates lots of noise in the **SQL Server Errorlog**.\n```\nSELECT\n  S.name AS 'Audit Name'\n, CASE S.is_state_enabled\nWHEN 1 THEN 'Y'\nWHEN 0 THEN 'N' END AS 'Audit Enabled'\n, S.type_desc AS 'Write Location'\n, SA.name AS 'Audit Specification Name'\n, CASE SA.is_state_enabled\nWHEN 1 THEN 'Y'\nWHEN 0 THEN 'N' END AS 'Audit Specification Enabled'\n, SAD.audit_action_name\n, SAD.audited_result\nFROM sys.server_audit_specification_details AS SAD\nJOIN sys.server_audit_specifications AS SA\nON SAD.server_specification_id = SA.server_specification_id\nJOIN sys.server_audits AS S\nON SA.audit_guid = S.audit_guid\nWHERE SAD.audit_action_id IN ('CNAU', 'LGFL', 'LGSD');\n```\nThe result set should contain 3 rows, one for each of the following `audit_action_names`:\n\n- `AUDIT_CHANGE_GROUP`\n- `FAILED_LOGIN_GROUP`\n- `SUCCESSFUL_LOGIN_GROUP`\n\nBoth the Audit and Audit specification should be enabled and the `audited_result` should include both success and failure logs.",
    "weakness_title_read_only": "Not logging important events (Microsoft SQL Server)",
    "weakness_id_read_only": "P1219",
    "weakness": "cf098bf0-9e8e-4706-9511-11b099deff08",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2019-04-04T15:45:01.620000-04:00",
    "last_updated": "2021-06-25T14:47:57.641000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1453",
    "universal_id": "81f239a9-437e-46a3-a246-a498a99df23d",
    "countermeasure_name": "Validate user input before transmitting it to the SQL server (Microsoft SQL Server)",
    "countermeasure_solution": "Ensure Sanitize database and application user input is Sanitized:\n\nAlways validate user input received from a database client or Application by testing type, length, format, and range Prior to transmitting It to the database server.\n\nSanitize user input may require changes to Application code or database object syntax. These changes can require applications or databases to be taken temporarily off-line. any change to TSQL or Application code should be thoroughly tested in testing environment before production implementation.",
    "weakness_title_read_only": "No input validation (Microsoft SQL Server)",
    "weakness_id_read_only": "P1220",
    "weakness": "5340f42e-27f5-4114-8bd9-0cb5d64c82f6",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2019-04-04T15:45:01.845000-04:00",
    "last_updated": "2021-06-25T14:47:53.922000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1454",
    "universal_id": "1f8dc0cd-22f7-4920-a58e-73e239a5657c",
    "countermeasure_name": "Verify that user input is validated before transmitting it to the database server (Microsoft SQL Server)",
    "countermeasure_solution": "Check with the application teams to ensure any database interaction is through the use of stored procedures and not dynamic SQL. Revoke any `INSERT`, `UPDATE`, or `DELETE` privileges to users so that modifications of the data is done through stored procedures. Verify that there's no SQL query in the application code produced by string concatenation.",
    "weakness_title_read_only": "No input validation (Microsoft SQL Server)",
    "weakness_id_read_only": "P1220",
    "weakness": "5340f42e-27f5-4114-8bd9-0cb5d64c82f6",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2019-04-04T15:45:01.862000-04:00",
    "last_updated": "2021-06-25T14:47:54.235000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1455",
    "universal_id": "8568ab97-de32-4766-b862-d67686ee0f4e",
    "countermeasure_name": "Prevent CLR assemblies for accessing external system resources (Microsoft SQL Server)",
    "countermeasure_solution": "Ensure 'CLR Assembly Permission Set' is set to 'SAFE_ACCESS' for All CLR Assemblies:\n\nSetting CLR Assembly Permission Sets to `SAFE_ACCESS` will prevent assemblies from accessing external system resources such as files, network, environment variables, or the registry.\n\nThe remediation measure should first be tested within a test environment prior to the production, ensure the assembly still functions as designed with `SAFE` permission setting.",
    "weakness_title_read_only": "Broad permissions for CLR assemblies (Microsoft SQL Server)",
    "weakness_id_read_only": "P1221",
    "weakness": "0e54ff07-fe0e-4223-8576-63bad822adb7",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2019-04-04T15:45:01.936000-04:00",
    "last_updated": "2021-06-25T14:47:46.719000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1456",
    "universal_id": "71484c01-c11c-4273-b948-6fbcef9d94cb",
    "countermeasure_name": "Verify that 'SAFE_ACCESS' is set for all CLR assemblies (Microsoft SQL Server)",
    "countermeasure_solution": "Execute the following SQL statement:\n```\nSELECT name,\n    permission_set_desc\nFROM sys.assemblies\nWHERE is_user_defined = 1;\n```\nAll the returned assemblies should show `SAFE_ACCESS` in the `permission_set_desc` column.",
    "weakness_title_read_only": "Broad permissions for CLR assemblies (Microsoft SQL Server)",
    "weakness_id_read_only": "P1221",
    "weakness": "0e54ff07-fe0e-4223-8576-63bad822adb7",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2019-04-04T15:45:01.952000-04:00",
    "last_updated": "2021-06-25T14:47:47.415000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1457",
    "universal_id": "ed4a6242-e387-4b89-9ee4-17369f7b6a79",
    "countermeasure_name": "Use a strong symmetric key encryption algorithm (Microsoft SQL Server)",
    "countermeasure_solution": "Ensure 'Symmetric Key encryption algorithm' is set to 'AES_128' or higher in non-system databases:\n\nPer the Microsoft Best Practices, only the SQL Server AES algorithm options, `AES_128`, `AES_192`, and `AES_256`, should be used for a symmetric key encryption algorithm.\n\nEliminates use of weak and deprecated algorithms which may put a system at higher risk of an attacker breaking the key.\n\nEncrypted data cannot be compressed, but compressed data can be encrypted. If you use compression, you should compress data before encrypting it.",
    "weakness_title_read_only": "Using weak symmetric encryption keys (Microsoft SQL Server)",
    "weakness_id_read_only": "P1222",
    "weakness": "34e12b63-e0a3-4fb3-a38f-3de37a15ceae",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2019-04-04T15:45:02.021000-04:00",
    "last_updated": "2021-06-25T14:47:37.650000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1458",
    "universal_id": "998d58de-1756-44b4-8f98-b4a462fa4ff3",
    "countermeasure_name": "Verify that a strong symmetric key encryption algorithm is used (Microsoft SQL Server)",
    "countermeasure_solution": "Run the following code for each individual user database:\n```\nUSE [<database_name>]\nGO\n\nSELECT db_name() AS Database_Name, name AS Key_Name\nFROM sys.symmetric_keys\nWHERE algorithm_desc NOT IN ('AES_128','AES_192','AES_256')\nAND db_id() > 4;\nGO\n```\nFor compliance, no rows should be returned.",
    "weakness_title_read_only": "Using weak symmetric encryption keys (Microsoft SQL Server)",
    "weakness_id_read_only": "P1222",
    "weakness": "34e12b63-e0a3-4fb3-a38f-3de37a15ceae",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2019-04-04T15:45:02.037000-04:00",
    "last_updated": "2021-06-25T14:47:37.565000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1459",
    "universal_id": "b581970a-ebe3-4b83-a8e6-58b967e886f6",
    "countermeasure_name": "Use asymmetric keys of at least 2048-bit long (Microsoft SQL Server)",
    "countermeasure_solution": "Ensure Asymmetric Key Size is set to 'greater than or equal to 2048' in non-system databases:\n\nMicrosoft Best Practices recommend to use at least a 2048-bit encryption algorithm for asymmetric keys.\n\nThe higher-bit level may result in slower performance, but reduces the likelihood of an attacker breaking the key.\n\nEncrypted data cannot be compressed, but compressed data can be encrypted. If you use compression, you should compress data before encrypting it.",
    "weakness_title_read_only": "Using weak asymmetric encryption keys (Microsoft SQL Server)",
    "weakness_id_read_only": "P1223",
    "weakness": "e59194f9-fe10-4247-a478-3adea4038736",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2019-04-04T15:45:02.106000-04:00",
    "last_updated": "2021-06-25T14:47:37.633000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1460",
    "universal_id": "fbdc8e77-f5f4-4394-8ebd-35cebcfde807",
    "countermeasure_name": "Verify that asymmetric encryption keys are at least 2048-bit long (Microsoft SQL Server)",
    "countermeasure_solution": "Run the following code for each individual user database:\n```\nUSE _<database_name>_\nGO\n\nSELECT db_name() AS Database_Name, name AS Key_Name\nFROM sys.asymmetric_keys\nWHERE key_length < 2048\nAND db_id() > 4;\nGO\n```\nFor compliance, no rows should be returned.",
    "weakness_title_read_only": "Using weak asymmetric encryption keys (Microsoft SQL Server)",
    "weakness_id_read_only": "P1223",
    "weakness": "e59194f9-fe10-4247-a478-3adea4038736",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2019-04-04T15:45:02.122000-04:00",
    "last_updated": "2021-06-25T14:47:37.675000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1461",
    "universal_id": "ce6dd4bc-757e-41cc-b541-846d2f3adcda",
    "countermeasure_name": "Leave 'SQL Server Browser' service disabled if it is not required (Microsoft SQL Server)",
    "countermeasure_solution": "Disable 'SQL Server Browser Service' if it is not required.",
    "weakness_title_read_only": "Enabled 'SQL Server Browser' service (Microsoft SQL Server)",
    "weakness_id_read_only": "P1224",
    "weakness": "302b5135-3216-48bd-ad9e-2938b66dd8d9",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2019-04-04T15:45:02.193000-04:00",
    "last_updated": "2021-06-25T14:47:55.350000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1462",
    "universal_id": "88c6d19b-a904-4094-a0f6-b9c24c3e48a7",
    "countermeasure_name": "Verify that 'SQL Server Browser' service is disabled if it is not required (Microsoft SQL Server)",
    "countermeasure_solution": "Check the SQL Browser service's status via `services.msc` or similar methods.",
    "weakness_title_read_only": "Enabled 'SQL Server Browser' service (Microsoft SQL Server)",
    "weakness_id_read_only": "P1224",
    "weakness": "302b5135-3216-48bd-ad9e-2938b66dd8d9",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2019-04-04T15:45:02.208000-04:00",
    "last_updated": "2021-06-25T14:47:55.732000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1463",
    "universal_id": "8c79ea39-cb53-4b81-8577-90438273a4b0",
    "countermeasure_name": "Enable ahead-of-time (AOT) compilation for Angular applications (Angular)",
    "countermeasure_solution": "Angular 2+ supports a feature known as **Ahead-of-Time** compilation (AOT). \nTo ensure compatibility with AOT use the following command to  **run your application in AOT mode during development**:\n\n  `ng serve -aot` or `ng build -aot`\n\nDoing so will immediately flag any problematic code constructs, and ensure smooth AOT deployment down the line.\n\nTo use AOT, your application needs to follow a few coding guidelines, such as not using lambda functions in metadata properties. [This page](https://angular.io/guide/aot-compiler) contains more information.\n\nWith AOT, your HTML templates and typescript code are compiled into JavaScript code, deployed as a bundle. AOT compilation helps avoid template injection attacks. Additionally, the application bundle becomes smaller and renders faster.\n\nSpecifically, AOT compilation avoids the need to parse templates in the browser. As a result, deploying an application in AOT mode prevents the risk of [AngularJS template injection](https://www.synopsys.com/blogs/software-security/angularjs-sandbox/). In fact, with AOT enabled, the template compiler is not even shipped to the browser. \n\n\n## References\n\n* [AngularJS template injection](https://www.synopsys.com/blogs/software-security/angularjs-sandbox/)\n* [The AOT compiler](https://angular.io/guide/aot-compiler)",
    "weakness_title_read_only": "Improper Neutralization of Input During Web Page Generation (Cross-Site Scripting)",
    "weakness_id_read_only": "P632",
    "weakness": "67b0e738-a725-4462-be2a-52493b75f4ac",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "development",
    "created": "2019-05-02T13:02:27.066000-04:00",
    "last_updated": "2023-03-31T11:40:23.190000-04:00",
    "custom": "False",
    "rules": "0921216e-bed3-4db9-be7a-6d8b67cf0492",
    "rules_read_only": "A1223"
  },
  {
    "countermeasure_id": "T1464",
    "universal_id": "0417aa83-19fd-4f8f-a520-21abaf3a4a27",
    "countermeasure_name": "Verify application compatibility with AOT compilation in Angular applications (Angular)",
    "countermeasure_solution": "To verify AOT compatibility, build the application with the following command: `ng build -aot`. \n\nThis test __fails__ if the command specified above produces any errors.",
    "weakness_title_read_only": "Improper Neutralization of Input During Web Page Generation (Cross-Site Scripting)",
    "weakness_id_read_only": "P632",
    "weakness": "67b0e738-a725-4462-be2a-52493b75f4ac",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2019-05-02T22:55:00.073000-04:00",
    "last_updated": "2023-03-31T11:41:47.336000-04:00",
    "custom": "False",
    "rules": "0921216e-bed3-4db9-be7a-6d8b67cf0492",
    "rules_read_only": "A1223"
  },
  {
    "countermeasure_id": "T1465",
    "universal_id": "66d43a01-d177-49ee-88fa-da85e1bf9572",
    "countermeasure_name": "Decide how to handle sessions/authorization state in your Angular application (Angular)",
    "countermeasure_solution": "Use the guidelines below to help select the appropriate mechanism.\n\n__Cookie-based mechanism__\n\nA cookie-based mechanism exhibit the following properties:\n\n* The authorization state in the cookie is automatically handled by the browser, including storing the value in a cookie\n* Cookies can contain any value (e.g., session identifier, JWT data)\n* Cookies can only be sent back to the domain that set them\n* Cookies are present on browser-initiated calls (e.g., WebSocket connections, WebRTC, DOM element loading, CORS requests)\n\n\nA cookie-based mechanism is the preferred choice when:\n\n* The frontend application only uses APIs within a single domain\n* The user authentication endpoint is hosted on the same domain as the APIs\n\nWhen choosing cookies, the following countermeasures are relevant:\n\n- [Countermeasure T22](/library/tasks/T22/)\n\n- [Countermeasure T23](/library/tasks/T23/)\n\n- [Countermeasure T88](/library/tasks/T88/)\n\n- [Countermeasure T91](/library/tasks/T91/)\n\n- [Countermeasure T29](/library/tasks/T29/)\n\n- [Countermeasure T257](/library/tasks/T257/)\n\n\n\n__Custom header mechanism__\n\nA custom header-based mechanism exhibits the following properties:\n\n* The browser handles nothing automatically. Custom application code is required\n* You need to decide where to store the data and how to protect it\n* Custom headers can contain any value (e.g., session identifier, JWT data)\n* The application can decide to which domains to send the authorization state\n* Browser-initiated requests do not carry custom headers unless a complicated workaround with service workers is implemented\n\nA custom header-based mechanism is the preferred choice when:\n\n* The frontend application uses APIs on different domains\n* The frontend application uses an authentication endpoint on a different domain (e.g., OAuth 2.0 / OpenID Connect flows)\n\nWhen choosing a custom mechanism, the following countermeasures are relevant:\n\n- [Countermeasure T259](/library/tasks/T259/)\n\n- [Countermeasure T1466](/library/tasks/T1466/)\n\n- [Countermeasure T1467](/library/tasks/T1467/)\n\nVirtually every application needs to keep track of the authentication and authorization state. Traditionally, cookies are used for this purpose. However, Angular applications often use a custom `Authorization` header to send a bearer token. \n\nNote that the contents of the cookie or Authorization header are irrelevant here. This countermeasure helps you decide how to transport and store authorization state in Angular applications.",
    "weakness_title_read_only": "Improper Access Control (Authorization)",
    "weakness_id_read_only": "P182",
    "weakness": "e488cdc5-3c91-4d2b-bcec-5c651b000d8b",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "architecture-design",
    "created": "2019-05-02T22:59:52.079000-04:00",
    "last_updated": "2022-09-01T11:47:57.975000-04:00",
    "custom": "False",
    "rules": "0921216e-bed3-4db9-be7a-6d8b67cf0492",
    "rules_read_only": "A1223"
  },
  {
    "countermeasure_id": "T1466",
    "universal_id": "ca7b5d62-eb95-4576-b480-17ff2399bf67",
    "countermeasure_name": "Restrict sending of authorization state to approved origins in Angular (Angular)",
    "countermeasure_solution": "When sending authorization state in a custom header, Angular applications typically use an *HTTP Interceptor*, as [illustrated in this article](https://www.sitepoint.com/angular-2-authentication-protecting-private-content/). Without restrictions, an authorization interceptor adds authorization state to every outgoing request. When contacting third-party APIs, this behavior leaks authorization state. Follow one of the strategies below to restrict this behavior in your application:\n\n\n__Using libraries__\n\nUse a proper library to handle authorization state. Such a library can be configured with a set of approved origins. It will only send authorization state to these origins. __You must configure your library to enable this behavior__.\n\nBelow is a snippet of the configuration of the `@auth0/angular-jwt` library. The `whitelistedDomains` property indicates where the authorization state should be sent to:\n\n```\nJwtModule.forRoot({\n  config: {\n    tokenGetter: tokenGetter,\n    whitelistedDomains: ['example.com'],\n    blacklistedRoutes: ['example.com/examplebadroute/']\n  }\n})\n```\n\n\n__Custom implementation__\n\nComplex authorization scenarios are beyond the scope of most libraries. There, __you must implement these restrictions yourself__. See How-to section of this countermeasure (Restricting an Angular HttpInterceptor to a set of approved URLs) for more information.",
    "weakness_title_read_only": "Improper Access Control (Authorization)",
    "weakness_id_read_only": "P182",
    "weakness": "e488cdc5-3c91-4d2b-bcec-5c651b000d8b",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "requirements",
    "created": "2019-05-03T10:57:02.672000-04:00",
    "last_updated": "2022-09-01T11:49:05.409000-04:00",
    "custom": "False",
    "rules": "0921216e-bed3-4db9-be7a-6d8b67cf0492",
    "rules_read_only": "A1223"
  },
  {
    "countermeasure_id": "T1467",
    "universal_id": "48bf7e41-cd16-4526-98c8-fca9ed2e2f43",
    "countermeasure_name": "Verify that the Angular application does not leak the authorization state (Angular)",
    "countermeasure_solution": "Use the following guidelines to make sure the Angular application does not leak authorization state to unauthorized parties:\n\n* Determine how the application handles session information or authorization state.\n\t* If the application uses cookies, this test __succeeds__\n\t* If the application adds authorization state in a custom header (e.g., the `Authorization` header), continue with the next step.\n* Trigger a request sent from within the Angular application to a legitimate backend service\n\t* Observe the value of the header containing the authorization state\n* Trigger a request sent from within the Angular application to a backend service where authorization information is not required\n\t* Example services would be public APIs\n\t* Triggering such a request might require custom testing code\n\n\tThis test __fails__ if the last request contains the previously observed authorization state.",
    "weakness_title_read_only": "Improper Access Control (Authorization)",
    "weakness_id_read_only": "P182",
    "weakness": "e488cdc5-3c91-4d2b-bcec-5c651b000d8b",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2019-05-03T12:36:24.555000-04:00",
    "last_updated": "2021-06-25T14:47:46.034000-04:00",
    "custom": "False",
    "rules": "0921216e-bed3-4db9-be7a-6d8b67cf0492",
    "rules_read_only": "A1223"
  },
  {
    "countermeasure_id": "T1468",
    "universal_id": "66a1f655-b740-4528-a106-688011bff1c2",
    "countermeasure_name": "Encrypt sensitive data at rest in the browser",
    "countermeasure_solution": "Avoid using browser-based storage mechanisms to store sensitive data. However, if you can justify storing data in the browser, that data needs to be encrypted.\n\nThe mechanism for encrypting data in the browser is driven by the requirement to gain access to the data while the application is offline (i.e., a Progressive Web App). \n\n\n__When offline access is not a requirement__, follow these steps:\n\n* Authenticate the user against the backend system\n* Request a salt from the client (see notes below)\n* Use the salt to generate a symmetric encryption key\n* Send the key to the client (see notes below)\n* Use the client key to encrypt and decrypt data at rest.\n* To regain access to encrypted data, follow these steps again using the existing salt.\t \n\n\t__*Note:*__ More detail is available in the How-To section of this countermeasure (Encrypt using a key obtained from the server).\n\n__When offline access is a requirement__, follow these steps:\n\n* Generate or retrieve a salt on the client (see notes below)\n* Prompt the user for a passphrase to initialize the encryption/decryption key\n* Use the user's passphrase and salt to generate a symmetric encryption key\n\t* Passphrases can be turned into cryptographic keys using a Password-Based Key Derivation Function (PBKDF)\n\t\t* PBKDF2 is a widely supported function that achieves this.\n* Use the key to encrypt and decrypt data at rest.\n* To regain access to encrypted data, follow these steps again using the existing salt.\n\n\t__*Note:*__ More detail is available in the How-To section of this countermeasure (Encrypt using a key generated from a user passphrase).\n\t__*Note:*__ The steps here only concern access to encrypted data. User authentication against backend systems is a crucial part of a PWA running in online mode.\n\n\n__*Additional Notes*__\n\n* The key is derived using a per-client salt\n\t* Use unique keys per client. An example of a client instance is a specific browser.\n\t* Key uniqueness is guaranteed by using a per-client salt.\n\t* Randomly generate the salt by the client and store it in the browser. When an existing salt is available, it should be reused.\n\t* The salt can be stored in Local Storage in plain text\n* The key is used in the browser to encrypt and decrypt locally stored data\n\t* Keep the key in memory on the client. Do not store the key in the browser.\n\t* When the client's browsing context is closed, the key will be dismissed.\n* The implementation of the encryption/decryption logic must be centralized\n\t* In an Angular application, these features are typically implemented using an application-wide service. Only this service handles the keys.",
    "weakness_title_read_only": "Storage of sensitive data in client side local storage",
    "weakness_id_read_only": "P734",
    "weakness": "5c6732c4-ff55-403a-b2e0-920c1dd09cb3",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "requirements",
    "created": "2019-05-03T13:13:16.520000-04:00",
    "last_updated": "2022-09-01T11:51:01.398000-04:00",
    "custom": "False",
    "rules": "2ef3b940-05af-4cb9-bfc6-ed2fee4c8d42 AND b310a679-c006-4abb-a02b-5f1608d05ace",
    "rules_read_only": "A728 AND A1080"
  },
  {
    "countermeasure_id": "T1469",
    "universal_id": "305d5de0-3719-412b-87f5-5fcd18d7aa53",
    "countermeasure_name": "Prevent sensitive data leakage through Content Security Policy (CSP) reports",
    "countermeasure_solution": "Follow these steps to avoid data leakage through CSP reports:\n\n* If the application handles sensitive data, deploy your own CSP reporting endpoint to collect and store reports securely.\n\t* The endpoint should accept JSON data and store that in a data store\n\t* Follow current security best practices when building an interface to consult the data\n\t* Run the endpoint on separate infrastructure to avoid negative impact in high-volume traffic scenarios\n* Alternatively, use a third-party service if the risk is acceptable\n\t* Investigate how the third-party handles security and privacy\n\t* Enforce strict requirements on secure data storage and handling\n\t* Investigate how to remove historic data to minimize the impact of a security breach\n\n* If the application does not handle any sensitive data (see the list below), it can use any third-party logging service for CSP reports.\n\nContent Security Policy offers a reporting feature, where the browser sends an error report to a reporting endpoint (See [Countermeasure 331](/library/tasks/T331/) for more details). These reports can contain sensitive information, which should not be disclosed to unauthorized parties.\n\nExamples of sensitive data are:\n\n* Confidential or private hostnames\n* Unique path variables in the URL (e.g., a unique URL giving access to a resource)\n* Private content partnership relations between different companies",
    "weakness_title_read_only": "Information Leak Through Log Files",
    "weakness_id_read_only": "P420",
    "weakness": "60bad2d0-c4bf-4f4a-8d9b-c843e08fabe3",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "requirements",
    "created": "2019-05-03T14:54:01.748000-04:00",
    "last_updated": "2022-09-01T12:00:25.877000-04:00",
    "custom": "False",
    "rules": "b310a679-c006-4abb-a02b-5f1608d05ace",
    "rules_read_only": "A1080"
  },
  {
    "countermeasure_id": "T1476",
    "universal_id": "1a61c74f-155b-4030-9309-cf5128b45aad",
    "countermeasure_name": "Use secure channels for remote administration (Oracle Database)",
    "countermeasure_solution": "Ensure 'SECURE_CONTROL_' Is Set In 'listener.ora'\n\nThe SECURE_CONTROL_<listener_name> setting determines the type of control connection the Oracle server requires for remote configuration of the listener.",
    "weakness_title_read_only": "Unencrypted remote connections can result in sniffing of the control configuration (Oracle Database)",
    "weakness_id_read_only": "P1230",
    "weakness": "b6c6bb68-1c5e-4678-80fc-5ca698b78cde",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2019-05-06T12:08:06.142000-04:00",
    "last_updated": "2021-06-25T14:47:37.028000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1477",
    "universal_id": "4bc7fe35-635a-49e7-8ad8-4956b27eba30",
    "countermeasure_name": "Verify that secure channels are used for remote administration (Oracle Database)",
    "countermeasure_solution": "To audit this recommendation, follow these steps:\n\n1. Open the  `$ORACLE_HOME/network/admin/listener.ora` file (or `%ORACLE_HOME%\\network\\admin\\listener.ora` on Windows)  \n  \n2. Ensure that each defined listener as an associated SECURE_CONTROL_<listener_name> directive.",
    "weakness_title_read_only": "Unencrypted remote connections can result in sniffing of the control configuration (Oracle Database)",
    "weakness_id_read_only": "P1230",
    "weakness": "b6c6bb68-1c5e-4678-80fc-5ca698b78cde",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2019-05-06T12:08:06.158000-04:00",
    "last_updated": "2021-06-25T14:47:36.434000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1478",
    "universal_id": "57ed8c27-501e-4dfd-bb37-051bea5b4396",
    "countermeasure_name": "Remove 'extproc' from 'listener.ora' (Oracle Database)",
    "countermeasure_solution": "Ensure 'extproc' Is Not Present in 'listener.ora':\n\n`extproc` should be removed from the `listener.ora` to mitigate the risk that OS libraries can be invoked by the Oracle instance.",
    "weakness_title_read_only": "Database can run procedures from OS libraries (Oracle Database)",
    "weakness_id_read_only": "P1231",
    "weakness": "f07cc19e-9d9b-4fc9-b1b4-e04837938e8e",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2019-05-06T12:08:06.232000-04:00",
    "last_updated": "2021-06-25T14:47:50.207000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1479",
    "universal_id": "ea3368ff-20da-43b9-940b-7c472b81bf69",
    "countermeasure_name": "Verify that external procedures are not enabled (Oracle Database)",
    "countermeasure_solution": "To audit this recommendation, execute the following shell commands as appropriate for your Linux/Windows environment.  \n\nLinux environment:    \n```  \ngrep -i extproc $ORACLE_HOME/network/admin/listener.ora\n```  \nWindows environment:  \n ```\n find /I extproc %ORACLE_HOME%\\network\\admin\\listener.ora\n```\nEnsure extproc does not exist.",
    "weakness_title_read_only": "Database can run procedures from OS libraries (Oracle Database)",
    "weakness_id_read_only": "P1231",
    "weakness": "f07cc19e-9d9b-4fc9-b1b4-e04837938e8e",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2019-05-06T12:08:06.247000-04:00",
    "last_updated": "2021-06-25T14:47:49.670000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1480",
    "universal_id": "668680e1-f44e-4dc2-8a58-43a1b87257fc",
    "countermeasure_name": "Block unauthorized users from making changes to 'listener.ora' (Oracle Database)",
    "countermeasure_solution": "Ensure 'ADMIN_RESTRICTIONS_' Is Set to 'ON':  \n\nThe `admin_restrictions_<listener_name>` setting in the `listener.ora` file can require that any attempted real-time alteration of the parameters in the `listener` via the `set` command file be refused unless the `listener.ora` file is manually altered, then restarted by a privileged user.",
    "weakness_title_read_only": "Nonprivileged users can compromise data confidentiality (Oracle Database)",
    "weakness_id_read_only": "P1232",
    "weakness": "25306c04-ae2a-47c1-b29d-d987b7279684",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2019-05-06T12:08:06.328000-04:00",
    "last_updated": "2021-06-25T14:47:47.152000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1481",
    "universal_id": "812c9dd6-0e3d-4f55-bfe6-a37243e92496",
    "countermeasure_name": "Verify that unauthorized users are not able to make alterations to remote data/service settings (Oracle Database)",
    "countermeasure_solution": "To audit this recommendation, execute the following shell commands as appropriate for your Linux/Windows environment.  \n\nLinux environment:  \n``` \ngrep -i admin_restrictions $ORACLE_HOME/network/admin/listener.ora \n```  \nWindows environment:  \n``` \nfind /I admin_restrictions %ORACLE_HOME%|\\network\\admin\\listener.ora\n``` \nEnsure `admin_restrictions_<listener_name>` is set to ON for all listeners.",
    "weakness_title_read_only": "Nonprivileged users can compromise data confidentiality (Oracle Database)",
    "weakness_id_read_only": "P1232",
    "weakness": "25306c04-ae2a-47c1-b29d-d987b7279684",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2019-05-06T12:08:06.349000-04:00",
    "last_updated": "2021-06-25T14:47:48.995000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1482",
    "universal_id": "7a1179a3-5da9-4881-b6a8-31012a4b5592",
    "countermeasure_name": "Use encrypted channels for remote connections (Oracle Database)",
    "countermeasure_solution": "Ensure 'SECURE_REGISTER_' Is Set to 'TCPS' or 'IPC':  \n\nThe `SECURE_REGISTER_<listener_name>` setting specifies the protocols used to connect to the TNS listener. Each setting should have a value of either `TCPS` or `IPC` based on the needs for its protocol.",
    "weakness_title_read_only": "Unauthorized users can sniff unencrypted remote channels (Oracle Database)",
    "weakness_id_read_only": "P1233",
    "weakness": "100b7a70-9d45-4018-9b9d-1b477e879916",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2019-05-06T12:08:06.432000-04:00",
    "last_updated": "2021-06-25T14:47:36.797000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1483",
    "universal_id": "9ca337a1-fe59-4317-a44f-8aee03eda082",
    "countermeasure_name": "Verify remote connections are established through encrypted channels (Oracle Database)",
    "countermeasure_solution": "To audit this recommendation, execute the following shell commands as appropriate for your Linux/Windows environment.  \n\nLinux environment:  \n```\ngrep -i SECURE_REGISTER $ORACLE_HOME/network/admin/listener.ora\n```  \n  \nWindows environment:  \n```\nfind /I SECURE_REGISTER %ORACLE_HOME%\\network\\admin\\listener.ora\n```\nEnsure `SECURE_REGISTER_<listener_name>` is set to TCPS or IPC.",
    "weakness_title_read_only": "Unauthorized users can sniff unencrypted remote channels (Oracle Database)",
    "weakness_id_read_only": "P1233",
    "weakness": "100b7a70-9d45-4018-9b9d-1b477e879916",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2019-05-06T12:08:06.447000-04:00",
    "last_updated": "2021-06-25T14:47:37.196000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1538",
    "universal_id": "feae0b29-2844-474c-99e2-d0d3cc58472b",
    "countermeasure_name": "Avoid DOM-based Cross-Site Scripting (XSS) in Angular applications (Angular)",
    "countermeasure_solution": "When browser-side JavaScript handles untrusted data, there is a risk of DOM-based XSS vulnerabilities (See [Countermeasure 37](/library/tasks/T37/) for more information). \n\nFor Angular applications, the following code patterns are very dangerous and should be avoided if possible.\n\n* Angular's `ElementRef` objects expose the native DOM object. Through `ElementRef`, you can directly access DOM properties. Using these properties to change content on the page can cause DOM-based XSS vulnerabilities. \n\t* [Countermeasure 37](/library/tasks/T37/) contains more information on the risk vectors for causing DOM-based XSS through native DOM elements.\n\n\t\n* Manipulating a page using other JavaScript libraries outside of Angular is a dangerous pattern. In these cases, Angular cannot apply proper protections, and DOM-based XSS vulnerabilities can exist.\n\t* One example is using JQuery for some operations without passing through Angular's protection mechanisms.\n\t* The best solution is to do every page manipulation through Angular's API\n\n* Inserting data into the page by using the `bypassSecurityTrust*` functions is dangerous and can cause DOM-based XSS. See [Countermeasure 417](/library/tasks/T417/) for more information.\n\t\n* To avoid the risk of template injection in Angular, your application should be compiled with Ahead-of-Time compilation. See [Countermeasure 1463](/library/tasks/T1463/) for more information.",
    "weakness_title_read_only": "Improper Neutralization of Input During Web Page Generation (Cross-Site Scripting)",
    "weakness_id_read_only": "P632",
    "weakness": "67b0e738-a725-4462-be2a-52493b75f4ac",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "development",
    "created": "2019-05-06T12:21:26.544000-04:00",
    "last_updated": "2022-09-01T12:02:27.529000-04:00",
    "custom": "False",
    "rules": "0921216e-bed3-4db9-be7a-6d8b67cf0492",
    "rules_read_only": "A1223"
  },
  {
    "countermeasure_id": "T1539",
    "universal_id": "6a8e497c-8861-4717-86b2-ffbed4c0be79",
    "countermeasure_name": "Clear browser data on user logout",
    "countermeasure_solution": "Configure your application to send the `Clear-Site-Data` header when the user logs out. Configure the header using the following directives:\n\n* `\"cache\"`: clear all cached files for this origin\n* `\"cookies\"`: clear all cookies for the domain (both HTTP and HTTPS)\n* `\"storage\"`: clear all locally stored data, including *ServiceWorker* registrations and *appCache* data\n\nFor example, the header shown below clears cookies and Local Storage.\n\n```\nClear-Site-Data: \"cookies\", \"storage\"\n```\n\nThe browser is not a secure storage area. Therefore, it is recommended to clear client-side application data when the user logs out.",
    "weakness_title_read_only": "Storage of sensitive data in client side local storage",
    "weakness_id_read_only": "P734",
    "weakness": "5c6732c4-ff55-403a-b2e0-920c1dd09cb3",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "requirements",
    "created": "2019-05-06T13:57:54.329000-04:00",
    "last_updated": "2021-06-25T14:47:45.785000-04:00",
    "custom": "False",
    "rules": "844c8fe0-29d9-40b4-ae8b-821a18beab88",
    "rules_read_only": "A4"
  },
  {
    "countermeasure_id": "T1540",
    "universal_id": "d1f9f83c-142f-4b4b-80d3-f16bf63af264",
    "countermeasure_name": "Verify that browser data is cleared upon user logout",
    "countermeasure_solution": "Upon user logout, locally stored data should be cleared from the browser using the `Clear-Site-Data` header.\n\nThe following steps allow you to verify the correct behavior of the application.\n\n1. Use a browser that [supports](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Clear-Site-Data) the `Clear-Site-Data` header\n2. Use the application in a regular way, causing data to be stored in the browser\n    * E.g., log in so that the application sets a cookie\n3. Use the browser's developer tools to inspect the locally stored data\n4. Logout of the application\n5. Use the developer tools to inspect the different storage areas (cookies, Local Storage, Session Storage, ...)\n\nThis test __fails__ if sensitive data is still available in the browser after the user has logged out.",
    "weakness_title_read_only": "Storage of sensitive data in client side local storage",
    "weakness_id_read_only": "P734",
    "weakness": "5c6732c4-ff55-403a-b2e0-920c1dd09cb3",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2019-05-07T22:40:23.796000-04:00",
    "last_updated": "2021-06-25T14:47:46.701000-04:00",
    "custom": "False",
    "rules": "844c8fe0-29d9-40b4-ae8b-821a18beab88",
    "rules_read_only": "A4"
  },
  {
    "countermeasure_id": "T1541",
    "universal_id": "63462e22-e57e-4c81-986b-85a04b3ef949",
    "countermeasure_name": "Decide on the best CSRF defense for your application",
    "countermeasure_solution": "To analyze if your application is vulnerable to CSRF, follow these steps:\n\n1. Does your application perform state-changing operations on the backend (e.g., login, store data)?\n    * __*Yes*__: Continue with the next step\n    * __*No*__: Your application does not need protection against CSRF attacks.\n2. Does your application rely on authentication or session management mechanism that is automatically handled by the browser (e.g., cookies, HTTP Basic authentication)?\n    *  __*Yes*__: You need protection against CSRF attacks\n    *  __*No*__: Your application does not need protection against CSRF attacks.\n\n\nTo select the proper CSRF defense, follow these steps:\n\n1. Does your application generate dynamic pages on the server (e.g., PHP, JSP)?\n    * __*Yes*__: Continue with step 2\n    * __*No*__: Continue with step 3\n2. Does your application handle a small number of concurrent users (< 1000)?\n    * __*Yes*__: Use a *Synchronizer Token* pattern, as described in [Countermeasure 29](/library/tasks/T29/) and continue with step 5.\n    * __*No*__: Continue with step 3\n3. Does your application accept requests that can be sent from an HTML element (e.g., a form), or without a CORS preflight request?\n    * __*Yes*__: Continue with step 4\n    * __*No*__: Use a *secure CORS policy*, as described in [Countermeasure 257](/library/tasks/T257/).\n4. Are your application's frontend and backend deployed on the same origin?\n    * __*Yes*__: Use a *Double Submit Cookie*, as described in [Countermeasure 29](/library/tasks/T29/) and continue with step 5.\n    * __*No*__: Use a *secure CORS policy*, as described in [Countermeasure 257](/library/tasks/T257/).\n5. Does your backend only need to accept requests coming from the same domain (e.g., from `www.example.com` to `api.example.com` falls within `example.com`)?\n    * __*Yes*__: Consider using the *SameSite* cookie attribute, as described in [Countermeasure 557](/library/tasks/T557/).\n    * __*No*__: No additional security measures need to be taken.\n\nFor every application, you need to analyze if weaknesses that introduce Cross-Site Request Forgery (CSRF) exist or not. When it is, you need to select one of four currently available defense strategies. This guideline guides you through the process and refers to other guidelines containing more details about implementing defenses.\n\n![CSRF Flowchart]({{ USE_CONTENT_URL }}screenshots/CSRF_defense_flowchart_v2.png)",
    "weakness_title_read_only": "Cross-Site Request Forgery (CSRF)",
    "weakness_id_read_only": "P677",
    "weakness": "ec20bc24-5e77-4cac-a8bb-be1d2517e2a0",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "architecture-design",
    "created": "2019-05-07T23:04:30.084000-04:00",
    "last_updated": "2022-09-01T12:03:25.708000-04:00",
    "custom": "False",
    "rules": "844c8fe0-29d9-40b4-ae8b-821a18beab88",
    "rules_read_only": "A4"
  },
  {
    "countermeasure_id": "T1542",
    "universal_id": "5627968d-0e4f-4590-b308-3bf46a8c5202",
    "countermeasure_name": "Use the correct HTTP methods for making state-changing operations",
    "countermeasure_solution": "The HTTP specification defines several different methods to send requests. Each of the methods has an intended purpose. Use the following guide to decide on which method to use for each request:\n\n* `GET / HEAD`: Fetch information from the server. These requests should never trigger a server-side state change. Note that this includes logout features, which are often mistakenly implemented as a `GET` operation.\n* `POST`: Submit information to the server. In a REST context, used to create a new resource.\n* `PUT / PATCH / DELETE`: Used in a REST context to manipulate the resource at the given URL (create, update and delete).\n\n__Not respecting these methods might violate implicit security assumptions__. For example, CSRF defenses assume that `GET` requests never change state. Hence, `GET` requests do not require CSRF protection (See [Countermeasure 1541](/library/tasks/T1541/) for more information).",
    "weakness_title_read_only": "Cross-Site Request Forgery (CSRF)",
    "weakness_id_read_only": "P677",
    "weakness": "ec20bc24-5e77-4cac-a8bb-be1d2517e2a0",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "architecture-design",
    "created": "2019-05-07T23:18:43.811000-04:00",
    "last_updated": "2022-09-01T12:04:03.685000-04:00",
    "custom": "False",
    "rules": "b310a679-c006-4abb-a02b-5f1608d05ace",
    "rules_read_only": "A1080"
  },
  {
    "countermeasure_id": "T1543",
    "universal_id": "8e2e81d5-e78e-48c6-90d9-dbb5dacd6f91",
    "countermeasure_name": "Leverage origin isolation for compartmentalization",
    "countermeasure_solution": "Consider the following scenarios:\n\n* Two different applications should not run in the same origin to avoid an attack against one application from spreading to the other application\n    * If applications are related, consider using subdomains, such as `app1.example.com` and `app2.example.com`\n* Applications accepting user input should serve that input from a separate origin. \n    * For example, Google serves user data from `googleusercontent.com`\n* Applications offering interfaces with different privilege levels should do so using different origins\n    * For example, the application running on `www.example.com` could expose its administrative interface on `admin.example.com`\n\nThe browser's [Same-Origin Policy (SOP)](https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy) isolates browsing contexts with different origins. In practice, this means that there is little to no interaction between these contexts. As such, malicious code running in one context cannot attack the contents in another context with a different origin.\n__You can leverage this origin-based isolation for security__.\n\nIn addition, applications composed of different components can also leverage origin-based isolation. Such an application can load components with different trust levels in `iframes` with different origins. This ensures a strong level of isolation between these contexts, enhancing security.\n\nTo enable an opt-in communication channel between isolated browsing contexts, applications can leverage the [Web Messaging API](https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage).",
    "weakness_title_read_only": "Insufficient Compartmentalization",
    "weakness_id_read_only": "P540",
    "weakness": "90e5da29-378c-4620-adb4-f227791d35fe",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "architecture-design",
    "created": "2019-05-08T11:31:15.256000-04:00",
    "last_updated": "2021-06-25T14:47:49.657000-04:00",
    "custom": "False",
    "rules": "844c8fe0-29d9-40b4-ae8b-821a18beab88",
    "rules_read_only": "A4"
  },
  {
    "countermeasure_id": "T1544",
    "universal_id": "3b496e5d-6394-4a88-99b7-52fe3a0fe66a",
    "countermeasure_name": "Isolate untrusted content in a sandbox",
    "countermeasure_solution": "When including potentially untrusted content in an `iframe`, per [Countermeasure 1543](/library/tasks/T1543/), consider adding a sandbox attribute as shown below. \n\n```\n<iframe src=\"...\" sandbox></iframe>\n```\n\nWhen serving potentially untrusted content from the server, add the following header to the outgoing response:\n\n```\nContent-Security-Policy: sandbox\n```\n\n### Fine-grained configuration\n\nBy default, the sandbox enforces the following restrictions:\n\n* The origin of the sandbox is considered to be unique (always cross-origin with other contexts)\n* JavaScript is not executed\n* Forms cannot be submitted\n* Mouse movement cannot be captured with the Pointer Lock API\n* Links cannot be opened in new windows\n* Plugins cannot be used (e.g., Flash)\n* The content cannot trigger navigation of the top-level page\n* Automatic playback of media content is not supported\n\nMany of these restrictions can be lifted by using the following keywords:\n\n* `allow-forms`\n* `allow-scripts` (__never to be used together with `allow-same-origin`__)\n* `allow-same-origin` (__never to be used together with `allow-scripts`__)\n* `allow-top-navigation`\n* `allow-pointer-lock`\n* `allow-popups`\n\n\n\nBelow is an example of how to use these keywords in both deployment mechanisms:\n\n```\n<iframe src=\"...\" sandbox=\"allow-scripts allow-forms\"></iframe>\n\n\nContent-Security-Policy: sandbox allow-scripts allow-forms\n```\n\nAlong with HTML5, modern browsers implemented support for a sandbox. A sandbox is a restricted environment intended to load potentially untrusted content. __The restrictions of the sandbox prevent malicious behavior of the untrusted content or at least restrict its consequences__. \nMore information is available [here](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe)",
    "weakness_title_read_only": "Insufficient Compartmentalization",
    "weakness_id_read_only": "P540",
    "weakness": "90e5da29-378c-4620-adb4-f227791d35fe",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "architecture-design",
    "created": "2019-05-08T12:36:26.924000-04:00",
    "last_updated": "2022-09-01T12:04:46.037000-04:00",
    "custom": "False",
    "rules": "b310a679-c006-4abb-a02b-5f1608d05ace",
    "rules_read_only": "A1080"
  },
  {
    "countermeasure_id": "T1613",
    "universal_id": "2b359ded-9606-43bb-a0fa-ba6b7f9ec6df",
    "countermeasure_name": "Use latest versions and patches (Oracle Database)",
    "countermeasure_solution": "Ensure the Appropriate Version/Patches for Oracle Software Is Installed:\n\nThe Oracle installation version and patches should be the most recent that are compatible with the organization's operational needs.",
    "weakness_title_read_only": "Using an outdated version of the database (Oracle Database)",
    "weakness_id_read_only": "P1295",
    "weakness": "74cf1b43-fa2a-43b7-adf4-8b99db059693",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2019-05-15T16:52:16.489000-04:00",
    "last_updated": "2021-06-25T14:47:56.697000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1614",
    "universal_id": "e44ba5ec-74cb-4219-8146-1c2cccaf8f63",
    "countermeasure_name": "Verify that latest versions and patches are used (Oracle Database)",
    "countermeasure_solution": "To assess this recommendation, use the following example shell command as appropriate for your environment.  \n  \nFor example, on Linux systems:  \n\n    opatch lsinventory | grep -e \"^.*<latest_patch_version_numer>\\s*.*$\"\n  \nFor example, on Windows systems:  \n         \n    opatch lsinventory | find \"<latest_patch_version_number>\"",
    "weakness_title_read_only": "Using an outdated version of the database (Oracle Database)",
    "weakness_id_read_only": "P1295",
    "weakness": "74cf1b43-fa2a-43b7-adf4-8b99db059693",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2019-05-15T16:52:16.506000-04:00",
    "last_updated": "2021-06-25T14:47:56.773000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1615",
    "universal_id": "3e194375-dc6a-404d-b0ad-7dcde00a5195",
    "countermeasure_name": "Keep passwords secure (Oracle Database)",
    "countermeasure_solution": "Defense against Password based attacks:\n \n- Ensure All Default Passwords Are Changed:  \n  \n  Default passwords should not be used by Oracle database users.  \n  \n- Ensure 'SEC_CASE_SENSITIVE_LOGON' Is Set to 'TRUE':  \n  \n  The `SEC_CASE_SENSITIVE_LOGON` information determines whether or not case-sensitivity is required for passwords during login.  \n  \n- Ensure 'PASSWORD_LIFE_TIME' Is Less than or Equal to '90':  \n  \n  The `PASSWORD_LIFE_TIME` setting determines how long a password may be used before the user is required to be change it. The suggested value for this is 90 days or less.  \n  \n- Ensure 'PASSWORD_REUSE_MAX' Is Greater than or Equal to '20':  \n  \n  The `PASSWORD_REUSE_MAX` setting determines how many different passwords must be used before the user is allowed to reuse a prior password. The suggested value for this is 20 passwords or greater.  \n  \n- Ensure 'PASSWORD_REUSE_TIME' Is Greater than or Equal to '365':  \n  \n  The `PASSWORD_REUSE_TIME` setting determines the amount of time in days that must pass before the same password may be reused. The suggested value for this is 365 days or greater.  \n  \n- Ensure 'PASSWORD_GRACE_TIME' Is Less than or Equal to '5':  \n  \n  The `PASSWORD_GRACE_TIME` setting determines how many days can pass after the user's password expires before the user's login capability is automatically locked out. The  \nsuggested value for this is five days or less.  \n  \n- Ensure 'PASSWORD_VERIFY_FUNCTION' Is Set for All Profiles:  \n  \n  The `PASSWORD_VERIFY_FUNCTION` determines password settings requirements when a user password is changed at the SQL command prompt. It should be set for all profiles. Note that this setting does not apply for users managed by the Oracle password file.",
    "weakness_title_read_only": "Attackers can gain access if default passwords are not changed (Oracle Database)",
    "weakness_id_read_only": "P1296",
    "weakness": "d3ebffa2-1262-4d14-9377-df1a285e03ae",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2019-05-15T16:52:16.631000-04:00",
    "last_updated": "2021-06-25T14:47:44.317000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1616",
    "universal_id": "df19585c-4600-4de2-974d-efe970b4ceb7",
    "countermeasure_name": "Verify that all default passwords are changed (Oracle Database)",
    "countermeasure_solution": "To assess this recommendation, execute the following SQL statement.   \n```\nSELECT USERNAME    \nFROM DBA_USERS_WITH_DEFPWD  \nWHERE USERNAME NOT LIKE '%XS$NULL%';  \n```\nThe view called `DBA_USERS_WITH_DEFPWD` shows a list of all database users making use of\ndefault passwords. The assessment fails if results are returned.\n\n```\nSELECT UPPER(VALUE)\nFROM V$PARAMETER\nWHERE UPPER(NAME)='SEC_CASE_SENSITIVE_LOGON';\n```\nEnsure VALUE is set to TRUE.\n\n```\nSELECT PROFILE, RESOURCE_NAME, LIMIT\nFROM DBA_PROFILES\nWHERE RESOURCE_NAME='PASSWORD_LIFE_TIME'\nAND\n(\nLIMIT = 'DEFAULT'\nOR LIMIT = 'UNLIMITED'\nOR LIMIT > 90\n);\n```\n```\nSELECT PROFILE, RESOURCE_NAME, LIMIT\nFROM DBA_PROFILES\nWHERE RESOURCE_NAME='PASSWORD_REUSE_MAX'\nAND\n(\nLIMIT = 'DEFAULT'\nOR LIMIT = 'UNLIMITED'\nOR LIMIT < 20\n);\n```\n```\nSELECT PROFILE, RESOURCE_NAME, LIMIT\nFROM DBA_PROFILES\nWHERE RESOURCE_NAME='PASSWORD_REUSE_TIME'\nAND\n(\nLIMIT = 'DEFAULT'\nOR LIMIT = 'UNLIMITED'\nOR LIMIT < 365\n);\n```\n```\nSELECT PROFILE, RESOURCE_NAME, LIMIT\nFROM DBA_PROFILES\nWHERE RESOURCE_NAME='PASSWORD_GRACE_TIME'\nAND\n(\nLIMIT = 'DEFAULT'\nOR LIMIT = 'UNLIMITED'\nOR LIMIT > 5\n);\n```\n```\nSELECT PROFILE, RESOURCE_NAME\nFROM DBA_PROFILES\nWHERE RESOURCE_NAME='PASSWORD_VERIFY_FUNCTION'\nAND (LIMIT = 'DEFAULT' OR LIMIT = 'NULL');\n```\nLack of results implies compliance.",
    "weakness_title_read_only": "Attackers can gain access if default passwords are not changed (Oracle Database)",
    "weakness_id_read_only": "P1296",
    "weakness": "d3ebffa2-1262-4d14-9377-df1a285e03ae",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2019-05-15T16:52:16.678000-04:00",
    "last_updated": "2021-06-25T14:47:44.255000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1617",
    "universal_id": "616497a9-07d9-411e-9426-047926d9a311",
    "countermeasure_name": "Remove all sample data and sample schemas (Oracle Database)",
    "countermeasure_solution": "Ensure All Sample Data And Users Have Been Removed:  \n\nOracle sample schemas can be used to create sample users (`BI`,`HR`,`IX`,`OE`,`PM`,`SCOTT`,`SH`), with well-known default passwords, particular views, and procedures/functions, in addition to tables and fictitious data. The sample schemas should be removed.",
    "weakness_title_read_only": "Sample schemas can launch exploits in production database (Oracle Database)",
    "weakness_id_read_only": "P1297",
    "weakness": "14e32807-8a58-439d-ac95-392d2dfaed1f",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2019-05-15T16:52:16.813000-04:00",
    "last_updated": "2021-06-25T14:47:56.037000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1618",
    "universal_id": "314e036a-3a96-457f-b6c8-818476ef23a1",
    "countermeasure_name": "Verify that sample schemas are removed from the production environment (Oracle Database)",
    "countermeasure_solution": "To assess this recommendation, check for the presence of Oracle sample users by executing the following SQL statement.\n ```\n SELECT USERNAME\n FROM ALL_USERS\n WHERE USERNAME IN ('BI','HR','IX','OE','PM','SCOTT','SH');\n ```",
    "weakness_title_read_only": "Sample schemas can launch exploits in production database (Oracle Database)",
    "weakness_id_read_only": "P1297",
    "weakness": "14e32807-8a58-439d-ac95-392d2dfaed1f",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2019-05-15T16:52:16.829000-04:00",
    "last_updated": "2021-06-25T14:47:56.228000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1619",
    "universal_id": "0b4873ab-63cb-468c-a575-764b7e4af176",
    "countermeasure_name": "Keep audit parameters enabled at all times (Oracle Database)",
    "countermeasure_solution": "Logging and monitoring:\n\n- Ensure 'AUDIT_SYS_OPERATIONS' Is Set to 'TRUE':  \n  \n  The `AUDIT_SYS_OPERATIONS` setting provides for the auditing of all user activities conducted under the `SYSOPER` and `SYSDBA` accounts. The setting should be set to `TRUE` to enable this auditing.  \n  \n- Ensure `AUDIT_TRAIL' Is Set to 'DB', 'XML', 'OS', 'DB,EXTENDED', or 'XML,EXTENDED':\n\n  The audit_trail setting determines whether or not Oracle's basic audit features are enabled. It can be set to \"Operating System\"(OS); `DB`; `DB,EXTENDED`; `XML`; or `XML`,`EXTENDED`. The value should be set according to the needs of the organization.",
    "weakness_title_read_only": "Not monitoring user activities (Oracle Database)",
    "weakness_id_read_only": "P1298",
    "weakness": "5656587b-d360-4ddb-a524-e58b3c0f6fe5",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2019-05-15T16:52:16.907000-04:00",
    "last_updated": "2021-06-25T14:47:58.578000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1620",
    "universal_id": "eaae28ed-315d-44ff-ad7f-534a3a7dbd41",
    "countermeasure_name": "Verify that audit parameters are enabled (Oracle Database)",
    "countermeasure_solution": "To assess this recommendation, execute the following SQL statement. \n```\nSELECT UPPER(VALUE)\nFROM V$PARAMETER\nWHERE UPPER(NAME) = 'AUDIT_SYS_OPERATIONS';  \n```\nEnsure `VALUE` is set to `TRUE`.  \n```\nSELECT UPPER(VALUE)\nFROM V$PARAMETER\nWHERE UPPER(NAME)='AUDIT_TRAIL';\n```  \nEnsure VALUE is set to DB or OS or XML or DB,EXTENDED or XML,EXTENDED.",
    "weakness_title_read_only": "Not monitoring user activities (Oracle Database)",
    "weakness_id_read_only": "P1298",
    "weakness": "5656587b-d360-4ddb-a524-e58b3c0f6fe5",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2019-05-15T16:52:16.927000-04:00",
    "last_updated": "2021-06-25T14:47:57.849000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1621",
    "universal_id": "d8bf2c81-263d-467b-a079-a4aecbbae380",
    "countermeasure_name": "Only allow authorized domains to connect with database (Oracle Database)",
    "countermeasure_solution": "Ensure 'GLOBAL_NAMES' Is Set to 'TRUE':  \n\nThe `global_names` setting requires that the name of a database link matches that of the remote database it will connect to. This setting should have a value of `TRUE`.",
    "weakness_title_read_only": "Unauthorized domain sources connecting to the database (Oracle Database)",
    "weakness_id_read_only": "P1299",
    "weakness": "b683f8df-8e7a-478a-979e-fa574c0e145b",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2019-05-15T16:52:17.047000-04:00",
    "last_updated": "2021-06-25T14:47:52.635000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1622",
    "universal_id": "c7d1b2ad-71f2-40e2-9cbe-82ca366d0c6c",
    "countermeasure_name": "Verify that name of database link matches the remote database (Oracle Database)",
    "countermeasure_solution": "To assess this recommendation, execute the following SQL statement.\n```\nSELECT UPPER(VALUE)\nFROM V$PARAMETER\nWHERE UPPER(NAME)='GLOBAL_NAMES';\n```\nEnsure VALUE is set to TRUE.",
    "weakness_title_read_only": "Unauthorized domain sources connecting to the database (Oracle Database)",
    "weakness_id_read_only": "P1299",
    "weakness": "b683f8df-8e7a-478a-979e-fa574c0e145b",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2019-05-15T16:52:17.062000-04:00",
    "last_updated": "2021-06-25T14:47:53.279000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1623",
    "universal_id": "79830940-a9b1-437d-b528-b6cf9250908a",
    "countermeasure_name": "Block all unauthorized access to data structures (Oracle Database)",
    "countermeasure_solution": "Ensure 'O7_DICTIONARY_ACCESSIBILITY' Is Set to 'FALSE':\n\nThe `O7_dictionary_accessibility` setting is a database initialization parameter that allows/disallows access to objects with the `* ANY *` privileges (`SELECT ANY TABLE`, `DELETE ANY TABLE`, `EXECUTE ANY PROCEDURE`, etc.). This functionality was created for the ease of migration from Oracle 7 databases to later versions. The setting should have a value of `FALSE`.",
    "weakness_title_read_only": "Unauthorized access to critical data structures (Oracle Database)",
    "weakness_id_read_only": "P1300",
    "weakness": "e78d0208-9fd5-420b-97ac-4a46b467d12b",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2019-05-15T16:52:17.132000-04:00",
    "last_updated": "2021-06-25T14:47:46.419000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1624",
    "universal_id": "7db3d426-6b7d-48e1-8e3b-42fcaafeef6f",
    "countermeasure_name": "Verify that the value of Dictionary_Accessibility is set to False (Oracle Database)",
    "countermeasure_solution": "To assess this recommendation, execute the following SQL statement.   \n```\nSELECT UPPER(VALUE)\nFROM V$PARAMETER\nWHERE UPPER(NAME)='O7_DICTIONARY_ACCESSIBILITY';\n```\nEnsure `VALUE` is set to `FALSE`.",
    "weakness_title_read_only": "Unauthorized access to critical data structures (Oracle Database)",
    "weakness_id_read_only": "P1300",
    "weakness": "e78d0208-9fd5-420b-97ac-4a46b467d12b",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2019-05-15T16:52:17.149000-04:00",
    "last_updated": "2021-06-25T14:47:46.061000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1625",
    "universal_id": "fdd6ca2e-82a3-47eb-b981-b7d8fdee488e",
    "countermeasure_name": "Do not allow OS external groups to connect with database (Oracle Database)",
    "countermeasure_solution": "Ensure 'OS_ROLES' Is Set to 'FALSE':  \n\nThe `os_roles` setting permits externally created groups to be applied to database management.",
    "weakness_title_read_only": "External groups can cause privilege overlaps (Oracle Database)",
    "weakness_id_read_only": "P1301",
    "weakness": "295dadbe-7bf1-4cb0-9c00-ef5e9cdc9913",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2019-05-15T16:52:17.222000-04:00",
    "last_updated": "2021-06-25T14:47:47.335000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1626",
    "universal_id": "0564dec1-3c2c-4db7-b33e-b093e038527f",
    "countermeasure_name": "Verify that external groups are not able to connect with database (Oracle Database)",
    "countermeasure_solution": "To assess this recommendation, execute the following SQL statement.   \n```\nSELECT UPPER(VALUE) \nFROM V$PARAMETER \nWHERE UPPER(NAME)='OS_ROLES';\n```\nEnsure `VALUE` is set to `FALSE`.",
    "weakness_title_read_only": "External groups can cause privilege overlaps (Oracle Database)",
    "weakness_id_read_only": "P1301",
    "weakness": "295dadbe-7bf1-4cb0-9c00-ef5e9cdc9913",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2019-05-15T16:52:17.238000-04:00",
    "last_updated": "2021-06-25T14:47:47.454000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1627",
    "universal_id": "506a3205-f917-4018-884b-d333aa4baf5c",
    "countermeasure_name": "Disable remote listener setting (Oracle Database)",
    "countermeasure_solution": "Ensure 'REMOTE_LISTENER' Is Empty:  \n\nThe `remote_listener` setting determines whether or not a valid listener can be established on a system separate from the database instance. This setting should be empty unless the organization specifically needs a valid listener on a separate system.",
    "weakness_title_read_only": "Remote listener setting can lead to connection spoofing (Oracle Database)",
    "weakness_id_read_only": "P1302",
    "weakness": "d43304f3-72b6-4c83-a9c8-a7a2233dfa1a",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2019-05-15T16:52:17.313000-04:00",
    "last_updated": "2021-06-25T14:47:52.740000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1628",
    "universal_id": "aa6d1c79-345c-470b-84b3-c30a79043902",
    "countermeasure_name": "Verify that remote listener setting is empty (Oracle Database)",
    "countermeasure_solution": "To assess this recommendation, execute the following SQL statement.\n```\nSELECT UPPER(VALUE)\nFROM V$PARAMETER\nWHERE UPPER(NAME)='REMOTE_LISTENER';\n```\nEnsure `VALUE` is empty.",
    "weakness_title_read_only": "Remote listener setting can lead to connection spoofing (Oracle Database)",
    "weakness_id_read_only": "P1302",
    "weakness": "d43304f3-72b6-4c83-a9c8-a7a2233dfa1a",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2019-05-15T16:52:17.329000-04:00",
    "last_updated": "2021-06-25T14:47:52.542000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1629",
    "universal_id": "8d6f6b4e-0b6c-4321-9df1-1c88a5282a45",
    "countermeasure_name": "Do not share login password file between databases (Oracle Database)",
    "countermeasure_solution": "Ensure 'REMOTE_LOGIN_PASSWORDFILE' Is Set to 'NONE':  \n\nThe `remote_login_passwordfile` setting specifies whether or not Oracle checks for a password file during login and how many databases can use the password file. The setting should have a value of `None`",
    "weakness_title_read_only": "Remote login password file could permit unsecured privileged connections (Oracle Database)",
    "weakness_id_read_only": "P1303",
    "weakness": "9e12ab15-4546-4593-97a3-2a52405df712",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2019-05-15T16:52:17.400000-04:00",
    "last_updated": "2021-06-25T14:47:44.352000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1630",
    "universal_id": "3580b420-44c6-4e82-b1b4-5eb5814546b4",
    "countermeasure_name": "Verify that remote login password file is not shared between the databases (Oracle Database)",
    "countermeasure_solution": "To assess this recommendation, execute the following SQL statement. \n```\nSELECT UPPER(VALUE)\nFROM V$PARAMETER\nWHERE UPPER(NAME)='REMOTE_LOGIN_PASSWORDFILE';\n```\nEnsure `VALUE` is set to `NONE`.",
    "weakness_title_read_only": "Remote login password file could permit unsecured privileged connections (Oracle Database)",
    "weakness_id_read_only": "P1303",
    "weakness": "9e12ab15-4546-4593-97a3-2a52405df712",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2019-05-15T16:52:17.415000-04:00",
    "last_updated": "2021-06-25T14:47:43.788000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1631",
    "universal_id": "fa040a8e-9fa9-4cb7-852f-08879234201d",
    "countermeasure_name": "OS 'roles' with attendant privileges should be incapable of remote client connections (Oracle Database)",
    "countermeasure_solution": "Remote OS roles setting:\n\n- Ensure 'REMOTE_OS_AUTHENT' Is Set to 'FALSE':  \n  \n  The `remote_os_authent` setting determines whether or not OS 'roles' with the attendant privileges are allowed for remote client connections. This setting should have a value of `FALSE`.  \n  \n- Ensure 'REMOTE_OS_ROLES' Is Set to 'FALSE'  \n  \n  The `remote_os_roles` setting permits remote users' OS roles to be applied to database management. This setting should have a value of `FALSE`.",
    "weakness_title_read_only": "OS roles can cause connection spoofing and privilege overlaps (Oracle Database)",
    "weakness_id_read_only": "P1304",
    "weakness": "a6ef9dc0-6473-4149-bf4a-e7275e9fb124",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2019-05-15T16:52:17.493000-04:00",
    "last_updated": "2021-06-25T14:47:48.956000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1632",
    "universal_id": "8eaa5388-3455-45aa-9560-5041bab3d1d8",
    "countermeasure_name": "Verify that OS 'roles' are incapable of remote client connections (Oracle Database)",
    "countermeasure_solution": "To assess this recommendation, execute the following SQL statement.  \n```\nSELECT UPPER(VALUE)\nFROM V$PARAMETER\nWHERE UPPER(NAME)='REMOTE_OS_AUTHENT';\n```\n```\nSELECT UPPER(VALUE)\nFROM V$PARAMETER\nWHERE UPPER(NAME)='REMOTE_OS_ROLES';\n```\nEnsure `VALUE` is set to `FALSE`.",
    "weakness_title_read_only": "OS roles can cause connection spoofing and privilege overlaps (Oracle Database)",
    "weakness_id_read_only": "P1304",
    "weakness": "a6ef9dc0-6473-4149-bf4a-e7275e9fb124",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2019-05-15T16:52:17.513000-04:00",
    "last_updated": "2021-06-25T14:47:47.917000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1633",
    "universal_id": "df415cec-0e18-4ce2-ab48-9d7eb7ecc3ec",
    "countermeasure_name": "Leave the utl_file_dir setting value empty (Oracle Database)",
    "countermeasure_solution": "Ensure 'UTL_FILE_DIR' Is Empty: \n\nThe `utl_file_dir` setting allows packages like `utl_file` to access (read/write/modify/delete) files specified in `utl_file_dir`. This setting should have an empty value.",
    "weakness_title_read_only": "utl_file_dir can impact the integrity of files (Oracle Database)",
    "weakness_id_read_only": "P1305",
    "weakness": "6ff44d8c-5d92-4640-90f7-9bb22a3cf507",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2019-05-15T16:52:17.633000-04:00",
    "last_updated": "2021-06-25T14:47:49.439000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1634",
    "universal_id": "c57b42cf-10b4-4b89-8813-8e10cf3ccf12",
    "countermeasure_name": "Verify that utl_file_dir setting value is empty (Oracle Database)",
    "countermeasure_solution": "To assess this recommendation, execute the following SQL statement. \n```\nSELECT VALUE\nFROM V$PARAMETER\nWHERE UPPER(NAME)='UTL_FILE_DIR';\n```\nEnsure `VALUE` is empty.",
    "weakness_title_read_only": "utl_file_dir can impact the integrity of files (Oracle Database)",
    "weakness_id_read_only": "P1305",
    "weakness": "6ff44d8c-5d92-4640-90f7-9bb22a3cf507",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2019-05-15T16:52:17.648000-04:00",
    "last_updated": "2021-06-25T14:47:47.179000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1635",
    "universal_id": "517bbbdd-3ed9-419f-be34-4ff541bc221a",
    "countermeasure_name": "Drop connections after 3 unsuccessful login attempts (Oracle Database)",
    "countermeasure_solution": "Set 'SEC_MAX_FAILED_LOGIN_ATTEMPTS' to '3' or less:  \n\nThe `SEC_MAX_FAILED_LOGIN_ATTEMPTS` parameter determines how many failed login attempts are allowed before Oracle closes the login connection.",
    "weakness_title_read_only": "Unlimited number of login attempts during a connection (Oracle Database)",
    "weakness_id_read_only": "P1306",
    "weakness": "ac49a6bd-cccb-4f51-88a8-cf6734180359",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2019-05-15T16:52:17.759000-04:00",
    "last_updated": "2021-06-25T14:47:43.260000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1636",
    "universal_id": "59055c5b-7f12-41ef-9414-e172693ccf79",
    "countermeasure_name": "Verify that connections are dropped after 3 unsuccessful login attempts (Oracle Database)",
    "countermeasure_solution": "To assess this recommendation, execute the following SQL statement:\n\n```\nSELECT UPPER(VALUE)\nFROM V$PARAMETER\nWHERE UPPER(NAME)='SEC_MAX_FAILED_LOGIN_ATTEMPTS';\n``` \n\nEnsure `VALUE` is set to `3`.",
    "weakness_title_read_only": "Unlimited number of login attempts during a connection (Oracle Database)",
    "weakness_id_read_only": "P1306",
    "weakness": "ac49a6bd-cccb-4f51-88a8-cf6734180359",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2019-05-15T16:52:17.774000-04:00",
    "last_updated": "2021-06-25T14:47:43.350000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1637",
    "universal_id": "dcad7d11-f3b9-4ec7-aaad-b27926013d3f",
    "countermeasure_name": "Drop a connection after 3 bad packets from the client (Oracle Database)",
    "countermeasure_solution": "Ensure 'SEC_PROTOCOL_ERROR_FURTHER_ACTION' Is Set to 'DROP,3':  \n\nThe `SEC_PROTOCOL_ERROR_FURTHER_ACTION` setting determines the Oracle's server's response to bad/malformed packets received from the client. This setting should have a value of `DROP,3`, which will cause a connection to be dropped after three bad/malformed packets.",
    "weakness_title_read_only": "Receiving bad packets could result in a denial-of-service condition (Oracle Database)",
    "weakness_id_read_only": "P1307",
    "weakness": "a15a63ae-2741-4e11-b4ac-a668242b6f97",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2019-05-15T16:52:17.845000-04:00",
    "last_updated": "2021-06-25T14:47:43.279000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1638",
    "universal_id": "f31497f6-2636-4bce-81ff-00fa2385189c",
    "countermeasure_name": "Verify that system drops a connection after 3 bad packets from the client (Oracle Database)",
    "countermeasure_solution": "To assess this recommendation, execute the following SQL statement.  \n```\nSELECT UPPER(VALUE)\nFROM V$PARAMETER\nWHERE UPPER(NAME)='SEC_PROTOCOL_ERROR_FURTHER_ACTION';\n```  \nEnsure `VALUE` is set to `DROP,3`.",
    "weakness_title_read_only": "Receiving bad packets could result in a denial-of-service condition (Oracle Database)",
    "weakness_id_read_only": "P1307",
    "weakness": "a15a63ae-2741-4e11-b4ac-a668242b6f97",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2019-05-15T16:52:17.860000-04:00",
    "last_updated": "2021-06-25T14:47:43.206000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1639",
    "universal_id": "1136d4e2-93f1-4028-b3a4-aa100e62180d",
    "countermeasure_name": "Maintain server logs for bad packets received from the client (Oracle Database)",
    "countermeasure_solution": "Ensure 'SEC_PROTOCOL_ERROR_TRACE_ACTION' Is Set to 'LOG':  \n\nThe `SEC_PROTOCOL_ERROR_TRACE_ACTION` setting determines the Oracle's server's logging response level to bad/malformed packets received from the client by generating `ALERT`, `LOG`, or `TRACE` levels of detail in the log files. This setting should have a value of `LOG` unless the organization has a compelling reason to use a different value because `LOG` should cause the necessary information to be logged. Setting the value as `TRACE` can generate an enormous amount of log output and should be reserved for debugging only.",
    "weakness_title_read_only": "Receiving bad packets can indicate packet-based attack (Oracle Database)",
    "weakness_id_read_only": "P1308",
    "weakness": "370625c0-d5ea-483b-a106-825cf0c3542d",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2019-05-15T16:52:17.930000-04:00",
    "last_updated": "2021-06-25T14:47:57.692000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1640",
    "universal_id": "eee5ef03-3758-4011-bd30-c6de19d67efe",
    "countermeasure_name": "Verify that system maintains server logs for bad packets received from the client (Oracle Database)",
    "countermeasure_solution": "To assess this recommendation, execute the following SQL statement.   \n```\nSELECT UPPER(VALUE)\nFROM V$PARAMETER\nWHERE UPPER(NAME)='SEC_PROTOCOL_ERROR_TRACE_ACTION';\n```\nEnsure `VALUE` is set to `LOG`.",
    "weakness_title_read_only": "Receiving bad packets can indicate packet-based attack (Oracle Database)",
    "weakness_id_read_only": "P1308",
    "weakness": "370625c0-d5ea-483b-a106-825cf0c3542d",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2019-05-15T16:52:17.945000-04:00",
    "last_updated": "2021-06-25T14:47:58.369000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1641",
    "universal_id": "00cecc30-e9d3-4d05-b37d-aac274c8897e",
    "countermeasure_name": "Do not allow database to return current patch/update information (Oracle Database)",
    "countermeasure_solution": "Ensure 'SEC_RETURN_SERVER_RELEASE_BANNER' Is Set to 'FALSE':  \n\nThe information about patch/update release number provides information about the exact patch/update release that is currently running on the database. This is sensitive information that should not be revealed to anyone who requests it.",
    "weakness_title_read_only": "Disclosing release/patch numbers can reveal known weaknesses to unauthorized users (Oracle Database)",
    "weakness_id_read_only": "P1309",
    "weakness": "a53e3167-23a2-4705-aabf-51449d8052b2",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2019-05-15T16:52:18.014000-04:00",
    "last_updated": "2021-06-25T14:47:38.456000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1642",
    "universal_id": "1a02609a-f24c-4213-b76b-09d8a677b93e",
    "countermeasure_name": "Verify that database is not disclosing the current patch/update information (Oracle Database)",
    "countermeasure_solution": "To assess this recommendation, execute the following SQL statement. \n```\nSELECT UPPER(VALUE)\nFROM V$PARAMETER \nWHERE UPPER(NAME)='SEC_RETURN_SERVER_RELEASE_BANNER';\n```\nEnsure `VALUE` is set to `FALSE`.",
    "weakness_title_read_only": "Disclosing release/patch numbers can reveal known weaknesses to unauthorized users (Oracle Database)",
    "weakness_id_read_only": "P1309",
    "weakness": "a53e3167-23a2-4705-aabf-51449d8052b2",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2019-05-15T16:52:18.029000-04:00",
    "last_updated": "2021-06-25T14:47:38.356000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1643",
    "universal_id": "b855eee1-3d59-41cc-a571-0bd089b0ae0d",
    "countermeasure_name": "User must have SELECT object privilege (Oracle Database)",
    "countermeasure_solution": "Ensure 'SQL92_SECURITY' Is Set to 'TRUE':  \n\nThe `SQL92_SECURITY` parameter setting `TRUE` requires that a user must also be granted the `SELECT` object privilege before being able to perform `UPDATE` or `DELETE` operations on tables that have `WHERE` or `SET` clauses. The setting should have a value of TRUE.",
    "weakness_title_read_only": "Inadvertent information disclosure (Oracle Database)",
    "weakness_id_read_only": "P1310",
    "weakness": "790ba902-8d5f-4df9-8f4e-4bb762d1a629",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2019-05-15T16:52:18.098000-04:00",
    "last_updated": "2021-06-25T14:47:45.937000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1644",
    "universal_id": "c694b5c3-a1fa-4ff9-a2e5-754a0ebd5485",
    "countermeasure_name": "Verify that user has been granted SELECT object privilege (Oracle Database)",
    "countermeasure_solution": "To assess this recommendation, execute the following SQL statement.  \n```\nSELECT UPPER(VALUE)\nFROM V$PARAMETER\nWHERE UPPER(NAME)='SQL92_SECURITY'; \n```\nEnsure `VALUE` is set to `TRUE`.",
    "weakness_title_read_only": "Inadvertent information disclosure (Oracle Database)",
    "weakness_id_read_only": "P1310",
    "weakness": "790ba902-8d5f-4df9-8f4e-4bb762d1a629",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2019-05-15T16:52:18.113000-04:00",
    "last_updated": "2021-06-25T14:47:45.029000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1645",
    "universal_id": "1e66ec51-b863-43f7-9a48-3f5a457fcf8d",
    "countermeasure_name": "Restrict trace file access by making it unreadable (Oracle Database)",
    "countermeasure_solution": "Ensure '_trace_files_public' Is Set to 'FALSE':  \n\nThe `_trace_files_public` setting determines whether or not the system's trace file is world readable. This setting should have a value of FALSE to restrict trace file access.",
    "weakness_title_read_only": "Disclosure of sensitive information about instance operations (Oracle Database)",
    "weakness_id_read_only": "P1311",
    "weakness": "92ccefb1-34a7-48ab-ab2f-1544c308d581",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2019-05-15T16:52:18.184000-04:00",
    "last_updated": "2021-06-25T14:47:45.122000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1646",
    "universal_id": "e6fec244-20ac-4892-904b-11f3865d9340",
    "countermeasure_name": "Verify that system's trace file is unreadable (Oracle Database)",
    "countermeasure_solution": "To assess this recommendation, execute the following SQL statement.\n```\nSELECT VALUE\nFROM V$PARAMETER\nWHERE NAME='_trace_files_public';\n```\nA `VALUE` equal to `FALSE` or lack of results implies compliance.",
    "weakness_title_read_only": "Disclosure of sensitive information about instance operations (Oracle Database)",
    "weakness_id_read_only": "P1311",
    "weakness": "92ccefb1-34a7-48ab-ab2f-1544c308d581",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2019-05-15T16:52:18.199000-04:00",
    "last_updated": "2021-06-25T14:47:45.427000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1647",
    "universal_id": "3c6f6753-8377-44de-a342-e630cf6d5120",
    "countermeasure_name": "Enforce resource limit in any database profile (Oracle Database)",
    "countermeasure_solution": "Ensure 'RESOURCE_LIMIT' Is Set to 'TRUE':  \n\n`RESOURCE_LIMIT` determines whether resource limits are enforced in database profiles. This setting should have a value of `TRUE`.",
    "weakness_title_read_only": "Performance impact due to resource limit (Oracle Database)",
    "weakness_id_read_only": "P1312",
    "weakness": "38c6e691-f918-4d4b-96b3-5c1e86f869d1",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2019-05-15T16:52:18.271000-04:00",
    "last_updated": "2021-06-25T14:47:40.581000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1648",
    "universal_id": "c5e539fb-50cd-4e99-bb4a-f0d659ca2ed8",
    "countermeasure_name": "Verify that resource limit has been enforced in database profile (Oracle Database)",
    "countermeasure_solution": "To assess this recommendation, execute the following SQL statement.\n```\nSELECT UPPER(VALUE)\nFROM V$PARAMETER\nWHERE UPPER(NAME)='RESOURCE_LIMIT';\n```\nEnsure `VALUE` is set to `TRUE`.",
    "weakness_title_read_only": "Performance impact due to resource limit (Oracle Database)",
    "weakness_id_read_only": "P1312",
    "weakness": "38c6e691-f918-4d4b-96b3-5c1e86f869d1",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2019-05-15T16:52:18.287000-04:00",
    "last_updated": "2021-06-25T14:47:39.919000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1649",
    "universal_id": "6b7fe49f-9c7f-4fbf-83be-fd1d2f8120ca",
    "countermeasure_name": "Lock out accounts after 5 unsuccessful attempts (Oracle Database)",
    "countermeasure_solution": "Set 'FAILED_LOGIN_ATTEMPTS' to a number less than or equal to '5':  \n\nThe `FAILED_LOGIN_ATTEMPTS` setting determines how many failed login attempts are permitted before the system locks the user's account. While different profiles can have different and more restrictive settings, such as `USERS` and `APPS`, the minimum(s)\nrecommended here should be set on the `DEFAULT` profile.",
    "weakness_title_read_only": "Unlimited failed login attempts by a user (Oracle Database)",
    "weakness_id_read_only": "P1313",
    "weakness": "fea4395f-37fd-4b88-91f2-cca54cea978d",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2019-05-15T16:52:18.362000-04:00",
    "last_updated": "2021-06-25T14:47:43.242000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1650",
    "universal_id": "830b24c1-bda5-4c51-9462-d5eb5b50caab",
    "countermeasure_name": "Verify that accounts are locked out after 5 unsuccessful attempts (Oracle Database)",
    "countermeasure_solution": "To assess this recommendation, execute the following SQL statement:\n\n``` \nSELECT PROFILE, RESOURCE_NAME, LIMIT \nFROM DBA_PROFILES \nWHERE RESOURCE_NAME='FAILED_LOGIN_ATTEMPTS' \nAND (  \n    LIMIT = 'DEFAULT'\n    OR LIMIT = 'UNLIMITED'\n    OR LIMIT > 5\n);\n``` \n\nLack of results implies compliance.",
    "weakness_title_read_only": "Unlimited failed login attempts by a user (Oracle Database)",
    "weakness_id_read_only": "P1313",
    "weakness": "fea4395f-37fd-4b88-91f2-cca54cea978d",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2019-05-15T16:52:18.377000-04:00",
    "last_updated": "2021-06-25T14:47:43.178000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1651",
    "universal_id": "fa8cbfae-7a2c-40b1-9f6a-8e496f804489",
    "countermeasure_name": "Accounts must be unlocked automatically after a period of time (Oracle Database)",
    "countermeasure_solution": "Ensure 'PASSWORD_LOCK_TIME' Is Greater than or Equal to '1':  \n\nThe `PASSWORD_LOCK_TIME` setting determines how many days must pass for the user's account to be unlocked after the set number of failed login attempts has occurred. The suggested value for this is one day or greater.",
    "weakness_title_read_only": "Administrative overhead due to account lockout (Oracle Database)",
    "weakness_id_read_only": "P1314",
    "weakness": "c3fd95d7-e86e-4fa9-a352-cb104bb0fe44",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2019-05-15T16:52:18.449000-04:00",
    "last_updated": "2021-06-25T14:47:43.297000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1652",
    "universal_id": "4888cfa2-1683-485e-92c0-176823fa4d7e",
    "countermeasure_name": "Verify that locked account is unlocked automatically after 1 day (Oracle Database)",
    "countermeasure_solution": "To assess this recommendation, execute the following SQL statement.   \n```\nSELECT PROFILE, RESOURCE_NAME,LIMIT  \nFROM DBA_PROFILES \nWHERE RESOURCE_NAME='PASSWORD_LOCK_TIME' \nAND \n( \nLIMIT = 'DEFAULT' \nOR LIMIT = 'UNLIMITED' \nOR LIMIT < 1 \n);\n```\nLack of results implies compliance.",
    "weakness_title_read_only": "Administrative overhead due to account lockout (Oracle Database)",
    "weakness_id_read_only": "P1314",
    "weakness": "c3fd95d7-e86e-4fa9-a352-cb104bb0fe44",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2019-05-15T16:52:18.465000-04:00",
    "last_updated": "2021-06-25T14:47:43.324000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1653",
    "universal_id": "fb63f87c-f924-40aa-9448-1c554952c0f6",
    "countermeasure_name": "Do not allow remote OS authentication of the user (Oracle Database)",
    "countermeasure_solution": "Ensure 'DBA_USERS.PASSWORD' Is Not Set to 'EXTERNAL' for Any User:  \n\nThe `password='EXTERNAL'` setting determines whether or not a user can be authenticated by a remote OS to allow access to the database with full authorization. This setting should not be used.",
    "weakness_title_read_only": "Remote OS authentication of a user can grant full access to database (Oracle Database)",
    "weakness_id_read_only": "P1315",
    "weakness": "a0aa5028-ea4d-41eb-910f-1074ac183d60",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2019-05-15T16:52:18.702000-04:00",
    "last_updated": "2021-06-25T14:47:52.992000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1654",
    "universal_id": "1c992d7a-e819-4a1d-8bd5-dafdc8898d58",
    "countermeasure_name": "Verify that users cannot be authenticated by remote OS for full authorization to database (Oracle Database)",
    "countermeasure_solution": "To assess this recommendation, execute the following SQL statement.   \n```\nSELECT USERNAME\nFROM DBA_USERS\nWHERE PASSWORD='EXTERNAL';\n``` \nLack of results implies compliance.",
    "weakness_title_read_only": "Remote OS authentication of a user can grant full access to database (Oracle Database)",
    "weakness_id_read_only": "P1315",
    "weakness": "a0aa5028-ea4d-41eb-910f-1074ac183d60",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2019-05-15T16:52:18.719000-04:00",
    "last_updated": "2021-06-25T14:47:52.467000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1655",
    "universal_id": "d6a2c45c-8922-4213-a6e2-c6f0d7cda9f9",
    "countermeasure_name": "Limit the number of sessions per user (Oracle Database)",
    "countermeasure_solution": "Ensure 'SESSIONS_PER_USER' Is Less than or Equal to '10':  \n\nThe `SESSIONS_PER_USER` setting determines the maximum number of user sessions that are allowed to be open concurrently. The suggested value for this is 10 or less.",
    "weakness_title_read_only": "Allowing multiple sessions per user can lead to memory resource consumption or denial-of-service attack (Oracle Database)",
    "weakness_id_read_only": "P1316",
    "weakness": "2e11c7e8-6dcc-4dc1-ba39-3ba1267f3f4e",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2019-05-15T16:52:18.832000-04:00",
    "last_updated": "2021-06-25T14:47:40.469000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1656",
    "universal_id": "47a79da7-1259-4e86-bb46-219228f9e4f6",
    "countermeasure_name": "Verify that maximum number of sessions per user is less than or equal to 10 (Oracle Database)",
    "countermeasure_solution": "To assess this recommendation, execute the following SQL statement.    \n```\nSELECT PROFILE, RESOURCE_NAME, LIMIT \nFROM DBA_PROFILES\nWHERE RESOURCE_NAME='SESSIONS_PER_USER'\nAND \n( \nLIMIT = 'DEFAULT'  \nOR LIMIT = 'UNLIMITED' \nOR LIMIT > 10  \n);\n```\nLack of results implies compliance.",
    "weakness_title_read_only": "Allowing multiple sessions per user can lead to memory resource consumption or denial-of-service attack (Oracle Database)",
    "weakness_id_read_only": "P1316",
    "weakness": "2e11c7e8-6dcc-4dc1-ba39-3ba1267f3f4e",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2019-05-15T16:52:18.847000-04:00",
    "last_updated": "2021-06-25T14:47:40.550000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1657",
    "universal_id": "8c784dc9-d8b3-4557-8472-70020dbd4153",
    "countermeasure_name": "Do not assign default profile to any user (Oracle Database)",
    "countermeasure_solution": "Ensure No Users Are Assigned the 'DEFAULT' Profile:  \n\nUpon creation database users are assigned to the `DEFAULT` profile unless otherwise specified. No users should be assigned to that profile.",
    "weakness_title_read_only": "Default profile settings can lead to privileged access (Oracle Database)",
    "weakness_id_read_only": "P1317",
    "weakness": "76b44941-da5b-4b8f-a705-255981fe4175",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2019-05-15T16:52:18.919000-04:00",
    "last_updated": "2021-06-25T14:47:45.919000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1658",
    "universal_id": "afa81445-323d-439e-b962-18c9045f8b97",
    "countermeasure_name": "Verify that default profile has not been assigned to any user (Oracle Database)",
    "countermeasure_solution": "To assess this recommendation, execute the following SQL statement.   \n```  \nSELECT USERNAME\nFROM DBA_USERS\nWHERE PROFILE='DEFAULT'\nAND ACCOUNT_STATUS='OPEN'\nAND USERNAME NOT IN \n('ANONYMOUS', 'CTXSYS', 'DBSNMP', 'EXFSYS', 'LBACSYS',\n'MDSYS', 'MGMT_VIEW','OLAPSYS','OWBSYS', 'ORDPLUGINS',\n'ORDSYS', 'OUTLN', 'SI_INFORMTN_SCHEMA','SYS',\n'SYSMAN', 'SYSTEM', 'TSMSYS', 'WK_TEST', 'WKSYS',\n'WKPROXY', 'WMSYS', 'XDB', 'CISSCAN');\n```\nLack of results implies compliance.",
    "weakness_title_read_only": "Default profile settings can lead to privileged access (Oracle Database)",
    "weakness_id_read_only": "P1317",
    "weakness": "76b44941-da5b-4b8f-a705-255981fe4175",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2019-05-15T16:52:18.934000-04:00",
    "last_updated": "2021-06-25T14:47:48.219000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1659",
    "universal_id": "0b1d493f-8194-4a16-aee2-6ee8cdde4f8e",
    "countermeasure_name": "Revoke excessive system privileges from unauthorized users (Oracle Database)",
    "countermeasure_solution": "Ensure '%ANY%' Is Revoked from Unauthorized 'GRANTEE':  \n\n  The Oracle database `ANY` keyword provides the user the capability to alter any item in the catalog of the database. Unauthorized grantees should not have that keyword assigned to them.  \n  \n- Ensure 'DBA_SYS_PRIVS.%' Is Revoked from Unauthorized 'GRANTEE' with 'ADMIN_OPTION' Set to 'YES':\n\n  The Oracle database `WITH_ADMIN` privilege allows the designated user to grant another user the same privileges. Unauthorized grantees should not have that privilege.\n\n- Ensure SELECT ANY DICTIONARY Is Revoked from Unauthorized 'GRANTEE':\n\n  The Oracle database `SELECT ANY DICTIONARY` privilege allows the designated user to access `SYS` schema objects. Unauthorized grantees should not have that privilege.\n \n - Ensure 'SELECT ANY TABLE' Is Revoked from Unauthorized 'GRANTEE':\n \n   The Oracle database `SELECT ANY TABLE` privilege allows the designated user to open any table, except SYS, to view it. Unauthorized grantees should not have that privilege.\n\n- Ensure 'AUDIT SYSTEM' Is Revoked from Unauthorized 'GRANTEE':\n\n  The Oracle database `AUDIT SYSTEM` privilege allows changes to auditing activities on the system. Unauthorized grantees should not have that privilege.\n\n- Ensure 'EXEMPT ACCESS POLICY' Is Revoked from Unauthorized 'GRANTEE':\n\n  The Oracle database `EXEMPT ACCESS POLICY` keyword provides the user the capability to access all the table rows regardless of row-level security lockouts. Unauthorized grantees should not have that keyword assigned to them.\n\n- Ensure 'BECOME USER' Is Revoked from Unauthorized 'GRANTEE':\n\n  The Oracle database `BECOME USER` privilege allows the designated user to inherit the rights of another user. Unauthorized grantees should not have that privilege.\n\n- Ensure 'CREATE_PROCEDURE' Is Revoked from Unauthorized 'GRANTEE':\n\n  The Oracle database `CREATE PROCEDURE` privilege allows the designated user to create a stored procedure that will fire when given the correct command sequence. Unauthorized grantees should not have that privilege.\n  \n- Ensure 'ALTER SYSTEM' Is Revoked from Unauthorized 'GRANTEE':\n\n  The Oracle database `ALTER SYSTEM` privilege allows the designated user to dynamically alter the instance's running operations. Unauthorized grantees should not have that privilege.\n\n- Ensure 'CREATE ANY LIBRARY' Is Revoked from Unauthorized 'GRANTEE':\n\n  The Oracle database `CREATE ANY LIBRARY` privilege allows the designated user to create objects that are associated to the shared libraries. Unauthorized grantees should not have that privilege.\n  \n- Ensure 'GRANT ANY OBJECT PRIVILEGE' Is Revoked from Unauthorized 'GRANTEE':\n\n  The Oracle database `GRANT ANY OBJECT PRIVILEGE `keyword provides the grantee the capability to grant access to any single or multiple combinations of objects to any grantee in the catalog of the database. Unauthorized grantees should not have that keyword assigned to them.\n  \n- Ensure 'GRANT ANY ROLE' Is Revoked from Unauthorized 'GRANTEE':\n\n  The Oracle database `GRANT ANY ROLE` keyword provides the grantee the capability to grant any single role to any grantee in the catalog of the database. Unauthorized grantees should not have that keyword assigned to them.",
    "weakness_title_read_only": "Unauthorized users with excessive privileges can impact confidentiality and integrity of data (Oracle Database)",
    "weakness_id_read_only": "P1318",
    "weakness": "44749ab1-2cb9-4d70-a5fa-d6e3fddf9f85",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2019-05-15T16:52:19.111000-04:00",
    "last_updated": "2021-06-25T14:47:51.962000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1660",
    "universal_id": "2f125b84-af1b-43f7-a19e-8e8460e29383",
    "countermeasure_name": "Verify that excessive system privileges have been revoked from unauthorized users (Oracle Database)",
    "countermeasure_solution": "To assess this recommendation, execute the following SQL statement.  \n\n```\nSELECT GRANTEE, PRIVILEGE\nFROM DBA_SYS_PRIVS\nWHERE PRIVILEGE LIKE '%ANY%'\nAND GRANTEE NOT IN ('AQ_ADMINISTRATOR_ROLE','DBA','DBSNMP','EXFSYS',\n'EXP_FULL_DATABASE','IMP_FULL_DATABASE',\n'DATAPUMP_IMP_FULL_DATABASE','JAVADEBUGPRIV','MDSYS',\n'OEM_MONITOR','OLAPSYS','OLAP_DBA','ORACLE_OCM','OWB$CLIENT',\n'OWBSYS','SCHEDULER_ADMIN','SPATIAL_CSW_ADMIN_USR',\n'SPATIAL_WFS_ADMIN_USR','SYS','SYSMAN','SYSTEM','WMSYS',\n'APEX_030200','APEX_040000','APEX_040100','APEX_040200','LBACSYS',\n'SYSBACKUP','CTXSYS','OUTLN','DVSYS','ORDPLUGINS','ORDSYS',\n'RECOVERY_CATALOG_OWNER_VPD','GSMADMIN_INTERNAL','XDB','SYSDG',\n'AUDIT_ADMIN','DV_OWNER','DV_REALM_OWNER','EM_EXPRESS_ALL',\n'RECOVERY_CATALOG_OWNER','APEX_050000','SYSMAN_STB',\n'SYSMAN_TYPES');\n```  \n```  \nSELECT GRANTEE, PRIVILEGE\nFROM DBA_SYS_PRIVS\nWHERE ADMIN_OPTION='YES'\nAND GRANTEE not in ('AQ_ADMINISTRATOR_ROLE','DBA','OWBSYS',\n'SCHEDULER_ADMIN','SYS','SYSTEM','WMSYS',\n'DVSYS','SYSKM','DV_ACCTMGR')\nAND NOT REGEXP_LIKE(grantee,'^APEX_0[3-9][0-9][0-9][0-9][0-9]$');\n```  \n```  \nSELECT GRANTEE, PRIVILEGE\nFROM DBA_SYS_PRIVS\nWHERE PRIVILEGE='SELECT ANY DICTIONARY'\nAND GRANTEE NOT IN ('DBA','DBSNMP','OEM_MONITOR',\n'OLAPSYS','ORACLE_OCM','SYSMAN','WMSYS','SYSBACKUP','SYSDG');\n```  \n```  \nSELECT GRANTEE, PRIVILEGE\nFROM DBA_SYS_PRIVS\nWHERE PRIVILEGE='SELECT ANY TABLE'\nAND GRANTEE NOT IN ('DBA', 'MDSYS', 'SYS', 'IMP_FULL_DATABASE',\n'EXP_FULL_DATABASE','DATAPUMP_IMP_FULL_DATABASE',\n'WMSYS', 'SYSTEM','OLAP_DBA', 'DV_REALM_OWNER');\n```  \n```\nSELECT GRANTEE, PRIVILEGE\nFROM DBA_SYS_PRIVS\nWHERE PRIVILEGE='AUDIT SYSTEM'\nAND GRANTEE NOT IN ('DBA','DATAPUMP_IMP_FULL_DATABASE','IMP_FULL_DATABASE',\n'SYS','AUDIT_ADMIN');  \n```  \n```  \nSELECT GRANTEE, PRIVILEGE\nFROM DBA_SYS_PRIVS\nWHERE PRIVILEGE='EXEMPT ACCESS POLICY';\n```  \n```\nSELECT GRANTEE, PRIVILEGE\nFROM DBA_SYS_PRIVS\nWHERE PRIVILEGE='BECOME USER'\nAND GRANTEE NOT IN ('DBA','SYS','IMP_FULL_DATABASE');  \n```\n```\nSELECT GRANTEE, PRIVILEGE\nFROM DBA_SYS_PRIVS\nWHERE PRIVILEGE='CREATE PROCEDURE'\nAND GRANTEE NOT IN ( 'DBA','DBSNMP','MDSYS','OLAPSYS','OWB$CLIENT',\n'OWBSYS','RECOVERY_CATALOG_OWNER','SPATIAL_CSW_ADMIN_USR',\n'SPATIAL_WFS_ADMIN_USR','SYS','APEX_030200','APEX_040000',\n'APEX_040100','APEX_040200','DVF','RESOURCE','DV_REALM_RESOURCE',\n'APEX_GRANTS_FOR_NEW_USERS_ROLE','APEX_050000','MGMT_VIEW',\n'SYSMAN_MDS','SYSMAN_OPSS','SYSMAN_RO','SYSMAN_STB');\n```\n```\nSELECT GRANTEE, PRIVILEGE\nFROM DBA_SYS_PRIVS\nWHERE PRIVILEGE='CREATE PROCEDURE'\nAND GRANTEE NOT IN ( 'DBA','DBSNMP','MDSYS','OLAPSYS','OWB$CLIENT',\n'OWBSYS','RECOVERY_CATALOG_OWNER','SPATIAL_CSW_ADMIN_USR',\n'SPATIAL_WFS_ADMIN_USR','SYS','APEX_030200','APEX_040000',\n'APEX_040100','APEX_040200','DVF','RESOURCE','DV_REALM_RESOURCE',\n'APEX_GRANTS_FOR_NEW_USERS_ROLE','APEX_050000','MGMT_VIEW',\n'SYSMAN_MDS','SYSMAN_OPSS','SYSMAN_RO','SYSMAN_STB');\n```\n```\nSELECT GRANTEE, PRIVILEGE\nFROM DBA_SYS_PRIVS\nWHERE PRIVILEGE='CREATE ANY LIBRARY'\nAND GRANTEE NOT IN ('SYS','SYSTEM','DBA','IMP_FULL_DATABASE');\n```\n```\nSELECT GRANTEE, PRIVILEGE\nFROM DBA_SYS_PRIVS\nWHERE PRIVILEGE='CREATE LIBRARY'\nAND GRANTEE NOT IN ('SYS','SYSTEM','DBA','MDSYS','SPATIAL_WFS_ADMIN_USR',\n'SPATIAL_CSW_ADMIN_USR','DVSYS','GSMADMIN_INTERNAL','XDB');\n```\n```\nSELECT GRANTEE, PRIVILEGE\nFROM DBA_SYS_PRIVS\nWHERE PRIVILEGE='GRANT ANY OBJECT PRIVILEGE'\nAND GRANTEE NOT IN ('DBA','SYS','IMP_FULL_DATABASE',\n'DATAPUMP_IMP_FULL_DATABASE',\n'EM_EXPRESS_ALL', 'DV_REALM_OWNER');\n```\n```\nSELECT GRANTEE, PRIVILEGE\nFROM DBA_SYS_PRIVS\nWHERE PRIVILEGE='GRANT ANY ROLE'\nAND GRANTEE NOT IN ('DBA','SYS','DATAPUMP_IMP_FULL_DATABASE',\n'IMP_FULL_DATABASE','SPATIAL_WFS_ADMIN_USR',\n'SPATIAL_CSW_ADMIN_USR','GSMADMIN_INTERNAL',\n'DV_REALM_OWNER', 'EM_EXPRESS_ALL', 'DV_OWNER');\n```\n\nLack of results implies compliance.",
    "weakness_title_read_only": "Unauthorized users with excessive privileges can impact confidentiality and integrity of data (Oracle Database)",
    "weakness_id_read_only": "P1318",
    "weakness": "44749ab1-2cb9-4d70-a5fa-d6e3fddf9f85",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2019-05-15T16:52:19.195000-04:00",
    "last_updated": "2021-06-25T14:47:51.455000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1661",
    "universal_id": "9c37b4a7-53ba-4347-be31-0f308933d7c5",
    "countermeasure_name": "Proxy users should only have connect privileges (Oracle Database)",
    "countermeasure_solution": "Ensure Proxy Users Have Only 'CONNECT' Privilege:  \n\nDo not grant privileges other than `CONNECT` directly to proxy users",
    "weakness_title_read_only": "Not monitoring access of proxy users (Oracle Database)",
    "weakness_id_read_only": "P1319",
    "weakness": "e354f4cb-8110-4aab-9d6a-7ab00d1de56a",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2019-05-15T16:52:19.445000-04:00",
    "last_updated": "2021-06-25T14:47:47.586000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1662",
    "universal_id": "6abfaf11-2791-4f08-b221-121c69c3612c",
    "countermeasure_name": "Verify the access privileges for proxy users (Oracle Database)",
    "countermeasure_solution": "To assess this recommendation, execute the following SQL statement.    \n```  \nSELECT GRANTEE,GRANTED_ROLE FROM DBA_ROLE_PRIVS WHERE GRANTEE IN (SELECT PROXY FROM\nDBA_PROXIES) AND GRANTED_ROLE NOT IN ('CONNECT')\nUNION\nSELECT GRANTEE,PRIVILEGE FROM DBA_SYS_PRIVS WHERE GRANTEE IN (SELECT PROXY\nFROM DBA_PROXIES) AND PRIVILEGE NOT IN ('CREATE SESSION')\nUNION\nSELECT GRANTEE,PRIVILEGE FROM DBA_TAB_PRIVS WHERE GRANTEE IN (SELECT PROXY\nFROM DBA_PROXIES);\n``` \nLack of results implies compliance.",
    "weakness_title_read_only": "Not monitoring access of proxy users (Oracle Database)",
    "weakness_id_read_only": "P1319",
    "weakness": "e354f4cb-8110-4aab-9d6a-7ab00d1de56a",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2019-05-15T16:52:19.460000-04:00",
    "last_updated": "2021-06-25T14:47:48.538000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1663",
    "universal_id": "a0e7f70a-1b49-429c-accc-532951d4249f",
    "countermeasure_name": "Remove 'EXECUTE ANY PROCEDURE' from OUTLN and DBSNMP users (Oracle Database)",
    "countermeasure_solution": "Ensure 'EXECUTE ANY PROCEDURE' Is Revoked from 'OUTLN':  \n\nRemove unneeded `EXECUTE ANY PROCEDURE` privileges from `OUTLN`.  \n  \nEnsure 'EXECUTE ANY PROCEDURE' Is Revoked from 'DBSNMP':  \n\nRemove unneeded `EXECUTE ANY PROCEDURE` privileges from `DBSNMP`.",
    "weakness_title_read_only": "Granting excessive privileges (Oracle Database)",
    "weakness_id_read_only": "P1320",
    "weakness": "639ce469-cd41-4797-99a2-8d5578c0be0a",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2019-05-15T16:52:19.541000-04:00",
    "last_updated": "2021-06-25T14:47:47.891000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1664",
    "universal_id": "64ab982b-b4d1-4f58-a39e-669de886acbe",
    "countermeasure_name": "Verify that 'EXECUTE ANY PROCEDURE' is revoked (Oracle Database)",
    "countermeasure_solution": "To assess this recommendation, execute the following SQL statement.    \n```\nSELECT GRANTEE, PRIVILEGE\nFROM DBA_SYS_PRIVS\nWHERE PRIVILEGE='EXECUTE ANY PROCEDURE'\nAND GRANTEE='OUTLN';\n```  \n```\nSELECT GRANTEE, PRIVILEGE\nFROM DBA_SYS_PRIVS\nWHERE PRIVILEGE='EXECUTE ANY PROCEDURE'\nAND GRANTEE='DBSNMP';\n```\nLack of results implies compliance.",
    "weakness_title_read_only": "Granting excessive privileges (Oracle Database)",
    "weakness_id_read_only": "P1320",
    "weakness": "639ce469-cd41-4797-99a2-8d5578c0be0a",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2019-05-15T16:52:19.562000-04:00",
    "last_updated": "2021-06-25T14:47:50.190000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1665",
    "universal_id": "84d1e210-0281-4ab1-b87d-6a34b008ecc5",
    "countermeasure_name": "Revoke default public execute privileges from powerful packages and object types (Oracle Database)",
    "countermeasure_solution": "Remove public privileges from powerful packages:\n\n- Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'DBMS_ADVISOR':  \n\n  The Oracle database `DBMS_ADVISOR` package can be used to write files located on the server where the Oracle instance is installed. The user `PUBLIC` should not be able to execute `DBMS_ADVISOR`\n\n- Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'DBMS_CRYPTO':\n\n  The `DBMS_CRYPTO` settings provide a toolset that determines the strength of the encryption algorithm used to encrypt application data and is part of the `SYS` schema. The `DES` (56-bit key), `3DES` (168-bit key), `3DES-2KEY` (112-bit key), `AES` (128/192/256-bit keys), and `RC4` are available. The user PUBLIC should not be able to execute `DBMS_CRYPTO`.\n\n- Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'DBMS_JAVA':\n\n  The Oracle database `DBMS_JAVA` package can run Java classes (e.g. OS commands) or grant Java privileges. The user `PUBLIC` should not be able to execute `DBMS_JAVA`.\n\n- Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'DBMS_JOB':\n  \n  The Oracle database `DBMS_JOB` package schedules and manages the jobs sent to the job queue and has been superseded by the `DBMS_SCHEDULER` package, even though `DBMS_JOB` has been retained for backwards compatibility. The user `PUBLIC` should not be able to execute `DBMS_JOB`.\n \n - Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'DBMS_LDAP':\n   \n   The Oracle database `DBMS_LDAP` package contains functions and procedures that enable programmers to access data from `LDAP` servers. The user `PUBLIC`should not be able to execute `DBMS_LDAP`.\n   \n- Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'DBMS_LOB':\n\n  The Oracle database `DBMS_LOB` package provides subprograms that can manipulate and read/write on `BLOBs`, `CLOBs`, `NCLOBs`, `BFILEs`, and temporary `LOBs`. The user `PUBLIC` should not be able to execute `DBMS_LOB`.\n  \n- Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'DBMS_OBFUSCATION_TOOLKIT':\n\n  The `DBMS_OBFUSCATION_TOOLKIT` provides one of the tools that determine the strength of the encryption algorithm used to encrypt application data and is part of the `SYS` schema. The `DES` (56-bit key) and `3DES` (168-bit key) are the only two types available. The user PUBLIC should not be able to execute `DBMS_OBFUSCATION_TOOLKIT`.\n    \n- Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'DBMS_RANDOM':\n \n  The Oracle database `DBMS_RANDOM` package is used for generating random numbers but should not be used for cryptographic purposes. The user `PUBLIC` should not be able to execute `DBMS_RANDOM`.\n  \n- Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'DBMS_SCHEDULER':\n\n  The Oracle database `DBMS_SCHEDULER` package schedules and manages the database and operating system jobs. The user `PUBLIC` should not be able to execute `DBMS_SCHEDULER`.\n  \n - Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'DBMS_SQL':\n\n   The Oracle database `DBMS_SQL` package is used for running dynamic SQL statements. The user `PUBLIC` should not be able to execute `DBMS_SQL`.\n   \n- Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'DBMS_XMLGEN':\n\n  The `DBMS_XMLGEN` package takes an arbitrary SQL query as input, converts it to XML format, and returns the result as a `CLOB`. The user `PUBLIC` should not be able to execute `DBMS_XMLGEN`.\n  \n- Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'DBMS_XMLQUERY':\n \n  The Oracle package `DBMS_XMLQUERY` takes an arbitrary SQL query, converts it to XML format, and returns the result. This package is similar to `DBMS_XMLGEN`. The user `PUBLIC` should not be able to execute `DBMS_XMLQUERY`.\n  \n - Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'UTL_FILE':\n\n   The Oracle database `UTL_FILE` package can be used to read/write files located on the server where the Oracle instance is installed. The user `PUBLIC` should not be able to execute `UTL_FILE`. \n   \n- Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'UTL_INADDR':\n\n  The Oracle database `UTL_INADDR` package can be used to create specially crafted error messages or send information via `DNS` to the outside. The user PUBLIC should not be able to execute `UTL_INADDR`.\n\n- Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'UTL_TCP':\n\n  The Oracle database `UTL_TCP` package can be used to read/write file to TCP sockets on the server where the Oracle instance is installed. The user `PUBLIC` should not be able to execute `UTL_TCP`.\n  \n- Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'UTL_MAIL':\n\n  The Oracle database `UTL_MAIL` package can be used to send email from the server where the Oracle instance is installed. The user `PUBLIC` should not be able to execute `UTL_MAIL`.\n\n- Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'UTL_SMTP':\n\n  The Oracle database `UTL_SMTP` package can be used to send email from the server where the Oracle instance is installed. The user `PUBLIC` should not be able to execute `UTL_SMTP`.\n  \n- Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'UTL_DBWS':\n \n  The Oracle database `UTL_DBWS` package can be used to read/write file to web-based applications on the server where the Oracle instance is installed. This package is not automatically installed for security reasons. The user `PUBLIC` should not be able to execute `UTL_DBWS`.\n\n- Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'UTL_ORAMTS':\n\n  The Oracle database `UTL_ORAMTS` package can be used to perform HTTP requests. This could be used to send information to the outside. The user `PUBLIC` should not be able to execute `UTL_ORAMTS`.\n  \n- Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'UTL_HTTP':\n\n  The Oracle database `UTL_HTTP` package can be used to perform `HTTP` requests. This could be used to send information to the outside. The user `PUBLIC` should not be able to execute `UTL_HTTP`.\n\n- Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'HTTPURITYPE':\n\n  The Oracle database `HTTPURITYPE` object type can be used to perform HTTP requests. The user PUBLIC should not be able to execute `HTTPURITYPE`.\n  \n- Ensure 'EXECUTE' is revoked from 'PUBLIC' on 'DBMS_XMLSTORE':\n\n  The `DBMS_XLMSTORE` package provides XML functionality. It accepts a table name and XML as input to perform DML operations against the table. The user PUBLIC should not be able to execute `DBMS_XLMSTORE`.\n\n- Ensure 'EXECUTE' is revoked from 'PUBLIC' on 'DBMS_XMLSAVE':\n\n  The `DBMS_XLMSTORE` package provides XML functionality. It accepts a table name and XML as input and then inserts into or updates that table. The user `PUBLIC` should not be able to execute `DBMS_XLMSAVE`.\n\n- Ensure 'EXECUTE' is revoked from 'PUBLIC' on 'DBMS_REDACT':\n\n  The `DBMS_REDACT` package provides an interface to Oracle Data Redaction, which enables you to mask (redact) data that is returned from queries issued by low-privileged users or an application. The user `PUBLIC` should not be able to execute `DBMS_REDACT`.",
    "weakness_title_read_only": "Unauthorized users can impact confidentiality and integrity of database (Oracle Database)",
    "weakness_id_read_only": "P1321",
    "weakness": "643ff971-0bc2-4bfa-a0dd-4e4ddf34094f",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2019-05-15T16:52:19.891000-04:00",
    "last_updated": "2021-06-25T14:47:47.037000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1666",
    "universal_id": "b1e81cb9-b1eb-4ce4-87e4-8dcf15d2e245",
    "countermeasure_name": "Verify that default public execute privileges from powerful packages and object types have been revoked (Oracle Database)",
    "countermeasure_solution": "To assess this recommendation, execute the following SQL statement.  \n```  \nSELECT PRIVILEGE\nFROM DBA_TAB_PRIVS\nWHERE GRANTEE='PUBLIC'\nAND PRIVILEGE='EXECUTE'\nAND TABLE_NAME='DBMS_ADVISOR';\n```  \n```\nSELECT PRIVILEGE\nFROM DBA_TAB_PRIVS\nWHERE GRANTEE='PUBLIC'\nAND TABLE_NAME='DBMS_CRYPTO'; \n``` \n```\nSELECT PRIVILEGE\nFROM DBA_TAB_PRIVS\nWHERE GRANTEE='PUBLIC'\nAND PRIVILEGE='EXECUTE'\nAND TABLE_NAME='DBMS_JAVA'; \n``` \n``` \nSELECT PRIVILEGE\nFROM DBA_TAB_PRIVS\nWHERE GRANTEE='PUBLIC'\nAND PRIVILEGE='EXECUTE'\nAND TABLE_NAME='DBMS_JAVA_TEST';\n``` \n```\nSELECT PRIVILEGE\nFROM DBA_TAB_PRIVS\nWHERE GRANTEE='PUBLIC'\nAND PRIVILEGE='EXECUTE'\nAND TABLE_NAME='DBMS_JOB'; \n``` \n```\nSELECT PRIVILEGE\nFROM DBA_TAB_PRIVS\nWHERE GRANTEE='PUBLIC'\nAND PRIVILEGE='EXECUTE'\nAND TABLE_NAME='DBMS_LDAP';   \n```  \n``` \nSELECT PRIVILEGE\nFROM DBA_TAB_PRIVS\nWHERE GRANTEE='PUBLIC'\nAND PRIVILEGE='EXECUTE'\nAND TABLE_NAME='DBMS_LOB';\n``` \n```\nSELECT PRIVILEGE\nFROM DBA_TAB_PRIVS\nWHERE GRANTEE='PUBLIC'\nAND PRIVILEGE='EXECUTE'\nAND TABLE_NAME='DBMS_OBFUSCATION_TOOLKIT'; \n``` \n``` \nSELECT PRIVILEGE\nFROM DBA_TAB_PRIVS\nWHERE GRANTEE='PUBLIC'\nAND PRIVILEGE='EXECUTE'\nAND TABLE_NAME='DBMS_RANDOM';\n``` \n```\nSELECT PRIVILEGE\nFROM DBA_TAB_PRIVS\nWHERE GRANTEE='PUBLIC'\nAND PRIVILEGE='EXECUTE'\nAND TABLE_NAME='DBMS_SCHEDULER'; \n``` \n```\nSELECT PRIVILEGE\nFROM DBA_TAB_PRIVS\nWHERE GRANTEE='PUBLIC'\nAND PRIVILEGE='EXECUTE'\nAND TABLE_NAME='DBMS_SQL';  \n``` \n```\nSELECT PRIVILEGE\nFROM DBA_TAB_PRIVS\nWHERE GRANTEE='PUBLIC'\nAND PRIVILEGE='EXECUTE'\nAND TABLE_NAME='DBMS_XMLGEN'; \n``` \n```\nSELECT PRIVILEGE\nFROM DBA_TAB_PRIVS\nWHERE GRANTEE='PUBLIC'\nAND PRIVILEGE='EXECUTE'\nAND TABLE_NAME='DBMS_XMLQUERY'; \n``` \n``` \nSELECT PRIVILEGE\nFROM DBA_TAB_PRIVS\nWHERE GRANTEE='PUBLIC'\nAND PRIVILEGE='EXECUTE'\nAND TABLE_NAME='UTL_FILE';\n``` \n```\nSELECT PRIVILEGE\nFROM DBA_TAB_PRIVS\nWHERE GRANTEE='PUBLIC'\nAND PRIVILEGE='EXECUTE'\nAND TABLE_NAME='UTL_INADDR'; \n```  \n```\nSELECT PRIVILEGE\nFROM DBA_TAB_PRIVS\nWHERE GRANTEE='PUBLIC'\nAND PRIVILEGE='EXECUTE'\nAND TABLE_NAME='UTL_TCP'; \n``` \n``` \nSELECT PRIVILEGE\nFROM DBA_TAB_PRIVS\nWHERE GRANTEE='PUBLIC'\nAND PRIVILEGE='EXECUTE'\nAND TABLE_NAME='UTL_MAIL';\n``` \n```\nSELECT PRIVILEGE\nFROM DBA_TAB_PRIVS\nWHERE GRANTEE='PUBLIC'\nAND PRIVILEGE='EXECUTE'\nAND TABLE_NAME='UTL_SMTP'; \n``` \n```\nSELECT PRIVILEGE\nFROM DBA_TAB_PRIVS\nWHERE GRANTEE='PUBLIC'\nAND PRIVILEGE='EXECUTE'\nAND TABLE_NAME='UTL_DBWS'; \n``` \n```\nSELECT PRIVILEGE\nFROM DBA_TAB_PRIVS\nWHERE GRANTEE='PUBLIC'\nAND PRIVILEGE='EXECUTE'\nAND TABLE_NAME='UTL_ORAMTS';  \n``` \n```\nSELECT PRIVILEGE\nFROM DBA_TAB_PRIVS\nWHERE GRANTEE='PUBLIC'\nAND PRIVILEGE='EXECUTE'\nAND TABLE_NAME='UTL_HTTP'; \n``` \n``` \nSELECT PRIVILEGE\nFROM DBA_TAB_PRIVS\nWHERE GRANTEE='PUBLIC'\nAND PRIVILEGE='EXECUTE'\nAND TABLE_NAME='HTTPURITYPE';\n``` \n```\nSELECT GRANTEE\nFROM DBA_TAB_PRIVS\nWHERE TABLE_NAME = 'DBMS_XMLSTORE'\nAND GRANTEE = 'PUBLIC'\nAND PRIVILEGE = 'EXECUTE'; \n``` \n```\nSELECT GRANTEE\nFROM DBA_TAB_PRIVS\nWHERE TABLE_NAME = 'DBMS_XMLSAVE'\nAND GRANTEE = 'PUBLIC'\nAND PRIVILEGE = 'EXECUTE'; \n```  \n``` \nSELECT GRANTEE\nFROM DBA_TAB_PRIVS\nWHERE TABLE_NAME = 'DBMS_REDACT'\nAND GRANTEE = 'PUBLIC'\nAND PRIVILEGE = 'EXECUTE';\n``` \nThe assessment fails if results are returned.",
    "weakness_title_read_only": "Unauthorized users can impact confidentiality and integrity of database (Oracle Database)",
    "weakness_id_read_only": "P1321",
    "weakness": "643ff971-0bc2-4bfa-a0dd-4e4ddf34094f",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2019-05-15T16:52:20.031000-04:00",
    "last_updated": "2021-06-25T14:47:46.074000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1667",
    "universal_id": "04b76928-5a2e-473a-93e8-608921a08977",
    "countermeasure_name": "Revoke non-default public execute privileges from powerful packages and object types (Oracle Database)",
    "countermeasure_solution": "Revoke Non-Default Privileges:\n\n- Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'DBMS_SYS_SQL':  \n\n  The Oracle database `DBMS_SYS_SQL` package is shipped as undocumented. The user `PUBLIC` should not be able to execute `DBMS_SYS_SQL`.  \n  \n- Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'DBMS_BACKUP_RESTORE':\n\n  The Oracle database `DBMS_BACKUP_RESTORE` package is used for applying PL/SQL commands to the native `RMAN` sequences. The user `PUBLIC` should not be able to execute `DBMS_BACKUP_RESTORE`.\n  \n- Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'DBMS_AQADM_SYSCALLS':\n\n  The Oracle database `DBMS_AQADM_SYSCALLS` package is shipped as undocumented. The user PUBLIC should not be able to execute `DBMS_AQADM_SYSCALLS`.\n\n- Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'DBMS_REPCAT_SQL_UTL':\n\n   The Oracle database `DBMS_REPCAT_SQL_UTL` package is shipped as undocumented and allows to run SQL commands as user `SYS`. The user PUBLIC should not be able to execute `DBMS_REPCAT_SQL_UTL`.\n   \n- Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'INITJVMAUX':\n\n  The Oracle database `INITJVMAUX` package is shipped as undocumented and allows to run SQL commands as user `SYS`. The user `PUBLIC` should not be able to execute `INITJVMAUX`.\n \n - Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'DBMS_STREAMS_ADM_UTL'\n\n   The Oracle database `DBMS_STREAMS_ADM_UTL` package is shipped as undocumented and allows to run SQL commands as user `SYS`. The user PUBLIC should not be able to execute `DBMS_STREAMS_ADM_UTL`.\n   \n- Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'DBMS_AQADM_SYS':\n\n  The Oracle database `DBMS_AQADM_SYS` package is shipped as undocumented and allows to run SQL commands as user `SYS`. The user `PUBLIC` should not be able to execute `DBMS_AQADM_SYS`.\n  \n- Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'DBMS_STREAMS_RPC':\n   \n   The Oracle database `DBMS_STREAMS_RPC` package is shipped as undocumented and allows to run SQL commands as user `SYS`. The user `PUBLIC` should not be able to execute `DBMS_STREAMS_RPC`.\n   \n- Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'DBMS_PRVTAQIM':\n\n  The Oracle database `DBMS_PRVTAQIM` package is shipped as undocumented and allows to run SQL commands as user `SYS`. The user PUBLIC should not be able to execute `DBMS_PRVTAQIM`.\n  \n- Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'LTADM':\n\n  The Oracle database `LTADM` package is shipped as undocumented. It allows privilege escalation if granted to unprivileged users. The user `PUBLIC` should not be able to execute `LTADM`.\n  \n- Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'WWV_DBMS_SQL':\n\n  The Oracle database `WWV_DBMS_SQL` package is shipped as undocumented. It allows Oracle Application Express to run dynamic SQL statements.\n  \n- Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'WWV_EXECUTE_IMMEDIATE':\n\n  The Oracle database `WWV_EXECUTE_IMMEDIATE` package is shipped as undocumented. It allows Oracle Application Express to run dynamic SQL statements. The user `PUBLIC` should not be able to execute `WWV_EXECUTE_IMMEDIATE`.\n  \n- Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'DBMS_IJOB':\n  \n  The Oracle database `DBMS_IJOB` package is shipped as undocumented. It allows a user to run database jobs in the context of another user. The user `PUBLIC` should not be able to execute `DBMS_IJOB`.\n  \n- Ensure 'EXECUTE' Is Revoked from 'PUBLIC' on 'DBMS_FILE_TRANSFER':\n\n  The Oracle database `DBMS_FILE_TRANSFER` package allows a user to transfer files from one database server to another. The user `PUBLIC` should not be able to execute `DBMS_FILE_TRANSFER`.",
    "weakness_title_read_only": "Excessive privileges can lead to unauthorized actions in the database (Oracle Database)",
    "weakness_id_read_only": "P1322",
    "weakness": "434a3578-fe84-4c2b-af5d-4e5964428157",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2019-05-15T16:52:21.446000-04:00",
    "last_updated": "2021-06-25T14:47:46.364000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1668",
    "universal_id": "db0a69f1-4b06-47f0-a401-adc6dc51521e",
    "countermeasure_name": "Verify that non-default public execute privileges from powerful packages and object types have been revoked (Oracle Database)",
    "countermeasure_solution": "To assess this recommendation, execute the following SQL statement.    \n```\nSELECT PRIVILEGE\nFROM DBA_TAB_PRIVS\nWHERE GRANTEE='PUBLIC'\nAND PRIVILEGE='EXECUTE'\nAND TABLE_NAME='DBMS_SYS_SQL';\n```\n```\nSELECT PRIVILEGE\nFROM DBA_TAB_PRIVS\nWHERE GRANTEE='PUBLIC'\nAND PRIVILEGE='EXECUTE'\nAND TABLE_NAME='DBMS_BACKUP_RESTORE';\n```\n```\nSELECT PRIVILEGE\nFROM DBA_TAB_PRIVS\nWHERE GRANTEE='PUBLIC'\nAND PRIVILEGE='EXECUTE'\nAND TABLE_NAME='DBMS_AQADM_SYSCALLS';\n```\n```\nSELECT PRIVILEGE\nFROM DBA_TAB_PRIVS\nWHERE GRANTEE='PUBLIC'\nAND PRIVILEGE='EXECUTE'\nAND TABLE_NAME='DBMS_REPCAT_SQL_UTL';\n```\n```\nSELECT PRIVILEGE\nFROM DBA_TAB_PRIVS\nWHERE GRANTEE='PUBLIC'\nAND PRIVILEGE='EXECUTE'\nAND TABLE_NAME='INITJVMAUX';\n```\n```\nSELECT PRIVILEGE\nFROM DBA_TAB_PRIVS\nWHERE GRANTEE='PUBLIC'\nAND PRIVILEGE='EXECUTE'\nAND TABLE_NAME='DBMS_STREAMS_ADM_UTL';\n```\n```\nSELECT PRIVILEGE\nFROM DBA_TAB_PRIVS\nWHERE GRANTEE='PUBLIC'\nAND PRIVILEGE='EXECUTE'\nAND TABLE_NAME='DBMS_AQADM_SYS';\n```\n```\nSELECT PRIVILEGE\nFROM DBA_TAB_PRIVS\nWHERE GRANTEE='PUBLIC'\nAND PRIVILEGE='EXECUTE'\nAND TABLE_NAME='DBMS_STREAMS_RPC';\n```\n```\nSELECT PRIVILEGE\nFROM DBA_TAB_PRIVS\nWHERE GRANTEE='PUBLIC'\nAND PRIVILEGE='EXECUTE'\nAND TABLE_NAME='DBMS_PRVTAQIM';\n```\n```\nSELECT PRIVILEGE\nFROM DBA_TAB_PRIVS\nWHERE GRANTEE='PUBLIC'\nAND PRIVILEGE='EXECUTE'\nAND TABLE_NAME='LTADM';\n```\n```\nSELECT PRIVILEGE\nFROM DBA_TAB_PRIVS\nWHERE GRANTEE='PUBLIC'\nAND PRIVILEGE='EXECUTE'\nAND TABLE_NAME='WWV_DBMS_SQL';\n```\n```\nSELECT PRIVILEGE\nFROM DBA_TAB_PRIVS\nWHERE GRANTEE='PUBLIC'\nAND PRIVILEGE='EXECUTE'\nAND TABLE_NAME='WWV_EXECUTE_IMMEDIATE';\n```\n```\nSELECT PRIVILEGE\nFROM DBA_TAB_PRIVS\nWHERE GRANTEE='PUBLIC'\nAND PRIVILEGE='EXECUTE'\nAND TABLE_NAME='DBMS_IJOB';\n```\n```\nSELECT PRIVILEGE\nFROM DBA_TAB_PRIVS\nWHERE GRANTEE='PUBLIC'\nAND PRIVILEGE='EXECUTE'\nAND TABLE_NAME='DBMS_FILE_TRANSFER';  \n```\nThe assessment fails if results are returned.",
    "weakness_title_read_only": "Excessive privileges can lead to unauthorized actions in the database (Oracle Database)",
    "weakness_id_read_only": "P1322",
    "weakness": "434a3578-fe84-4c2b-af5d-4e5964428157",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2019-05-15T16:52:21.529000-04:00",
    "last_updated": "2021-06-25T14:47:49.161000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1669",
    "universal_id": "d1626200-61d5-4367-b284-103c3c9f6e77",
    "countermeasure_name": "Revoke powerful roles where they are not likely needed (Oracle Database)",
    "countermeasure_solution": "Revoke unnecessary roles from ordinary user or application accounts::\n\n  - Ensure that `DELETE_CATALOG_ROLE` is revoked from any unauthorized `GRANTEE`:  \n\n    The Oracle database `DELETE_CATALOG_ROLE` provides `DELETE` privileges for the records in the system's audit table (`AUD$`). Unauthorized grantees should not have that role.\n  \n- Ensure that `SELECT_CATALOG_ROLE` is revoked from any unauthorized `GRANTEE`:\n\n    The Oracle database `SELECT_CATALOG_ROLE` provides `SELECT` privileges for all data dictionary views held in the `SYS` schema. Unauthorized grantees should not have that role.\n\n- Ensure that `EXECUTE_CATALOG_ROLE` is revoked from any unauthorized `GRANTEE`:\n\n    The Oracle database `EXECUTE_CATALOG_ROLE` provides `EXECUTE` privileges for a number of packages and procedures within the data dictionary in the `SYS` schema. Unauthorized grantees should not have that role.\n  \n- Ensure that `DBA` is revoked from any unauthorized `GRANTEE`:\n\n    The Oracle database `DBA` role is the default database administrator role provided for the allocation of administrative privileges. Unauthorized grantees should not have that role.",
    "weakness_title_read_only": "Powerful roles can be configured to perform unauthorized actions in the database (Oracle Database)",
    "weakness_id_read_only": "P1323",
    "weakness": "fcdc0409-63fb-4389-b7d7-d6d22362974e",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2019-05-15T16:52:22.758000-04:00",
    "last_updated": "2023-03-16T11:18:46.234000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1670",
    "universal_id": "04f7e132-7b57-4c7b-a666-4c320a896b9c",
    "countermeasure_name": "Verify that powerful roles have been revoked from where they are not likely needed (Oracle Database)",
    "countermeasure_solution": "To assess this recommendation, execute the following SQL statement.  \n```  \nSELECT GRANTEE, GRANTED_ROLE    \nFROM DBA_ROLE_PRIVS\nWHERE granted_role='DELETE_CATALOG_ROLE'  \nAND GRANTEE NOT IN ('DBA','SYS');  \n```\n```\nSELECT GRANTEE, GRANTED_ROLE\nFROM DBA_ROLE_PRIVS\nWHERE granted_role='SELECT_CATALOG_ROLE'\nAND grantee not in ('DBA','SYS','IMP_FULL_DATABASE','EXP_FULL_DATABASE',\n'OEM_MONITOR', 'SYSBACKUP','EM_EXPRESS_BASIC','SYSMAN');\n```\n```\nSELECT GRANTEE, GRANTED_ROLE\nFROM DBA_ROLE_PRIVS\nWHERE granted_role='EXECUTE_CATALOG_ROLE'\nAND grantee not in ('DBA','SYS','IMP_FULL_DATABASE','EXP_FULL_DATABASE');\n```\n```\nSELECT GRANTEE, GRANTED_ROLE\nFROM DBA_ROLE_PRIVS\nWHERE GRANTED_ROLE='DBA'\nAND GRANTEE NOT IN ('SYS','SYSTEM');\n```\n\nLack of results implies compliance.",
    "weakness_title_read_only": "Powerful roles can be configured to perform unauthorized actions in the database (Oracle Database)",
    "weakness_id_read_only": "P1323",
    "weakness": "fcdc0409-63fb-4389-b7d7-d6d22362974e",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2019-05-15T16:52:22.789000-04:00",
    "last_updated": "2021-06-25T14:47:51.374000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1671",
    "universal_id": "f4b972c1-0ce3-4b52-828b-eed5c979aad1",
    "countermeasure_name": "Revoke excessive tables and view privileges (Oracle Database)",
    "countermeasure_solution": "Revoke Excessive Table and View Privileges:\n \n - Ensure 'ALL' Is Revoked from Unauthorized 'GRANTEE' on 'AUD$':  \n\n   The Oracle database `SYS.AUD$` table contains all the audit records for the database of the non-Data Manipulation Language (DML) events, such as `ALTER`, `DROP`, and `CREATE`, and so forth. (DML changes need trigger-based audit events to record data alterations.) Unauthorized grantees should not have full access to that table.\n\n- Ensure 'ALL' Is Revoked from Unauthorized 'GRANTEE' on 'USER_HISTORY$':\n\n  The Oracle database `SYS.USER_HISTORY$` table contains all the audit records for the user's password change history. (This table gets updated by password changes if the user has an assigned profile that has a password reuse limit set, e.g., `PASSWORD_REUSE_TIME` set to other than `UNLIMITED`.) Unauthorized grantees should not have full access to that table.\n\n -  Ensure 'ALL' Is Revoked from Unauthorized 'GRANTEE' on 'LINK$':\n\n    The Oracle database `SYS.LINK$` table contains all the user's password information   and data table link information. Unauthorized grantees should not have full access to that table.\n-  Ensure 'ALL' Is Revoked from Unauthorized 'GRANTEE' on 'SYS.USER$':\n\n   The Oracle database `SYS.USER$` table contains the users' hashed password information. Unauthorized grantees should not have full access to that table.\n   \n- Ensure 'ALL' Is Revoked from Unauthorized 'GRANTEE' on 'DBA_%':\n\n  The Oracle database `DBA_` views show all information which is relevant to administrative accounts. Unauthorized grantees should not have full access to those views.\n\n- Ensure 'ALL' Is Revoked from Unauthorized 'GRANTEE' on 'SYS.SCHEDULER$_CREDENTIAL':\n\n  The Oracle database `SCHEDULER$_CREDENTIAL` table contains the database scheduler credential information. Unauthorized grantees should not have full access to that table.\n  \n- Ensure 'SYS.USER$MIG' Has Been Dropped:\n\n   The table `sys.user$mig` is created during migration and contains the Oracle password hashes before the migration starts. This table should be dropped.",
    "weakness_title_read_only": "Unauthorized users can attack the confidentiality and integrity of database tables (Oracle Database)",
    "weakness_id_read_only": "P1324",
    "weakness": "4a1e5b44-0935-4812-a152-5d27c9ebd7f7",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2019-05-15T16:52:23.063000-04:00",
    "last_updated": "2021-06-25T14:47:51.730000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1672",
    "universal_id": "d2f01eef-c38f-4a2d-b157-4f139005925b",
    "countermeasure_name": "Verify that excessive tables and view privileges have been revoked for unauthorized users (Oracle Database)",
    "countermeasure_solution": "To assess this recommendation, execute the following SQL statement.    \n```\nSELECT GRANTEE, PRIVILEGE\nFROM DBA_TAB_PRIVS\nWHERE TABLE_NAME='AUD$'\nAND GRANTEE NOT IN ('DELETE_CATALOG_ROLE');\n```\n```\nSELECT GRANTEE, PRIVILEGE\nFROM DBA_TAB_PRIVS\nWHERE TABLE_NAME='USER_HISTORY$' AND OWNER = 'SYS';\n```\n```\nSELECT GRANTEE, PRIVILEGE\nFROM DBA_TAB_PRIVS\nWHERE TABLE_NAME='LINK$'\nAND GRANTEE NOT IN ('DV_SECANALYST')\nAND OWNER='SYS';\n```\n```\nSELECT GRANTEE, PRIVILEGE\nFROM DBA_TAB_PRIVS\nWHERE TABLE_NAME='USER$' AND OWNER='SYS'\nAND GRANTEE NOT IN ('CTXSYS','XDB','APEX_030200','SYSMAN','APEX_040000',\n'APEX_040100','APEX_040200','DV_SECANALYST','DVSYS','ORACLE_OCM');\n```\n```\nSELECT grantee||'.'||table_name FROM DBA_TAB_PRIVS\nWHERE TABLE_NAME LIKE 'DBA_%'\nAND GRANTEE NOT IN ('DBA','AUDIT_ADMIN','AUDIT_VIEWER','CAPTURE_ADMIN',\n'DVSYS','SYSDG','DV_SECANALYST','SYSKM','DV_MONITOR',\n'ORACLE_OCM','DV_ACCTMGR','GSMADMIN_INTERNAL','XDB',\n'SYS','APPQOSSYS','AQ_ADMINISTRATOR_ROLE','CTXSYS',\n'EXFSYS','MDSYS','OLAP_XS_ADMIN','OLAPSYS','ORDSYS',\n'OWB$CLIENT','OWBSYS','SELECT_CATALOG_ROLE',\n'WM_ADMIN_ROLE','WMSYS','XDBADMIN','LBACSYS',\n'ADM_PARALLEL_EXECUTE_TASK','CISSCANROLE')\nAND NOT REGEXP_LIKE(grantee,'^APEX_0[3-9][0-9][0-9][0-9][0-9]$');\n```\n```\nSELECT GRANTEE, PRIVILEGE\nFROM DBA_TAB_PRIVS\nWHERE TABLE_NAME='SCHEDULER$_CREDENTIAL' AND OWNER='SYS';\n```\n```\nSELECT OWNER, TABLE_NAME\nFROM ALL_TABLES\nWHERE OWNER='SYS'\nAND TABLE_NAME='USER$MIG';\n```  \nLack of results implies compliance.",
    "weakness_title_read_only": "Unauthorized users can attack the confidentiality and integrity of database tables (Oracle Database)",
    "weakness_id_read_only": "P1324",
    "weakness": "4a1e5b44-0935-4812-a152-5d27c9ebd7f7",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2019-05-15T16:52:23.111000-04:00",
    "last_updated": "2021-06-25T14:47:52.081000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1673",
    "universal_id": "df29d540-4b9a-4be8-9932-351d1b1e5aa3",
    "countermeasure_name": "All traditional audit options must be enabled at all times (Oracle Database)",
    "countermeasure_solution": "Enable audit at all times:\n\n- Ensure the 'USER' Audit Option Is Enabled:  \n\n  The `USER` object allows for creating accounts that can interact with the database according to the roles and privileges allotted to the account. It may also own database objects. Enabling the audit option causes auditing of all activities and requests to create, drop or alter a user, including a user changing their own password. (The latter is not audited by audit ALTER USER.)\n  \n- Ensure the 'ROLE' Audit Option Is Enabled:\n\n  The `ROLE` object allows for the creation of a set of privileges that can be granted to users or other roles. Enabling the audit option causes auditing of all attempts, successful or not, to create, drop, alter or set roles.\n  \n- Ensure the 'SYSTEM GRANT' Audit Option Is Enabled:\n\n  Enabling the audit option for the `SYSTEM GRANT` object causes auditing of any attempt, successful or not, to grant or revoke any system privilege or role, regardless of privilege held by the user attempting the operation.\n  \n- Ensure the 'PROFILE' Audit Option Is Enabled:\n\n  The `PROFILE` object allows for the creation of a set of database resource limits that can be assigned to a user, so that that user cannot exceed those resource limitations. Enabling the audit option causes auditing of all attempts, successful or not, to create, drop or alter any profile.\n  \n- Ensure the 'DATABASE LINK' Audit Option Is Enabled:\n\n  Enabling the audit option for the `DATABASE LINK` object causes all activities on database links to be audited.\n  \n- Ensure the 'PUBLIC DATABASE LINK' Audit Option Is Enabled:\n\n  The `PUBLIC DATABASE LINK` object allows for the creation of a public link for an\napplication-based \"user\" to access the database for connections/session creation. Enabling the audit option causes all user activities involving the creation, alteration, or dropping of public links to be audited.\n\n- Ensure the 'PUBLIC SYNONYM' Audit Option Is Enabled:\n\n  The `PUBLIC SYNONYM` object allows for the creation of an alternate description of an object. Public synonyms are accessible by all users that have the appropriate privileges to the underlying object. Enabling the audit option causes all user activities involving the creation or dropping of public synonyms to be audited.\n  \n- Ensure the 'SYNONYM' Audit Option Is Enabled:\n\n  The `SYNONYM` operation allows for the creation of an alternative name for a database object such as a Java class schema object, materialized view, operator, package, procedure, sequence, stored function, table, view, user-defined object type, or even another synonym. This synonym puts a dependency on its target and is rendered invalid if the target object is changed/dropped. Enabling the audit option causes all user activities involving the creation or dropping of synonyms to be audited.\n  \n- Ensure the 'DIRECTORY' Audit Option Is Enabled:\n\n  The `DIRECTORY` object allows for the creation of a directory object that specifies an alias for a directory on the server file system, where the external binary file LOBs (BFILEs)/ table data are located. Enabling this audit option causes all user activities involving the creation or dropping of a directory alias to be audited.\n\n- Ensure the 'SELECT ANY DICTIONARY' Audit Option Is Enabled:\n\n  The `SELECT ANY DICTIONARY` capability allows the user to view the definitions of all schema objects in the database. Enabling the audit option causes all user activities involving this capability to be audited.\n  \n- Ensure the 'GRANT ANY OBJECT PRIVILEGE' Audit Option Is Enabled:\n\n  `GRANT ANY OBJECT PRIVILEGE` allows the user to grant or revoke any object privilege, which includes privileges on tables, directories, mining models, etc. Enabling this audit option causes auditing of all uses of that privilege.\n  \n- Ensure the 'GRANT ANY PRIVILEGE' Audit Option Is Enabled:\n\n  `GRANT ANY PRIVILEGE` allows a user to grant any system privilege, including the most powerful privileges typically available only to administrators - to change the security infrastructure, to drop/add/modify users and more.\n  \n- Ensure the 'DROP ANY PROCEDURE' Audit Option Is Enabled:\n\n  The `AUDIT DROP ANY PROCEDURE` command is auditing the dropping of procedures.  Enabling the option causes auditing of all such activities.\n  \n- Ensure the 'ALL' Audit Option on 'SYS.AUD$' Is Enabled:\n\n  The logging of attempts to alter the audit trail in the `SYS.AUD$` table (open for\nread/update/delete/view) will provide a record of any activities that may indicate\nunauthorized attempts to access the audit trail. Enabling the audit option will cause these activities to be audited.\n\n- Ensure the 'PROCEDURE' Audit Option Is Enabled:\n\n  In this statement audit, `PROCEDURE` means any procedure, function, package or library. Enabling this audit option causes any attempt, successful or not, to create or drop any of these types of objects to be audited, regardless of privilege or lack thereof. Java schema objects (sources, classes, and resources) are considered the same as procedures for the purposes of auditing SQL statements.\n  \n- Ensure the 'ALTER SYSTEM' Audit Option Is Enabled:\n\n  `ALTER SYSTEM` allows one to change instance settings, including security settings and auditing options. Additionally, `ALTER SYSTEM` can be used to run operating system commands using undocumented Oracle functionality. Enabling the audit option will audit all attempts to perform `ALTER SYSTEM`, whether successful or not and regardless of whether or not the `ALTER SYSTEM` privilege is held by the user attempting the action.\n \n- Ensure the 'TRIGGER' Audit Option Is Enabled:\n\n  A `TRIGGER` may be used to modify `DML` actions or invoke other (recursive) actions when some types of user-initiated actions occur. Enabling this audit option will cause auditing of any attempt, successful or not, to create, drop, enable or disable any schema trigger in any schema regardless of privilege or lack thereof. For enabling and disabling a trigger, it covers both `ALTER TRIGGER` and `ALTER TABLE`.\n  \n- Ensure the 'CREATE SESSION' Audit Option Is Enabled:\n\n  Enabling this audit option will cause auditing of all attempts to connect to the database, whether successful or not, as well as audit session disconnects/logoffs. The commands to audit `SESSION, CONNECT` or `CREATE SESSION` all accomplish the same thing - they initiate statement auditing of the connect statement used to create a database session.",
    "weakness_title_read_only": "Not logging the pattern of unauthorized activities (Oracle Database)",
    "weakness_id_read_only": "P1325",
    "weakness": "8b83065b-62d0-4043-b922-fc768bcbe32a",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2019-05-15T16:52:23.632000-04:00",
    "last_updated": "2021-06-25T14:47:58.297000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1674",
    "universal_id": "d18ae808-1a40-4415-aac8-915933f819cd",
    "countermeasure_name": "Verify that all traditional audit options are enabled at all times (Oracle Database)",
    "countermeasure_solution": "To assess this recommendation, execute the following SQL statement.   \n``` \nSELECT AUDIT_OPTION, SUCCESS, FAILURE\nFROM DBA_STMT_AUDIT_OPTS\nWHERE AUDIT_OPTION='USER'\nAND USER_NAME IS NULL\nAND PROXY_NAME IS NULL\nAND SUCCESS = 'BY ACCESS'\nAND FAILURE = 'BY ACCESS';\n```\n```\nSELECT AUDIT_OPTION, SUCCESS, FAILURE\nFROM DBA_STMT_AUDIT_OPTS\nWHERE AUDIT_OPTION='ROLE'\nAND USER_NAME IS NULL\nAND PROXY_NAME IS NULL\nAND SUCCESS = 'BY ACCESS'\nAND FAILURE = 'BY ACCESS';\n```\n```\nSELECT AUDIT_OPTION, SUCCESS, FAILURE\nFROM DBA_STMT_AUDIT_OPTS\nWHERE AUDIT_OPTION='SYSTEM GRANT'\nAND USER_NAME IS NULL\nAND PROXY_NAME IS NULL\nAND SUCCESS = 'BY ACCESS'\nAND FAILURE = 'BY ACCESS';\n```\n```\nSELECT AUDIT_OPTION, SUCCESS, FAILURE\nFROM DBA_STMT_AUDIT_OPTS\nWHERE AUDIT_OPTION='PROFILE'\nAND USER_NAME IS NULL\nAND PROXY_NAME IS NULL\nAND SUCCESS = 'BY ACCESS'\nAND FAILURE = 'BY ACCESS';\n```\n```\nSELECT AUDIT_OPTION, SUCCESS, FAILURE\nFROM DBA_STMT_AUDIT_OPTS\nWHERE AUDIT_OPTION='DATABASE LINK'\nAND USER_NAME IS NULL\nAND PROXY_NAME IS NULL\nAND SUCCESS = 'BY ACCESS'\nAND FAILURE = 'BY ACCESS';\n```\n```\nSELECT AUDIT_OPTION, SUCCESS, FAILURE\nFROM DBA_STMT_AUDIT_OPTS\nWHERE AUDIT_OPTION='PUBLIC DATABASE LINK'\nAND USER_NAME IS NULL\nAND PROXY_NAME IS NULL\nAND SUCCESS = 'BY ACCESS'\nAND FAILURE = 'BY ACCESS';\n```\n```\nSELECT AUDIT_OPTION, SUCCESS, FAILURE\nFROM DBA_STMT_AUDIT_OPTS\nWHERE AUDIT_OPTION='PUBLIC SYNONYM'\nAND USER_NAME IS NULL\nAND PROXY_NAME IS NULL\nAND SUCCESS = 'BY ACCESS'\nAND FAILURE = 'BY ACCESS';\n```\n```\nSELECT AUDIT_OPTION, SUCCESS, FAILURE\nFROM DBA_STMT_AUDIT_OPTS\nWHERE AUDIT_OPTION='SYNONYM'\nAND USER_NAME IS NULL\nAND PROXY_NAME IS NULL\nAND SUCCESS = 'BY ACCESS'\nAND FAILURE = 'BY ACCESS';\n```\n```\nSELECT AUDIT_OPTION, SUCCESS, FAILURE\nFROM DBA_STMT_AUDIT_OPTS\nWHERE AUDIT_OPTION='DIRECTORY'\nAND USER_NAME IS NULL\nAND PROXY_NAME IS NULL\nAND SUCCESS = 'BY ACCESS'\nAND FAILURE = 'BY ACCESS';\n```\n```\nSELECT AUDIT_OPTION, SUCCESS, FAILURE\nFROM DBA_STMT_AUDIT_OPTS\nWHERE AUDIT_OPTION='SELECT ANY DICTIONARY'\nAND USER_NAME IS NULL\nAND PROXY_NAME IS NULL\nAND SUCCESS = 'BY ACCESS'\nAND FAILURE = 'BY ACCESS';\n```\n```\nSELECT PRIVILEGE, SUCCESS, FAILURE\nFROM DBA_PRIV_AUDIT_OPTS\nWHERE PRIVILEGE='GRANT ANY OBJECT PRIVILEGE'\nAND USER_NAME IS NULL\nAND PROXY_NAME IS NULL\nAND SUCCESS = 'BY ACCESS'\nAND FAILURE = 'BY ACCESS';\n```\n```\nSELECT PRIVILEGE, SUCCESS, FAILURE\nFROM DBA_PRIV_AUDIT_OPTS\nWHERE PRIVILEGE='GRANT ANY PRIVILEGE'\nAND USER_NAME IS NULL\nAND PROXY_NAME IS NULL\nAND SUCCESS = 'BY ACCESS'\nAND FAILURE = 'BY ACCESS';\n```\n```\nSELECT AUDIT_OPTION, SUCCESS, FAILURE\nFROM DBA_STMT_AUDIT_OPTS\nWHERE AUDIT_OPTION='DROP ANY PROCEDURE'\nAND USER_NAME IS NULL\nAND PROXY_NAME IS NULL\nAND SUCCESS = 'BY ACCESS'\nAND FAILURE = 'BY ACCESS';\n```\n```\nSELECT *\nFROM DBA_OBJ_AUDIT_OPTS\nWHERE OBJECT_NAME='AUD$'\nAND ALT='A/A'\nAND AUD='A/A'\nAND COM='A/A'\nAND DEL='A/A'\nAND GRA='A/A'\nAND IND='A/A'\nAND INS='A/A'\nAND LOC='A/A'\nAND REN='A/A'\nAND SEL='A/A'\nAND UPD='A/A'\nAND FBK='A/A';\n```\n```\nSELECT AUDIT_OPTION, SUCCESS, FAILURE\nFROM DBA_STMT_AUDIT_OPTS\nWHERE AUDIT_OPTION='PROCEDURE'\nAND USER_NAME IS NULL\nAND PROXY_NAME IS NULL\nAND SUCCESS = 'BY ACCESS'\nAND FAILURE = 'BY ACCESS';\n```\n```\nSELECT AUDIT_OPTION, SUCCESS, FAILURE\nFROM DBA_STMT_AUDIT_OPTS\nWHERE AUDIT_OPTION='ALTER SYSTEM'\nAND USER_NAME IS NULL\nAND PROXY_NAME IS NULL\nAND SUCCESS = 'BY ACCESS'\nAND FAILURE = 'BY ACCESS';\n```\n```\nSELECT AUDIT_OPTION, SUCCESS, FAILURE\nFROM DBA_STMT_AUDIT_OPTS\nWHERE AUDIT_OPTION='TRIGGER'\nAND USER_NAME IS NULL\nAND PROXY_NAME IS NULL\nAND SUCCESS = 'BY ACCESS'\nAND FAILURE = 'BY ACCESS';\n```\n```\nSELECT AUDIT_OPTION, SUCCESS, FAILURE\nFROM DBA_STMT_AUDIT_OPTS\nWHERE AUDIT_OPTION='CREATE SESSION'\nAND USER_NAME IS NULL\nAND PROXY_NAME IS NULL\nAND SUCCESS = 'BY ACCESS'\nAND FAILURE = 'BY ACCESS';\n```\nLack of results implies a finding.",
    "weakness_title_read_only": "Not logging the pattern of unauthorized activities (Oracle Database)",
    "weakness_id_read_only": "P1325",
    "weakness": "8b83065b-62d0-4043-b922-fc768bcbe32a",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2019-05-15T16:52:23.741000-04:00",
    "last_updated": "2021-06-25T14:47:57.409000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1733",
    "universal_id": "439d5984-01d8-4257-8152-3f7700681a71",
    "countermeasure_name": "Enable all unified audit options (Oracle Database)",
    "countermeasure_solution": "Enable Audit at All Times:  \n  \n- Ensure the 'CREATE USER' Action Audit Is Enabled:  \n  \n  The `CREATE USER` statement is used to create Oracle database accounts and assign database properties to them. Enabling this unified action audit causes logging of all `CREATE USER` statements, whether successful or unsuccessful, issued by the users regardless of the privileges held by the users to issue such statements.  \n  \n- Ensure the 'ALTER USER' Action Audit Is Enabled:  \n  \n  The `ALTER USER` statement is used to change database users' password, lock accounts, and expire passwords. In addition, this statement is used to change database properties of user accounts such as database profiles, default and temporary tablespaces, and tablespace quotas. This unified audit action enables logging of all `ALTER USER` statements, whether successful or unsuccessful, issued by the users regardless of the privileges held by the users to issue such statements.  \n  \n- Ensue the 'DROP USER' Audit Option Is Enabled:  \n  \n  The `DROP USER` statement is used to drop Oracle database accounts and schemas associated with them. Enabling this unified action audit enables logging of all `DROP USER` statements, whether successful or unsuccessful, issued by the users regardless of the privileges held by the users to issue such statements.  \n  \n- Ensure the 'CREATE ROLE' Action Audit Is Enabled:  \n  \n  An Oracle database role is a collection or set of privileges that can be granted to users or other roles. Roles may include system privileges, object privileges or other roles. Enabling this unified audit action enables logging of all `CREATE ROLE` statements, whether successful or unsuccessful, issued by the users regardless of the privileges held by the users to issue such statements.  \n  \n- Ensure the 'ALTER ROLE' Action Audit Is Enabled:  \n  \n  An Oracle database role is a collection or set of privileges that can be granted to users or other roles. Roles may include system privileges, object privileges or other roles. The `ALTER ROLE` statement is used to change the authorization needed to enable a role. Enabling this unified action audit causes logging of all `ALTER ROLE` statements, whether successful or unsuccessful, issued by the users regardless of the privileges held by the users to issue such statements.  \n  \n- Ensure the 'DROP ROLE' Action Audit Is Enabled:  \n  \n  An Oracle database role is a collection or set of privileges that can be granted to users or other roles. Roles may include system privileges, object privileges or other roles. Enabling this unified audit action enables logging of all `DROP ROLE` statements, successful or unsuccessful, issued by the users regardless of the privileges held by the users to issue such statements.  \n  \n- Ensure the 'GRANT' Action Audit Is Enabled:  \n  \n  ` GRANT` statements are used to grant privileges to Oracle database users and roles, including the most powerful privileges and roles typically available to the database  administrators. Enabling this unified action audit enables logging of all` GRANT `statements, whether successful or unsuccessful, issued by the users regardless of the privileges held by the users to issue such statements.\n\n- Ensure the 'REVOKE' Action Audit Is Enabled:\n\n   `REVOKE` statements are used to revoke privileges from Oracle database users and roles. Enabling this unified action audit enables logging of all `REVOKE` statements, successful or unsuccessful, issued by the users regardless of the privileges held by the users to issue such statements.\n   \n- Ensure the 'CREATE PROFILE' Action Audit Is Enabled:\n  \n  Oracle database profiles are used to enforce resource usage limits and implement\npassword policies such as password complexity rules and reuse restrictions. Enabling this unified action audit enables logging of all `CREATE PROFILE` statements, whether successful or unsuccessful, issued by the users regardless of the privileges held by the users to issue such statements.\n\n- Ensure the 'ALTER PROFILE' Action Audit Is Enabled:\n \n  Oracle database profiles are used to enforce resource usage limits and implement\npassword policies such as password complexity rules and reuse restrictions. Enabling this unified action audit enables logging of all `ALTER PROFILE` statements, whether successful or unsuccessful, issued by the users regardless of the privileges held by the users to issue such statements.\n\n- Ensure the 'DROP PROFILE' Action Audit Is Enabled:\n\n  Oracle database profiles are used to enforce resource usage limits and implement\npassword policies such as password complexity rules and reuse restrictions. Enabling this unified action audit enables logging of all `DROP PROFILE` statements, whether successful or unsuccessful, issued by the users regardless of the privileges held by the users to issue such statements.\n\n- Ensure the 'CREATE DATABASE LINK' Action Audit Is Enabled:\n\n  Oracle database links are used to establish database-to-database connections to other databases. These connections are available without further authentication once the link is established. Enabling this unified action audit causes logging of all `CREATE DATABASE` and `CREATE PUBLIC DATABASE` statements, whether successful or unsuccessful, issued by the users regardless of the privileges held by the users to issue such statements.\n  \n- Ensure the 'ALTER DATABASE LINK' Action Audit Is Enabled:\n\n  Oracle database links are used to establish database-to-database connections to other databases. These connections are always available without further authentication once the link is established. Enabling this unified action audit causes logging of all `ALTER DATABASE` and `ALTER PUBLIC DATABASE` statements, whether successful or unsuccessful, issued by the users regardless of the privileges held by the users to issue such statements.\n  \n- Ensure the 'DROP DATABASE LINK' Action Audit Is Enabled:\n \n  Oracle database links are used to establish database-to-database connections to other databases. These connections are always available without further authentication once the link is established. Enabling this unified action audit causes logging of all `DROP DATABASE` and `DROP PUBLIC DATABASE`, whether successful or unsuccessful, statements issued by the users regardless of the privileges held by the users to issue such statements.\n  \n- Ensure the 'CREATE SYNONYM' Action Audit Is Enabled:\n\n  An Oracle database synonym is used to create an alternative name for a database object such as table, view, procedure, java object or even another synonym, etc. Enabling this unified action audit causes logging of all `CREATE SYNONYM` and `CREATE PUBLIC SYNONYM` statements, whether successful or unsuccessful, issued by the users regardless of the privileges held by the users to issue such statements.\n  \n- Ensure the 'ALTER SYNONYM' Action Audit Is Enabled:\n\n  An Oracle database synonym is used to create an alternative name for a database object such as table, view, procedure, or java object, or even another synonym. Enabling this unified action audit causes logging of all `ALTER SYNONYM` and `ALTER PUBLIC SYNONYM` statements, whether successful or unsuccessful, issued by the users regardless of the privileges held by the users to issue such statements.\n  \n- Ensure the 'DROP SYNONYM' Action Audit Is Enabled:\n\n  An Oracle database synonym is used to create an alternative name for a database object such as table, view, procedure, or java object, or even another synonym. Enabling his unified action audit causes logging of all `DROP SYNONYM` and `DROP PUBLIC SYNONYM` statements, whether successful or unsuccessful, issued by the users regardless of the privileges held by the users to issue such statements.\n  \n- Ensure the 'SELECT ANY DICTIONARY' Privilege Audit Is Enabled:\n\n  The `SELECT ANY DICTIONARY` system privilege allows the user to view the definition of all schema objects in the database. It grants `SELECT` privileges on the data dictionary objects to the grantees, including `SELECT` on `DBA_ views, V$ views, X$` views and underlying SYS tables such as `TAB$` and `OBJ$` This privilege also allows grantees to create stored objects such as procedures, packages and views on the underlying data dictionary objects. Please note that this privilege does not grant `SELECT` on tables with password hashes such as `USER$`, `DEFAULT_PWD$`, `LINK$`, and `USER_HISTORY$` Enabling this audit causes logging of activities that exercise this privilege.\n  \n- Ensure the 'UNIFIED_AUDIT_TRAIL' Access Audit Is Enabled:\n\n  The `UNIFIED_AUDIT_TRAIL` view holds audit trail records generated by the database. Enabling this audit action causes logging of all access attempts to the `UNIFIED_AUDIT_TRAIL` view, whether successful or unsuccessful, regardless of the privileges held by the users to issue such statements.\n  \n- Ensure the 'CREATE PROCEDURE/FUNCTION/PACKAGE/PACKAGE\nBODY' Action Audit Is Enabled:\n\n  Oracle database procedures, function, packages, and package bodies, which are stored within the database, are created to perform business functions and access database as defined by PL/SQL code and SQL statements contained within these objects. Enabling this unified action audit causes logging of all `CREATE PROCEDURE`, `CREATE FUNCTION`, `CREATEPACKAGE` and `CREATE PACKAGE BODY` statements, successful or unsuccessful, statements issued by the users regardless of the privileges held by the users to issue such statements.\n  \n- Ensure the 'ALTER PROCEDURE/FUNCTION/PACKAGE/PACKAGEBODY' Action Audit Is Enabled:\n\n  Oracle database procedures, functions, packages, and package bodies, which are stored within the database, are created to carry out business functions and access database as defined by PL/SQL code and SQL statements contained within these objects. Enabling this unified action audit causes logging of all `ALTER PROCEDURE`, `ALTER FUNCTION`, `ALTER PACKAGE` and `ALTER PACKAGE BODY` statements, successful or unsuccessful, issued by the users regardless of the privileges held by the users to issue such statements.\n  \n- Ensure the 'DROP PROCEDURE/FUNCTION/PACKAGE/PACKAGEBODY' Action Audit Is Enabled:\n\n  Oracle database procedures, functions, packages, and package bodies, which are stored within the database, are created to carry out business functions and access database as defined by PL/SQL code and SQL statements contained within these objects. Enabling this unified action audit causes logging of all `DROP PROCEDURE`, `DROP FUNCTION`, `DROP PACKAGE` or `DROP PACKAGE BODY` statements, successful or unsuccessful, issued by the users regardless of the privileges held by the users to issue such statements.\n  \n- Ensure the 'ALTER SYSTEM' Privilege Audit Is Enabled:\n\n  The `ALTER SYSTEM` privilege allows the user to change instance settings which could impact security posture, performance or normal operation of the database. Additionally, the `ALTERSYSTEM` privilege may be used to run operating system commands using undocumented Oracle functionality. Enabling this unified audit causes logging of activities that involve exercise of this privilege, whether successful or unsuccessful, issued by the users regardless of the privileges held by the users to issue such statements.\n  \n- Ensure the 'CREATE TRIGGER' Action Audit Is Enabled:\n\n  Oracle database triggers are executed automatically when specified conditions on the underlying objects occur. Trigger bodies contain the code, quite often to perform data validation, ensure data integrity/security or enforce critical constraints on allowable actions on data. Enabling this unified audit causes logging of all `CREATE TRIGGER` statements, whether successful or unsuccessful, issued by the users regardless of the privileges held by the users to issue such statements.\n\n- Ensure the 'ALTER TRIGGER' Action Audit IS Enabled:\n\n  Oracle database triggers are executed automatically when specified conditions on the underlying objects occur. Trigger bodies contain the code, quite often to perform data validation, ensure data integrity/security or enforce critical constraints on allowable actions on data. Enabling this unified audit causes logging of all `ALTER TRIGGER` statements, whether successful or unsuccessful, issued by the users regardless of the privileges held by the users to issue such statements.\n\n- Ensure the 'DROP TRIGGER' Action Audit Is Enabled:\n\n  Oracle database triggers are executed automatically when specified conditions on the underlying objects occur. Trigger bodies contain the code, quite often to perform data validation, ensure data integrity/security or enforce critical constraints on allowable actions on data. Enabling this unified audit causes logging of all `DROP TRIGGER` statements, whether successful or unsuccessful, issued by the users regardless of the privileges held by the users to issue such statements.\n  \n- Ensure the 'LOGON' AND 'LOGOFF' Actions Audit Is Enabled:\n\n\n  Oracle database users log on to the database to perform their work. Enabling this unified audit causes logging of all `LOGON` actions, whether successful or unsuccessful, issued by the users regardless of the privileges held by the users to log into the database. In addition, `LOGOFF` action audit captures logoff activities. This audit action also captures logon/logoff to the open database by `SYSDBA` and `SYSOPER`.",
    "weakness_title_read_only": "Not monitoring the activities of malicious users (Oracle Database)",
    "weakness_id_read_only": "P1355",
    "weakness": "e26c57a4-16da-472c-a455-e3c7ea240876",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2019-05-15T16:52:59.418000-04:00",
    "last_updated": "2021-06-25T14:47:58.597000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1734",
    "universal_id": "864d6b38-51c9-413b-abb2-577239edbd95",
    "countermeasure_name": "Verify that all unified audit options are enabled (Oracle Database)",
    "countermeasure_solution": "To assess this recommendation, execute the following SQL statement.  \n\n```\nSELECT AUD.POLICY_NAME, AUD.AUDIT_OPTION, AUD.AUDIT_OPTION_TYPE\nFROM AUDIT_UNIFIED_POLICIES AUD, AUDIT_UNIFIED_ENABLED_POLICIES ENABLED\nWHERE AUD.POLICY_NAME = ENABLED.POLICY_NAME\nAND AUD.AUDIT_OPTION = 'CREATE USER'\nAND AUD.AUDIT_OPTION_TYPE = 'STANDARD ACTION'\nAND ENABLED.SUCCESS = 'YES'\nAND ENABLED.FAILURE = 'YES'\nAND ENABLED.ENABLED_OPT = 'BY'\nAND ENABLED.USER_NAME = 'ALL USERS';\n``` \n``` \nSELECT AUD.POLICY_NAME, AUD.AUDIT_OPTION, AUD.AUDIT_OPTION_TYPE\nFROM AUDIT_UNIFIED_POLICIES AUD, AUDIT_UNIFIED_ENABLED_POLICIES ENABLED\nWHERE AUD.POLICY_NAME = ENABLED.POLICY_NAME\nAND AUD.AUDIT_OPTION = 'ALTER USER'\nAND AUD.AUDIT_OPTION_TYPE = 'STANDARD ACTION'\nAND ENABLED.SUCCESS = 'YES'\nAND ENABLED.FAILURE = 'YES'\nAND ENABLED.ENABLED_OPT = 'BY'\nAND ENABLED.USER_NAME = 'ALL USERS';\n``` \n```\nSELECT AUD.POLICY_NAME, AUD.AUDIT_OPTION, AUD.AUDIT_OPTION_TYPE\nFROM AUDIT_UNIFIED_POLICIES AUD, AUDIT_UNIFIED_ENABLED_POLICIES ENABLED\nWHERE AUD.POLICY_NAME = ENABLED.POLICY_NAME\nAND AUD.AUDIT_OPTION = 'DROP USER'\nAND AUD.AUDIT_OPTION_TYPE = 'STANDARD ACTION'\nAND ENABLED.SUCCESS = 'YES'\nAND ENABLED.FAILURE = 'YES'\nAND ENABLED.ENABLED_OPT = 'BY'\nAND ENABLED.USER_NAME = 'ALL USERS'; \n```   \n```\nSELECT AUD.POLICY_NAME, AUD.AUDIT_OPTION, AUD.AUDIT_OPTION_TYPE\nFROM AUDIT_UNIFIED_POLICIES AUD, AUDIT_UNIFIED_ENABLED_POLICIES ENABLED\nWHERE AUD.POLICY_NAME = ENABLED.POLICY_NAME\nAND AUD.AUDIT_OPTION = 'CREATE ROLE'\nAND AUD.AUDIT_OPTION_TYPE = 'STANDARD ACTION'\nAND ENABLED.SUCCESS = 'YES'\nAND ENABLED.FAILURE = 'YES'\nAND ENABLED.ENABLED_OPT = 'BY'\nAND ENABLED.USER_NAME = 'ALL USERS';\n``` \n```\nSELECT AUD.POLICY_NAME, AUD.AUDIT_OPTION, AUD.AUDIT_OPTION_TYPE\nFROM AUDIT_UNIFIED_POLICIES AUD, AUDIT_UNIFIED_ENABLED_POLICIES ENABLED\nWHERE AUD.POLICY_NAME = ENABLED.POLICY_NAME\nAND AUD.AUDIT_OPTION = 'ALTER ROLE'\nAND AUD.AUDIT_OPTION_TYPE = 'STANDARD ACTION'\nAND ENABLED.SUCCESS = 'YES'\nAND ENABLED.FAILURE = 'YES'\nAND ENABLED.ENABLED_OPT = 'BY'\nAND ENABLED.USER_NAME = 'ALL USERS'; \n``` \n```\nSELECT AUD.POLICY_NAME, AUD.AUDIT_OPTION, AUD.AUDIT_OPTION_TYPE\nFROM AUDIT_UNIFIED_POLICIES AUD, AUDIT_UNIFIED_ENABLED_POLICIES ENABLED\nWHERE AUD.POLICY_NAME = ENABLED.POLICY_NAME\nAND AUD.AUDIT_OPTION = 'DROP ROLE'\nAND AUD.AUDIT_OPTION_TYPE = 'STANDARD ACTION'\nAND ENABLED.SUCCESS = 'YES'\nAND ENABLED.FAILURE = 'YES'\nAND ENABLED.ENABLED_OPT = 'BY'\nAND ENABLED.USER_NAME = 'ALL USERS'; \n```   \n```\nSELECT AUD.POLICY_NAME, AUD.AUDIT_OPTION, AUD.AUDIT_OPTION_TYPE\nFROM AUDIT_UNIFIED_POLICIES AUD, AUDIT_UNIFIED_ENABLED_POLICIES ENABLED\nWHERE AUD.POLICY_NAME = ENABLED.POLICY_NAME\nAND AUD.AUDIT_OPTION = 'GRANT'\nAND AUD.AUDIT_OPTION_TYPE = 'STANDARD ACTION'\nAND ENABLED.SUCCESS = 'YES'\nAND ENABLED.FAILURE = 'YES'\nAND ENABLED.ENABLED_OPT = 'BY'\nAND ENABLED.USER_NAME = 'ALL USERS';\n``` \n```\nSELECT AUD.POLICY_NAME, AUD.AUDIT_OPTION, AUD.AUDIT_OPTION_TYPE\nFROM AUDIT_UNIFIED_POLICIES AUD, AUDIT_UNIFIED_ENABLED_POLICIES ENABLED\nWHERE AUD.POLICY_NAME = ENABLED.POLICY_NAME\nAND AUD.AUDIT_OPTION = 'REVOKE'\nAND AUD.AUDIT_OPTION_TYPE = 'STANDARD ACTION'\nAND ENABLED.SUCCESS = 'YES'\nAND ENABLED.FAILURE = 'YES'\nAND ENABLED.ENABLED_OPT = 'BY'\nAND ENABLED.USER_NAME = 'ALL USERS'; \n``` \n```\nSELECT AUD.POLICY_NAME, AUD.AUDIT_OPTION, AUD.AUDIT_OPTION_TYPE\nFROM AUDIT_UNIFIED_POLICIES AUD, AUDIT_UNIFIED_ENABLED_POLICIES ENABLED\nWHERE AUD.POLICY_NAME = ENABLED.POLICY_NAME\nAND AUD.AUDIT_OPTION = 'CREATE PROFILE'\nAND AUD.AUDIT_OPTION_TYPE = 'STANDARD ACTION'\nAND ENABLED.SUCCESS = 'YES'\nAND ENABLED.FAILURE = 'YES'\nAND ENABLED.ENABLED_OPT = 'BY'\nAND ENABLED.USER_NAME = 'ALL USERS'; \n```   \n```\nSELECT AUD.POLICY_NAME, AUD.AUDIT_OPTION, AUD.AUDIT_OPTION_TYPE\nFROM AUDIT_UNIFIED_POLICIES AUD, AUDIT_UNIFIED_ENABLED_POLICIES ENABLED\nWHERE AUD.POLICY_NAME = ENABLED.POLICY_NAME\nAND AUD.AUDIT_OPTION = 'ALTER PROFILE'\nAND AUD.AUDIT_OPTION_TYPE = 'STANDARD ACTION'\nAND ENABLED.SUCCESS = 'YES'\nAND ENABLED.FAILURE = 'YES'\nAND ENABLED.ENABLED_OPT = 'BY'\nAND ENABLED.USER_NAME = 'ALL USERS';\n``` \n```\nSELECT AUD.POLICY_NAME, AUD.AUDIT_OPTION, AUD.AUDIT_OPTION_TYPE\nFROM AUDIT_UNIFIED_POLICIES AUD, AUDIT_UNIFIED_ENABLED_POLICIES ENABLED\nWHERE AUD.POLICY_NAME = ENABLED.POLICY_NAME\nAND AUD.AUDIT_OPTION = 'DROP PROFILE'\nAND AUD.AUDIT_OPTION_TYPE = 'STANDARD ACTION'\nAND ENABLED.SUCCESS = 'YES'\nAND ENABLED.FAILURE = 'YES'\nAND ENABLED.ENABLED_OPT = 'BY'\nAND ENABLED.USER_NAME = 'ALL USERS'; \n``` \n```\nSELECT AUD.POLICY_NAME, AUD.AUDIT_OPTION, AUD.AUDIT_OPTION_TYPE\nFROM AUDIT_UNIFIED_POLICIES AUD, AUDIT_UNIFIED_ENABLED_POLICIES ENABLED\nWHERE AUD.POLICY_NAME = ENABLED.POLICY_NAME\nAND AUD.AUDIT_OPTION = 'CREATE DATABASE LINK'\nAND AUD.AUDIT_OPTION_TYPE = 'STANDARD ACTION'\nAND ENABLED.SUCCESS = 'YES'\nAND ENABLED.FAILURE = 'YES'\nAND ENABLED.ENABLED_OPT = 'BY'\nAND ENABLED.USER_NAME = 'ALL USERS'; \n```   \n```\nSELECT AUD.POLICY_NAME, AUD.AUDIT_OPTION, AUD.AUDIT_OPTION_TYPE\nFROM AUDIT_UNIFIED_POLICIES AUD, AUDIT_UNIFIED_ENABLED_POLICIES ENABLED\nWHERE AUD.POLICY_NAME = ENABLED.POLICY_NAME\nAND AUD.AUDIT_OPTION = 'ALTER DATABASE LINK'\nAND AUD.AUDIT_OPTION_TYPE = 'STANDARD ACTION'\nAND ENABLED.SUCCESS = 'YES'\nAND ENABLED.FAILURE = 'YES'\nAND ENABLED.ENABLED_OPT = 'BY'\nAND ENABLED.USER_NAME = 'ALL USERS';\n``` \n```\nSELECT AUD.POLICY_NAME, AUD.AUDIT_OPTION, AUD.AUDIT_OPTION_TYPE\nFROM AUDIT_UNIFIED_POLICIES AUD, AUDIT_UNIFIED_ENABLED_POLICIES ENABLED\nWHERE AUD.POLICY_NAME = ENABLED.POLICY_NAME\nAND AUD.AUDIT_OPTION = 'DROP DATABASE LINK'\nAND AUD.AUDIT_OPTION_TYPE = 'STANDARD ACTION'\nAND ENABLED.SUCCESS = 'YES'\nAND ENABLED.FAILURE = 'YES'\nAND ENABLED.ENABLED_OPT = 'BY'\nAND ENABLED.USER_NAME = 'ALL USERS'; \n``` \n``` \nSELECT AUD.POLICY_NAME, AUD.AUDIT_OPTION, AUD.AUDIT_OPTION_TYPE\nFROM AUDIT_UNIFIED_POLICIES AUD, AUDIT_UNIFIED_ENABLED_POLICIES ENABLED\nWHERE AUD.POLICY_NAME = ENABLED.POLICY_NAME\nAND AUD.AUDIT_OPTION = 'CREATE SYNONYM'\nAND AUD.AUDIT_OPTION_TYPE = 'STANDARD ACTION'\nAND ENABLED.SUCCESS = 'YES'\nAND ENABLED.FAILURE = 'YES'\nAND ENABLED.ENABLED_OPT = 'BY'\nAND ENABLED.USER_NAME = 'ALL USERS';\n```   \n```\nSELECT AUD.POLICY_NAME, AUD.AUDIT_OPTION, AUD.AUDIT_OPTION_TYPE\nFROM AUDIT_UNIFIED_POLICIES AUD, AUDIT_UNIFIED_ENABLED_POLICIES ENABLED\nWHERE AUD.POLICY_NAME = ENABLED.POLICY_NAME\nAND AUD.AUDIT_OPTION = 'ALTER SYNONYM'\nAND AUD.AUDIT_OPTION_TYPE = 'STANDARD ACTION'\nAND ENABLED.SUCCESS = 'YES'\nAND ENABLED.FAILURE = 'YES'\nAND ENABLED.ENABLED_OPT = 'BY'\nAND ENABLED.USER_NAME = 'ALL USERS';\n``` \n```\nSELECT AUD.POLICY_NAME, AUD.AUDIT_OPTION, AUD.AUDIT_OPTION_TYPE\nFROM AUDIT_UNIFIED_POLICIES AUD, AUDIT_UNIFIED_ENABLED_POLICIES ENABLED\nWHERE AUD.POLICY_NAME = ENABLED.POLICY_NAME\nAND AUD.AUDIT_OPTION = 'DROP SYNONYM'\nAND AUD.AUDIT_OPTION_TYPE = 'STANDARD ACTION'\nAND ENABLED.SUCCESS = 'YES'\nAND ENABLED.FAILURE = 'YES'\nAND ENABLED.ENABLED_OPT = 'BY'\nAND ENABLED.USER_NAME = 'ALL USERS'; \n``` \n```\nSELECT AUD.POLICY_NAME, AUD.AUDIT_OPTION, AUD.AUDIT_OPTION_TYPE\nFROM AUDIT_UNIFIED_POLICIES AUD, AUDIT_UNIFIED_ENABLED_POLICIES ENABLED\nWHERE AUD.POLICY_NAME = ENABLED.POLICY_NAME\nAND AUD.AUDIT_OPTION = 'SELECT ANY DICTIONARY'\nAND AUD.AUDIT_OPTION_TYPE = 'SYSTEM PRIVILEGE'\nAND ENABLED.SUCCESS = 'YES'\nAND ENABLED.FAILURE = 'YES'\nAND ENABLED.ENABLED_OPT = 'BY'\nAND ENABLED.USER_NAME = 'ALL USERS'; \n```   \n```\nSELECT AUD.POLICY_NAME, AUD.AUDIT_OPTION, AUD.AUDIT_OPTION_TYPE\nFROM AUDIT_UNIFIED_POLICIES AUD, AUDIT_UNIFIED_ENABLED_POLICIES ENABLED\nWHERE AUD.POLICY_NAME = ENABLED.POLICY_NAME\nAND AUD.AUDIT_OPTION = 'ALL'\nAND AUD.AUDIT_OPTION_TYPE = 'OBJECT ACTION'\nAND AUD.OBJECT_SCHEMA = 'SYS'\nAND AUD.OBJECT_NAME = 'UNIFIED_AUDIT_TRAIL'\nAND ENABLED.SUCCESS = 'YES'\nAND ENABLED.FAILURE = 'YES'\nAND ENABLED.ENABLED_OPT = 'BY'\nAND ENABLED.USER_NAME = 'ALL USERS';\n``` \n``` \nSELECT *\nFROM AUDIT_UNIFIED_ENABLED_POLICIES ENABLED\nWHERE ENABLED.SUCCESS = 'YES'\nAND ENABLED.FAILURE = 'YES'\nAND ENABLED.ENABLED_OPT = 'BY'\nAND ENABLED.USER_NAME = 'ALL USERS'\nAND EXISTS ( SELECT 'x'\nFROM AUDIT_UNIFIED_POLICIES AUD\nWHERE AUD.POLICY_NAME = ENABLED.POLICY_NAME\nAND AUD.AUDIT_OPTION = 'CREATE PROCEDURE'\nAND AUD.AUDIT_OPTION_TYPE = 'STANDARD ACTION')\nAND EXISTS ( SELECT 'x'\nFROM AUDIT_UNIFIED_POLICIES AUD\nWHERE AUD.POLICY_NAME = ENABLED.POLICY_NAME\nAND AUD.AUDIT_OPTION = 'CREATE FUNCTION'\nAND AUD.AUDIT_OPTION_TYPE = 'STANDARD ACTION')\nAND EXISTS ( SELECT 'x'\nFROM AUDIT_UNIFIED_POLICIES AUD\n269 | P a g e\nWHERE AUD.POLICY_NAME = ENABLED.POLICY_NAME\nAND AUD.AUDIT_OPTION = 'CREATE PACKAGE'\nAND AUD.AUDIT_OPTION_TYPE = 'STANDARD ACTION')\nAND EXISTS ( SELECT 'x'\nFROM AUDIT_UNIFIED_POLICIES AUD\nWHERE AUD.POLICY_NAME = ENABLED.POLICY_NAME\nAND AUD.AUDIT_OPTION = 'CREATE PACKAGE BODY'\nAND AUD.AUDIT_OPTION_TYPE = 'STANDARD ACTION');\n``` \n```\nSELECT *\nFROM AUDIT_UNIFIED_ENABLED_POLICIES ENABLED\nWHERE ENABLED.SUCCESS = 'YES'\nAND ENABLED.FAILURE = 'YES'\nAND ENABLED.ENABLED_OPT = 'BY'\nAND ENABLED.USER_NAME = 'ALL USERS'\nAND EXISTS ( SELECT 'x'\nFROM AUDIT_UNIFIED_POLICIES AUD\nWHERE AUD.POLICY_NAME = ENABLED.POLICY_NAME\nAND AUD.AUDIT_OPTION = 'ALTER PROCEDURE'\nAND AUD.AUDIT_OPTION_TYPE = 'STANDARD ACTION')\nAND EXISTS ( SELECT 'x'\nFROM AUDIT_UNIFIED_POLICIES AUD\nWHERE AUD.POLICY_NAME = ENABLED.POLICY_NAME\nAND AUD.AUDIT_OPTION = 'ALTER FUNCTION'\n271 | P a g e\nAND AUD.AUDIT_OPTION_TYPE = 'STANDARD ACTION')\nAND EXISTS ( SELECT 'x'\nFROM AUDIT_UNIFIED_POLICIES AUD\nWHERE AUD.POLICY_NAME = ENABLED.POLICY_NAME\nAND AUD.AUDIT_OPTION = 'ALTER PACKAGE'\nAND AUD.AUDIT_OPTION_TYPE = 'STANDARD ACTION')\nAND EXISTS ( SELECT 'x'\nFROM AUDIT_UNIFIED_POLICIES AUD\nWHERE AUD.POLICY_NAME = ENABLED.POLICY_NAME\nAND AUD.AUDIT_OPTION = 'ALTER PACKAGE BODY'\nAND AUD.AUDIT_OPTION_TYPE = 'STANDARD ACTION'); \n```   \n```\nSELECT *\nFROM AUDIT_UNIFIED_ENABLED_POLICIES ENABLED\nWHERE ENABLED.SUCCESS = 'YES'\nAND ENABLED.FAILURE = 'YES'\nAND ENABLED.ENABLED_OPT = 'BY'\nAND ENABLED.USER_NAME = 'ALL USERS'\nAND EXISTS ( SELECT 'x'\nFROM AUDIT_UNIFIED_POLICIES AUD\nWHERE AUD.POLICY_NAME = ENABLED.POLICY_NAME\nAND AUD.AUDIT_OPTION = 'DROP PROCEDURE'\nAND AUD.AUDIT_OPTION_TYPE = 'STANDARD ACTION')\nAND EXISTS ( SELECT 'x'\nFROM AUDIT_UNIFIED_POLICIES AUD\nWHERE AUD.POLICY_NAME = ENABLED.POLICY_NAME\nAND AUD.AUDIT_OPTION = 'DROP FUNCTION'\nAND AUD.AUDIT_OPTION_TYPE = 'STANDARD ACTION')\nAND EXISTS ( SELECT 'x'\nFROM AUDIT_UNIFIED_POLICIES AUD\n273 | P a g e\nWHERE AUD.POLICY_NAME = ENABLED.POLICY_NAME\nAND AUD.AUDIT_OPTION = 'DROP PACKAGE'\nAND AUD.AUDIT_OPTION_TYPE = 'STANDARD ACTION')\nAND EXISTS ( SELECT 'x'\nFROM AUDIT_UNIFIED_POLICIES AUD\nWHERE AUD.POLICY_NAME = ENABLED.POLICY_NAME\nAND AUD.AUDIT_OPTION = 'DROP PACKAGE BODY'\nAND AUD.AUDIT_OPTION_TYPE = 'STANDARD ACTION');\n``` \n``` \nSELECT AUD.POLICY_NAME, AUD.AUDIT_OPTION, AUD.AUDIT_OPTION_TYPE\nFROM AUDIT_UNIFIED_POLICIES AUD, AUDIT_UNIFIED_ENABLED_POLICIES ENABLED\nWHERE AUD.POLICY_NAME = ENABLED.POLICY_NAME\nAND AUD.AUDIT_OPTION = 'ALTER SYSTEM'\nAND AUD.AUDIT_OPTION_TYPE = 'STANDARD ACTION'\nAND ENABLED.SUCCESS = 'YES'\nAND ENABLED.FAILURE = 'YES'\nAND ENABLED.ENABLED_OPT = 'BY'\nAND ENABLED.USER_NAME = 'ALL USERS';\n``` \n```\nSELECT AUD.POLICY_NAME, AUD.AUDIT_OPTION, AUD.AUDIT_OPTION_TYPE\nFROM AUDIT_UNIFIED_POLICIES AUD, AUDIT_UNIFIED_ENABLED_POLICIES ENABLED\nWHERE AUD.POLICY_NAME = ENABLED.POLICY_NAME\nAND AUD.AUDIT_OPTION = 'CREATE TRIGGER'\nAND AUD.AUDIT_OPTION_TYPE = 'STANDARD ACTION'\nAND ENABLED.SUCCESS = 'YES'\nAND ENABLED.FAILURE = 'YES'\nAND ENABLED.ENABLED_OPT = 'BY'\nAND ENABLED.USER_NAME = 'ALL USERS'; \n```   \n```\nSELECT AUD.POLICY_NAME, AUD.AUDIT_OPTION, AUD.AUDIT_OPTION_TYPE\nFROM AUDIT_UNIFIED_POLICIES AUD, AUDIT_UNIFIED_ENABLED_POLICIES ENABLED\nWHERE AUD.POLICY_NAME = ENABLED.POLICY_NAME\nAND AUD.AUDIT_OPTION = 'ALTER TRIGGER'\nAND AUD.AUDIT_OPTION_TYPE = 'STANDARD ACTION'\nAND ENABLED.SUCCESS = 'YES'\nAND ENABLED.FAILURE = 'YES'\nAND ENABLED.ENABLED_OPT = 'BY'\nAND ENABLED.USER_NAME = 'ALL USERS';\n``` \n```\nSELECT AUD.POLICY_NAME, AUD.AUDIT_OPTION, AUD.AUDIT_OPTION_TYPE\nFROM AUDIT_UNIFIED_POLICIES AUD, AUDIT_UNIFIED_ENABLED_POLICIES ENABLED\nWHERE AUD.POLICY_NAME = ENABLED.POLICY_NAME\nAND AUD.AUDIT_OPTION = 'DROP TRIGGER'\nAND AUD.AUDIT_OPTION_TYPE = 'STANDARD ACTION'\nAND ENABLED.SUCCESS = 'YES'\nAND ENABLED.FAILURE = 'YES'\nAND ENABLED.ENABLED_OPT = 'BY'\nAND ENABLED.USER_NAME = 'ALL USERS'; \n``` \n```\nSELECT *\nFROM AUDIT_UNIFIED_ENABLED_POLICIES ENABLED\nWHERE ENABLED.SUCCESS = 'YES'\nAND ENABLED.FAILURE = 'YES'\nAND ENABLED.ENABLED_OPT = 'BY'\nAND ENABLED.USER_NAME = 'ALL USERS'\nAND EXISTS ( SELECT 'x'\nFROM AUDIT_UNIFIED_POLICIES AUD\nWHERE AUD.POLICY_NAME = ENABLED.POLICY_NAME\nAND AUD.AUDIT_OPTION = 'LOGON'\nAND AUD.AUDIT_OPTION_TYPE = 'STANDARD ACTION')\nAND EXISTS ( SELECT 'x'\nFROM AUDIT_UNIFIED_POLICIES AUD\nWHERE AUD.POLICY_NAME = ENABLED.POLICY_NAME\nAND AUD.AUDIT_OPTION = 'LOGOFF'\nAND AUD.AUDIT_OPTION_TYPE = 'STANDARD ACTION'); \n```\nLack of results implies a finding.",
    "weakness_title_read_only": "Not monitoring the activities of malicious users (Oracle Database)",
    "weakness_id_read_only": "P1355",
    "weakness": "e26c57a4-16da-472c-a455-e3c7ea240876",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2019-05-15T16:52:59.571000-04:00",
    "last_updated": "2021-06-25T14:47:58.528000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1873",
    "universal_id": "e4fe894f-dbd0-4952-9fd9-c794ec3b6c47",
    "countermeasure_name": "Prevent information leakage through HTTP response headers",
    "countermeasure_solution": "Disable HTTP response headers that can expose side information about server technologies in use.\nBelow is an example of HTTP response header sent from a web server that is exposing too much information:\n\n````\nHTTP/1.1 200 OK\nDate: Thu, 12 Jun 2014 14:15:01 GMT\nServer: Apache/2.2.21 (Win32) PHP/5.4.7\nContent-Length:226\nConnection: close\nContent-Type: text/html; charset=iso-8859-1\n````\n\nIn the above example, the HTTP header exposes web server version number that can be a useful information for attackers. Edit the configuration of your web server (i.e. web.config, web.xml, server.xml, etc) to prevent the HTTP response headers from exposing any sensitive information.",
    "weakness_title_read_only": "Information Exposure",
    "weakness_id_read_only": "P96",
    "weakness": "5caa926a-86e4-498d-97f8-5d2f5c5ddd7b",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "requirements",
    "created": "2019-05-17T00:25:50.411000-04:00",
    "last_updated": "2021-06-25T14:47:49.359000-04:00",
    "custom": "False",
    "rules": "0b07fc15-1e13-4c03-b097-c7e222fc019a AND ed4ba6aa-be7d-4c57-839c-d9c6c9e091c0 AND cab80cea-1a20-433f-b78c-783b816b8d33",
    "rules_read_only": "A718 AND A195 AND A739"
  },
  {
    "countermeasure_id": "T1874",
    "universal_id": "a96bf6e5-ffff-4e5a-a492-36beafbce976",
    "countermeasure_name": "Test that HTTP response headers do not expose any sensitive information",
    "countermeasure_solution": "Check HTTP response headers using a tool such as developer tools in your browser and look for any sensitive information such as information about the server technologies in use (including version of the software or platform used) in the response. If such information exists, this test fails.",
    "weakness_title_read_only": "Information Exposure",
    "weakness_id_read_only": "P96",
    "weakness": "5caa926a-86e4-498d-97f8-5d2f5c5ddd7b",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2019-05-17T18:00:43.292000-04:00",
    "last_updated": "2021-06-25T14:47:48.250000-04:00",
    "custom": "False",
    "rules": "0b07fc15-1e13-4c03-b097-c7e222fc019a AND ed4ba6aa-be7d-4c57-839c-d9c6c9e091c0 AND cab80cea-1a20-433f-b78c-783b816b8d33",
    "rules_read_only": "A718 AND A195 AND A739"
  },
  {
    "countermeasure_id": "T1878",
    "universal_id": "32b203a5-cda0-4167-9b8b-730b0a6ec3a2",
    "countermeasure_name": "Grant minimal IAM permissions (especially to Lambda functions) (AWS)",
    "countermeasure_solution": "Follow these best practices:  \n\n1. Always grant _least privilege_ to AWS users. Least privilege means granting only the permissions required to perform a task. Determine what users need to do and then craft policies for them that let the users perform _only_ those tasks, instead of allowing full administrative privileges. \n\n2. Always start with a minimum set of permissions and grant additional permissions as necessary, rather than starting with permissions that are too lenient and then trying to tighten them later. \n\n3. Remove IAM policies that have a statement with `\"Effect\": \"Allow\"` and `\"Action\": \"*\"` over `\"Resource\": \"*\"`. IAM policies are the means by which privileges are granted to users, groups, or roles.",
    "weakness_title_read_only": "Improper Access Control (Authorization)",
    "weakness_id_read_only": "P182",
    "weakness": "e488cdc5-3c91-4d2b-bcec-5c651b000d8b",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2019-05-28T10:32:36.533000-04:00",
    "last_updated": "2021-06-25T14:47:44.974000-04:00",
    "custom": "False",
    "rules": "57bdb72a-73a7-4ddc-acb9-2783b5127798;c0fed6ab-2dad-48f6-a0c1-4d260cade1fb",
    "rules_read_only": "A1170;A1226"
  },
  {
    "countermeasure_id": "T1880",
    "universal_id": "9bd8663b-c973-44f2-aea1-5329d9379700",
    "countermeasure_name": "Encrypt data at rest for Lambda functions (AWS)",
    "countermeasure_solution": "Apply appropriate protections to ensure the data is encrypted at rest, if a Lambda function is responsible for storing sensitive data such as PII in cloud storage utilities.\n\n## Lambda `/tmp` Directory\n\nWhile it is possible to store data in the `/tmp` directory of a Lambda function. This is generally considered a poor location to store persistent data, especially sensitive PII. A resource [limit of 512 MB](https://docs.aws.amazon.com/lambda/latest/dg/limits.html) is also applied to the `/tmp` directory.\n\n## Environment Variable Encryption\n\nEnvironment variables used in Lambda functions are encrypted by default using AWS Key Management Service. When the function is invoked, the values are decrypted and made available to the Lambda code. Unless specified, the environment variable is encrypted using a default service key that AWS creates. If more control is needed over the encryption key it is possible to create a customer-managed key. Compliance requirements such as PCI DSS or SOC2 may require keys to be managed internally. \n\nIt is best practice to enable helpers for encryption in transit for environment variables used by Lambda functions. This masks the value you entered and results in a call to AWS KMS to encrypt the value and return it as Ciphertext.\n\n## AWS S3 Data Encryption\n\nData protection in AWS S3 can be accomplished by using either Server-Side Encryption (where the object is encrypted before it is saved to disk and decrypted when the object is downloaded), or Client-Side Encryption (where data is encrypted before it is uploaded to S3). \n\n## RDS Data Encryption\n\nIf your Lambda function is responsible for storing data in a managed database such as RDS, encryption at rest can be enabled by simply choosing *Enable Encryption* in the RDS console. Keys can either be managed by AWS or by using customer-managed keys. The AES-256 encryption algorithm is used to store the underlying storage for DB instances as well as automated backups and snapshots.",
    "weakness_title_read_only": "Cleartext Storage of Sensitive Information without Access Control Mechanisms",
    "weakness_id_read_only": "P209",
    "weakness": "a9791a66-ddfd-4094-a953-31af2064161d",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2019-05-28T16:30:06.565000-04:00",
    "last_updated": "2021-06-25T14:47:47.099000-04:00",
    "custom": "False",
    "rules": "c0fed6ab-2dad-48f6-a0c1-4d260cade1fb",
    "rules_read_only": "A1226"
  },
  {
    "countermeasure_id": "T1881",
    "universal_id": "529df716-c5cc-4406-a394-6a6c2402ecce",
    "countermeasure_name": "Mitigate the risk of uncontrolled data harvesting",
    "countermeasure_solution": "Install technologies that can detect sophisticated bots that harvest your data. Do not assume that you are protected in case you have installed a Web Application Firewall (WAF). WAFs are normally designed to detect traffic that tries to utilize security issues. However, data harvesting bots imitate real user behavior to scrape information from your application. Those bots are not usually detected by WAFs. Techniques based on machine learning and behavioral analysis are effective. In addition, you need to make sure that such technologies are not hampering the regular user experience. Easy to use CAPTCHAS can be used to verify real users when you detect suspicious activities.",
    "weakness_title_read_only": "Uncontrolled data harvesting by web scripts",
    "weakness_id_read_only": "P1427",
    "weakness": "ce7545bc-0e92-450c-9dd2-c6eb03f0a6fc",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "requirements",
    "created": "2019-05-28T23:12:58.979000-04:00",
    "last_updated": "2023-03-17T17:00:08.865000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1882",
    "universal_id": "01bdf8f4-26f5-4263-8972-57fcc3dd490c",
    "countermeasure_name": "Verify uncontrolled data harvesting can be detected",
    "countermeasure_solution": "Use a data harvesting bot to check whether your application can detect it. If not, this test _fails.",
    "weakness_title_read_only": "Uncontrolled data harvesting by web scripts",
    "weakness_id_read_only": "P1427",
    "weakness": "ce7545bc-0e92-450c-9dd2-c6eb03f0a6fc",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2019-05-28T23:37:19.693000-04:00",
    "last_updated": "2021-06-25T14:47:54.588000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1883",
    "universal_id": "89a783f4-1f21-41f9-bc84-861ca21c14cb",
    "countermeasure_name": "Enable configuration monitoring in AWS console (AWS)",
    "countermeasure_solution": "Ensure configuration management is enabled in the AWS Console:\n\n1. Select the region you want to focus on in the top right of the console\n\n2. Click Services\n\n3. Click Config\n\n4. Define which resources you want to record in the selected region\n\n5. Choose to include global resources (IAM resources)\n\n6. Specify an S3 bucket in the same account or in another managed AWS account\n\n7. Create an SNS Topic from the same AWS account or another managed AWS account\n\n__Via the Command-Line Interface__:\n\n`aws configservice start-configuration-recorder`\n\nAWS Config automatically records and tracks changes to the configuration of AWS resources including Lambda. It provides continuous monitoring and change tracking which are often necessary to meet compliance and regulatory requirements.",
    "weakness_title_read_only": "Unmonitored changes of AWS configurations (AWS)",
    "weakness_id_read_only": "P1428",
    "weakness": "9a9b9ad3-db64-49a2-be8e-8560454e56e5",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2019-05-29T18:16:56.005000-04:00",
    "last_updated": "2021-06-25T14:47:57.874000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1885",
    "universal_id": "fd4eab9b-fc96-42e8-8c46-0391cdb8105a",
    "countermeasure_name": "Ensure Lambda functions handle input safely (AWS)",
    "countermeasure_solution": "Application-layer protection is still the responsibility of developers when using serverless technologies such as Lambda. Always ensure Lambda functions are protected against event data injection attacks such as the following:\n\n- SQL Injection\n- Cross-Site Scripting\n- OS Command Injection\n- Object Deserialization Attacks\n- Function Runtime Code Injection \n\n_Injection Prevention Best Practices_\n\n- Assume all input is untrusted\n- Do not pass input directly into the interpreter without first validating and sanitizing the data\n- Lambda functions should always run with the minimum permissions and privileges required to perform its task\n- Always use parameterized queries when building database queries\n- Ensure developers writing functions are trained in secure coding best practices\n- Utilize security testing frameworks, dynamic scanning, threat modeling, and static analysis tools when possible",
    "weakness_title_read_only": "Improper Input Validation",
    "weakness_id_read_only": "P95",
    "weakness": "df80ca69-a2c0-4d7f-b3f7-d81bd6d685e9",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "development",
    "created": "2019-05-30T18:13:50.337000-04:00",
    "last_updated": "2021-11-17T09:09:48.215000-05:00",
    "custom": "False",
    "rules": "c0fed6ab-2dad-48f6-a0c1-4d260cade1fb",
    "rules_read_only": "A1226"
  },
  {
    "countermeasure_id": "T1886",
    "universal_id": "b358585a-77f0-41b0-93e8-a827d7b18d0c",
    "countermeasure_name": "Do not allow anonymous invocation of Lambda functions (AWS)",
    "countermeasure_solution": "Only allow trusted entities to invoke Lambda functions. Allowing anonymous invocation of a Lambda function can lead to a compromise, data exposure, billing spikes, and application abuse.",
    "weakness_title_read_only": "Improper Access Control (Authorization)",
    "weakness_id_read_only": "P182",
    "weakness": "e488cdc5-3c91-4d2b-bcec-5c651b000d8b",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2019-05-30T19:07:09.959000-04:00",
    "last_updated": "2021-06-25T14:47:47.019000-04:00",
    "custom": "False",
    "rules": "c0fed6ab-2dad-48f6-a0c1-4d260cade1fb",
    "rules_read_only": "A1226"
  },
  {
    "countermeasure_id": "T1887",
    "universal_id": "e9a469e5-2c2a-43fa-9be8-b70c05e20e9f",
    "countermeasure_name": "Decide on the right OAuth 2.0 flow for your application",
    "countermeasure_solution": "OAuth 2.0 supports various flows. Each flow is intended to be used in a particular use case. Choosing the wrong flow for your scenario is likely to result in significant security issues.\nUse the overview below to determine the proper flow for your client application:\n\n* Are you building an application that requires involvement of the end user?\n    * _**Yes**_: Are you building a confidential client, which makes OAuth 2.0 requests from the server?\n        * _**Yes**_: Your client needs to use the _**Authorization Code flow with PKCE**_ with security considerations for confidential clients.\n        * _**No**_: Are you building a client that will run on a device with constrained input capabilities?\n            * _**Yes**_: Your client needs to use the _**Device flow**_.\n            * _**No**_: Your client needs to use the _**Authorization Code flow with PKCE**_ with security considerations for public clients.\n    * _**No**_: You are building a confidential client, which needs to use the _**Client Credentials**_ flow.\n\n\n\n### Security considerations\n\nWe provide detailed security considerations when discussing each of the flows. Here, we give an overview of the considerations that _**cannot be overlooked**_:\n\nDuring the _**Authorization Code flow with PKCE**_, the client can authenticate itself to the authorization server. Client authentication is only possible for confidential clients. _**You cannot expose client credentials or private keys to public clients, running on an end-user device**_.\n\nThe _**Authorization Code flow with PKCE**_ supports the use of refresh tokens for long-term, offline access. _**Refresh tokens can only be used by clients with access to secure storage**_. Examples are server-side applications and mobile applications. _**Do not use refresh tokens in browser-based applications**_.\n\nNote that it used to be a best practice to use the _**Implicit Grant flow**_ for web and mobile applications. [Modern best practices for OAuth 2.0](https://tools.ietf.org/html/draft-ietf-oauth-security-topics-12#section-3.1) strongly discourage the use of the Implicit Grant flow and recommend the use of _**Authorization Code flow with PKCE**_ instead.\n\n\n### References\n\nMore details are available in the following resources:\n\n* Additional Requirements: 'Understanding the Authorization Code Grant flow with PKCE'\n* How-To: 'Implementing the Authorization Code Grant flow with PKCE'\n* Additional Requirements: 'Understanding the Client Credentials flow'\n* How-To: 'Implementing the Client Credentials flow'\n* Countermeasure: 'Implement OAuth 2.0 securely on the resource server'\n* How-To: 'Validating reference tokens'\n* How-To: 'Validating self-contained tokens'\n* Additional Requirements: 'Using scopes as permissions'",
    "weakness_title_read_only": "Improper Access Control (Authorization)",
    "weakness_id_read_only": "P182",
    "weakness": "e488cdc5-3c91-4d2b-bcec-5c651b000d8b",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "architecture-design",
    "created": "2019-06-14T21:31:47.867000-04:00",
    "last_updated": "2023-03-07T10:43:47.351000-05:00",
    "custom": "False",
    "rules": "2b32d073-137d-4f31-9833-b3a0f9248a04",
    "rules_read_only": "A763"
  },
  {
    "countermeasure_id": "T1888",
    "universal_id": "71b74539-8c2e-4b3f-a83e-0956b265d77c",
    "countermeasure_name": "Decide on the right OpenID Connect flow for your application",
    "countermeasure_solution": "OpenID Connect is an authentication protocol built on top of OAuth 2.0. Just like with OAuth 2.0, deciding which flow to use for your application is crucial. Use the following steps to settle on a particular flow:\n\n* Does the client application need both an _**identity token**_ and an _**access token**_?\n\t* _**Yes**_: The client can use the _**Hybrid flow**_.\n\t* _**No**_: Are you building a confidential public client?\n\t\t* _**Yes**_: The client needs to use the _**Authorization Code flow with PKCE**_.\n\t\t* _**No**_: Are you building a client that runs on an input-constrained device?\n\t\t\t* _**Yes**_: The client can use the _**Device flow**_.\n\t\t\t* _**No**_: The client can use the _**Implicit flow**_.\n\n\n### The relationship between OIDC and OAuth 2.0\n\nIf you are familiar with the different OAuth 2.0 flows, you may recognize them in the steps above. That's because OIDC merely augments existing OAuth 2.0 flows with additional attributes, such as the `openid` scope. We explain these details in 'Augmenting OAuth 2.0 flows with OIDC properties' how-to.\n\n\n### Security considerations\n\nContrary to OAuth 2.0 clients, public OIDC clients can still use the _**Implicit flow**_ (See 'Understanding the OIDC Implicit flow' how-to). For OAuth 2.0, this flow is deprecated, as it exposes (bearer) access tokens to the client through the redirect URI. However, using this mechanism for delivering the identity token to the client is acceptable. After all, the identity token is not a bearer token.\n\nEvery OIDC flow results in the issuing of an identity token. This identity token holds information about the authentication of the end user. The identity token **should not be used to make backend authorization decisions**. Such authorization decisions need to be made using OAuth 2.0 access tokens.\n\nFinally, the identity token is intended to be consumed by the client receiving it. Accepting an identity token in a frontend application and forwarding it to the backend is not a valid pattern. _**Such scenarios create subtle vulnerabilities, allowing an attacker to bypass authentication and authorization operations**_.\n\n\n### References\n\nMore details are available in the following resources:\n\n* Amendment: 'Understanding the OIDC Authorization Code flow with PKCE'\n* Amendment: 'Understanding the OIDC Hybrid flow'\n* Amendment: 'Understanding the OIDC Implicit flow'\n* How-to: 'Handling user involvement in OIDC'\n* How-to: 'Session Management with OIDC'\n* How-to: 'Handling the Identity Token for User Authentication'\n* How-to: 'Augmenting OAuth 2.0 flows with OIDC properties'\n\nSince OIDC augments existing OAuth 2.0 flows, OIDC can also be used in conjunction with the device flow. For more details, refer to the [specification](https://oauth.net/2/device-flow/), along with 'Augmenting OAuth 2.0 flows with OIDC properties' how-to.",
    "weakness_title_read_only": "Improper Access Control (Authorization)",
    "weakness_id_read_only": "P182",
    "weakness": "e488cdc5-3c91-4d2b-bcec-5c651b000d8b",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "architecture-design",
    "created": "2019-06-19T19:19:11.068000-04:00",
    "last_updated": "2021-06-25T14:47:49.420000-04:00",
    "custom": "False",
    "rules": "0fdceae7-767b-4367-9883-1542c41380d4",
    "rules_read_only": "A764"
  },
  {
    "countermeasure_id": "T1889",
    "universal_id": "72415fdc-0bf3-47a2-ac18-e8556a214565",
    "countermeasure_name": "Secure the configuration of the authorization server",
    "countermeasure_solution": "In this countermeasure, you can find an overview of security guidelines and considerations. For more information on specific threats, refer to [RFC 6819 - OAuth 2.0 Threat Model and Security Considerations](https://tools.ietf.org/html/rfc6819) and [OAuth 2.0 Security Best Current Practice](https://tools.ietf.org/id/draft-ietf-oauth-security-topics-05.html).\n\n\n### General recommendations\n\n* Ensure that all endpoints enforce the use of HTTPS. HTTP traffic must either be redirected to HTTPS or rejected altogether.\n\n* Avoid weaknesses in access tokens:\n    * Prefer issuing reference tokens instead of self-contained tokens, as reference tokens are easier to control and revoke.\n    * If possible, consider using proof-of-possession tokens instead of bearer tokens. Concretely, this means binding the access tokens to a secret in possession of the client (e.g., through token binding or mutual TLS).\n    \n* Securely handle client registration:\n    * During client registration, the redirect URIs for the client's endpoints need to be registered.\n    * Opt for requiring strong client authentication (i.e., proving possession of a secret key by signing a JWT) over weak client authentication (i.e., using a shared client secret).\n    * If possible, enforce the periodic rotation of client credentials.\n    \n* Securely handle redirect URIs:\n    * Require that all provided URIs use HTTPS.\n    * Do not allow the client to register URI patterns but require the use of complete redirect URIs.\n    * Always use exact matching when comparing provided URIs against registered URIs (e.g., the redirect URI).\n    * If possible, only allow one complete redirect URI and link it to the client identifier.\n\n* Handling end-user involvement:\n    * Allow end users to configure multi-factor authentication for their accounts.\n    * If applicable, adequately inform end users about the scopes being granted to the client that initiated the flow.\n    * If applicable, allow the end user to selectively configure the scopes that will be granted to the client that initiated the flow.\n  \n* Security considerations for access tokens:\n    * Keep the lifetime of access tokens as short as possible.\n    * When issuing access token linked to user accounts, include the `sub` claim.\n    * Always include the `aud` claim in the access token metadata to prevent token abuse.\n    * Do not assign more scopes than requested or required.\n\n  \n### Handling flows\n\n* Only enable flows required by the set of supported client applications:\n    * The Resource Owner Password Credentials flow should not be supported.\n    * The PKCE-based Authorization Code Grant flow is preferred over the Implicit Grant flow.\n    * OIDC protocols should use the Hybrid flow or the PKCE-based Authorization Code Grant flow.\n   \n* Securely handle the PKCE-based Authorization Code Grant flow:\n    * Refresh tokens should only be issued to clients capable of storing them securely (e.g., a mobile application).\n    * When provided, always match the redirect URI against the list of registered URIs for this client.\n    * Upon successful completion of the flow, send the authorization code to the client by adding it to the *query parameters* of the redirect URI.\n    * Upon a failure to complete the flow, include the error response in the redirect URI.\n    * When the client provides an authorization code that has been used before, all tokens associated with this authorization code should be immediately revoked.\n\n* If impossible to avoid, ensure the Implicit Grant flow is handled securely:\n    * Never issue refresh tokens during the Implicit Grant flow.\n    * When provided, always match the redirect URI against the list of registered URIs for this client.\n    * Upon successful completion of the flow, send the access token to the client by adding it to the *fragment* of the redirect URI.\n    * Upon a failure to complete the flow, include the error response in the redirect URI.\n\n\n### Preventing brute force and replay attacks\n\n* Prevent brute force attacks:\n    * Any endpoint processing client credentials must enforce strict rate limiting to prevent brute force attacks.\n    * Any endpoint processing access tokens or refresh tokens must enforce strict rate limiting to prevent brute force attacks.\n    * Note that the exact rate limiting mechanism is out of scope here. Rate limiting [can be applied using different levels of granularity](https://documentation.pingidentity.com/pingaccess/pa40/#pa_t_Rate_Limiting_Rule.html).\n\n* Securely handle refresh tokens:\n    * Only issue refresh tokens to clients with the capability of storing them securely (e.g., a mobile application, but not a web application).\n    * When a client uses a refresh token, the authorization server must issue a new pair consisting of an access token and refresh token.\n    * When a client attempts to use a refresh token for a second time, all access and refresh tokens associated with the re-used refresh token must be immediately revoked. Note that this includes the currently active access token and refresh token.\n  * When the client using the refresh token is a confidential client, the authorization server must require client authentication.\n  * If possible, consider requiring proof-of-possession of a secret from the client when using the refresh token. Two mechanisms to achieve this are token binding and the use of mutual TLS, where the refresh token is linked to the client certificate.\n\n* Rotate keys used for signing and encryption:\n    * Regularly issue new encryption and signing keys by publishing the new public keys in the JSON Web Key Set file located at the `jwks_uri`.\n    * When rotating keys, keep the old keys around for a reasonable amount of time (i.e., at the minimum the lifetime of the token last issued) to ensure a smooth transition.\n\nAuthorization servers and identity providers are complex to implement. Several open source and commercial implementations are available. Since most scenarios involve using an existing product, this countermeasure focused on the secure configuration of the authorization server.",
    "weakness_title_read_only": "Improper Access Control (Authorization)",
    "weakness_id_read_only": "P182",
    "weakness": "e488cdc5-3c91-4d2b-bcec-5c651b000d8b",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "requirements",
    "created": "2019-06-20T14:48:33.205000-04:00",
    "last_updated": "2022-08-23T18:48:47.704000-04:00",
    "custom": "False",
    "rules": "0fdceae7-767b-4367-9883-1542c41380d4;2b32d073-137d-4f31-9833-b3a0f9248a04",
    "rules_read_only": "A764;A763"
  },
  {
    "countermeasure_id": "T1890",
    "universal_id": "cd3e9d54-758f-4876-b9b0-bda86d918761",
    "countermeasure_name": "Implement OAuth 2.0 securely on the resource server",
    "countermeasure_solution": "The resource server grants access to protected resources to a client, usually on behalf of the user. This countermeasure describes the steps that need to be performed by the resource server to enforce proper access control. Additional security considerations are provided at the end.\n\n1. The resource server has to extract the access token from the incoming request. Usually, the access token is provided as part of the `Authorization` header, such as this example: `Authorization: Bearer 2YotnFZFEjr1zCsicMWpAA`\n\n2. The resource server has to obtain the metadata associated with the access token. For reference tokens, this means running a token introspection scenario (See How-to 'Validating reference tokens'). For self-contained (JWT) tokens, this means validating the token (See How-to 'Validating self-contained tokens').\n\n3. Once the resource server has obtained the access token's metadata, it needs to check a few properties.\n \n    a. The resource server should check the validity of the access token. Validity is determined by checking the `valid` property when present.\n\n    b. The resource should check the client to which this token was issued (`client_id` or `azp`). _**Note that access tokens are often bearer tokens, which implies that anyone holding the token can use it. Nonetheless, this check is essential to avoid authorization weaknesses.**_\n\n    c. The resource server should check the audience (`aud`) property associated with the access token. If set, the audience must match the identifier of the resource server or API being accessed. _**Note that using the `aud` property is not required but is highly recommended for a secure deployment.**_\n\n    d. The resource server should check if the access token has the proper scopes. The resource server knows precisely which protected resource is being accessed, and which scope is required to do so. Therefore, it needs to match the expected scope to the set of scopes associated with the access token.\n\n4. Even if the access token is valid, the resource server still needs to perform authorization checks on the level of the resource owner before granting access to the protected resource. \n\n    a. The resource server should check that the user associated with the `sub` claim has permission to access the protected resource in question. \n\n5. The resource server should allow the users to revoke OAuth tokens that form trust relationships with linked applications.\n\n\n### Security considerations\n\nWhile technically not part of the OAuth 2.0 workflows, making authorization decisions using an access token is crucial in any OAuth 2.0 deployment. \n\nA token on its own should not be treated as the presence of the user. \n\n\n#### Accessing resources with identity tokens\n\nSome applications use the identity token to relay identity information from the client to the resource server. This is considered a bad practice and should be avoided. Identity tokens are intended to be consumed by the client. They relay information about the authentication of the user. Unlike access tokens, they are not built to access resources with fine-grained permissions.\n\nMore details can be found in [this article from Auth0](https://auth0.com/docs/api-auth/why-use-access-tokens-to-secure-apis).",
    "weakness_title_read_only": "Improper Access Control (Authorization)",
    "weakness_id_read_only": "P182",
    "weakness": "e488cdc5-3c91-4d2b-bcec-5c651b000d8b",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "requirements",
    "created": "2019-06-20T21:32:41.386000-04:00",
    "last_updated": "2023-03-13T10:24:19.481000-04:00",
    "custom": "False",
    "rules": "0fdceae7-767b-4367-9883-1542c41380d4;2b32d073-137d-4f31-9833-b3a0f9248a04",
    "rules_read_only": "A764;A763"
  },
  {
    "countermeasure_id": "T1891",
    "universal_id": "d8a61d6a-1d7c-4b40-830a-02662e4e8d33",
    "countermeasure_name": "Perform Privacy Impact Assessment (PIA)",
    "countermeasure_solution": "Follow these guidelines to perform a Privacy Impact Assessment (PIA):\n\n- In a Waterfall methodology:\n\n1. Define the project and scope. A PIA is typically performed on a project or application that will collect, process/use, store, or disclose[PI](/library/glossary/G8/). Perform a conceptual PIA during the early stages of the project or application to understand what PII is expected to be involved, what entities will participate (e.g., customers, suppliers, secondary applications), and the general architecture of the project. This step will inform what security and privacy requirements are expected to secure the PII and comply with the [Generally Accepted Privacy Principles (GAPP)](/library/glossary/G86/).\n2. Analyze PII data flows. Map all proposed processes and sub-processes related to PII. Identify clusters of PII data and create a detailed diagram of how the PII flows through the organization, as well as to third parties such as vendors,  as a result of the business activities in question. Map what controls are in place to secure all PII data and meet appropriate safeguarding principles, and where controls are lacking. Map who will have access to PII at each stage of the data flows, how PII will be disseminated, how and where the PII data will be backed-up, and how privacy requests and complaints will be handled by the organization.\n3. Identify privacy risks. Identify where PII could potentially leak, be accessed by unauthorized parties, lost, or corrupted.\n4. Report on PIA results. Create a documented evaluation of the privacy risks and their potential implications, as well as a discussion of possible actions to mitigate or remedy every risk identified.\n5. Later in the project lifecycle, update  the PIA at the appropriate lifecycle stages (development, implementation, production) to assess if the controls implemented are well designed and effective to meet the security and privacy requirements and update data flow mapping and safeguarding, as well as risk assessment.\n\n- In an Agile methodology:\n\nIf relying on Agile development methodologies, the PIA is conducted along with the Agile development process, by first identifying privacy requirements, and implementing them as requirements throughout each sprint. In this situation, embedding privacy knowledge with the development team is essential, either through allocating a privacy office representative to be part of the Agile development, or by training developers on privacy.",
    "weakness_title_read_only": "Lack of Privacy Impact Assessment (PIA)",
    "weakness_id_read_only": "P1435",
    "weakness": "600242df-fdc6-4eb0-94ba-4516e6b68170",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "activities",
    "created": "2019-06-25T17:56:24.532000-04:00",
    "last_updated": "2023-04-24T10:29:46.321000-04:00",
    "custom": "False",
    "rules": "a51f437c-40f4-4b75-a1d7-91767230872c;bba3a932-302b-415e-b24a-6fb715b2d7a1;68c64fac-a002-469d-8f74-872b0a3352c9;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1228;A1229;A1233;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233"
  },
  {
    "countermeasure_id": "T1892",
    "universal_id": "655d34f9-b3f9-4436-b6c8-d56b2de3beed",
    "countermeasure_name": "Perform a Threat and Risk Assessment (TRA)",
    "countermeasure_solution": "Follow these guidelines to perform a Threat and Risk Assessment (TRA):\n\n1. Ensure that senior management understands both the role of TRAs in support of security risk management, and their responsibilities for approving acceptable levels of residual risk. Clarify roles and responsibilities for the TRA, and identify explicitly the risk acceptance authority.\n2. Establish the scope for the TRA, related to the purpose of the assessment and the risk environment.\n3. Assemble a team with the knowledge and skills needed to collect essential information, analyze the data and recommend meaningful solutions to meet the business objectives of the organization. \n4. Identify the resources required, assign responsibilities and establish a realistic schedule for TRA activities.\n5. Review vulnerability reports and statistics for previous software to inform the security risk assessment.\n6. List all assets that fall within the scope of the assessment. Determine the level of impact that might reasonably be expected to arise in the event of a compromise to the confidentiality, availability or integrity of each asset. Assign asset values and prioritize the list of assets, ranked from the most valuable to the least.\n7. List all meaningful threats/risks that might affect assets within the scope of the assessment. Assess the probability of each threat/risk actually occurring, and determine the potential impact of each threat/risk. Assign threat/risk levels for each threat/risk based on their likelihood and impact. Produce a list of threats/risks ranked from the most serious to the least.\n8. List all relevant safeguards that fall within the scope of the assessment, in detail. Determine the effectiveness of these safeguards in mitigating potential threats/risks. Identify remaining vulnerabilities that expose assets to the identified threats/risks.\n9. Assess the effects of vulnerabilities on the likelihood of each threat/risk occurrence, the probability of compromise, and the severity of ensuing damage. Assign relative levels for each vulnerability based on the increased exposure to the compromise of confidentiality, availability or integrity. Produce a list of vulnerabilities ranked from the most serious to the least.\n10. Identify realistic safeguards that would mitigate all risks identified by addressing their associated vulnerabilities, and reduce them to an acceptable level.\n11. Present the TRA report to the risk acceptance authority with the findings and recommendations of the TRA project.",
    "weakness_title_read_only": "Lack of a process for identifying and assessing threats",
    "weakness_id_read_only": "P1187",
    "weakness": "f5cb4ac0-7383-4dc2-8f5d-90c95dfdc280",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "activities",
    "created": "2019-06-25T18:02:29.595000-04:00",
    "last_updated": "2023-05-17T11:43:37.117000-04:00",
    "custom": "False",
    "rules": "a51f437c-40f4-4b75-a1d7-91767230872c;bba3a932-302b-415e-b24a-6fb715b2d7a1;68c64fac-a002-469d-8f74-872b0a3352c9;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1228;A1229;A1233;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233"
  },
  {
    "countermeasure_id": "T1893",
    "universal_id": "f84d448c-96e5-43b5-8a48-9c40aeb2bbe3",
    "countermeasure_name": "Perform a cloud solution security posture assessment",
    "countermeasure_solution": "Follow these guidelines to perform a cloud solution security posture assessment:\n\n1. Evaluate what type of data will be stored in the cloud-based solution. Classify the data according to its importance to the business, and security risk. If a complete data or asset classification model is in place, list the security requirements for that type of data class. These requirements need to be translated into requirements for the cloud-based solution provider to comply.\n2. Request recent independent evaluations of the supplier's security controls around their cloud solution, such as a risk assessment, compliance audit report, or security attestation certificate. Use these sources as inputs for further assessing the current level of risk of the cloud-based solution.\n3. Perform a detailed risk assessment of the cloud-based solution using a Threat and Risk Assessment (TRA) methodology, or use a standard questionnaire of [cloud-based security controls](/library/glossary/G109/) to evaluate the solution's level of security.\n4. Identify all significant risks, gaps, and vulnerabilities. Rank then based on their likelihood of being exploited, and potential impact.\n5. Work with the supplier directly, or indirectly via the business or procurement function liaising with the supplier, to address all risks identified.\n6. Once all identified supplier risks have been mitigated to an acceptable level, establish [contract clauses](/library/glossary/G110/) to ensure that the supplier will maintain their current level of security (or better) over time, and inform the organization if a data breach is detected or suspected. \n7. Establish standard security clauses to be included in all future supplier or vendor agreements. \n8. Document all remaining and residual risks in a risk register, and ensure that they are signed off by a senior business manager. Monitor these risks and review them annually.\n\n__Note__: This countermeasure will not transition to 'Complete' unless its corresponding scan is completed with __zero 'High' and zero 'Critical' findings__.",
    "weakness_title_read_only": "Lack of cloud solution security posture assessment",
    "weakness_id_read_only": "P1436",
    "weakness": "150fe6d5-4d2f-428a-9057-97dc1f28514e",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "activities",
    "created": "2019-06-25T18:04:40.662000-04:00",
    "last_updated": "2023-04-20T02:48:17.148000-04:00",
    "custom": "False",
    "rules": "a51f437c-40f4-4b75-a1d7-91767230872c;bba3a932-302b-415e-b24a-6fb715b2d7a1;541a6527-47cc-4100-bb97-53b8b98c7948;2b5f47f2-88fd-484b-899a-023076dbce25;68c64fac-a002-469d-8f74-872b0a3352c9;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1228;A1229;A1230;A1231;A1233;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233"
  },
  {
    "countermeasure_id": "T1894",
    "universal_id": "61f0b9fa-8b94-4e23-bc42-81695a9df93a",
    "countermeasure_name": "Perform a vendor security assessment",
    "countermeasure_solution": "Follow these guidelines to perform a vendor security assessment:\n\n1. Evaluate what type of data will be accessed by the vendor. Classify the data according to its importance to the business, and security risk. If a complete data or asset classification model is in place, list the security requirements for that type of data class. These requirements need to be translated into requirements for the vendor to comply.\n2. Request recent independent evaluations of the vendor's security controls, such as a risk assessment, compliance audit report, or security attestation certificate. Use these sources as inputs for further assessment of the current level of the vendor's risk and its service or solution.\n3. Perform a risk assessment of vendor using a [standard vendor security questionnaire](/library/glossary/G111/) to evaluate the overall level of security and risk. If the risk is low or deemed acceptable, proceed with the vendor selection. If an unacceptable risk is identified or if you are unsure, perform a detailed risk assessment of the vendor solution using a Threat and Risk Assessment (TRA) methodology.\n4. Identify all significant risks, gaps, and vulnerabilities. Rank them based on their likelihood of being exploited, and potential impact.\n5. Work with the vendor directly, or indirectly via the business or procurement function liaising with the vendor, to address all risks identified.\n6. Once all identified risks have been mitigated to an acceptable level, establish [contract clauses](/library/glossary/G110/) to ensure that the vendor will maintain their current level of security (or better) over time, and inform the organization if a data breach is detected or suspected. \n7. Establish standard security clauses to be included in all supplier or vendor agreements. \n8. Document all remaining and residual risks in a risk register, and ensure that they are signed off by a senior business manager. Monitor these risks and review them annually.",
    "weakness_title_read_only": "Lack of vendor security assessment",
    "weakness_id_read_only": "P1437",
    "weakness": "34d62f67-74ed-48cd-9e01-4d718254b9b3",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "activities",
    "created": "2019-06-25T18:06:16.923000-04:00",
    "last_updated": "2023-05-15T16:27:17.583000-04:00",
    "custom": "False",
    "rules": "a51f437c-40f4-4b75-a1d7-91767230872c;bba3a932-302b-415e-b24a-6fb715b2d7a1;541a6527-47cc-4100-bb97-53b8b98c7948;2b5f47f2-88fd-484b-899a-023076dbce25;68c64fac-a002-469d-8f74-872b0a3352c9;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1228;A1229;A1230;A1231;A1233;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233"
  },
  {
    "countermeasure_id": "T1895",
    "universal_id": "1438fa65-6bc5-4123-ab90-3681ea581d53",
    "countermeasure_name": "Protect applications with Intrusion Detection / Protection System (IDS/IPS)",
    "countermeasure_solution": "Use the following guidelines for proper utilization of intrusion detection and prevention systems (IDPS):\n\n- Connect IDPS components through a network strictly designed for security software management (management network).\n- Implement IDPS components in a test environment first and perform tuning to prevent false positives\n- Secure IDPS components \n    - create separate accounts for each user and administrator of the IDPS \n    - configure firewalls, routers, and other packet filtering devices to limit direct access to all IDPS components to only those hosts that need such access. \n    - protect all IDPS management communications either through physical (e.g., management network) or logical (e.g., management VLAN) separation, or through encryption of communications. \n    - use strong authentication for remote access to IDPS components, such as two-factor authentication.\n- Maintain IDPS on an ongoing basis\n    - monitor IDPS components for operational and security issues \n    - periodically verify that IDPS is functioning properly \n    - perform regular vulnerability assessments \n    - receive notifications from vendors of security problems with IDPS components and respond appropriately to those notifications\n    - receive notifications from the IDPS vendor of updates, and perform testing and deployment of the updates. \n    - test software and signature updates before applying them",
    "weakness_title_read_only": "Applications not protected with Intrusion Detection / Protection System (IDS/IPS)",
    "weakness_id_read_only": "P1429",
    "weakness": "f9a308dc-3934-42f1-a5cf-ad895078d30c",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "activities",
    "created": "2019-06-25T18:47:03.261000-04:00",
    "last_updated": "2023-04-20T02:54:24.148000-04:00",
    "custom": "False",
    "rules": "a51f437c-40f4-4b75-a1d7-91767230872c;bba3a932-302b-415e-b24a-6fb715b2d7a1;541a6527-47cc-4100-bb97-53b8b98c7948;2b5f47f2-88fd-484b-899a-023076dbce25;68c64fac-a002-469d-8f74-872b0a3352c9;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1228;A1229;A1230;A1231;A1233;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233"
  },
  {
    "countermeasure_id": "T1897",
    "universal_id": "7e681ec6-393c-4f3e-8e59-133dc5181a1a",
    "countermeasure_name": "Encrypt SQS queue messages (AWS)",
    "countermeasure_solution": "SQS queues may contain sensitive data and should always be encrypted.  Encrypt the content of an SQS queue by using Server-Side Encryption. This feature utilizes AWS Key Management Service (KMS) Customer-Master Keys (CMK) to generate key material required for the encryption and decryption of SQS messages.",
    "weakness_title_read_only": "Cleartext Storage of Sensitive Information without Access Control Mechanisms",
    "weakness_id_read_only": "P209",
    "weakness": "a9791a66-ddfd-4094-a953-31af2064161d",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2019-06-27T09:40:04.421000-04:00",
    "last_updated": "2021-06-25T14:47:49.039000-04:00",
    "custom": "False",
    "rules": "12e06b7f-76a7-4e7a-8ca2-1735f8c1838d",
    "rules_read_only": "A1227"
  },
  {
    "countermeasure_id": "T1898",
    "universal_id": "1bc59e0d-0427-4f29-a2a5-ece322813920",
    "countermeasure_name": "Verify that SQS queue messages are encrypted (AWS)",
    "countermeasure_solution": "Perform the following to determine if SQS queues are encrypted:\n \n 1. Login to the AWS SQS Management Dashboard at [https://console.sqs.amazon.com/sqs/home](https://console.aws.amazon.com/sqs/home). \n 2. Select the SQS queue to be examined.\n 3. Select the Encryption tab from the bottom panel.\n 4. If SQS Server-Side Encryption is disabled a message stating \"Server-side encryption (SSE) is disabled.\" will appear and this test fails.",
    "weakness_title_read_only": "Cleartext Storage of Sensitive Information without Access Control Mechanisms",
    "weakness_id_read_only": "P209",
    "weakness": "a9791a66-ddfd-4094-a953-31af2064161d",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2019-06-27T10:21:10.259000-04:00",
    "last_updated": "2021-06-25T14:47:45.233000-04:00",
    "custom": "False",
    "rules": "12e06b7f-76a7-4e7a-8ca2-1735f8c1838d",
    "rules_read_only": "A1227"
  },
  {
    "countermeasure_id": "T1899",
    "universal_id": "930c6839-bc15-44b3-b0bd-ad8341b5d57e",
    "countermeasure_name": "Do not allow unauthorized access to SQS queues (AWS)",
    "countermeasure_solution": "Do not provide access to SQS queues to untrusted accounts or anonymous users.\n\nSQS offers administrators the ability to configure access from other AWS accounts as part of the SQS permission model. It is important to audit the accounts which have access to an SQS queue to ensure they are trusted.\n\nIt is also possible to configure SQS queues to be publically accessible. Allowing anonymous users to perform destructive actions such as deleting or sending unwanted messages, which should be avoided.",
    "weakness_title_read_only": "Improper Access Control (Authorization)",
    "weakness_id_read_only": "P182",
    "weakness": "e488cdc5-3c91-4d2b-bcec-5c651b000d8b",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2019-06-27T10:32:24.021000-04:00",
    "last_updated": "2021-06-25T14:47:49.376000-04:00",
    "custom": "False",
    "rules": "12e06b7f-76a7-4e7a-8ca2-1735f8c1838d",
    "rules_read_only": "A1227"
  },
  {
    "countermeasure_id": "T1900",
    "universal_id": "08a85347-8105-4c89-8df2-be0ac514f96f",
    "countermeasure_name": "Verify that SQS queues are only accessible from trusted AWS accounts (AWS)",
    "countermeasure_solution": "Perform the following to determine if SQS queues are only accessible from trusted AWS accounts:\n \n1. Login to the AWS SQS Management Dashboard at [https://console.sqs.amazon.com/sqs/home](https://console.aws.amazon.com/sqs/home). \n2. Select the SQS queue to be examined.\n3. In the bottom panel, select Permissions.\n4. Examine the permissions associated with the SQS queue looking for the following:\n    - Under the Principals column, if any permissions allow access from an additional AWS account, cross-reference that AWS account ID to ensure it is trusted.\n    - The format for an AWS account Principal is: `arn:aws:iam:12345678910` where the numeric portion of the `arn` is the AWS account ID that has access to the SQS queue in question.\n4. Examine the permissions associated with the SQS queue looking for the following:\n    - If no custom policies are created, only the queue owner will have access to the SQS queue.\n    - If custom policies are defined, ensure the element under the Principal column of the display is not set to Everybody (*) for any of the policies.",
    "weakness_title_read_only": "Improper Access Control (Authorization)",
    "weakness_id_read_only": "P182",
    "weakness": "e488cdc5-3c91-4d2b-bcec-5c651b000d8b",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2019-06-27T10:43:21.789000-04:00",
    "last_updated": "2021-06-25T14:47:49.564000-04:00",
    "custom": "False",
    "rules": "12e06b7f-76a7-4e7a-8ca2-1735f8c1838d",
    "rules_read_only": "A1227"
  },
  {
    "countermeasure_id": "T1901",
    "universal_id": "6bf648de-6320-476b-a321-34482f13746f",
    "countermeasure_name": "Use IAM policies for managing access to SQS resources (AWS)",
    "countermeasure_solution": "Always utilize IAM to determine who is allowed to create, describe, modify, and delete SQS queues, tag resources, or modify security groups.\n\nFor more information on building IAM policies for SQS visit the AWS documentation found at [https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-using-identity-based-policies.html](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-using-identity-based-policies.html)",
    "weakness_title_read_only": "Improper Access Control (Authorization)",
    "weakness_id_read_only": "P182",
    "weakness": "e488cdc5-3c91-4d2b-bcec-5c651b000d8b",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2019-06-27T17:43:11.861000-04:00",
    "last_updated": "2021-11-17T12:38:58.002000-05:00",
    "custom": "False",
    "rules": "12e06b7f-76a7-4e7a-8ca2-1735f8c1838d",
    "rules_read_only": "A1227"
  },
  {
    "countermeasure_id": "T1902",
    "universal_id": "4ce9f999-bb32-4daa-89a9-9a1e0c40ba94",
    "countermeasure_name": "Verify that SQS queues have IAM Policies attached (AWS)",
    "countermeasure_solution": "Perform the following to determine if the account is configured as required:\n  \n 1. Login to the AWS IAM Management Dashboard at [https://console.aws.amazon.com/iam/home](https://console.aws.amazon.com/iam/home).\n 2. Using the IAM Users, Groups, and Policies pages, ensure all users and groups who have access to SQS through IAM policies are appropriately scoped.",
    "weakness_title_read_only": "Improper Access Control (Authorization)",
    "weakness_id_read_only": "P182",
    "weakness": "e488cdc5-3c91-4d2b-bcec-5c651b000d8b",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2019-06-27T17:46:29.432000-04:00",
    "last_updated": "2021-06-25T14:47:46.641000-04:00",
    "custom": "False",
    "rules": "12e06b7f-76a7-4e7a-8ca2-1735f8c1838d",
    "rules_read_only": "A1227"
  },
  {
    "countermeasure_id": "T1903",
    "universal_id": "941eb786-4b6a-4f92-8e38-4d8cc7bece30",
    "countermeasure_name": "Enforce Network ACLs for RDS (AWS)",
    "countermeasure_solution": "Use network ACLs in order to apply a layer of network segmentation at the subnet level. By using Network ACLs in AWS, RDS instances within a VPC can have a well-defined network perimeter that contains assets with a similar trust level.",
    "weakness_title_read_only": "Publicly accessible RDS Databases (AWS)",
    "weakness_id_read_only": "P897",
    "weakness": "d9bd715b-7fb6-4059-8834-a137311d4515",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2019-06-27T17:56:56.813000-04:00",
    "last_updated": "2021-06-25T14:47:49.683000-04:00",
    "custom": "False",
    "rules": "b75a5418-87d7-4e69-b069-7ad2b217b539",
    "rules_read_only": "A1165"
  },
  {
    "countermeasure_id": "T1904",
    "universal_id": "8bbe5129-039c-409c-ba43-2426f9c5ee0c",
    "countermeasure_name": "Encrypt data stored in RDS at rest (AWS)",
    "countermeasure_solution": "Always utilize strong encryption mechanisms on RDS instances which handle data that is sensitive in nature. RDS encryption is easy to enable within the AWS console and offers the ability to encrypt the data stored on the RDS instance's underlying storage filesystem, automated backups, and snapshots. RDS encryption is performed using AES-256 and are protected by the AWS Key Management System (KMS). \n \nUtilize KMS Customer-Managed Keys when possible to give you full control over who can use the keys to access the encrypted data on KMS instances.",
    "weakness_title_read_only": "Relational Database Service Misconfigured (AWS)",
    "weakness_id_read_only": "P866",
    "weakness": "04f942b6-187b-4ad6-978b-a094e4acf94f",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2019-06-27T18:26:24.278000-04:00",
    "last_updated": "2021-06-25T14:47:35.901000-04:00",
    "custom": "False",
    "rules": "b75a5418-87d7-4e69-b069-7ad2b217b539",
    "rules_read_only": "A1165"
  },
  {
    "countermeasure_id": "T1905",
    "universal_id": "ba00385e-bd21-4a71-8e8d-f1155ba2d0bf",
    "countermeasure_name": "Verify whether data at rest in RDS is encrypted (AWS)",
    "countermeasure_solution": "Perform the following to determine if data is encrypted at rest in RDS:\n \n  __Ensure RDS Databases are Encrypted at Rest__ \n \n 1. Login to the AWS RDS Management Dashboard at [https://console.aws.amazon.com/rds/home](https://console.aws.amazon.com/rds/home). \n 2. In the navigation pane on the left, click Databases. \n 3. Choose the desired database. \n 4. Click the Configuration tab in the overview pane.\n 5. Inspect the value under Storage -> Encryption. If the value reads Not Enabled, this means that the RDS database is not encrypted and the configuration should be changed.\n \n __RDS Databases should be Encrypted using Customer-Managed Keys__ \n \n 1. Login to the AWS RDS Management Dashboard at [https://console.aws.amazon.com/rds/home](https://console.aws.amazon.com/rds/home). \n 2. In the navigation pane on the left, click Databases. \n 3. Choose the desired database. \n 4. Click the Configuration tab in the overview pane\n 5. Inspect the value under Storage -> Encryption. It should read Enabled.\n 6. If encryption is enabled, inspect the value for Aliases. If Aliases is labeled as aws/rds the RDS instances is encrypted using the default AWS key instead of your own KMS Customer-Managed Key and should be changed.",
    "weakness_title_read_only": "Relational Database Service Misconfigured (AWS)",
    "weakness_id_read_only": "P866",
    "weakness": "04f942b6-187b-4ad6-978b-a094e4acf94f",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2019-06-27T18:29:21.022000-04:00",
    "last_updated": "2021-06-25T14:47:36.169000-04:00",
    "custom": "False",
    "rules": "b75a5418-87d7-4e69-b069-7ad2b217b539",
    "rules_read_only": "A1165"
  },
  {
    "countermeasure_id": "T1906",
    "universal_id": "bb19b0ee-c320-4162-953f-91fce2f09522",
    "countermeasure_name": "Enforce authentication on your relational database services (AWS)",
    "countermeasure_solution": "Enable authentication for every database to control who is allowed to access the database itself. There are several options for configuring authentication to RDS databases:\n \n_IAM Authentication_\n \n You can set up authentication by using IAM integration if you're using Amazon Aurora with MySQL or PostgreSQL compatibility or RDS for MySQL or PostgreSQL. This should be set up during the launch of a new database. \n \n _Database Engine Authentication_\n\n Depending on which database engine you are using on RDS, you can always set up authentication using the built-in and supported mechanism for your particular database engine. \n \n When using this approach, it is best practice to never hardcode this database password (also known as a secret). Instead, use AWS Secrets Manager for database password rotation and application access to the password. This prevents the secret from being hard-coded within the application source code or configuration code.",
    "weakness_title_read_only": "Improper authentication on your database engine",
    "weakness_id_read_only": "P1430",
    "weakness": "66b8363d-11cc-4c1d-9f7e-132bc4d8f170",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2019-06-28T14:50:51.176000-04:00",
    "last_updated": "2023-03-07T10:32:43.345000-05:00",
    "custom": "False",
    "rules": "b75a5418-87d7-4e69-b069-7ad2b217b539",
    "rules_read_only": "A1165"
  },
  {
    "countermeasure_id": "T1907",
    "universal_id": "f76bf9ae-e2f0-467c-a5b1-3b2fd49193e9",
    "countermeasure_name": "Verify whether IAM authentication is enabled for RDS databases (AWS)",
    "countermeasure_solution": "Follow the steps below to verify whether IAM Authentication is enabled for RDS Databases:\n\n1. Login to the AWS RDS Management Dashboard at [https://console.aws.amazon.com/rds/home](https://console.aws.amazon.com/rds/home). \n 2. In the left navigation pane, under Amazon RDS, click Instances.\n 3. Choose the instance you would like to examine and click the resource name in the DB instance column.\n 4. Within the Details panel under Configurations, check the IAM DB Authentication Enabled Configured attribute value. If it is set to No this means that the IAM DB Authentication feature is not in use. \n \n \n For more details on connecting RDS with IAM visit the AWS blog post [https://aws.amazon.com/blogs/database/use-iam-authentication-to-connect-with-sql-workbenchj-to-amazon-aurora-mysql-or-amazon-rds-for-mysql/](https://aws.amazon.com/blogs/database/use-iam-authentication-to-connect-with-sql-workbenchj-to-amazon-aurora-mysql-or-amazon-rds-for-mysql/)",
    "weakness_title_read_only": "Improper authentication on your database engine",
    "weakness_id_read_only": "P1430",
    "weakness": "66b8363d-11cc-4c1d-9f7e-132bc4d8f170",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2019-07-02T13:59:26.013000-04:00",
    "last_updated": "2021-06-25T14:47:42.199000-04:00",
    "custom": "False",
    "rules": "b75a5418-87d7-4e69-b069-7ad2b217b539",
    "rules_read_only": "A1165"
  },
  {
    "countermeasure_id": "T1909",
    "universal_id": "e5cba35b-e808-4e29-bc81-3d0d9468cdb2",
    "countermeasure_name": "Change the RDS default master username (AWS)",
    "countermeasure_solution": "RDS databases may be configured with the user `awsuser` as the master username by default which is often used in brute-force attacks against databases. Change this username to something unique.",
    "weakness_title_read_only": "Publicly accessible RDS Databases (AWS)",
    "weakness_id_read_only": "P897",
    "weakness": "d9bd715b-7fb6-4059-8834-a137311d4515",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2019-07-02T22:15:36.233000-04:00",
    "last_updated": "2021-06-25T14:47:45.553000-04:00",
    "custom": "False",
    "rules": "b75a5418-87d7-4e69-b069-7ad2b217b539",
    "rules_read_only": "A1165"
  },
  {
    "countermeasure_id": "T1910",
    "universal_id": "8574cbbb-0e33-4ed0-a463-bc82db55600c",
    "countermeasure_name": "Verify whether the default master username is changed (AWS)",
    "countermeasure_solution": "Perform the following to determine if the default master username is changed:\n \n 1. Login to the RDS Management Dashboard at [https://console.aws.amazon.com/rds](https://console.aws.amazon.com/rds). \n 2. In the left navigation panel, under RDS Dashboard, click Instances and select the appropriate RDS instance.\n 3. Click Instance Actions from the top menu and then click See Details\n 4. In the Configuration Details section, example the Username value and ensure it is not set to `awsuser`.",
    "weakness_title_read_only": "Publicly accessible RDS Databases (AWS)",
    "weakness_id_read_only": "P897",
    "weakness": "d9bd715b-7fb6-4059-8834-a137311d4515",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2019-07-02T22:18:33.225000-04:00",
    "last_updated": "2021-06-25T14:47:49.322000-04:00",
    "custom": "False",
    "rules": "b75a5418-87d7-4e69-b069-7ad2b217b539",
    "rules_read_only": "A1165"
  },
  {
    "countermeasure_id": "T1911",
    "universal_id": "2676cdc6-f5cd-45ce-9d6e-d776cab1d0a4",
    "countermeasure_name": "Use IAM policies for managing access to RDS database instances (AWS)",
    "countermeasure_solution": "Always utilize IAM to determine who is allowed to create, describe, modify, and delete RDS DB instances, tag resources, or modify security groups.",
    "weakness_title_read_only": "Publicly accessible RDS Databases (AWS)",
    "weakness_id_read_only": "P897",
    "weakness": "d9bd715b-7fb6-4059-8834-a137311d4515",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2019-07-02T22:23:20.399000-04:00",
    "last_updated": "2021-11-17T12:52:28.819000-05:00",
    "custom": "False",
    "rules": "b75a5418-87d7-4e69-b069-7ad2b217b539",
    "rules_read_only": "A1165"
  },
  {
    "countermeasure_id": "T1912",
    "universal_id": "2ec9c0bd-39ec-4925-8e0b-2059382baf2c",
    "countermeasure_name": "Verify that RDS databases have IAM policies attached (AWS)",
    "countermeasure_solution": "Perform the following to determine if the account is configured as required:\n \n 1. Login to the AWS IAM Management Dashboard at [https://console.aws.amazon.com/iam/home](https://console.aws.amazon.com/iam/home).\n 2. Using the IAM Users, Groups, and Policies pages, ensure all users and groups who have access to RDS through IAM policies are appropriately scoped\n \n For more information on building IAM policies for RDS visit the AWS documentation found at [https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAM.AccessControl.IdentityBased.html](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAM.AccessControl.IdentityBased.html)",
    "weakness_title_read_only": "Publicly accessible RDS Databases (AWS)",
    "weakness_id_read_only": "P897",
    "weakness": "d9bd715b-7fb6-4059-8834-a137311d4515",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2019-07-02T22:26:21.056000-04:00",
    "last_updated": "2021-06-25T14:47:44.930000-04:00",
    "custom": "False",
    "rules": "b75a5418-87d7-4e69-b069-7ad2b217b539",
    "rules_read_only": "A1165"
  },
  {
    "countermeasure_id": "T1915",
    "universal_id": "445fd3b1-42cd-4214-93f0-5ce253e74faf",
    "countermeasure_name": "Perform network vulnerability assessment",
    "countermeasure_solution": "Use the following guidelines for establishing effective vulnerability assessment practices:\n\n- Implement vulnerability scanning tools that are capable of constantly updating newly discovered vulnerabilities to be scanned\n- Develop and document vulnerability scanning process and activities including but not limited to:\n    - Criteria for selecting vulnerability scanning targets and frequencies\n    - Identification of severity levels based on asset criticality\n    - Vulnerabilities that require remediation\n    - Functions, ports, protocols that should not be accessible to users or devices\n    - Improperly configured or incorrectly operating information flow control mechanisms\n- Follow change management processes for vulnerability scanning activities\n- Scan for vulnerabilities in the information system and hosted applications\n- Analyze vulnerability scan reports and remove false positive vulnerability findings \n- Develop vulnerability reporting templates and share information obtained from the vulnerability scanning process with appropriate personnel \n- Correlate vulnerability scanning information to determine the presence of multi-vulnerability / multi-hop attack vectors.\n- Prioritize vulnerability remediation activities and remediate legitimate vulnerabilities in accordance with risk assessment process\n- Employ automated mechanisms to compare the results of vulnerability scans over time to determine trends in information system vulnerabilities\n\n__Notes:__\n\n- This countermeasure will not transition to 'Complete' unless its corresponding scan is completed with __zero 'High' and zero 'Critical' findings__.\n- In addition, if this task is transitioned to 'Complete', it will __reopen if a scan has not been run with its results imported into SD Elements within its predefined time threshold__.",
    "weakness_title_read_only": "Lack of network vulnerability assessment",
    "weakness_id_read_only": "P1438",
    "weakness": "3f87caac-83d4-4792-968c-8fb15ccb439b",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "activities",
    "created": "2019-07-04T11:47:29.673000-04:00",
    "last_updated": "2023-04-19T23:34:21.504000-04:00",
    "custom": "False",
    "rules": "a51f437c-40f4-4b75-a1d7-91767230872c;bba3a932-302b-415e-b24a-6fb715b2d7a1;541a6527-47cc-4100-bb97-53b8b98c7948;2b5f47f2-88fd-484b-899a-023076dbce25;68c64fac-a002-469d-8f74-872b0a3352c9;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1228;A1229;A1230;A1231;A1233;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233"
  },
  {
    "countermeasure_id": "T1917",
    "universal_id": "e0a1a6e1-a77a-42a9-a808-622b5441ca9d",
    "countermeasure_name": "Perform container security assessment",
    "countermeasure_solution": "Use the following guidelines for performing container security assessment\n\n- Choose minimal base images to reduce attack surface of the container\n- Create a dedicated user and group on the image, with minimal permissions to run the application\n- Sign and verify images to mitigate Man in The Middle attacks\n- Scan images for known vulnerabilities \n- Harden container images, daemons, and the host environment\n- Create separate virtual networks for the containers to segregate them by data sensitivity\n- Do not store secrets in containers\n- Ensure that containers are stateless and immutable\n- Do not run container processes as *Root*\n- Monitor the user activity around container ecosystem \n- Configure resource quotas on a per-container basis\n- Capture host and container logs",
    "weakness_title_read_only": "Lack of container security assessment",
    "weakness_id_read_only": "P1439",
    "weakness": "6999a37f-7a28-4966-aebe-3faacbfb98d5",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "requirements",
    "created": "2019-07-04T11:51:17.952000-04:00",
    "last_updated": "2023-04-19T22:53:42.625000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1918",
    "universal_id": "1992cfa6-6ce5-494c-9e8c-5e3f8e3548a2",
    "countermeasure_name": "Integrate with SSO",
    "countermeasure_solution": "Use the following guidelines for secure Single Sign-On (SSO) integrations:\n\n- Verify that the identity directory is accurate\n- Use modern authentication protocols\n- Secure all the components of the SSO system\n- Require Multi-Factor Authentication (MFA)\n- Enforce session timeouts\n- Enforce frequent password changes\n- Put restrictions on the devices with which a user can leverage SSO",
    "weakness_title_read_only": "Weakness in SSO or federated authentication",
    "weakness_id_read_only": "P727",
    "weakness": "b51a0a4e-0812-4030-90fc-ab706278661d",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "requirements",
    "created": "2019-07-04T11:53:30.646000-04:00",
    "last_updated": "2023-04-19T22:54:44.831000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1919",
    "universal_id": "a909c1ad-76fd-4a7c-a43d-d16a32526d3d",
    "countermeasure_name": "Use JSON Web Token (JWT) securely",
    "countermeasure_solution": "Secure [JSON Web Token (JWT)](/library/glossary/G112/) with JavaScript Object Signing and Encryption  (JOSE). Use proper JOSE cryptographic function that serves your purpose:\n\n- **HMAC** (Hashed Message Authentication Code): is an efficient hash that requires a **secret key** and provides authenticity as well as integrity.\n- **Digital Signature**: is similar to HMAC but also adds cryptographic non-repudiation. It requires a **public/private key pair**, where the private key is used by the signer to create the signature and the public key is used by others to check if the signature is valid.\n- **Authenticated Encryption**: adds confidentiality requirements to JWT as well as the authenticity and integrity requirements (just like HMAC). JOSE supports **public/private key**, **secret key** as well as **password-based** encryptions\n\nPerform the following best practices with respect to each of the cryptographic functions:\n\n## HMAC\nUse HMAC with `HS256`, `HS384`, or `HS512` [JOSE algorithms](https://tools.ietf.org/html/rfc7518) for securing (preserving the authenticity and the integrity of) tokens and stateless session cookies. HMAC is different from digital signatures as it uses a shared secret key for its computation, which is usually shared out-of-band. Sharing the secret key used for HMAC will give the ability to the other party to create HMAC hash using the same key, which annuls the non-repudiation.\n\n## Digital Signatures\nUse digital signatures ([JSON Web Signature](https://tools.ietf.org/html/rfc7515)) where the authenticity and integrity of the claims must be verifiable by other parties and non-repudiations is important (i.e. no other party could have created the same digital signature but the one who posses the corresponding private key). Example use cases of JWT with digital signatures include identity tokens created by an OpenID provider, where the relying party must be able to verify the signature of the provider to make sure it is in fact issued by that provider. Another example is the access tokens issued by OAuth 2.0 server, where the resource server and/or the web API must be able to verify the signature before serving the request.\n\nDigital signatures use public key (asymmetric) cryptography. The party generating the signature uses its private key to create it. Other parties use the public key of the generating party to verify the digital signature. As mentioned above, OpenID Connect servers use digital signatures for the JWT tokens. They also publish their public keys in a known URL in [JSON Web Key (JWK)](https://tools.ietf.org/html/rfc7517) format.\n\nChoose the best [algorithm](https://tools.ietf.org/html/rfc7518) that suits your use-case:\n\n- `RS256` and above (with 2048 or more key length) are based on **[RSA PKCS #1](https://tools.ietf.org/html/rfc8017)** and are widely used. They use little CPU cycles and are relatively fast to verify.\n- `ES256` and above are based on **Elliptic Curve** cryptography, where you want to save in the space as opposed to time. Their keys and resulting signatures are much smaller than those of RSA-based ones but it takes longer to verify them.\n- `Ed25519` and `Ed448` are based on **Edwards-curve DSA** cryptography and offer the best performance of signing and verifying among all algorithms. They are fairly new and may not be supported across the board.\n\n## Authenticated Encryption\nUse encryption when the confidentiality of claims needs to be protected. The examples are: the claims that contain Personally Identifiable data; ID tokens (OpenID Connect); and self-contained access tokens (OAuth 2.0). In this mode, the JWT payload would be encrypted using AES Algorithm and a secret AES key (also known as **Content Encryption Key - CEK**). The length of CEK depends on *enc* (encryption method) header (A128GCM, A192GCM, A256GCM, etc.).\n\nCEK itself can be created and managed in different ways (specified by *alg* JWE header parameter):\n\n- **[Direct Encryption with a Shared Symmetric Key (CEK)](https://tools.ietf.org/html/rfc7518#section-4.5)**:\n\n    If the claims are internally consumed or the **secret key** has been shared out-of-band among the trusted parties, the shared secret key then can be directly used as CEK as follows:\n\n    - Use *dir* (direct) as *alg* header (`alg: \"dir\"`).\n    - An empty octet sequence is used as **JWE Encrypted Key** value.\n\n- **[Key (CEK) wrapping using Secret/Private Key (Symmetric) cryptography (AES GCM)](https://tools.ietf.org/html/rfc7518#section-4.7)** and [Key Agreement with Elliptic Curve Diffie-Hellman Ephemeral Static (ECDH-ES)](https://tools.ietf.org/html/rfc7518#section-4.6):\n\n    In this method, ECDH-ES algorithm is used for agreement on a key-encrypting key and the resulting key is used for encrypting CEK:\n\n    - Use `alg: \"ECDH-ES+A128KW\"` or `alg: \"ECDH-ES+A192KW\"` or `alg: \"ECDH-ES+A256KW\"`.\n    - **JWE Encrypted Key** value would be the encrypted value of CEK.\n\n    The resulting key from ECDH can also be used directly as CEK if you put `alg: \"ECDH-ES\"` (similar to the previous point).\n\n    For more details refer to [Key Agreement with Elliptic Curve Diffie-Hellman Ephemeral Static (ECDH-ES)](https://tools.ietf.org/html/rfc8037#section-3.2).\n\n- **Key (CEK) encryption using Public Key (Asymmetric) cryptography**:\n\n    This can be used when JWT sender and receiver have their own public/private keys. For example, OpenID providers usually share their public key (in [JWK format](https://tools.ietf.org/html/rfc7517)) at a public URL. They can then encrypt the CEK with their private key. The receiver, on the other hand, decrypts it with the OpenID provider's public key. \n\n    - Use `alg: \"RSA1_5\"` for encrypting CEK with [RSAES-PKCS1-v1_5](https://tools.ietf.org/html/rfc7518#section-4.2) or `alg: \"RSA-OAEP-256\"` for encrypting CEK with [RSAES using Optimal Asymmetric Encryption Padding (OAEP)](https://tools.ietf.org/html/rfc7518#section-4.3).\n    - A key of size 2048 bits or larger MUST be used with these algorithms.\n\n- **[Key (CEK) encryption using Password-based (PBES) cryptography](https://tools.ietf.org/html/rfc7518#section-4.8)**:\n\n    This method is used whenever you want to use a passphrase or password to encrypt the JWT data. At first, a key-encryption key is derived from a user-supplied password using PBES2 schemes. Then the JWE CEK is encrypted using the derived key.\n\n    - Use `alg: \"PBES2-HS256+A128KW\"` or `alg: \"PBES2-HS384+A192KW\"` or `alg: \"PBES2-HS512+A256KW\"` .",
    "weakness_title_read_only": "Insecure use of JSON Web Token (JWT)",
    "weakness_id_read_only": "P1431",
    "weakness": "5b2389ee-41cb-4993-8cd3-c867521e1819",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "development",
    "created": "2019-07-08T10:25:07.490000-04:00",
    "last_updated": "2021-06-25T14:47:44.470000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1920",
    "universal_id": "6bacbaaf-36c0-4672-83f8-9e4e4126ed02",
    "countermeasure_name": "Conduct security architecture and design reviews before starting code development",
    "countermeasure_solution": "Use the following guidelines for establishing effective security architecture and design reviews:\nUse a defense in-depth approach to design the security architecture of the information and information systems.\n\n- Define security-relevant hardware, software, firmware, and common security services\n- Develop a top-level conceptual security architecture for the business risk, including information, access control, incident response, and application security.\n- Define physical architecture and map with conceptual security architecture covering platform, hardware, network, file, database, and server security\n- Develop component architecture and map with physical architecture complying with security standards.\n- Define operational security architecture covering configuration, patch management, logging, monitoring, change management, and security testing\n- Ensure the formal top-level security architecture and design specifications are consistent with the information security policy, standards, and procedures.",
    "weakness_title_read_only": "Lack of security architecture and design activities",
    "weakness_id_read_only": "P1432",
    "weakness": "f5ac5027-ca35-4961-97a8-3ee88cd8e2c9",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "activities",
    "created": "2019-07-10T12:10:28.160000-04:00",
    "last_updated": "2023-04-19T23:33:05.511000-04:00",
    "custom": "False",
    "rules": "a51f437c-40f4-4b75-a1d7-91767230872c;bba3a932-302b-415e-b24a-6fb715b2d7a1;541a6527-47cc-4100-bb97-53b8b98c7948;2b5f47f2-88fd-484b-899a-023076dbce25;68c64fac-a002-469d-8f74-872b0a3352c9;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1228;A1229;A1230;A1231;A1233;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233"
  },
  {
    "countermeasure_id": "T1921",
    "universal_id": "cae5fc39-751f-4644-8a63-b94707a76d4f",
    "countermeasure_name": "Track and manage usage of third-party and commercial off the shelf (COTS) hardware or software",
    "countermeasure_solution": "Use the following guidelines to properly integrate third-party and commercial off the shelf (COTS) hardware or software components and solutions:\n\n- Acquire components from reputable sources, check firmware signatures, and verify signed file hashes (digital signatures) to ensure the hardware and software are not modified;\n- Conduct risk assessments and threat modeling (architecture review) for all solutions involving a third-party component;\n- Follow the principle of least privilege in providing third-party components access to internal resources;\n- Monitor (log and audit) the communication of components in isolation to ensure that they do not exhibit suspicious behavior.\n- Follow upgrade recommendations for newer versions, especially when a security flaw is reported. Only update from known sources after checking the software/firmware signature;\n- Securely configure third-party components, avoid using pre-configured defaults, and disable all unnecessary accounts and features. Unnecessary components include unused storage capacities, sensors, communication ports, transmitters, emailing capabilities, and messaging capabilities;\n- Create a list of all components that document the component ID, vendor, revision level, capabilities, and security risks. Update this list regularly.\n- Follow [open-source component controls](/library/glossary/G69/) for proper management of open-source components.\n- If you are integrating third-party services into your application, follow these steps:\n    - Authenticate the third-party services and use only secure channels for communication.\n    - Securely remove integrations that are no longer needed.\n\n__Notes:__\n\n- This countermeasure will not transition to 'Complete' unless its corresponding scan is completed with __zero 'High' and zero 'Critical' findings__.\n- In addition, if this countermeasure is transitioned to 'Complete', it will __reopen if a scan has not been run with its results imported into SD Elements within its predefined time threshold__.",
    "weakness_title_read_only": "Lack of third-party software code or dependencies management",
    "weakness_id_read_only": "P1433",
    "weakness": "a6c187e6-87e2-4667-9a9c-b7a33c218533",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "activities",
    "created": "2019-07-10T12:17:23.589000-04:00",
    "last_updated": "2023-04-19T23:31:34.930000-04:00",
    "custom": "False",
    "rules": "a51f437c-40f4-4b75-a1d7-91767230872c;bba3a932-302b-415e-b24a-6fb715b2d7a1;541a6527-47cc-4100-bb97-53b8b98c7948;2b5f47f2-88fd-484b-899a-023076dbce25;68c64fac-a002-469d-8f74-872b0a3352c9;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1228;A1229;A1230;A1231;A1233;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233"
  },
  {
    "countermeasure_id": "T1922",
    "universal_id": "a3f163ff-6068-46c3-9a16-2a80c962eae0",
    "countermeasure_name": "Use secure OAuth 2.0 and OpenID Connect integration (where applicable)",
    "countermeasure_solution": "OAuth 2.0 and OIDC have become standard protocols for implementing authentication and authorization in web, mobile, and native applications. This countermeasure helps you decide whether OAuth 2.0 and/or OpenID Connect (OIDC) are the right choice for your application. In the section below, you can find a bit of context about the features offered by OAuth 2.0 and OIDC. \n\nThe steps outlined here help you decide whether OAuth 2.0 or OIDC is the right fit for your scenario:\n\n* OAuth 2.0 is the right choice if the answer to one or more of these questions is **yes**:\n    * Does your backend application need to access other services on behalf of the user? (E.g., performing an operation on behalf of the user at a scheduled time)\n    * Does your frontend application need to access various APIs across your organization?\n    * Do you have a diverse set of applications that need to access several services?\n    * Do you have an application landscape that cannot handle traditional user sessions?\n\n* OIDC is the right choice if the answer to one or more of these questions is **yes**:\n    * Do you want to offload authentication to a dedicated service?\n    * Do you want to integrate social login features?\n    * Do you want to centralize user accounts for accessing multiple services?\n    * Do you want to offer a Single Sign-On (SSO) experience?\n\n\n\n### Implementation guidelines\n\nThe following guidelines offer more information on the integration and implementation of OAuth 2.0 and OIDC:\n\n1. Overview and applicability\n    * Additional Requirements of this countermeasure: 'The purpose of OAuth 2.0'\n    *  [Countermeasure 1887](/library/tasks/T1887/): 'Decide on the right OAuth 2.0 flow for your application'\n    * Additional Requirements of this countermeasure: 'The purpose of OIDC'\n    * [Countermeasure 1888](/library/tasks/T1888/): 'Decide on the right OIDC flow for your application'\n\n1. OAuth 2.0 implementation details\n    * Additional Requirements of [Countermeasure 1887](/library/tasks/T1887/):  'Understanding the Authorization Code Grant flow with PKCE'\n    * How-to of [Countermeasure 1887](/library/tasks/T1887/): 'Implementing the Authorization Code Grant flow with PKCE'\n    * Additional Requirements of [Countermeasure 1887](/library/tasks/T1887/): 'Understanding the Client Credentials flow'\n    * How-to of [Countermeasure 1887](/library/tasks/T1887/): 'Implementing the Client Credentials flow'\n    * [Countermeasure 1887](/library/tasks/T1887/): 'Implement OAuth 2.0 securely on the resource server'\n    * How-to of [Countermeasure 1890](/library/tasks/T1890/): 'Validating reference tokens'\n    * How-to of [Countermeasure 1890](/library/tasks/T1890/):'Validating self-contained tokens'\n    * Additional Requirements of [Countermeasure 1890](/library/tasks/T1890/): 'Using scopes as permissions'\n\n1. OIDC implementation details\n    * How-to of [Countermeasure 1888](/library/tasks/T1888/): 'Augmenting OAuth 2.0 flows with OIDC properties'\n    * How-to of [Countermeasure 1888](/library/tasks/T1888/): 'Understanding the OIDC Authorization Code flow with PKCE'\n    * How-to of [Countermeasure 1888](/library/tasks/T1888/): 'Understanding the OIDC Hybrid flow'\n    * How-to of [Countermeasure 1888](/library/tasks/T1888/): 'Understanding the OIDC Implicit flow'\n    * How-to  of [Countermeasure 1888](/library/tasks/T1888/): 'Handling the Identity Token for User Authentication'\n    * Additional Requirements of [Countermeasure 1888](/library/tasks/T1888/): 'Handling user involvement in OIDC'\n    * How-to of [Countermeasure 1888](/library/tasks/T1888/): 'Session Management with OIDC'\n\n1. Configuring the authorization server / identity provider\n    * [Countermeasure 1889](/library/tasks/T1889/): 'Secure the configuration of the authorization server'\n    * Additional Requirements of [Countermeasure 1889](/library/tasks/T1889/): 'Securing client registration'\n\n1. Advanced features\n    * Additional Requirements of [Countermeasure 1889](/library/tasks/T1889/): 'Proof-of-possession tokens'",
    "weakness_title_read_only": "Improper Access Control (Authorization)",
    "weakness_id_read_only": "P182",
    "weakness": "e488cdc5-3c91-4d2b-bcec-5c651b000d8b",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "architecture-design",
    "created": "2019-07-12T15:30:37.181000-04:00",
    "last_updated": "2022-09-01T12:12:42.723000-04:00",
    "custom": "False",
    "rules": "2b32d073-137d-4f31-9833-b3a0f9248a04;0fdceae7-767b-4367-9883-1542c41380d4",
    "rules_read_only": "A763;A764"
  },
  {
    "countermeasure_id": "T1923",
    "universal_id": "57d5f449-8821-4836-9cd8-7e52df60286d",
    "countermeasure_name": "Disable swarm mode if not needed",
    "countermeasure_solution": "Do not enable swarm mode, if not needed.",
    "weakness_title_read_only": "Insecure swarm mode (Docker)",
    "weakness_id_read_only": "P1071",
    "weakness": "34939baa-af0a-46cc-a9e7-5f7617afbd76",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2019-07-22T15:32:11.592000-04:00",
    "last_updated": "2021-06-25T14:47:47.235000-04:00",
    "custom": "False",
    "rules": "!29c51c54-fa8a-4123-b6c5-c95f200c29a9",
    "rules_read_only": "!A1235"
  },
  {
    "countermeasure_id": "T1924",
    "universal_id": "2b035c4d-e7bc-45ab-9934-f646e0c662cd",
    "countermeasure_name": "Verify that swarm mode is disabled",
    "countermeasure_solution": "Review the output of the docker info command. If the output includes `Swarm: active` it indicates that swarm mode has been activated on the Docker engine. Confirm if swarm mode on the docker engine instance is actually needed.",
    "weakness_title_read_only": "Insecure swarm mode (Docker)",
    "weakness_id_read_only": "P1071",
    "weakness": "34939baa-af0a-46cc-a9e7-5f7617afbd76",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2019-07-22T15:37:19.370000-04:00",
    "last_updated": "2021-06-25T14:47:48.020000-04:00",
    "custom": "False",
    "rules": "!29c51c54-fa8a-4123-b6c5-c95f200c29a9",
    "rules_read_only": "!A1235"
  },
  {
    "countermeasure_id": "T1925",
    "universal_id": "9e262c71-6dfa-49c2-9a37-1b98ab29833d",
    "countermeasure_name": "Maintain the default behavior for anonymous access (OpenShift)",
    "countermeasure_solution": "### Ensure OpenShift default behavior for anonymous access is not changed. Openshift allows anonymous requests (then authorizes them):\n\n- OpenShift allows anonymous requests to the API server to support information discovery and `webhook` integrations. \n- OpenShift provides its own fully integrated authentication and authorization mechanism. \n\n By default, anonymous access is enabled and assigned to the `system:unauthenticated group`, which allows the authorization layer to determine which requests, if any, an anonymous user is allowed to make.\n \nThe `oauth-proxy` deployed as part of these components makes anonymous use of `/.well-known/oauth-authorization-server` endpoint, granted by `system:discovery` role.\n\nWhen _anonymous requests_ are enabled, requests that are not rejected by other configured authentication methods are treated as anonymous requests. \nThese requests are then served by the API server. You should rely on authentication to authorize anonymous requests.\n\n**Note:** If you are using RBAC authorization, it is generally considered reasonable to allow anonymous access to the API Server for health checks and discovery purposes, hence this recommendation is not scored. However, you should consider whether anonymous discovery is an acceptable risk for your purposes.",
    "weakness_title_read_only": "Changing default behavior for anonymous access (OpenShift)",
    "weakness_id_read_only": "P1440",
    "weakness": "e3c780f3-2236-4796-baeb-1e855bdee235",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2019-09-16T12:05:39.549000-04:00",
    "last_updated": "2023-04-19T22:56:57.317000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1926",
    "universal_id": "dd7c9d1b-85fc-43a9-89ba-dd802d58a431",
    "countermeasure_name": "Verify that the default behavior for anonymous access is maintained (OpenShift)",
    "countermeasure_solution": "Run the following command to verify that userGroups include `system:unauthenticated` for _openshift-kube-apiserver_\n\n```\noc get configmap config -n openshift-kube-apiserver -ojson | \\\n  jq -r '.data[\"config.yaml\"]' | \\\n  jq '.auditConfig.policyConfiguration.rules[]'\n```\n\nRun the following command to verify that userGroups include `system:unauthenticated` for _openshift-apiserver_\n```\noc get configmap config -n openshift-apiserver -ojson | \\\n  jq -r '.data[\"config.yaml\"]' | \\\n  jq '.auditConfig.policyConfiguration.rules[]'\n```\n\nRun the following command to verify RBAC is enabled:\n```\noc get clusterrolebinding\noc get clusterrole\noc get rolebinding\noc get role\n```\nVerify that role bindings and roles are returned.",
    "weakness_title_read_only": "Changing default behavior for anonymous access (OpenShift)",
    "weakness_id_read_only": "P1440",
    "weakness": "e3c780f3-2236-4796-baeb-1e855bdee235",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2019-09-16T12:05:39.574000-04:00",
    "last_updated": "2023-05-11T12:48:59.548000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1927",
    "universal_id": "56a506ed-cc3e-4a16-b9b8-23f096eec9e1",
    "countermeasure_name": "Disable basic-auth-file method (OpenShift)",
    "countermeasure_solution": "Ensure OpenShift provides its own fully integrated authentication and authorization mechanism. \nThe `apiserver` is protected by either requiring an OAuth token issued by the platform's integrated OAuth server or signed certificates. \n\nBy default, the `--basic-auth-file` flag is not set and OAuth authentication is configured.",
    "weakness_title_read_only": "Using static passwords (OpenShift)",
    "weakness_id_read_only": "P1441",
    "weakness": "c3397988-62cb-444c-a73e-6b39afeb8630",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2019-09-16T12:09:08.161000-04:00",
    "last_updated": "2023-04-19T22:58:24.437000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1928",
    "universal_id": "37674bb7-56e1-4f01-bd2c-6d5b0259454d",
    "countermeasure_name": "Verify that the basic-auth-file option has not been configured (OpenShift)",
    "countermeasure_solution": "### Run the following command to verify that the `--basic-auth-file` argument does not exist:\n```\noc -n openshift-kube-apiserver get cm config -o yaml | grep --color \"basic-auth\"\noc -n openshift-apiserver get cm config -o yaml | grep --color \"basic-auth\"\noc get clusteroperator authentication\n```\n- Verify that the `authentication-operator` is running: Available is `True`.\n- If `basic-auth-file` is returned, the configuration should be removed.",
    "weakness_title_read_only": "Using static passwords (OpenShift)",
    "weakness_id_read_only": "P1441",
    "weakness": "c3397988-62cb-444c-a73e-6b39afeb8630",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2019-09-16T12:09:08.179000-04:00",
    "last_updated": "2023-05-11T12:49:00.757000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1929",
    "universal_id": "a5ad95eb-157e-4029-996c-dc2fd0de174b",
    "countermeasure_name": "Secure communication between API server and master nodes (OpenShift)",
    "countermeasure_solution": "As an administrator, set a custom default certificate to be used by the API server when serving content in order to enable clients to access the API server at a different host name or without the need to distribute the cluster-managed certificate authority (CA) certificates to the clients. The API server is accessible by clients external to the cluster at `api.<cluster_name>.<base_domain>`. \n\n- Use https for kubelet connections.\n- Make sure that the kubelet uses certificates to authenticate.\n- Verify that the kubelet certificate authority is set as appropriate.\n- Ensure that the `--tls-cert-file` and `--tls-private-key-file` arguments are set as appropriate\n- Ensure that the `--client-ca-file` argument is set as appropriate.\n\nOpenShift uses X.509 certificates for authentication of the control-plane components. OpenShift configures the API server to use an internal certificate authority (CA) to validate the user certificate sent during TLS negotiation. \nIf the validation of the certificate is successful, the request is authenticated and user information is derived from the certificate subject fields.\n\nOpenShift does not use the following arguments:\n- `--kubelet-https` -\n- `--kubelet-client-certificate` \n- `--kubelet-client-key`\n- `--kubelet-certificate-authority`\n- `--tls-cert-file` \n- `--tls-private-key-file`\n- `--client-ca-file`",
    "weakness_title_read_only": "Unsecure connection between API server and node/kubelet (OpenShift)",
    "weakness_id_read_only": "P1442",
    "weakness": "f5316a2d-5f73-4b86-bf17-e23e0d5e2c2e",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2019-09-16T12:09:08.262000-04:00",
    "last_updated": "2023-04-19T22:59:39.253000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1930",
    "universal_id": "3084b821-63bb-4bca-b3d7-2809bb1a24aa",
    "countermeasure_name": "Verify that the connection between API server and master node is secure (OpenShift)",
    "countermeasure_solution": "Run the following commands to verify the kubelet client certificates are present:\n\nFor OpenShift 4.5:\n```\noc get configmap config -n openshift-kube-apiserver -ojson | jq -r '.data[\"config.yaml\"]' | jq '.kubeletClientInfo' \n```\n\nFor OpenShift  4.6:\n```\noc get configmap config -n openshift-kube-apiserver -ojson | jq -r '.data[\"config.yaml\"]' | jq '.apiServerArguments'\n```\n\nFor both 4.5 and 4.6\n```\noc -n openshift-apiserver describe secret serving-cert\n```\n\n-  Make sure that the kubelet client-certificate and kubelet client-key files are present.\n**client-certificate:**\n`/etc/kubernetes/static-pod-resources/secrets/kubelet-client/tls.crt`\n**client-key:**\n`/etc/kubernetes/static-pod-resources/secrets/kubelet-client/tls.key`\n\n- Make sure that the serving-cert for the `openshift-apiserver` is type `kubernetes.io/tls` and that returned Data includes `tls.crt` and `tls.key`.\n\n- Make sure that the value for `ca` is the following.\n\"ca\": \"/etc/kubernetes/static-pod-resources/configmaps/kubelet-serving-ca/ca-bundle.crt\"\n\nRun the following command:\nTLS Cert File - openshift-kube-apiserver\n```\noc get configmap config -n openshift-kube-apiserver -ojson | \\\n  jq -r '.data[\"config.yaml\"]' | \\\n  jq -r .servingInfo.certFile\n```\n TLS Key File\n```\noc get configmap config -n openshift-kube-apiserver -ojson | \\\n  jq -r '.data[\"config.yaml\"]' | \\\n  jq -r .servingInfo.keyFile\n```\n```\n client-ca-file\noc get configmap config -n openshift-kube-apiserver -ojson | \\\n  jq -r '.data[\"config.yaml\"]' | \\\n  jq -r .servingInfo.clientCA\n```\n- Verify that the following files exist.\n\n    ***tls-cert-file***\n\n    `/etc/kubernetes/static-pod-certs/secrets/service-network-serving-certkey/tls.crt` \n\n    ***tls-private-key-file***\n\n    `/etc/kubernetes/static-pod-certs/secrets/service-network-serving-certkey/tls.key`\n\n    ***client-ca-file***\n\n    `/etc/kubernetes/static-pod-certs/configmaps/client-ca/ca-bundle.crt`\n\n    User-provided certificates must be provided in a `kubernetes.io/tls` type Secret in the `openshift-config` namespace. Update the API server cluster configuration and the `apiserver/cluster` resource to enable the use of the user-provided certificate.",
    "weakness_title_read_only": "Unsecure connection between API server and node/kubelet (OpenShift)",
    "weakness_id_read_only": "P1442",
    "weakness": "f5316a2d-5f73-4b86-bf17-e23e0d5e2c2e",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2019-09-16T12:09:08.297000-04:00",
    "last_updated": "2023-05-11T12:49:01.749000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1931",
    "universal_id": "b60767e1-8378-4feb-aeab-91f5229f06e1",
    "countermeasure_name": "Prevent insecure bindings and insecure port access (OpenShift)",
    "countermeasure_solution": "Ensure the `insecure-bind-address` and `insecure-port` are removed from the configuration file.\n\n\nThe `openshift-kube-apiserver` is served over **HTTPS** with authentication and authorization.\n\nBy default,the secure API endpoint for the `openshift-kube-apiserver` is bound to `0.0.0.0:6443`. By default the insecure-port argument is set to `0`. \n\n**Note:** The `openshift-apiserver` is not running in the host network namespace. The port is not exposed on the node, but only through the pod network.",
    "weakness_title_read_only": "Insecure binding or port access for API server (OpenShift)",
    "weakness_id_read_only": "P1443",
    "weakness": "32626a21-9746-4222-ac0c-cbc55f91ca7b",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2019-09-16T12:09:08.569000-04:00",
    "last_updated": "2023-04-19T23:00:43.101000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1932",
    "universal_id": "4837ca46-1966-44f7-8af0-bd46903b2cb0",
    "countermeasure_name": "Verify that insecure-bind-address and insecure-port are disabled (OpenShift)",
    "countermeasure_solution": "Run the following command to verify `InsecureBindAddress=true` is not in the results:\n```\noc get kubeapiservers.operator.openshift.io cluster -o jsonpath='{range .spec.observedConfig.apiServerArguments.feature-gates[*]}{@}{\"\\n\"}{end}'\n```\nRun the following command to verify that the `bindAddress` is set to `6443` for the `openshift-kube-apiserver`:\n```\noc -n openshift-kube-apiserver get endpoints -o jsonpath='{.items[*].subsets[*].ports[*].port}'\n```\nRun the following command to verify that the `bindAddress` is set to `8443` for the `openshift-apiserver`.\n```\noc -n openshift-apiserver get endpoints -o jsonpath='{.items[*].subsets[*].ports[*].port}'\n```\n\nFor OCP 4.6 and above, run the following command to verify that `--insecure-port` argument in the API server operator configs is set to `0`.\n```\noc get configmap config -n openshift-kube-apiserver -ojson | jq -r '.data[\"config.yaml\"]' | jq '.apiServerArguments[\"insecure-port\"]'\n```\n\n**Notes:** \n\n- The openshift-apiserver is not running in the host network namespace. The port is not exposed on the node, but only through the pod network.\n- The parameter `kube-apiserver-insecure-readyz` has the argument `insecure-port` set to `6080`. This value should **not be changed**.",
    "weakness_title_read_only": "Insecure binding or port access for API server (OpenShift)",
    "weakness_id_read_only": "P1443",
    "weakness": "32626a21-9746-4222-ac0c-cbc55f91ca7b",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2019-09-16T12:09:08.587000-04:00",
    "last_updated": "2023-05-11T12:49:02.559000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1933",
    "universal_id": "c5e23891-b5e6-4358-8705-6880beb2e04e",
    "countermeasure_name": "Do not disable secure-port for API server traffic (OpenShift)",
    "countermeasure_solution": "Run the following command to verify that the `--bindAddress` argument is set to `0.0.0.0:6443`.\n```\noc get kubeapiservers.operator.openshift.io cluster -o json | jq '.spec.observedConfig'\n```\nRun the following command to verify that the only port returned is `6443`.\n```\noc get pods -n openshift-kube-apiserver -l app=openshift-kube-apiserver -o jsonpath='{.items[*].spec.containers[?(@.name==\"kube-apiserver\")].ports[*].containerPort}'\n```",
    "weakness_title_read_only": "Disabled secure-port flag (OpenShift)",
    "weakness_id_read_only": "P1444",
    "weakness": "a8b7f03b-1629-422e-b374-ca4e136257a4",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2019-09-16T12:09:08.700000-04:00",
    "last_updated": "2023-04-19T23:01:41.455000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1934",
    "universal_id": "7597275b-4700-4e02-8e53-219015e46ffa",
    "countermeasure_name": "Verify that 'secure-port' is not disabled (OpenShift)",
    "countermeasure_solution": "Run the following command:\n \n```grep -A2 secure-port /etc/origin/master/master-config.yaml```\n\nNo output is expected. If any value is returned like the following ...\n\n```\nkubernetesMasterConfig:\n    apiServerArguments:\n        secure-port:\n            - 8443\n```\n\n..., it should be non-zero and match the\nbindAddress port output from the following command:\n\n```grep -A5 servingInfo /etc/origin/master/master-config.yaml```\n\nWhich would be like:\n\n```\nservingInfo:\n    bindAddress: 0.0.0.0:8443\n    bindNetwork: tcp4\n    certFile: master.server.crt\n    clientCA: ca.crt\n    keyFile: master.server.key\n```",
    "weakness_title_read_only": "Disabled secure-port flag (OpenShift)",
    "weakness_id_read_only": "P1444",
    "weakness": "a8b7f03b-1629-422e-b374-ca4e136257a4",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2019-09-16T12:09:08.715000-04:00",
    "last_updated": "2023-05-11T12:49:03.466000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1935",
    "universal_id": "38ce5f5d-6a6d-44dd-8d2d-aa3bf27f8fc4",
    "countermeasure_name": "Do not expose API server profiling data (OpenShift)",
    "countermeasure_solution": "Ensure `OPENSHIFT_PROFILE` is not set to `web`, which would expose the web interface on localhost, and completely disable profiling via `___apiServerArguments`.",
    "weakness_title_read_only": "Exposed API server profiling data (OpenShift)",
    "weakness_id_read_only": "P1445",
    "weakness": "558c8f4f-c623-4847-bc07-489645edc319",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2019-09-16T12:09:08.781000-04:00",
    "last_updated": "2023-04-19T23:03:18.106000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1936",
    "universal_id": "d0c965c0-6dd6-489d-b72d-187398610f38",
    "countermeasure_name": "Verify that API server profiling is not exposed (OpenShift)",
    "countermeasure_solution": "Verify that `OPENSHIFT_PROFILE=web` is NOT returned when you run:\n\n```grep OPENSHIFT_PROFILE /etc/origin/master/master.env```\n\nAlso, verify the administrator has not disabled OpenShift's default configuration for profiling:\n\n```grep -A2 profiling /etc/origin/master/master-config.yaml```\n\nEnsure the following is NOT returned:\n\n```\nkubernetesMasterConfig:\n    apiServerArguments:\n        profiling:\n            - false\n```",
    "weakness_title_read_only": "Exposed API server profiling data (OpenShift)",
    "weakness_id_read_only": "P1445",
    "weakness": "558c8f4f-c623-4847-bc07-489645edc319",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2019-09-16T12:09:08.794000-04:00",
    "last_updated": "2021-06-25T14:47:38.287000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1937",
    "universal_id": "bb9a7c3a-3e01-4086-a8d6-78901d45da07",
    "countermeasure_name": "Set the 'repair-malformed-updates' value to 'true' (OpenShift)",
    "countermeasure_solution": "Ensure that the OpenShift administrator has not changed the default configuration for `repair-malformed-updates`. OpenShift sets the `_repair-malformed-updates`_ to `_true`_ by default to ensure API compatibility across versions.",
    "weakness_title_read_only": "API incompatibility across versions (OpenShift)",
    "weakness_id_read_only": "P1446",
    "weakness": "5510ef1b-e349-49fb-8296-f70cef3d08c8",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2019-09-16T12:09:08.858000-04:00",
    "last_updated": "2023-04-19T23:04:16.969000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1938",
    "universal_id": "2a44efc5-b0fc-416a-b2e2-0dd0b45a2731",
    "countermeasure_name": "Verify the value of 'repair-malformed-updates' (OpenShift)",
    "countermeasure_solution": "Execute the following command:\n\n```\ngrep -A2 repair-malformed-updates/etc/origin/master/master-config.yaml\n```\n\nThe following should be returned:\n\n```\nrepair-malformed-updates\n    - true\n```",
    "weakness_title_read_only": "API incompatibility across versions (OpenShift)",
    "weakness_id_read_only": "P1446",
    "weakness": "5510ef1b-e349-49fb-8296-f70cef3d08c8",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2019-09-16T12:09:08.873000-04:00",
    "last_updated": "2021-06-25T14:47:56.602000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1939",
    "universal_id": "074d98fc-cd52-46af-9c86-e5c7324b94d1",
    "countermeasure_name": "Disable AlwaysAdmit admission controller (OpenShift)",
    "countermeasure_solution": "Ensure that the admission control policy is NOT set to `AlwaysAdmit`.\nThis `AlwaysAdmit` controller is disabled by default in OpenShift and cannot be enabled.",
    "weakness_title_read_only": "Active AlwaysAdmit admission controller (OpenShift)",
    "weakness_id_read_only": "P1447",
    "weakness": "367474d8-d52d-4466-82cf-7d9dc5cc09d0",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2019-09-16T12:09:08.939000-04:00",
    "last_updated": "2023-04-19T23:05:23.426000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1940",
    "universal_id": "64396ae8-fbe6-4a8c-ae4a-ff6a6468a956",
    "countermeasure_name": "Verify that AlwaysAdmit admission controller is disabled (OpenShift)",
    "countermeasure_solution": "Run the following command to verify the set of `admission-plugins` for OCP 4.6 and higher:\n```\noc -n openshift-kube-apiserver get configmap config -o json | jq -r '.data.\"config.yaml\"' | jq '.apiServerArguments.\"enable-admission-plugins\"'\n```\nRun the following command to check that no overrides are configured:\n```\noc get kubeapiservers.operator.openshift.io cluster -o json | jq -r '.spec.unsupportedConfigOverrides'\n```\n\nIn OCP 4.5 and earlier, the default set of admission plugins are compiled into the `apiserver` and are not visible in the configuration yaml.\nFor 4.6 and above, verify that the set of admission plugins does not include `AlwaysAdmit`.\nVerify that no unsupported Overrides are configured.",
    "weakness_title_read_only": "Active AlwaysAdmit admission controller (OpenShift)",
    "weakness_id_read_only": "P1447",
    "weakness": "367474d8-d52d-4466-82cf-7d9dc5cc09d0",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2019-09-16T12:09:08.953000-04:00",
    "last_updated": "2021-06-25T14:47:54.822000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1941",
    "universal_id": "5f348d7b-649d-4c45-8b62-3db089dfdd81",
    "countermeasure_name": "Disable the AlwaysPullImages admission control plugin (OpenShift)",
    "countermeasure_solution": "When OpenShift Container Platform creates containers, it uses the container's `imagePullPolicy` to determine if the image should be pulled prior to starting the container. Keep `AlwaysPullImages` disabled if possible.\n\nThis can be managed per container. When OpenShift Container Platform creates containers, it uses the container's `imagePullPolicy` to determine if the image should be pulled prior to starting the container. \nThere are three possible values for `imagePullPolicy`:\n\n- `Always`\n- `IfNotPresent`\n- `Never`\n\nIf a container's `imagePullPolicy` parameter is not specified, OpenShift Container Platform sets it based on the image's tag.\nIf the tag is latest, OpenShift Container Platform defaults `imagePullPolicy` to `Always`. \nOtherwise, OpenShift Container Platform defaults `imagePullPolicy` to `IfNotPresent`.",
    "weakness_title_read_only": "Active AlwaysPullImages admission controller (OpenShift)",
    "weakness_id_read_only": "P1448",
    "weakness": "3836189f-d06e-4770-98d3-99c724ad62d9",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2019-09-16T12:09:09.015000-04:00",
    "last_updated": "2023-04-19T23:06:23.513000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1942",
    "universal_id": "1b5ecded-8247-468c-bc86-f4a9d2ba1508",
    "countermeasure_name": "Verify that the admission control plugin AlwaysPullImages is not set (OpenShift)",
    "countermeasure_solution": "Run the following command to verify the set of `admission-plugins` for OCP 4.6 and higher:\n```\noc -n openshift-kube-apiserver get configmap config -o json | jq -r '.data.\"config.yaml\"' | jq \n'.apiServerArguments.\"enable-admission-plugins\"'\n```\n\nRun the following command to check that no overrides are configured:\n```\noc get kubeapiservers.operator.openshift.io cluster -o json | jq -r '.spec.unsupportedConfigOverrides'\n```\n\n**Notes:**\n- In OCP 4.5 and earlier, the default set of admission plugins are compiled into the `apiserver` and are not visible in the configuration yaml.\n- For 4.6 and above, verify that the set of admission plugins does not include `AlwaysPullImages`. Verify that no unsupported Overrides are configured",
    "weakness_title_read_only": "Active AlwaysPullImages admission controller (OpenShift)",
    "weakness_id_read_only": "P1448",
    "weakness": "3836189f-d06e-4770-98d3-99c724ad62d9",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2019-09-16T12:09:09.029000-04:00",
    "last_updated": "2021-06-25T14:47:39.932000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1943",
    "universal_id": "2cad6325-73a9-4d99-af99-cc66d4f40403",
    "countermeasure_name": "Use Security Context Constraints instead of SecurityContextDeny admission controllers (OpenShift)",
    "countermeasure_solution": "Do not enable the `SecurityContextDeny` admission controller as it conflicts with the `SecurityContextConstraint` admission controller.\n\nBy default, OpenShift uses Security Context Constraints (SCCs) to restrict access to run privileged containers and runs pods on worker nodes as unprivileged (with the restricted SCC).\n Unlike upstream Kubernetes, OpenShift does not enable the `SecurityContextDeny` admission control plugin. OpenShift's Security Context Constraint (SCC) admission controller provides the same level of restriction as Pod Security Policy (PSP). PSPs are still beta in Kubernetes.",
    "weakness_title_read_only": "Using DenyEscalatingExec or SecurityContextDeny admission controllers (OpenShift)",
    "weakness_id_read_only": "P1449",
    "weakness": "5a709115-9142-4c9a-a056-453214ac8bb6",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2019-09-16T12:09:09.099000-04:00",
    "last_updated": "2023-04-19T23:10:44.885000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1944",
    "universal_id": "930b4281-f2eb-4c45-a806-2feb1cc591f7",
    "countermeasure_name": "Verify that the list of admission controllers does not include SecurityContextDeny (OpenShift)",
    "countermeasure_solution": "Run the following commands to verify the set of `admission-plugins` for OCP 4.6 and higher:\n```\noc -n openshift-kube-apiserver get configmap config -o json | jq -r '.data.\"config.yaml\"' | jq '.apiServerArguments.\"enable-admission-plugins\"'\n```\nRun the following commands to check that no overrides are configured:\n```\noc get kubeapiservers.operator.openshift.io cluster -o json | jq -r '.spec.unsupportedConfigOverrides'\n```\nRun the following commands to verify that SecurityContextConstraints are deployed:\n```\noc get scc\noc describe scc restricted\n```\n\n* Verify that the list of admission controllers does not include `SecurityContextDeny`.\n* For **4.6 and above**, verify that the set of admission plugins includes `SecurityContextConstraint` and that the `--disable-admission-plugins` argument is set to a value that does not include `SecurityContextConstraint`. \n* In OCP **4.5 and earlier**, the default set of admission plugins are compiled into the `apiserver` and are not visible in the configuration.yaml.\n* Verify that no unsupported Overrides are configured.\n* Verify that the list of SCCs includes `anyuid`, `hostaccess`, `hostmount-anyuid`, `hostnetwork`, `node-exporter`, `nonroot`, `privileged`, `restricted`.\n* Verify that the restricted SCC sets `Allowed Privileged` to `false`.",
    "weakness_title_read_only": "Using DenyEscalatingExec or SecurityContextDeny admission controllers (OpenShift)",
    "weakness_id_read_only": "P1449",
    "weakness": "5a709115-9142-4c9a-a056-453214ac8bb6",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2019-09-16T12:09:09.119000-04:00",
    "last_updated": "2023-05-11T12:49:04.423000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1945",
    "universal_id": "0b52422a-20f1-46ba-b479-3f0982455166",
    "countermeasure_name": "Do not disable NamespaceLifecycle admission controller (OpenShift)",
    "countermeasure_solution": "Make sure the `--disable-admission-plugins` parameter does not include `NamespaceLifecycle`.\nDo not disable the 'NamespaceLifecycle' admission controller. By default, in OpenShift `NamespaceLifecycle` is set.",
    "weakness_title_read_only": "Disabled NamespaceLifecycle admission controller (OpenShift)",
    "weakness_id_read_only": "P1450",
    "weakness": "1b5ac9cd-4ea4-4619-ab9c-1c8e509afeaf",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2019-09-16T12:09:09.228000-04:00",
    "last_updated": "2023-04-19T23:09:44.796000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1946",
    "universal_id": "6a609af1-30d4-4421-8b10-2d25ed3babb1",
    "countermeasure_name": "Verify that the NamespaceLifecycle plugin is not disabled (OpenShift)",
    "countermeasure_solution": "Run the following command to verify the list of admission controllers for 4.6 and higher:\n```\noc -n openshift-kube-apiserver get configmap config -o json | jq -r '.data.\"config.yaml\"' | jq '.apiServerArguments.\"enable-admission-plugins\"'\n```\nRun the following command to check that no overrides are configured:\n```\noc get kubeapiservers.operator.openshift.io cluster -o json | jq -r '.spec.unsupportedConfigOverrides'\n```\n\n* In **OCP 4.5 and earlier**, the default set of admission plugins are compiled into the `apiserver` and are not visible in the configuration yaml.\n* For **4.6 and above**, verify that the set of admission plugins includes `NamespaceLifecycle` and that the `--disable-admission-plugins` argument is set to a value that does not include `NamespaceLifecycle`.\n* Verify that no unsupported Overrides are configured.",
    "weakness_title_read_only": "Disabled NamespaceLifecycle admission controller (OpenShift)",
    "weakness_id_read_only": "P1450",
    "weakness": "1b5ac9cd-4ea4-4619-ab9c-1c8e509afeaf",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2019-09-16T12:09:09.241000-04:00",
    "last_updated": "2023-05-11T12:49:05.401000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1947",
    "universal_id": "a73515a2-ab60-4c26-b092-08acc10ad51c",
    "countermeasure_name": "Configure auditing properly on the API server (OpenShift)",
    "countermeasure_solution": "Perform the following:\n\n- Enable auditing of the API server. Set audit log file path `audit-log-path` argument  during installation. \n\n- Configure OpenShift cluster logging to send logs to destinations outside of your OpenShift Container Platform cluster instead of the default `Elasticsearch` log store using the following methods:\n    * Send logs using the `Fluentd` forward protocol. Create a `Configmap` to use the `Fluentd` forward protocol to securely send logs to an external logging aggregator that accepts the Fluent forward protocol.\n    * Send logs using syslog. You can create a `Configmap` to use the syslog protocol to send logs to an external syslog (RFC 3164) server.\n    * Alternatively, use the Log Forwarding API, currently in Technology Preview. The Log Forwarding API, which is easier to configure than the `Fluentd` protocol and syslog, exposes configuration for sending logs to the internal `Elasticsearch` log store and to external `Fluentd` log aggregation solutions.\n    * Do not use the ConfigMap methods and the Log Forwarding API in the same cluster.\n\n- Configure the number of audit log backup files with the `maximumRetainedFiles` setting.\n- Configure the size of the audit log files with the `maximumFileSizeMegabytes` setting.",
    "weakness_title_read_only": "Lack of proper auditing or retention of audit logs for API server (OpenShift)",
    "weakness_id_read_only": "P1451",
    "weakness": "d2a78f84-db1f-4169-a993-b4a955183277",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2019-09-16T12:09:09.336000-04:00",
    "last_updated": "2023-04-19T23:12:45.199000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1948",
    "universal_id": "555020d9-a3a5-49b4-a1d7-0a868aff8702",
    "countermeasure_name": "Verify that API server auditing is configured properly (OpenShift)",
    "countermeasure_solution": "Run the following command to verify that the `auditFilePath` is set to `/var/log/kube-apiserver/audit.log` for openshift-kube-apiserver:\n```\noc get configmap config -n openshift-kube-apiserver -o jsonpath=\"{['.data.config\\.yaml']}\" | jq '.auditConfig.auditFilePath'\n\nPOD=$(oc get pods -n openshift-kube-apiserver -l app=openshift-kube-apiserver -o jsonpath='{.items[0].metadata.name}')\noc rsh -n openshift-kube-apiserver -c kube-apiserver $POD ls /var/log/kube-apiserver/audit.log\n\n```\nRun the following command to verify that the `auditFilePath` is set to `/var/log/openshift-apiserver/audit.log` for openshift-apiserver: \n\n```\noc get configmap config -n openshift-apiserver -o jsonpath=\"{['.data.config\\.yaml']}\" | jq '.auditConfig.auditFilePath'\n\nPOD=$(oc get pods -n openshift-apiserver -l apiserver=true -o jsonpath='{.items[0].metadata.name}')\noc rsh -n openshift-apiserver $POD ls /var/log/openshift-apiserver/audit.log\n```",
    "weakness_title_read_only": "Lack of proper auditing or retention of audit logs for API server (OpenShift)",
    "weakness_id_read_only": "P1451",
    "weakness": "d2a78f84-db1f-4169-a993-b4a955183277",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2019-09-16T12:09:09.371000-04:00",
    "last_updated": "2023-05-11T12:49:06.266000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1949",
    "universal_id": "2803d931-7da1-4705-831f-c75193db0fc5",
    "countermeasure_name": "Do not set authorization-mode flag (OpenShift)",
    "countermeasure_solution": "Do not set the `authorization-mode` argument.\n\n- OpenShift uses RBAC by default.\n- In OpenShift 4.6, `authorization-mode` includes `Node` by default and is not configurable.\n- In OpenShift 4.5 and earlier the Node authorizer is compiled into the API server and is not visible, the OpenShift API server configmap does not use the `authorization-mode` flag.",
    "weakness_title_read_only": "Using authorization-mode flag (OpenShift)",
    "weakness_id_read_only": "P1452",
    "weakness": "95689264-2da2-451c-90e4-9c1cc7fff977",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2019-09-16T12:17:26.440000-04:00",
    "last_updated": "2023-04-19T23:14:12.334000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1950",
    "universal_id": "3a99c1d6-35ca-4cf6-acfe-dfa82dcb144e",
    "countermeasure_name": "Verify that the authorization-mode argument is not set to AlwaysAllow and Node authorizer is enabled (OpenShift)",
    "countermeasure_solution": "Run the following commands to verify that the `authorization-mode` argument is not used:\n```\noc get configmap config -n openshift-kube-apiserver -ojson | jq -r '.data[\"config.yaml\"]' | jq '.apiServerArguments' \noc get configmap config -n openshift-apiserver -ojson | jq -r '.data[\"config.yaml\"]' | jq '.apiServerArguments' \n```\nFor **OCP 4.5 and earlier** :\n\nRun the following commands to verify that `authorization-mode` is not used:\n\n```\noc get configmap config -n openshift-kube-apiserver -ojson | jq -r '.data[\"config.yaml\"]' | jq '.apiServerArguments' \noc get kubeapiservers.operator.openshift.io cluster -o json | jq '.spec.observedConfig.apiServerArguments'\n```\nVerify that the `authorization-mode` argument does not appear in the output. Verify the expected roles and role bindings are returned.\n\nFor **OCP 4.6 and above** :\n\nRun the following commands to verify that the `authorization-mode` argument includes `Node` and the `authorization-mode` argument includes `RBAC`:\n```\nfor node in $(oc get nodes -o jsonpath='{.items[*].metadata.name}')\ndo\n oc debug node/${node} -- chroot /host cat /etc/kubernetes/kubelet.conf | grep authorization-mode\n oc debug node/${node} -- chroot /host ps -aux | grep kubelet | grep authorization-mode\ndone\n```\n\nRun the following commands to check that no overrides are configured:\n```\noc get kubeapiservers.operator.openshift.io cluster -o json | jq -r '.spec.unsupportedConfigOverrides'\n```\n\nRun the following commands to verify RBAC is configured:\n```\noc get clusterrolebinding\noc get clusterrole\noc get rolebinding\noc get role\n```",
    "weakness_title_read_only": "Using authorization-mode flag (OpenShift)",
    "weakness_id_read_only": "P1452",
    "weakness": "95689264-2da2-451c-90e4-9c1cc7fff977",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2019-09-16T12:17:26.461000-04:00",
    "last_updated": "2023-05-11T12:49:07.207000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1951",
    "universal_id": "b7abef82-2f07-47ee-9bd3-f8bc3498359a",
    "countermeasure_name": "Do not use static token files for authentication (OpenShift)",
    "countermeasure_solution": "Do not set the `token-auth-file` flag. OpenShift does not use the `token-auth-file` flag. OpenShift includes a built-in OAuth server rather than relying on a static token file.\nAuthentication is managed by the OpenShift `authentication-operator`. To verify that:\n\n- The `token-auth-file` flag is not present \n- And the `authentication-operator` is running\n\nBy default, `--token-auth-file` flag is not set and OAuth authentication is configured.",
    "weakness_title_read_only": "Using static token files (OpenShift)",
    "weakness_id_read_only": "P1453",
    "weakness": "e704fdea-ed37-49c1-aeff-ae084812db4f",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2019-09-16T12:17:26.576000-04:00",
    "last_updated": "2023-04-19T23:15:16.936000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1952",
    "universal_id": "7abf3be4-e88e-47fd-8276-dac11eae6d87",
    "countermeasure_name": "Verify that static token files are not used (OpenShift)",
    "countermeasure_solution": "Run the following commands to verify that the `token-auth-file` flag is not present:\n```\noc get configmap config -n openshift-kube-apiserver -ojson | jq -r '.data[\"config.yaml\"]' | jq '.apiServerArguments' \noc get configmap config -n openshift-apiserver -ojson | jq -r '.data[\"config.yaml\"]' | jq '.apiServerArguments' \noc get kubeapiservers.operator.openshift.io cluster -o json | jq '.spec.observedConfig.apiServerArguments'\n```\n Run the following commands to verify that the `authentication-operator` is running:\n```\noc get clusteroperator authentication\n```",
    "weakness_title_read_only": "Using static token files (OpenShift)",
    "weakness_id_read_only": "P1453",
    "weakness": "e704fdea-ed37-49c1-aeff-ae084812db4f",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2019-09-16T12:17:26.592000-04:00",
    "last_updated": "2023-05-11T12:49:08.056000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1953",
    "universal_id": "fa1f1a91-f931-41ae-bfc7-a75f686d33b4",
    "countermeasure_name": "Ensure that the service-account-lookup and service-account-key-file arguments are properly set (OpenShift)",
    "countermeasure_solution": " - For OpenShift 4.5, ensure that the `service-account-lookup` argument does not exist.\n- For OpenShift 4.6 and above ensure that the `--service-account-lookup` argument is set to `true`.\n- Ensure that the `--service-account-key-file` argument is set as appropriate.\n- The following should be returned: `/etc/kubernetes/static-pod-resources/configmaps/sa-token-signing-certs /etc/kubernetes/static-pod-resources/configmaps/bound-sa-token-signing-certs`",
    "weakness_title_read_only": "Using service-account-lookup or service-account-key-file arguments (OpenShift)",
    "weakness_id_read_only": "P1454",
    "weakness": "1e69e2ff-ec7c-4f4e-9faf-abc2a72ad09e",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2019-09-16T12:17:26.666000-04:00",
    "last_updated": "2023-04-19T23:16:13.512000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1954",
    "universal_id": "1087621f-f46a-467c-b42c-64e23a98957c",
    "countermeasure_name": "Verify that the service-account-lookup and service-account-key-file arguments are properly set (OpenShift)",
    "countermeasure_solution": "#### For **OpenShift 4.5**, run the following command to verify that the `service-account-lookup` argument does not exist:\n```\noc get configmap config -n openshift-kube-apiserver -ojson | jq -r '.data[\"config.yaml\"]' | jq '.apiServerArguments' | grep service-account-lookup\n```\n#### For **OCP 4.6 and above**, run the following command to verify that if the `--service-account-lookup` argument exists, it is set to true:\n```\noc get configmap config -n openshift-kube-apiserver -ojson | jq -r '.data[\"config.yaml\"]' | jq -r '.service-account-lookup'\n```\n\n#### Run the following command to verify that the `--service-account-key-file` argument is set as appropriate:\n```\noc get configmap config -n openshift-kube-apiserver -ojson | \\\n  jq -r '.data[\"config.yaml\"]' | \\\n  jq -r .serviceAccountPublicKeyFiles[]\n```\nVerify that the following is returned:\n`/etc/kubernetes/static-pod-resources/configmaps/sa-token-signing-certs /etc/kubernetes/static-pod-resources/configmaps/bound-sa-token-signing-certs`",
    "weakness_title_read_only": "Using service-account-lookup or service-account-key-file arguments (OpenShift)",
    "weakness_id_read_only": "P1454",
    "weakness": "1e69e2ff-ec7c-4f4e-9faf-abc2a72ad09e",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2019-09-16T12:17:26.686000-04:00",
    "last_updated": "2023-05-11T12:49:09.005000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1955",
    "universal_id": "bcb0b95c-cfe0-44f4-835e-cb7eee35208b",
    "countermeasure_name": "Do not enable PodSecurityPolicy admission control plugin (OpenShift)",
    "countermeasure_solution": "Make sure that the `PodSecurityPolicy` admission control plugin remains disabled as it is not yet as robust as `SecurityContextConstraints`.\n\n- OpenShift provides the same protection via the `SecurityContextConstraints` admission plugin, which is enabled by default and cannot be disabled.\n- The `PodSecurityPolicy` admission control plugin is disabled by default as it is still beta and not yet supported with OpenShift. \n- Security Context Constraints (SCCs) and Pod Security Policy cannot be used on the same cluster.",
    "weakness_title_read_only": "Enabling PodSecurityPolicy and SecurityContextConstraints at the same time (OpenShift)",
    "weakness_id_read_only": "P1455",
    "weakness": "70b0233d-39a9-47a1-87c3-9b936fee6780",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2019-09-16T12:17:26.798000-04:00",
    "last_updated": "2023-04-19T23:17:29.869000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1956",
    "universal_id": "bcf46249-1dd0-4108-a0b7-c95aa1ff1e07",
    "countermeasure_name": "Verify that the admission control plugin SecurityContextConstraint is set (OpenShift)",
    "countermeasure_solution": "Verify that the `admissionConfig` block does not include `PodSecurityPolicy`:\n\n```\ngrep PodSecurityPolicy -A4 /etc/origin/master/master-config.yaml\n```\n\nNothing should be returned, or if returned, the plugin config should be disabled:\n\n```\nadmissionConfig:\n    pluginConfig:\n        PodSecurityPolicy:\n            configuration:\n                kind: DefaultAdmissionConfig\n                apiVersion: v1\n                disable: true\n```",
    "weakness_title_read_only": "Enabling PodSecurityPolicy and SecurityContextConstraints at the same time (OpenShift)",
    "weakness_id_read_only": "P1455",
    "weakness": "70b0233d-39a9-47a1-87c3-9b936fee6780",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2019-09-16T12:17:26.813000-04:00",
    "last_updated": "2023-05-11T12:49:09.907000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1957",
    "universal_id": "26f3d6cd-5afe-4f8e-89fd-0215eecc8eb9",
    "countermeasure_name": "Ensure that etcd arguments are properly set (OpenShift)",
    "countermeasure_solution": "By default, OpenShift uses X.509 certificates to provide secure communication to `etcd`. OpenShift configures these automatically. OpenShift does not use the `etcd-certfile`, `etcd-keyfile`and `_etcd-cafile`  flags. OpenShift generates the necessary files and sets the arguments appropriately.\n\n- etcd Certificate File: `/etc/kubernetes/static-pod-resources/secrets/etcd-client/tls.crt `\n- etcd Key File: `/etc/kubernetes/static-pod-resources/secrets/etcd-client/tls.key`\n- etcd CA file: `/etc/kubernetes/static-pod-resources/configmaps/etcd-serving-ca/ca-bundle.crt`",
    "weakness_title_read_only": "Unsecure communication to etcd (OpenShift)",
    "weakness_id_read_only": "P1456",
    "weakness": "b7b260d1-f321-4968-8cc0-18ccfd2fccef",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2019-09-16T12:17:26.886000-04:00",
    "last_updated": "2023-04-19T23:18:45.805000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1958",
    "universal_id": "b637ece5-e6fb-4612-b676-fb4f0203b99e",
    "countermeasure_name": "Verify that etcd arguments are properly set (OpenShift)",
    "countermeasure_solution": "Run the following command to verify that etcd arguments are set proparely:\n\n### etcd Certificate File\n```\noc get configmap config -n openshift-kube-apiserver -ojson | \\\n  jq -r '.data[\"config.yaml\"]' | \\\n  jq -r .storageConfig.certFile\n```\n### etcd Key File\n```\noc get configmap config -n openshift-kube-apiserver -ojson | \\\n  jq -r '.data[\"config.yaml\"]' | \\\n  jq -r .storageConfig.keyFile\n```\n### etcd CA File\n```\noc get configmap config -n openshift-kube-apiserver -ojson | \\\n  jq -r '.data[\"config.yaml\"]' | \\\n  jq -r .storageConfig.ca\n```\n\n- etcd Certificate File: `/etc/kubernetes/static-pod-resources/secrets/etcd-client/tls.crt `\n- etcd Key File: `/etc/kubernetes/static-pod-resources/secrets/etcd-client/tls.key`\n- etcd CA file: `/etc/kubernetes/static-pod-resources/configmaps/etcd-serving-ca/ca-bundle.crt`",
    "weakness_title_read_only": "Unsecure communication to etcd (OpenShift)",
    "weakness_id_read_only": "P1456",
    "weakness": "b7b260d1-f321-4968-8cc0-18ccfd2fccef",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2019-09-16T12:17:26.906000-04:00",
    "last_updated": "2023-05-11T12:49:10.806000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1959",
    "universal_id": "d76696cd-c9e7-4f4b-a61d-c74c87096319",
    "countermeasure_name": "Do not disable ServiceAccount admission controller (OpenShift)",
    "countermeasure_solution": "Make sure that the admission control plugin `ServiceAccount` is set.\nBy default, `ServiceAccount` is enabled.",
    "weakness_title_read_only": "Inactive ServiceAccount admission controller (OpenShift)",
    "weakness_id_read_only": "P1457",
    "weakness": "c7d6be63-5096-49f9-921d-a3b01f1eb29a",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2019-09-16T12:17:52.982000-04:00",
    "last_updated": "2023-04-19T23:19:37.702000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1960",
    "universal_id": "ebaa59b4-ad6e-4289-9b73-718e837eabbe",
    "countermeasure_name": "Verify that the admission control plugin ServiceAccount is set (OpenShift)",
    "countermeasure_solution": "#### Run the following commands to verify the list of admission controllers for 4.6 and higher:\n```\noc -n openshift-kube-apiserver get configmap config -o json | jq -r '.data.\"config.yaml\"' | jq '.apiServerArguments.\"enable-admission-plugins\"'\n```\n\n#### Run the following commands to check that no overrides are configured:\n```\noc get kubeapiservers.operator.openshift.io cluster -o json | jq -r '.spec.unsupportedConfigOverrides'\n```\n\n#### Run the following commands to verify that Service Accounts are present:\n```\noc get sa -A\n```\n\n* For 4.6 and above, verify that the set of admission plugins does include `ServiceAccount` and that the `--disable-admission-plugins` argument is set to a value that does not include `ServiceAccount`.\n* In OCP 4.5 and earlier, the default set of admission plugins are compiled into the `apiserver` and are not visible in the configuration yaml. and does include.\n* Verify that no unsupported Overrides are configured.\n* Verify that Service Accounts are present for every namespace.",
    "weakness_title_read_only": "Inactive ServiceAccount admission controller (OpenShift)",
    "weakness_id_read_only": "P1457",
    "weakness": "c7d6be63-5096-49f9-921d-a3b01f1eb29a",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2019-09-16T12:17:52.997000-04:00",
    "last_updated": "2023-05-11T12:49:11.727000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1961",
    "universal_id": "67b816cb-fdcd-441a-9d7c-3813462d8154",
    "countermeasure_name": "Ensure that the admission control plugin NodeRestriction is enabled (OpenShift)",
    "countermeasure_solution": "Make sure that the admission control plugin `NodeRestriction` is enabled.\nIn OpenShift, the `NodeRestriction` admission plugin is enabled by default.\nFor 4.5, review the [control plane manifest.](https://github.com/openshift/origin/blob/release-4.5/vendor/k8s.io/kubernetes/cmd/kubeadm/app/phases/controlplane/manifests.go#L132)",
    "weakness_title_read_only": "Disabled NodeRestriction admission plugin (OpenShift)",
    "weakness_id_read_only": "P1458",
    "weakness": "4a8a2e66-0652-4e38-af9b-8c4bd2b1ac34",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2019-09-16T12:17:53.062000-04:00",
    "last_updated": "2023-04-19T23:20:37.697000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1962",
    "universal_id": "843274b6-b888-4411-905d-3f881de01fa7",
    "countermeasure_name": "Verify that the admission control plugin NodeRestriction is set (OpenShift)",
    "countermeasure_solution": "#### Run the following command to verify the set of admission-plugins **for OCP 4.6 and higher**:\n```\noc -n openshift-kube-apiserver get configmap config -o json | jq -r '.data.\"config.yaml\"' | jq '.apiServerArguments.\"enable-admission-plugins\"'\n```\n#### Run the following command to check that no overrides are configured:\n```\noc get kubeapiservers.operator.openshift.io cluster -o json | jq -r '.spec.unsupportedConfigOverrides'\n```\n\n * In **OCP 4.5 and earlier**, the default set of admission plugins are compiled into the `apiserver` and are not visible in the configuration yaml.\n* For **4.6 and above**, verify that the set of admission plugins includes `NodeRestriction` and that the `--disable-admission-plugins` argument is set to a value that does not include `NodeRestriction`.\n* Verify that no unsupported Overrides are configured.",
    "weakness_title_read_only": "Disabled NodeRestriction admission plugin (OpenShift)",
    "weakness_id_read_only": "P1458",
    "weakness": "4a8a2e66-0652-4e38-af9b-8c4bd2b1ac34",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2019-09-16T12:17:53.075000-04:00",
    "last_updated": "2023-05-11T12:49:12.495000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1963",
    "universal_id": "72393e33-ee37-478f-aaac-ca3067cbae0e",
    "countermeasure_name": "Encrypt data at rest in etcd datastore with aescbc encryption (OpenShift)",
    "countermeasure_solution": "Where etcd encryption is used, it is important to make sure that the proper set of encryption providers is used. Currently, the **aescbc**, **kms** and **secretbox** are appropriate options.\n\n- When you enable 'etcd' encryption, the following OpenShift API server and Kubernetes API server resources are encrypted:\n    * Secrets\n    * ConfigMaps\n    * Routes\n    * OAuth access tokens\n    * OAuth authorize tokens\n- When you enable `etcd` encryption, encryption keys are created, which are rotated on a weekly basis. In order to restore from an `etcd` backup these keys are essential.",
    "weakness_title_read_only": "Unencrypted data on etcd (OpenShift)",
    "weakness_id_read_only": "P1459",
    "weakness": "84fbc60e-9f32-4df6-81ab-65502070c513",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2019-09-16T12:17:53.133000-04:00",
    "last_updated": "2023-04-19T23:21:36.257000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1964",
    "universal_id": "a3f30f4e-c15f-467e-88ca-e4c75cfa293c",
    "countermeasure_name": "Verify data at rest on etcd datastore is encrypted with aescbc encryption provider (OpenShift)",
    "countermeasure_solution": "#### Run the following command to encrypt the etcd datastore and review the `Encrypted` status condition for the OpenShift API server to make sure that its resources were successfully encrypted:\n\n```\noc get openshiftapiserver -o=jsonpath='{range .items[0].status.conditions[?(@.type==\"Encrypted\")]}{.reason}{\"\\n\"}{.message}{\"\\n\"}'\n```\nThe output shows `EncryptionCompleted` upon successful encryption.\n* `EncryptionCompleted`\n* All resources encrypted:\n`routes.route.openshift.io`,\n`oauthaccesstokens.oauth.openshift.io`,\n`oauthauthorizetokens.oauth.openshift.io`\n\nIf the output shows `EncryptionInProgress`, this means that encryption is still in progress. Wait a few minutes and try again.",
    "weakness_title_read_only": "Unencrypted data on etcd (OpenShift)",
    "weakness_id_read_only": "P1459",
    "weakness": "84fbc60e-9f32-4df6-81ab-65502070c513",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2019-09-16T12:17:53.152000-04:00",
    "last_updated": "2023-05-11T12:49:13.323000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1965",
    "universal_id": "743edec1-fb15-464c-8f12-3af69526fcfd",
    "countermeasure_name": "Enable the APIPriorityAndFairness feature gate (OpenShift)",
    "countermeasure_solution": "Feature gates are a set of key=value pairs that describe Kubernetes features. You can turn these features on or off using the `--feature-gates` command line flag on each Kubernetes component.\n \nTo set feature gates for a component, such as kubelet, use the `--feature-gates` flag assigned to a list of feature pairs:\n```\n--feature-gates=\"..., APIPriorityAndFairness=true\"\n```\nFor more information see the Kubernetes [documentation](https://kubernetes.io/docs/reference/command-line-tools-reference/feature-gates/).",
    "weakness_title_read_only": "No rate limit for requests to API server (OpenShift)",
    "weakness_id_read_only": "P1460",
    "weakness": "9f11178f-6577-45d9-9692-93e7312c2bb5",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2019-09-16T12:17:53.240000-04:00",
    "last_updated": "2023-04-19T23:22:44.511000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1966",
    "universal_id": "679b954b-f8ab-4f26-92e6-64ec3732cbf8",
    "countermeasure_name": "Verify that the APIPriorityAndFairness feature gate is enabled (OpenShift)",
    "countermeasure_solution": "#### Run the following command to verify the `APIPriorityAndFairness` feature-gate: \n```\noc get kubeapiservers.operator.openshift.io cluster -o json | jq '.spec.observedConfig.apiServerArguments'\n```\n#### Run the following command to verify the set of admission-plugins for OCP 4.6 and higher:\n```\noc -n openshift-kube-apiserver get configmap config -o json | jq -r '.data.\"config.yaml\"' | jq '.apiServerArguments.\"enable-admission-plugins\"'\n```\n#### Run the following command to check that no overrides are configured:\n```\noc get kubeapiservers.operator.openshift.io cluster -o json | jq -r '.spec.unsupportedConfigOverrides'\n```\n\n* **For 4.5**, verify that the feature-gate is turned on for the APIServer priority and fairness: `APIPriorityAndFairness=true`. In OCP 4.5 and earlier, the default set of admission plugins are compiled into the `apiserver` and are not visible in the configuration yaml.\n* **For 4.6 and above**, verify that the set of admission plugins does not include `EventRateLimit`.\n* Verify that no unsupported Overrides are configured.",
    "weakness_title_read_only": "No rate limit for requests to API server (OpenShift)",
    "weakness_id_read_only": "P1460",
    "weakness": "9f11178f-6577-45d9-9692-93e7312c2bb5",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2019-09-16T12:17:53.253000-04:00",
    "last_updated": "2023-05-11T12:49:14.417000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1967",
    "universal_id": "b4070d09-b809-43f1-ad1f-31743286cf21",
    "countermeasure_name": "Adjust the request timeout value (OpenShift)",
    "countermeasure_solution": "OpenShift configures the `min-request-timeout` flag via `servingInfo.requestTimeoutSeconds`, which overrides `request-timeout` in certain scenarios and provides a more balanced timeout approach than a global request-timeout.\nMake sure that the `servingInfo.requestTimeoutSeconds` argument is set to an appropriate value.\nThe default value of `--request-timeout` is 60 seconds\n\nSetting a high timeout limit can exhaust the API server resources making it prone to Denial-of-Service attack. It is recommended to set this limit as appropriate and change the default limit of 60 seconds only if needed.",
    "weakness_title_read_only": "Inappropriate request timeout value (OpenShift)",
    "weakness_id_read_only": "P1461",
    "weakness": "ef11517f-edbc-419d-81e2-97622c7f1b75",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2019-09-16T12:17:53.302000-04:00",
    "last_updated": "2023-04-19T23:23:55.173000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1968",
    "universal_id": "e59a1839-29b0-453d-9cd6-ec8c3bfbdf41",
    "countermeasure_name": "Verify that request timeout is set to an appropriate value (OpenShift)",
    "countermeasure_solution": "#### Run the following command to verify that the `servingInfo.requestTimeoutSeconds` argument is set to an appropriate value:\n```\noc get configmap config -n openshift-kube-apiserver -ojson | \\\n  jq -r '.data[\"config.yaml\"]' | \\\n  jq -r \n```",
    "weakness_title_read_only": "Inappropriate request timeout value (OpenShift)",
    "weakness_id_read_only": "P1461",
    "weakness": "ef11517f-edbc-419d-81e2-97622c7f1b75",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2019-09-16T12:17:53.316000-04:00",
    "last_updated": "2023-05-11T12:49:16.031000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1969",
    "universal_id": "df548b60-db68-41cd-aad6-9ad64444972e",
    "countermeasure_name": "Do not expose profiling to the web (OpenShift)",
    "countermeasure_solution": "Do not set `OPENSHIFT_PROFILE` parameter to `web`, which would expose the web interface on localhost.\n\nAlso, do not disable the scheduler profiling because it would be ignored by OpenShift and may cause confusion.",
    "weakness_title_read_only": "Exposing profiling to the web (OpenShift)",
    "weakness_id_read_only": "P1462",
    "weakness": "cb729002-d2bd-46a6-beab-fcf313046a02",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2019-09-16T12:17:53.388000-04:00",
    "last_updated": "2023-04-19T23:24:55.416000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1970",
    "universal_id": "f2eb8c11-7b5f-471d-837b-7c98898945e4",
    "countermeasure_name": "Verify that profiling is not exposed to the web (OpenShift)",
    "countermeasure_solution": "Run the following command:\n\n```\ngrep OPENSHIFT_PROFILE /etc/origin/master/master.env\n```\n\nVerify that `OPENSHIFT_PROFILE=web` is NOT returned.\n\nAlso, verify that the administrator has not disabled OpenShift's default configuration for the scheduler profiling:\n\n```\ngrep -A2 profiling /etc/origin/master/master-config.yaml\n```\n\nIf the following is returned, this test fails:\n\n```\nkubernetesMasterConfig:\n    schedulerArguments:\n        profiling:\n            - false\n```",
    "weakness_title_read_only": "Exposing profiling to the web (OpenShift)",
    "weakness_id_read_only": "P1462",
    "weakness": "cb729002-d2bd-46a6-beab-fcf313046a02",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2019-09-16T12:17:53.407000-04:00",
    "last_updated": "2023-05-11T12:49:18.671000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1971",
    "universal_id": "8356f4c3-b065-44b5-9fc8-81596207caee",
    "countermeasure_name": "Adjust the terminated-pod-gc-threshold argument as needed (OpenShift)",
    "countermeasure_solution": "Adjust the `terminated-pod-gc-threshold` argument as needed.\n\nEdit the Controller Manager pod specification file `/etc/kubernetes/manifests/kube-controller-manager.yaml` on the master node and set the `--terminated-pod-gc-threshold` to an appropriate threshold. This value refers to the number of terminated pods that can exist before the garbage collector starts deleting terminated pods.\n \nFor example:\n ```--terminated-pod-gc-threshold=10```\n\nThere are two types of garbage collection performed on an OpenShift Container Platform node:\n\n- Container garbage collection, which removes terminated containers.\n- Image garbage collection, which removes images not referenced by any running pods.\n\nContainer garbage collection can use eviction thresholds. Image garbage collection relies on disk usage, as reported by cAdvisor on the node, to decide which images to remove from the node. Default values are found [here]( https://github.com/openshift/kubernetes-kubelet/blob/origin-4.5-kubernetes-1.18.3/config/v1beta1/types.go#L554-L604).\n\nThe OpenShift administrator can configure how OpenShift Container Platform performs garbage collection by creating a `kubeletConfig` object for each Machine Config Pool, using any combination of the following:\n\n- soft eviction for containers\n- hard eviction for containers\n- eviction for images",
    "weakness_title_read_only": "Inappropriate terminated-pod-gc-threshold value (OpenShift)",
    "weakness_id_read_only": "P1463",
    "weakness": "371833a2-2f73-4274-b55c-21d24ce3d27e",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2019-09-16T12:17:53.515000-04:00",
    "last_updated": "2023-04-19T23:26:04.512000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1972",
    "universal_id": "424fdda1-7103-4652-9817-45370564dfc9",
    "countermeasure_name": "Verify that the terminated-pod-gc-threshold and eviction arguments are set as appropriate (OpenShift)",
    "countermeasure_solution": "* Run the following command on the master node to verify that the `--terminated-pod-gc-threshold` argument is set as appropriate.\n```\nps -ef | grep kube-controller-manager\n```\n\n* Run the following command for each updated configpool\n\n```\noc describe machineconfigpool <name>\n```\nFor example:\n```\noc describe machineconfigpool master\noc describe machineconfigpool worker\n```\nAlso verify the values for the following are set as appropriate.\n`eviction-soft` `evictionSoftGracePeriod` `evictionHard` `evictionPressureTransitionPeriod`",
    "weakness_title_read_only": "Inappropriate terminated-pod-gc-threshold value (OpenShift)",
    "weakness_id_read_only": "P1463",
    "weakness": "371833a2-2f73-4274-b55c-21d24ce3d27e",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2019-09-16T12:17:53.529000-04:00",
    "last_updated": "2021-06-25T14:47:40.282000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1973",
    "universal_id": "71bafdfa-de24-4574-a6a4-aa1306084af5",
    "countermeasure_name": "Do not disable use-service-account-credentials argument (OpenShift)",
    "countermeasure_solution": "In OpenShift 4, `--use-service-account-credentials` is set to `true` by default for the Controller Manager.\nThe OpenShift Controller Manager operator manages and updates the OpenShift Controller Manager. \nThe Kubernetes Controller Manager operator manages and updates the [Kubernetes Controller Manager](https://github.com/kubernetes/kubernetes) deployed on top of OpenShift. This operator is configured via [KubeControllerManager](https://github.com/openshift/api/blob/master/operator/v1/types_kubecontrollermanager.go) custom resource.\n\nThe bootstrap configuration and overrides are available here:\n\n- [kube-controller-manager-pod](https://github.com/openshift/cluster-kube-controller-manager-operator/blob/release-4.5/bindata/bootkube/bootstrap-manifests/kube-controller-manager-pod.yaml)\n\n- [bootstrap-config-overrides](https://github.com/openshift/cluster-kube-controller-manager-operator/blob/release-4.5/bindata/bootkube/config/bootstrap-config-overrides.yaml)",
    "weakness_title_read_only": "Disabling use-service-account-credentials argument (OpenShift)",
    "weakness_id_read_only": "P1464",
    "weakness": "258780a4-742c-429a-88fc-41e41621eaca",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2019-09-16T12:17:53.578000-04:00",
    "last_updated": "2023-04-19T23:27:38.445000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1974",
    "universal_id": "638357c4-5219-4672-aa55-823edb849af1",
    "countermeasure_name": "Verify that use-service-account-credentials is not disabled (OpenShift)",
    "countermeasure_solution": "Run the following command on the master node to verify that the `--use-service-account-credentials` argument is set to `true`.\n```\noc get configmaps config -n openshift-kube-controller-manager -ojson | \\\n  jq -r '.data[\"config.yaml\"]' | \\\n  jq -r '.extendedArguments[\"use-service-account-credentials\"][]'\n```",
    "weakness_title_read_only": "Disabling use-service-account-credentials argument (OpenShift)",
    "weakness_id_read_only": "P1464",
    "weakness": "258780a4-742c-429a-88fc-41e41621eaca",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2019-09-16T12:17:53.591000-04:00",
    "last_updated": "2023-05-11T12:49:19.537000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1975",
    "universal_id": "d34b9135-6ba0-4788-b89e-2f97a8e49fc6",
    "countermeasure_name": "Do not change the default setting for service-account-private-key-file (OpenShift)",
    "countermeasure_solution": "Do not change the default setting for the `service-account-private-key-file`.\nBy default, OpenShift starts the controller manager with `service-account-private-key-file` set to `/etc/kubernetes/static-pod-resources/secrets/service-account-private-key/service-account.key`\n\nThe bootstrap configuration and overrides are available here:\n\n- [kube-controller-manager-pod](https://github.com/openshift/cluster-kube-controller-manager-operator/blob/release-4.5/bindata/bootkube/bootstrap-manifests/kube-controller-manager-pod.yaml)\n- [bootstrap-config-overrides](https://github.com/openshift/cluster-kube-controller-manager-operator/blob/release-4.5/bindata/bootkube/config/bootstrap-config-overrides.yaml)",
    "weakness_title_read_only": "Changing the default service-account-private-key-file (OpenShift)",
    "weakness_id_read_only": "P1465",
    "weakness": "3d34cb93-eb62-4731-9b86-1557a45d033e",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2019-09-16T12:17:53.653000-04:00",
    "last_updated": "2023-04-19T23:28:29.809000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1976",
    "universal_id": "49551ee5-837a-46c2-9634-eecb92da53c0",
    "countermeasure_name": "Verify that the service-account-private-key-file argument is properly set (OpenShift)",
    "countermeasure_solution": "Run the following command to verify that the `--service-account-private-key-file` argument is correctly set:\n```\noc get configmaps config -n openshift-kube-controller-manager -ojson |\njq -r '.data[\"config.yaml\"]' |\njq -r '.extendedArguments[\"service-account-private-key-file\"][]'\n```\nMake sure that the following is returned:\n`/etc/kubernetes/static-pod-resources/secrets/service-account-private-key/service-account.key`",
    "weakness_title_read_only": "Changing the default service-account-private-key-file (OpenShift)",
    "weakness_id_read_only": "P1465",
    "weakness": "3d34cb93-eb62-4731-9b86-1557a45d033e",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2019-09-16T12:17:53.667000-04:00",
    "last_updated": "2023-05-11T12:49:20.281000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1977",
    "universal_id": "8f720af7-ffc0-4399-bd0c-3fdc8f938290",
    "countermeasure_name": "Ensure that root-ca-file is properly set (OpenShift)",
    "countermeasure_solution": "Make sure that the `--root-ca-file` argument is set as appropriate.\nBy default, OpenShift sets the Kubernetes Controller Manager `root-ca-file` to `/etc/kubernetes/static-pod-resources/configmaps/serviceaccount-ca/ca-bundle.crt`.\n\nIt allows pods to verify the API server's serving certificate before establishing connections.",
    "weakness_title_read_only": "Changing the default root-ca-file (OpenShift)",
    "weakness_id_read_only": "P1466",
    "weakness": "c9743314-f201-4ad1-ba6e-bbf08cc6cbc4",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2019-09-16T12:17:53.729000-04:00",
    "last_updated": "2023-04-19T23:29:32.181000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1978",
    "universal_id": "f538dbd1-fe98-4123-bb98-5a1d45a881a4",
    "countermeasure_name": "Verify that the root-ca-file argument is not set (OpenShift)",
    "countermeasure_solution": "Run the following command on the master node to verify that the `--root-ca-file` argument exists:\n```\nps -ef | grep kube-controller-manager\n```\n\nRun the following command to verify that the `--root-ca-file` argument exists and is set to `/etc/kubernetes/static-pod-resources/configmaps/serviceaccount-ca/ca-bundle.crt`:\n```\noc get configmaps config -n openshift-kube-controller-manager -ojson | \\\n  jq -r '.data[\"config.yaml\"]' | \\\n  jq -r '.extendedArguments[\"root-ca-file\"][]'\n```\nFor more information, see the documentation [here](https://github.com/openshift/cluster-kube-controller-manager-operator/blob/release-4.5/bindata/bootkube/config/bootstrap-config-overrides.yaml).",
    "weakness_title_read_only": "Changing the default root-ca-file (OpenShift)",
    "weakness_id_read_only": "P1466",
    "weakness": "c9743314-f201-4ad1-ba6e-bbf08cc6cbc4",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2019-09-16T12:17:53.742000-04:00",
    "last_updated": "2023-05-11T12:49:21.024000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1979",
    "universal_id": "98cc336e-b5b1-4ef6-8806-c1e1d4f7fdf7",
    "countermeasure_name": "Never give pods more privileges than required (OpenShift)",
    "countermeasure_solution": "Never provide pods more privileges than required. Similar to the way that RBAC resources control user access, administrators can use Security Context Constraints (SCCs) to control permissions for pods. These permissions include actions that a pod, a collection of containers, can perform and what resources it can access. You can use SCCs to define a set of conditions that a pod must run with in order to be accepted into the system. However, giving unncessary privilges to the pods is not desirable.\n\n- A Pod Security Policy (SCC) is a cluster-level resource that controls security settings for pods. \n- PodSecurityPolicies are used in conjunction with the PodSecurityPolicy admission controller plugin.\n- OpenShift uses the Security Context Constraint (SCC) admission controller plugin instead of PodSecurityPolicies. \n- Do not disable the SCC plugin\n- Do not enable the PSP plugin",
    "weakness_title_read_only": "Giving unnecessary privileges to the pods (OpenShift)",
    "weakness_id_read_only": "P1467",
    "weakness": "d3c543b4-eac4-4a38-9aa9-8a9387af8a09",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2019-09-16T12:17:53.809000-04:00",
    "last_updated": "2023-04-25T16:35:54.110000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1980",
    "universal_id": "eef6091e-7131-41a9-aadc-c96f040ba85f",
    "countermeasure_name": "Verify that Security Context Constraints get applied (OpenShift)",
    "countermeasure_solution": "The set of SCCs that admission uses to authorize a pod are determined by the user identity and groups that the user belongs to. Additionally, if the pod specifies a service account, the set of allowable SCCs includes any constraints accessible to the service account.\n\nAdmission uses the following approach to create the final security context for the pod:\n\n- Retrieve all SCCs available for use.\n- Generate field values for security context settings that were not specified on the request.\n- Validate the final settings against the available constraints.\n- If a matching set of constraints is found, then the pod is accepted. If the request cannot be matched to an SCC, the pod is rejected.\n\nA pod must validate every field against the SCC.\n\nGet the set of SCCs with the following command:\n- oc get scc",
    "weakness_title_read_only": "Giving unnecessary privileges to the pods (OpenShift)",
    "weakness_id_read_only": "P1467",
    "weakness": "d3c543b4-eac4-4a38-9aa9-8a9387af8a09",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2019-09-16T12:17:53.823000-04:00",
    "last_updated": "2023-05-11T12:49:21.719000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1981",
    "universal_id": "bb8bd5a3-b5c5-41be-aeee-9a0ae405bb9e",
    "countermeasure_name": "Enable the RotateKubeletServerCertificate feature gate (OpenShift)",
    "countermeasure_solution": "Make sure that the `RotateKubeletServerCertificate` argument is enabled on controller-manager. By default, `RotateKubeletServerCertificate` is set to `true`.",
    "weakness_title_read_only": "Lack of certificate rotation (OpenShift)",
    "weakness_id_read_only": "P1468",
    "weakness": "b7e75712-b8d8-4a2a-9086-9f72a76fa18a",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2019-09-16T12:17:53.871000-04:00",
    "last_updated": "2023-04-18T08:53:16.395000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1982",
    "universal_id": "5503a952-731f-45b9-8312-446b88f71486",
    "countermeasure_name": "Verify that RotateKubeletServerCertificate is set to true (OpenShift)",
    "countermeasure_solution": "Run the following command to verify that `RotateKubeletServerCertificate` argument exists and is set to `true`.\n```\noc get configmaps config -n openshift-kube-controller-manager -ojson |   jq -r '.data[\"config.yaml\"]' |   jq -r '.extendedArguments[\"feature-gates\"][]'\n```\nResult:\n`--feature-gates`=`RotateKubeletServerCertificate`=`true`",
    "weakness_title_read_only": "Lack of certificate rotation (OpenShift)",
    "weakness_id_read_only": "P1468",
    "weakness": "b7e75712-b8d8-4a2a-9086-9f72a76fa18a",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2019-09-16T12:17:53.886000-04:00",
    "last_updated": "2021-06-25T14:47:44.718000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1983",
    "universal_id": "7682a8d3-b37a-4abd-b834-f6e805948d0b",
    "countermeasure_name": "Set permissions for sensitive files properly (OpenShift)",
    "countermeasure_solution": "## 1. Set the permissions of API server, controller manager, scheduler etcd pod specification files to **644** or more restrictive.\n\nThe OpenShift API server is managed as a deployment. The pod specification yaml for openshift-apiserver is stored in etcd.\nThe Kube API Server is managed as a static pod. The `kube-apiserver` is mounted via hostpath to the kube-apiserver pods via `/etc/kubernetes/static-pod-resources/kube-apiserver-pod.yaml` with permissions **0644**.\n\n* `kube-controller-manager-pod.yaml` is mounted via hostpath to the kube-controller-manager pods via `/etc/kubernetes/static-pod-resources/kube-controller-manager-pod.yaml` with permissions **0644**.\n* `openshift-kube-scheduler-pod.yaml` file is mounted via hostpath to the kube-controller-manager pods via `/etc/kubernetes/static-pod-resources/kube-scheduler-pod.yaml` with permissions **0644**.\n* In OpenShift 4, starting with OpenShift 4.4, the etcd pod specification file is generated by the cluster etcd operator. The pod specification file is created on control plane nodes at `/etc/kubernetes/manifests/etcd-member.yaml`with permissions **0644**.\n\nBy default, in OpenShift 4, the `kube-apiserver-pod.yaml`, `kube-controller-manager-pod.yaml`, ` openshift-kube-scheduler-pod.yaml`and `etcd-pod.yaml`  files have permissions of **0644**.\n\n## 2. Set the ownership of API server, controller manager, scheduler and etcd pod specification files ownership  to **root:root**\n\nBy default, in OpenShift 4, the `kube-apiserver-pod.yaml`, `kube-controller-manager-pod.yaml`, ` openshift-kube-scheduler-pod.yaml`  and `etcd-pod.yaml`  files ownership is set to **root:root**.\n\n\n## 3. Set the Container Network Interface file permissions to 644 or more restrictive.\n\n## 4. Set the Container Network Interface ownership to **root:root**.\n\nThe default Pod network must be configured during cluster installation. By default, the CNO deploys the OpenShift SDN as the default Pod network.\nEnsure that the Container Network Interface file permissions, multus, openshift-sdn and Open vSwitch (OVS) file permissions are set to 644 or more restrictive. The SDN components are deployed as DaemonSets across the master/worker nodes with controllers limited to control plane nodes. OpenShift deploys OVS as a network overlay by default. Various configurations (ConfigMaps and other files managed by the operator via hostpath but stored on the container hosts) are stored in the following locations:\n\nCNI/Multus (pod muluts):\n\n- `/host/etc/cni/net.d = CNI_CONF_DIR`\n- `/host/var/run/multus/cni/net.d = multus config dir`\n\n SDN (pod ovs; daemonset; app=ovs):\n\n- `/var/lib/cni/networks/openshift-sdn` `/var/run/openshift-sdn`\n\nOVS (container openvswitch):\n\n- `/var/run/openvswitch`  `/etc/openvswitch`  ` /run/openvswitch`\n\nIn OpenShift 4, the default values are:\n\n- `/host/etc/cni/net.d/00-multus.conf = 600 /host/var/run/multus/cni/net.d/80-openshift-network.conf = 644`\n- `/var/lib/cni/networks/openshift-sdn/* = 644`\n- `/var/run/openshift-sdn/cniserver/config.json = 444`\n- `/var/run/openvswitch/ovs-vswitchd.pid = 644`\n- `/etc/openvswitch/conf.db = 644`\n- `/etc/openvswitch/system-id.conf = 644`\n- `/etc/openvswitch/.conf.db.~lock~ = 600 `\n- `/run/openvswitch/ovs-vswitchd.pid = 644`\n- `/run/openvswitch/ovsdb-server.pid = 644`\n\nIn OpenShift 4, the default file ownership is root:root for CNI Multus and SDN and openvswitch:openvswitch for the OVS plugin.\n\n- `/host/etc/cni/net.d/00-multus.conf = root:root`\n- `/host/var/run/multus/cni/net.d/80-openshift-network.conf = root:root`\n- `/var/lib/cni/networks/openshift-sdn = root:root `\n- `/var/run/openshift-sdn = root:root \n- `/var/run/openvswitch = openvswitch:openvswitch`\n- `/etc/openvswitch = openvswitch:openvswitch`\n- `/run/openvswitch = openvswitch:openvswitch`\n\n## 5. Set the `admin.conf` file permissions to **644** or more restrictive.\n\n## 6. Set the `admin.conf` file ownership  to **root:root**\n\nIn OpenShift 4 the admin config file is stored in `/etc/kubernetes/kubeconfig` with permissions **644**. \n\n- By default, in OpenShift 4, kubeconfig has permissions of **644** and ownership is set to **root:root.**\n\n\n## 7. Set the `etcd` data directory permissions to **700** or more restrictive\n\n## 8. Set the `etcd` data directory ownership  to **etcd:etcd**\n\n## 9. Set the kubelet service file permissions to **644** or more restrictive.\n\nKubelet is run as a systemd unit and its configuration file is created with **644** permissions.\n\n- By default, the kubelet service file has permissions of **644**.\n\n## 10. Set the kubelet service file ownership to **root:root**.\n\n- By default, kubelet service file ownership is set to **root:root**.\n\n## 11. Set the certificate authorities file permissions to **644**.\n\nThe Client CA location for the kubelet is defined in `/etc/kubernetes/kubelet.conf`. The `/etc/kubernetes/kubelet-ca.crt` file has permissions **644**.\n\n- By default, in OpenShift 4, the `--client-ca-file` is set to `/etc/kubernetes/kubelet-ca.crt` with permissions set to **644**.\n\n## 12. Set the certificate authorities file ownership to **root:root**.\n\nThe Client CA location for the kubelet is defined in `/etc/kubernetes/kubelet.conf`. The `/etc/kubernetes/kubelet-ca.crt` file has ownership root:root.\n\n- By default, in OpenShift 4, the `--client-ca-file` is set to `/etc/kubernetes/kubelet-ca.crt` with ownership **root:root**.\n\n## 13. If proxy kubeconfig file exists ensure permissions are set to **644** or more restrictive \n\nIn OpenShift 4, the `kube-proxy` runs within the sdn pods, which copies the kubeconfig from a configmap to the container at `/tmp/kubeconfig`, with **644** permissions.\n\n- By default, `kube-proxy` config file has permissions of **644**.\n\n## 14. If proxy kubeconfig file exists ensure ownership is set to **root:root**\n\n- By default, proxy file ownership is set to **root:root**.\n\n## 15. Set the `kubelet.conf` file permissions to **644** or more restrictive.\n\n- By default, the node's kubeconfig is created with **644** permissions.\n\n## 16. Set the `kubelet.conf` file ownership to **root:root**\n\nBy default, the node's kubeconfig is created with root:root ownership. \n\n## 17. Set the `kublet.conf` file permissions to **600**\n\nThe kubelet reads various parameters, including security settings, from a config file specified by the `--config` argument. \nIn OpenShift 4, the `kublet.conf` file is managed by the Machine Config Operator. The kubelet config file is found at `/var/lib/kubelet/kubeconfig`.\n\n- By default, in OpenShift 4, the `/var/lib/kubelet/config.yaml` file has permissions of **600**\n\n## 18. Set the `kublet.conf` file ownership to **root:root**\n\nBy default, `/var/lib/kubelet/config.yaml` file is owned by **root:root**.",
    "weakness_title_read_only": "Improper permissions for sensitive files (OpenShift)",
    "weakness_id_read_only": "P1469",
    "weakness": "5489bd56-aa30-403a-a814-0c871e012376",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2019-09-16T12:17:54.150000-04:00",
    "last_updated": "2023-04-25T16:20:50.209000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1984",
    "universal_id": "15b0b858-a25e-41a7-b39c-1f332523115e",
    "countermeasure_name": "Verify the permissions for the configuration files (OpenShift)",
    "countermeasure_solution": "### Master Node Configuration Files\n\nRun the following commands:\n\n* Check `kube-apiserver` pod specification file permissions\n```\nfor i in $( oc get pods -n openshift-kube-apiserver -l app=openshift-kube-apiserver -o name )\ndo\n  oc exec  -n openshift-kube-apiserver $i -- \\\n  stat -c %a  /etc/kubernetes/static-pod-resources/kube-apiserver-pod.yaml\ndone\n```\n* Check `kube-apiserver` pod specification file ownership\n```\nfor i in $( oc get pods -n openshift-kube-apiserver -l app=openshift-kube-apiserver -o name )\ndo\n  oc exec  -n openshift-kube-apiserver $i -- \\\n  stat -c %U:%G  /etc/kubernetes/static-pod-resources/kube-apiserver-pod.yaml\ndone\n```\n* Check `openshift-kube-controller-manager` pod specification file permissions\n```\nfor i in $( oc get pods -n openshift-kube-controller-manager -o name -l app=kube-controller-manager)\ndo\n  oc exec  -n openshift-kube-controller-manager $i -- \\\n  stat -c %a /etc/kubernetes/static-pod-resources/kube-controller-manager-pod.yaml\ndone\n```\n* Check `openshift-kube-controller-manager` pod specification file ownership\n```\nfor i in $( oc get pods -n openshift-kube-controller-manager -o name -l app=kube-controller-manager)\ndo\n  oc exec  -n openshift-kube-controller-manager $i -- \\\n  stat -c %U:%G /etc/kubernetes/static-pod-resources/kube-controller-manager-pod.yaml\ndone\n```\n* Verify `openshift-kube-scheduler` permissions\n```\nfor i in $(oc get pods -n openshift-kube-scheduler -l app=openshift-kube-scheduler -o name)\n do\n  oc exec -n openshift-kube-scheduler $i -- \\\n  stat -c %a /etc/kubernetes/static-pod-resources/kube-scheduler-pod.yaml\n done\n```\n* Verify `openshift-kube-scheduler` ownership\n```\nfor i in $(oc get pods -n openshift-kube-scheduler -l app=openshift-kube-scheduler -o name)\n do\n  oc exec -n openshift-kube-scheduler $i -- \\\n  stat -c %U:%G /etc/kubernetes/static-pod-resources/kube-scheduler-pod.yaml\n done\n```\n* Verify `openshift-etcd` permissions\n```\nfor i in $(oc get pods -n openshift-etcd -l app=etcd -o name | grep etcd )\ndo\n  echo \"check pod $i\"\n  oc rsh  -n openshift-etcd  $i \\\n stat -c %a /etc/kubernetes/manifests/etcd-pod.yaml\ndone\n```\n* Verify `openshift-etcd` ownership\n```\nfor i in $(oc get pods -n openshift-etcd -l app=etcd -o name | grep etcd )\ndo\n  echo \"check pod $i\"\n  oc rsh  -n openshift-etcd  $i \\\n stat -c %U:%G /etc/kubernetes/manifests/etcd-pod.yaml\ndone\n```\nEnsure the persmissions are set to **0644** and the ownerships are set to **root:root**.\n\n\n### Run the following commands:\n\n* Needs verification for CNI multus\n```\nfor i in $(oc get pods -n openshift-multus -l app=multus -oname); do  oc exec -n openshift-multus $i --  /bin/bash -c \"stat -c \\\"%a %n\\\" /host/etc/cni/net.d/*.conf\"; done\n\nfor i in $(oc get pods -n openshift-multus -l app=multus -oname); do  oc exec -n openshift-multus $i --  /bin/bash -c \"stat -c \\\"%a %n\\\" /host/var/run/multus/cni/net.d/*.conf\"; done\n```\n* Needs verification for SDN pods\n```\nfor i in $(oc get pods -n openshift-sdn -l app=sdn -oname);  do   oc exec -n openshift-sdn $i --   find /var/lib/cni/networks/openshift-sdn -type f -exec stat -c %a {} \\;;  done\n\nfor i in $(oc get pods -n openshift-sdn -l app=sdn -oname); do  oc exec -n openshift-sdn $i -- find /var/run/openshift-sdn -type f -exec stat -c %a {} \\;; done\n```\n\n* Needs verification for OVS pods\n```\nfor i in $(oc get pods -n openshift-sdn -l app=ovs -oname);  do   oc exec -n openshift-sdn $i --   find /var/run/openvswitch -type f -exec stat -c %a {} \\;;  done \n\nfor i in $(oc get pods -n openshift-sdn -l app=ovs -oname);  do   oc exec -n openshift-sdn $i --   find /etc/openvswitch -type f -exec stat -c %a {} \\;;  done \n\nfor i in $(oc get pods -n openshift-sdn -l app=ovs -oname);  do   oc exec -n openshift-sdn $i --   find /run/openvswitch -type f -exec stat -c %a {} \\;; \ndone \n```\nVerify that the config files for the CNI multus pods have permissions of **644** or more restrictive.\n\n`/host/etc/cni/net.d/00-multus.conf = 600` `/host/var/run/multus/cni/net.d/80-openshift-network.conf = 644`\n\nVerify that the SDN pods permissions are **644** or more restrictive.\n\n`/var/lib/cni/networks/openshift-sdn/* = 644` `/var/run/openshift-sdn/cniserver/config.json = 444`\n\nVerify that the OVS permissions are **644** or more restrictive.\n\n- `/var/run/openvswitch/ovs-vswitchd.pid = 644` \n- `/etc/openvswitch/conf.db = 644 /etc/openvswitch/system-id.conf = 644`\n- `/etc/openvswitch/.conf.db.~lock~ = 600`\n- `/run/openvswitch/ovs-vswitchd.pid = 644` \n- `/run/openvswitch/ovsdb-server.pid = 644`\n\n\n### Run the following commands:\n\n* Needs verification for CNI multus\n```\nfor i in $(oc get pods -n openshift-multus -l app=multus -oname); do  oc exec -n openshift-multus $i --  /bin/bash -c \"stat -c \\\"%U:%G %n\\\" /host/etc/cni/net.d/*.conf\"; done\n\nfor i in $(oc get pods -n openshift-multus -l app=multus -oname); do  oc exec -n openshift-multus $i --  /bin/bash -c \"stat -c \\\"%U:%G %n\\\" /host/var/run/multus/cni/net.d/*.conf\"; done\n```\n\n* Needs verification for SDN pods\n```\nfor i in $(oc get pods -n openshift-sdn -l app=sdn -oname);  do   oc exec -n openshift-sdn $i --   find /var/lib/cni/networks/openshift-sdn -type f -exec stat -c \\\"%U:%G\\\" {} \\;;  done\n\nfor i in $(oc get pods -n openshift-sdn -l app=sdn -oname); do  oc exec -n openshift-sdn $i -- find /var/run/openshift-sdn -type f -exec stat -c %U:%G {} \\;; done\n```\n* Needs verification for OVS pods in 4.5\n```\nfor i in $(oc get pods -n openshift-sdn -l app=ovs -oname);  do   oc exec -n openshift-sdn $i --   find /var/run/openvswitch -type f -exec stat -c %U:%G {} \\;;  done \n\nfor i in $(oc get pods -n openshift-sdn -l app=ovs -oname);  do   oc exec -n openshift-sdn $i --   find /etc/openvswitch -type f -exec stat -c %U:%G {} \\;;  done \n\nfor i in $(oc get pods -n openshift-sdn -l app=ovs -oname);  do   oc exec -n openshift-sdn $i --   find /run/openvswitch -type f -exec stat -c %U:%G {} \\;;  done \n```\n\nVerify that the CNI and SDN file ownership is set to **root:root**.\n\n- `/host/etc/cni/net.d/00-multus.conf = root:root` \n- `/host/var/run/multus/cni/net.d/80-openshift-network.conf = root:root`\n- `/var/lib/cni/networks/openshift-sdn = root:root`\n- `/var/run/openshift-sdn = root:root`\n\nVerify that the OVS file ownership is set to `openvswitch:openvswitch`\n\n- `/var/run/openvswitch = openvswitch:openvswitch` \n- `/etc/openvswitch = openvswitch:openvswitch`\n- `/run/openvswitch = openvswitch:openvswitch`\n\n\n### Run the following commands.\n\n* Check etcd data directory permissions\n```\nfor i in $(oc get pods -n openshift-etcd -l app=etcd -oname); do oc exec -n openshift-etcd -c etcd $i -- stat -c %a%n /var/lib/etcd/member; done\n```\nVerify that the permissions are **700**.\n\n* Check etcd data directory ownership \n```\nfor i in $(oc get pods -n openshift-etcd -l app=etcd -oname); do oc exec -n openshift-etcd -c etcd $i -- stat -c %U:%G /var/lib/etcd/member; done\n```\nVerify that the ownership is set to **root:root**.\n\n\n\n### Run the following commands.\n\n* Check the admin config file permissions\n```\nfor i in $(oc get nodes  -o name)\n do\n  echo $i\n  oc debug $i --  <<EOF\n chroot /host\n stat -c%a /etc/kubernetes/kubeconfig\nEOF\n done\n ```\n Verify that the permissions are **644** or more restrictive.\n\n* Check the admin config file ownership\n```\nfor i in $(oc get nodes  -o name)\n do\n  echo $i\n  oc debug $i --  <<EOF\n chroot /host\n stat -c %U:%G  /etc/kubernetes/kubeconfig\nEOF\n done\n ```\nVerify that the ownership is set to **root:root**.\n\n## Worker Node Configuration Files:\n\n### Run the following command:\n\n* Needs verification for kubelet service file permissions\n```\nfor node in $(oc get nodes -o jsonpath='{.items[*].metadata.name}')\ndo\n oc debug node/${node} -- chroot /host stat -c %a /etc/systemd/system/kubelet.service\ndone\n```\nVerify that the permissions are **644** or more restrictive.\n\n* Needs verification for kubelet service file ownership\n```\nfor node in $(oc get nodes -o jsonpath='{.items[*].metadata.name}')\ndo\n oc debug node/${node} -- chroot /host stat -c %U:%G /etc/systemd/system/kubelet.service\ndone\n```\nVerify that the ownership is set to root:root for each node.\n\n### Run the following command:\n\n* Needs verification for kube-proxy-config.yaml file permissions\n```\nfor i in $(oc get pods -n openshift-sdn -l app=sdn -oname)\ndo\n    oc exec -n openshift-sdn $i -- \\\n      stat -Lc %a /config/kube-proxy-config.yaml\ndone\n```\nVerify that the `kube-proxy-config.yaml` file has permissions of **644**.\n\n* Needs verification for kube-proxy-config.yaml file ownership\n```\nfor i in $(oc get pods -n openshift-sdn -l app=sdn -oname)\ndo\n    oc exec -n openshift-sdn $i -- \\\n      stat -Lc %U:%G /config/kube-proxy-config.yaml\ndone\n```\nVerify that the `kube-proxy-config.yaml` file has ownership **root:root**.\n\n* Needs verification for `kubelet.conf` file permissions\n```\nfor node in $(oc get nodes -o jsonpath='{.items[*].metadata.name}')\ndo\n oc debug node/${node} -- chroot /host stat -c %a /etc/kubernetes/kubelet.conf\ndone\n```\nVerify that the permissions are **644**.\n\n* Needs verification for `kubelet.conf` file ownership\n```\nfor node in $(oc get nodes -o jsonpath='{.items[*].metadata.name}')\ndo\n oc debug node/${node} -- chroot /host stat -c %U:%G /etc/kubernetes/kubelet.conf\ndone\n```\nVerify that the ownership is set to **root:root**\n\n* Needs verification for `--client-ca-file` file permissions\n```\nfor node in $(oc get nodes -o jsonpath='{.items[*].metadata.name}')\ndo\n oc debug node/${node} -- chroot /host stat -c %a /etc/kubernetes/kubelet-ca.crt\ndone\n```\nVerify that the permissions are **644**.\n\n* Needs verification for `--client-ca-file` file ownership\n```\nfor node in $(oc get nodes -o jsonpath='{.items[*].metadata.name}')\ndo\n oc debug node/${node} -- chroot /host stat -c %U:%G /etc/kubernetes/kubelet-ca.crt\ndone\n```\nVerify that the ownership is set to **root:root**.\n\n* Needs verification for `kublet.conf` file permissions\n```\nfor node in $(oc get nodes -o jsonpath='{.items[*].metadata.name}')\ndo\n oc debug node/${node} -- chroot /host stat -c %a /var/lib/kubelet/kubeconfig\ndone\n```\nVerify that the permissions are **600**.\n\n* Needs verification for `kublet.conf` file ownership\n```\nfor node in $(oc get nodes -o jsonpath='{.items[*].metadata.name}')\ndo\n oc debug node/${node} -- chroot /host stat -c %U:%G /var/lib/kubelet/kubeconfig\ndone\n```\nVerify that the ownership is set to **root:root**.",
    "weakness_title_read_only": "Improper permissions for sensitive files (OpenShift)",
    "weakness_id_read_only": "P1469",
    "weakness": "5489bd56-aa30-403a-a814-0c871e012376",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2019-09-16T12:17:54.288000-04:00",
    "last_updated": "2023-05-11T12:49:22.408000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1985",
    "universal_id": "7365d023-90c2-4f3b-bf40-59087323d985",
    "countermeasure_name": "Secure etcd communication (OpenShift)",
    "countermeasure_solution": "By default, OpenShift uses X.509 certificates to provide secure communication to etcd. Maintain the the OpenShift's default configuration for the following parameters:\n\nOpenShift installation generates these files and sets the arguments appropriately. \n\n* OpenShift does not use the `etcd-certfile` or` etcd-keyfile` flags.\n* OpenShift does not use the `--peer-auto-tls` argument and this configuration cannot be changed.\n* Keys and certificates for control plane components like `kube-apiserver`,` kube-controller-manager`, `kube-scheduler` and `etcd` are stored with their respective static pod configurations in the directory `/etc/kubernetes/static-pod-resources/*/secrets`.\n\nThe following certificates are generated and used by etcd and other processes that communicate with etcd:\n\n* Client certificates: Client certificates are currently used by the API server only, and no other service should connect to etcd directly except for the proxy. Client secrets (`etcd-client`, `etcd-metric-client`, `etcd-metric-signer`, and `etcd-signer`) are added to the `openshift-config`, `openshift-monitoring`, and `openshift-kube-apiserver` namespaces.\n * Server certificates: Used by the etcd server for authenticating client requests.\n \nOpenShift configures etcd with secure communication between etcd member peers, as well as encrypted client traffic.\nOpenshift installs etcd as static pods on control plane nodes, and mounts the configuration files from **/etc/etcd/** on the host.\nThe `etcd.conf` file includes _auto-tls_, _peer-client-cert-auth_, _peer-cert-file_ and _peer-key-file_ configurations as referenced in **/etc/etcd/etcd.conf**.\n\n**OpenShift 4** includes multiple CAs providing independent chains of trust, which ensure that a platform CA will never accidentally sign a certificate that can be used for the wrong purpose, increasing the security posture of the cluster.\nThese internal self-signing CAs enable automation because the key is known to the cluster.\nThe certificates generated by each CA are used to identify a particular OpenShift platform component to another OpenShift platform component. The OpenShift CAs are managed by the cluster and are only used within the cluster.\nThis means that:\n\n* Each cluster CA can only issue certificates for its own purpose within its own cluster.\n* CAs for one OpenShift cluster cannot influence CAs for a different OpenShift cluster, thus avoiding cross-cluster interference.\n\nCluster CAs cannot be influenced by an external CA that the cluster does not control.  \n\n\nMaintain the cluster etcd operator's default configuration.\netcd is a highly-available key value store used by Kubernetes deployments for persistent storage of all of its REST API objects. These objects are sensitive in nature and:\n\n1. Should be encrypted in transit (TLS encryption) \n_Make sure that the `--cert-file` and `--key-file` arguments are set as appropriate _\nFor example:\n\n    - `--cert-file=/etc/kubernetes/static-pod-certs/secrets/etcd-all-serving/etcd-serving-ip-10-0-165-75.us-east-2.compute.internal.crt`\n    - `--key-file=/etc/kubernetes/static-pod-certs/secrets/etcd-all-serving/etcd-serving-ip-10-0-165-75.us-east-2.compute.internal.key`\n\n2. Should not be available to unauthenticated clients. You should enable the client authentication via valid certificates to secure the access to the etcd service. \n_Make sure that the `--client-cert-auth` argument is set to **true** to enable client authentication on etcd service_\n\n3. Should not be available to unauthenticated clients. Do not use self-signed certificates for TLS.\n_Make sure that the `--auto-tls` argument is set to **false**_\n\n4. Should be encrypted amongst peers in the etcd clusters (TLS encryption) \n_Make sure that the `--peer-cert-file` and `--peer-key-file` arguments are set as appropriate_\n\n5. Should be accessible only by authenticated etcd peers in the etcd cluster.\n_Make sure that the `--peer-client-cert-auth` argument is set to **true**_\n\n6. Should be accessible only by authenticated etcd peers in the etcd cluster. Hence Do not use automatically generated self-signed certificates for TLS connections between peers.\nEnsure that the --peer-auto-tls argument is set to false\n\n7. Its access should be restricted to specifically designated clients and peers only.\nAuthentication to etcd is based on whether the certificate presented was issued by a trusted certificate authority.\n_Make sure that a unique Certificate Authority (CA)is used for etcd._ (`--trusted-ca-file`,`--peer-trusted-ca-file`)",
    "weakness_title_read_only": "Unsecure etcd communication (OpenShift)",
    "weakness_id_read_only": "P1470",
    "weakness": "5edfce0e-bab9-4aa8-b602-73907641df3e",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2019-09-16T12:17:55.593000-04:00",
    "last_updated": "2023-04-26T09:03:30.558000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1986",
    "universal_id": "e0f88be9-3f68-4fda-b419-de0ef01f4166",
    "countermeasure_name": "Verify that etcd communication is secure (OpenShift)",
    "countermeasure_solution": "## 1. Encrypt REST API objects in transit (TLS encryption)\n\n### Run the following command to verify that the `--cert-file` and `--key-file` arguments are set as appropriate:\n\n* `cert-file`\n\n```\nfor i in $(oc get pods -oname -n openshift-etcd)\ndo\n    oc exec -n openshift-etcd -c etcd $i -- \\\n      ps -o command= -C etcd | sed 's/.*\\(--cert-file=[^ ]*\\).*/\\1/'\ndone\n```\n* `key-file`\n```\nfor i in $(oc get pods -oname -n openshift-etcd)\ndo\n    oc exec -n openshift-etcd -c etcd $i -- \\\n      ps -o command= -C etcd | sed 's/.*\\(--key-file=[^ ]*\\).*/\\1/'\ndone\n```\nCheck that `cert-file` and `key-file` values are returned for each etcd member:\n\n- `--cert-file=/etc/kubernetes/static-pod-certs/secrets/etcd-all-serving/etcd-serving-${ETCD_DNS_NAME}.crt`\n- `--key-file=/etc/kubernetes/static-pod-certs/secrets/etcd-all-serving/etcd-serving-${ETCD_DNS_NAME}.key`\n\nFor example:\n\n- `--cert-file=/etc/kubernetes/static-pod-certs/secrets/etcd-all-serving/etcd-serving-ip-10-0-165-75.us-east-2.compute.internal.crt`\n- ` --key-file=/etc/kubernetes/static-pod-certs/secrets/etcd-all-serving/etcd-serving-ip-10-0-165-75.us-east-2.compute.internal.key`\n\n## 2. REST API objects should not be available to unauthenticated clients\n\nYou should enable the client authentication via valid certificates to secure the access to the etcd service. \n\n### Run the following command on the etcd server node to make sure that the `--client-cert-auth` argument is set to **true** to enable client authentication on etcd service:\n\n```\nfor i in $(oc get pods -oname -n openshift-etcd)\ndo\n    oc exec -n openshift-etcd -c etcd $i -- \\\n      ps -o command= -C etcd | sed 's/.*\\(--client-cert-auth=[^ ]*\\).*/\\1/'\ndone\n```\nCheck that the `--client-cert-auth` argument is set to `true` for each etcd member.\n\n## 3. REST API objects should not be available to unauthenticated clients\n\nDo not use self-signed certificates for TLS.\n\n### Run the following command to verify --auto-tls to make sure that the `--auto-tls` argument is set to **false**:\n\n```\nfor i in $(oc get pods -oname -n openshift-etcd)\ndo\n    oc exec -n openshift-etcd -c etcd $i -- \\\n      ps -o command= -C etcd | grep -- --auto-tls=true 2>&1>/dev/null ; \\\n      echo $?\ndone\n```\nIt will return 0 if found, 1 if not found\n\n## 4. Rest API objects should be encrypted amongst peers in the etcd clusters (TLS encryption)\n### Run the following command to make sure that the `--peer-cert-file` and `--peer-key-file` arguments are set as appropriate:\n\n* `--peer-cert-file`\n```\nfor i in $(oc get pods -oname -n openshift-etcd)\ndo\n    oc exec -n openshift-etcd -c etcd $i -- \\\n      ps -o command= -C etcd | sed 's/.*\\(--peer-cert-file=[^ ]*\\).*/\\1/'\ndone\n```\n* `--peer-key-file`\n```\nfor i in $(oc get pods -oname -n openshift-etcd)\ndo\n    oc exec -n openshift-etcd -c etcd $i -- \\\n      ps -o command= -C etcd | sed 's/.*\\(--peer-key-file=[^ ]*\\).*/\\1/'\ndone\n```\nCheck that the following is returned for each etcd member. \n`--peer-cert-file=/etc/kubernetes/static-pod-certs/secrets/etcd-all-peer/etcd-peer-${ETCD_DNS_NAME}.crt`\n` --peer-key-file=/etc/kubernetes/static-pod-certs/secrets/etcd-all-peer/etcd-peer-${ETCD_DNS_NAME}.key`\n\n## 5. REST API objects should be accessible only by authenticated etcd peers in the etcd cluster\n\n### Run the following command to make sure that the --peer-client-cert-auth argument is set to true:\n\n```\nfor i in $(oc get pods -oname -n openshift-etcd)\ndo\n    oc exec -n openshift-etcd -c etcd $i -- \\\n      ps -o command= -C etcd | sed 's/.*\\(--peer-client-cert-auth=[^ ]*\\).*/\\1/'\ndone\n```\n\nCheck that the --peer-client-cert-auth argument is set to true for each etcd member.\n\n## 6. REST API objects should be accessible only by authenticated etcd peers in the etcd cluster.\n\nDo not use automatically generated self-signed certificates for TLS connections between peers.\n\n### Run the following command to make sure that --peer-auto-tls argument is set to false:\n\n```\nfor i in $(oc get pods -oname -n openshift-etcd)\ndo\n    oc exec -n openshift-etcd -c etcd $i -- \\\n      ps -o command= -C etcd | grep -- --peer-auto-tls=true 2>&1>/dev/null ; \\\n      echo $?\ndone\n```\nIt will return 0 if found, 1 if not found, check that 1 is returned for each etcd member.\n\n## 7. REST API objects' access should be restricted to specifically designated clients and peers only.\n\nAuthentication to etcd is based on whether the certificate presented was issued by a trusted certificate authority.\n\n### Run the following command to make sure that a unique Certificate Authority (CA)is used for etcd._ (--trusted-ca-file,--peer-trusted-ca-file)\n\n* --trusted-ca-file\n\n```\nfor i in $(oc get pods -oname -n openshift-etcd)\ndo\n    oc exec -n openshift-etcd -c etcd $i -- \\\n      ps -o command= -C etcd | sed 's/.*\\(--trusted-ca-file=[^ ]*\\).*/\\1/'\ndone\n```\n\n* --peer-trusted-ca-file\n\n```\nfor i in $(oc get pods -oname -n openshift-etcd)\ndo\n    oc exec -n openshift-etcd -c etcd $i -- \\\n      ps -o command= -C etcd | sed 's/.*\\(--peer-trusted-ca-file=[^ ]*\\).*/\\1/'\ndone\n```\n\nVerify that `--trusted-ca-file=/etc/kubernetes/static-pod-certs/configmaps/etcd-serving-ca/ca-bundle.crt` and `--peer-trusted-ca-file=/etc/kubernetes/static-pod-certs/configmaps/etcd-peer-client-ca/ca-bundle.crt` are returned for each member.",
    "weakness_title_read_only": "Unsecure etcd communication (OpenShift)",
    "weakness_id_read_only": "P1470",
    "weakness": "5edfce0e-bab9-4aa8-b602-73907641df3e",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2019-09-16T12:17:55.637000-04:00",
    "last_updated": "2023-05-11T12:49:23.149000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1987",
    "universal_id": "145187f2-cbbc-40ad-bbd9-001e544279d9",
    "countermeasure_name": "Follow the principle of least privilege (OpenShift)",
    "countermeasure_solution": "Use the `cluster-admin` role only when required. Review users and groups bound to `cluster-admin` and decide whether they require such access. Consider creating least-privilege roles for users and service accounts.\n\n**Note:** By default a single clusterrolebinding called `cluster-admin` is provided with the `system:masters` group as its principal.",
    "weakness_title_read_only": "Granting excessive permissions (OpenShift)",
    "weakness_id_read_only": "P1471",
    "weakness": "72e0179f-5de2-4ee0-9f40-342293bedecf",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2019-09-16T12:17:55.907000-04:00",
    "last_updated": "2023-04-18T09:14:15.348000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1988",
    "universal_id": "45382e39-429b-4e2f-8f4e-0bafc688e209",
    "countermeasure_name": "Verify that the cluster-admin role is only used where required (OpenShift)",
    "countermeasure_solution": "Verify that `cluster-admin` privilege is required for each users and groups bound to `cluster-admin`\n\nFirst, run the following command to get a list of users and service accounts with the cluster-admin role:\n```\noc get clusterrolebindings -o=custom- \ncolumns=NAME:.metadata.name,ROLE:.roleRef.name,SUBJECT:.subjects[*].kind | grep cluster-admin\n```\nReview each principal listed and ensure that cluster-admin privilege is required for it.\n\nVerify that the `kubeadmin` user no longer exists.\n\nSecond, run the followimg command to verity that `kbueadmin` is removed:\n```\noc get secrets kubeadmin -n kube-system\n``` \nNo results should be returned.",
    "weakness_title_read_only": "Granting excessive permissions (OpenShift)",
    "weakness_id_read_only": "P1471",
    "weakness": "72e0179f-5de2-4ee0-9f40-342293bedecf",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2019-09-16T12:17:55.922000-04:00",
    "last_updated": "2021-06-25T14:47:51.207000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1989",
    "universal_id": "f5d1a1cf-8c66-4545-a03e-d7e6511f6f33",
    "countermeasure_name": "Run pods with the most restrictive Security Context Constraints possible (OpenShift)",
    "countermeasure_solution": "Use the following approach to create the final security context for the pod:\n\n- Retrieve all SCCs available for use.\n- Generate field values for security context settings that were not specified on the request.\n- Validate the final settings against the available constraints.\n\nIf a matching set of constraints is found, then the pod is accepted. If the request cannot be matched to an SCC, the pod is rejected.\nA pod must validate every field against the SCC.",
    "weakness_title_read_only": "Loose access constraints for pods (OpenShift)",
    "weakness_id_read_only": "P1472",
    "weakness": "7c3628b9-f1e3-4e84-acb1-c746c2752bb7",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2019-09-16T12:17:55.980000-04:00",
    "last_updated": "2023-04-26T09:20:48.964000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1990",
    "universal_id": "9d1ec5c0-ed8f-42ac-bd27-c1eea1cdaa31",
    "countermeasure_name": "Verify Security Context Constraints as in use (OpenShift)",
    "countermeasure_solution": "Get the set of SCCs with the following command:\n```\noc get scc\n```\n\nFor each SCC, check whether privileged is enabled:\n```\nfor i in oc get scc --template '{{range .items}}{{.metadata.name}}{{\"\\n\"}}{{end}}'; do echo \"$i\"; oc describe scc $i | grep \"Allow Privileged\"; done\n```\nVerify that there is at least one SCC which does not have Allow Privileged set to true.",
    "weakness_title_read_only": "Loose access constraints for pods (OpenShift)",
    "weakness_id_read_only": "P1472",
    "weakness": "7c3628b9-f1e3-4e84-acb1-c746c2752bb7",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2019-09-16T12:17:55.998000-04:00",
    "last_updated": "2023-05-11T12:49:23.917000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1991",
    "universal_id": "3af88945-2bb8-467e-8107-300196b2b980",
    "countermeasure_name": "Restrict access to projects only to the required users (OpenShift)",
    "countermeasure_solution": "OpenShift Projects wrap Kubernetes namespaces and are used by default in OpenShift 4.\nResources in a Kubernetes cluster should be segregated by **namespace**, to allow for security controls to be applied at that level and to make it easier to manage resources.\nLimiting the scope of user permissions can reduce the impact of mistakes or malicious activities.\n\n* Use namespaces to create administrative boundaries between resources.\n    - Do not use the default namespace.\n\nBy default, Kubernetes starts with two initial namespaces:\n\n- `default` is the default namespace for objects with no other namespace\n- `kube-system` is the namespace for objects created by the Kubernetes system\n\n**Note:** Unless a namespace is specific on object creation, the default namespace will be used. A Kubernetes namespace allows you to partition created resources into logically named groups. Resources created in one namespace can be hidden from other namespaces. \n\n\nWhen a request is made to create a new project using the web console or oc new-project command, an endpoint in OpenShift Container Platform is used to provision the project according to a template, which can be customized.\n\nThe cluster administrator can allow and configure how developers and service accounts can `_create_`, or `_self-provision_`, their own projects.",
    "weakness_title_read_only": "Excessive access to projects (OpenShift)",
    "weakness_id_read_only": "P1473",
    "weakness": "90098334-86d8-403b-8824-ca790f53fb38",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2019-09-16T12:17:56.084000-04:00",
    "last_updated": "2023-04-18T09:32:24.441000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1992",
    "universal_id": "b3516195-0c60-403b-a1ff-719b9c4cd674",
    "countermeasure_name": "Verify that only required users are assigned to projects (OpenShift)",
    "countermeasure_solution": "Run this command to list objects in default namespace:\n```\noc project default\noc get all \n```\nVerify that the only entries there should be system managed resources such as the `kubernetes` and `openshift` service.\n\n- Run the following command to review the namespaces created in the cluster:\n```\noc get namespaces\n```\nVerify that these namespaces are the ones you need and are adequately administered as per your requirements.\n\nFor more information see [here](https://kubernetes.io/docs/tasks/administer-cluster/namespaces/#creating-a-new-namespace)",
    "weakness_title_read_only": "Excessive access to projects (OpenShift)",
    "weakness_id_read_only": "P1473",
    "weakness": "90098334-86d8-403b-8824-ca790f53fb38",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2019-09-16T12:17:56.099000-04:00",
    "last_updated": "2021-06-25T14:47:51.819000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1993",
    "universal_id": "93c241ed-a613-462f-bc6c-1949c8359dc7",
    "countermeasure_name": "Create restrictive network segmentation (OpenShift)",
    "countermeasure_solution": "Create network segmentation using Kubernetes NetworkPolicy. OpenShift provides multi-tenant networking isolation (using Open vSwich and VXLAN) to segregate network traffic between containers belonging to different tenants (users or applications) while running on a shared cluster. Red Hat also works with 3rd-party SDN vendors to provide the same level of capabilities integrated with OpenShift. OpenShift SDN is included as part of OpenShift subscription. OpenShift also supports Kubernetes NetworkPolicy. For stronger security, it is recommended to use NetworkPolicy for segmentation as it provides finer-grained control.",
    "weakness_title_read_only": "Lack of restrictive network segmentation (OpenShift)",
    "weakness_id_read_only": "P1474",
    "weakness": "fdc20454-eb4a-4c07-a919-e68e462d38fb",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2019-09-16T12:17:56.149000-04:00",
    "last_updated": "2023-04-18T09:37:08.204000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1994",
    "universal_id": "045f7272-f826-4c11-822f-90bc527207e2",
    "countermeasure_name": "Verify the network segmentation (OpenShift)",
    "countermeasure_solution": "Verify on masters the network plugin being used:\n\n```\ngrep networkPluginName /etc/origin/master/master-config.yaml\n```\n\nMake sure Kubernetes NetworkPolicy or a plugin with the same level of control is used.",
    "weakness_title_read_only": "Lack of restrictive network segmentation (OpenShift)",
    "weakness_id_read_only": "P1474",
    "weakness": "fdc20454-eb4a-4c07-a919-e68e462d38fb",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2019-09-16T12:17:56.164000-04:00",
    "last_updated": "2021-06-25T14:47:53.152000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1995",
    "universal_id": "56ae26bf-be17-49af-8c10-603fd5c4c3f1",
    "countermeasure_name": "Enable and configure seccomp (OpenShift)",
    "countermeasure_solution": "Enable the `seccomp` profile in your pod definitions. Change seccomp profile `unconfined` to `docker/default`.\n\nBy default, seccomp profile is set to `unconfined` which means that no seccomp profiles are enabled.\n```\ndefaultSeccompOpt = []dockerOpt{{\"seccomp\", \"unconfined\", \"\"}}\n```\nKubernetes disables `seccomp` profiles by default for historical reasons. \nIn **OpenShift 4**, CRI-O is the supported runtime. **CRI-O** runs `unconfined` by default in order to meet CRI conformance criteria.\n\nOn **RHEL CoreOS**, the default seccomp policy is associated with **CRI-O** and stored in `/etc/crio/seccomp.json`.\nThe default profile is applied when the user asks for the `runtime/default` profile via annotation to the pod and when the associated SCC allows use of the specified seccomp profile.\n\nConfiguration of allowable seccomp profiles is managed through **OpenShift Security Context Constraints**.",
    "weakness_title_read_only": "Running containers with unconfined seccomp settings (OpenShift)",
    "weakness_id_read_only": "P1475",
    "weakness": "ed8ca052-c431-4af6-8612-7ff66b03640b",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2019-09-16T12:17:56.211000-04:00",
    "last_updated": "2023-04-18T09:58:48.476000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1996",
    "universal_id": "5a79151b-6d9c-4d8e-9820-37f844821236",
    "countermeasure_name": "Verify that Security Context Constraints have been configured with seccomp (OpenShift)",
    "countermeasure_solution": "Run the following command:\n\n```\noc get scc -ocustom-columns=NAME:.metadata.name,SECCOMP-PROFILES:.seccompProfiles\n```\n\nMake sure all Security Context Constraints have been configured with seccomp.",
    "weakness_title_read_only": "Running containers with unconfined seccomp settings (OpenShift)",
    "weakness_id_read_only": "P1475",
    "weakness": "ed8ca052-c431-4af6-8612-7ff66b03640b",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2019-09-16T12:17:56.225000-04:00",
    "last_updated": "2021-06-25T14:47:48.766000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1997",
    "universal_id": "a979d73a-617c-4a87-b463-b093a3d3af1d",
    "countermeasure_name": "Manage image provenance using image controller configuration parameters (OpenShift)",
    "countermeasure_solution": "Configure image resources using image controller configuration parameters.\n\nThe `image.config.openshift.io/cluster` resource holds cluster-wide information about how to handle images.\n\nFor additional information on the image controller, see [Image configuration resources](https://docs.openshift.com/container-platform/4.5/openshift_images/image-configuration.html).",
    "weakness_title_read_only": "Lack of control on images run in a cluster (OpenShift)",
    "weakness_id_read_only": "P1476",
    "weakness": "1611601d-dc86-4a1b-8d3f-992829502992",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2019-09-16T12:17:56.273000-04:00",
    "last_updated": "2023-04-18T12:49:48.103000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1998",
    "universal_id": "aa4c7c53-c8d7-440d-b9b3-09856697ac5d",
    "countermeasure_name": "Verify image policy configuration (OpenShift)",
    "countermeasure_solution": "Review the image controller parameters in `image.config.openshift.io/cluster` resource and verify that image provenance is configured as appropriate.\n\nThe following is an example `image.config.openshift.io/cluster` resource:\n\n```\napiVersion: config.openshift.io/v1\nkind: Image\nmetadata:\n  annotations:\n    release.openshift.io/create-only: \"true\"\n  creationTimestamp: \"2019-05-17T13:44:26Z\"\n  generation: 1\n  name: cluster\n  resourceVersion: \"8302\"\n  selfLink: /apis/config.openshift.io/v1/images/cluster\n  uid: e34555da-78a9-11e9-b92b-06d6c7da38dc\nspec:\n  allowedRegistriesForImport:\n    - domainName: quay.io\n      insecure: false\n  additionalTrustedCA:\n    name: myconfigmap\n  registrySources:\n    insecureRegistries:\n    - insecure.com\n    blockedRegistries:\n    - untrusted.com\nstatus:\n  internalRegistryHostname:\n  image-registry.openshift-image-registry.svc:5000\n```",
    "weakness_title_read_only": "Lack of control on images run in a cluster (OpenShift)",
    "weakness_id_read_only": "P1476",
    "weakness": "1611601d-dc86-4a1b-8d3f-992829502992",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2019-09-16T12:17:56.287000-04:00",
    "last_updated": "2021-06-25T14:47:56.443000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T1999",
    "universal_id": "f55a79d9-8ef1-4bd8-882e-21464369c0ef",
    "countermeasure_name": "Implement strong network policies (OpenShift)",
    "countermeasure_solution": "Use `network policies` to isolate traffic in your cluster network. The **OpenShift 4** CNI plugin uses `network policies` and by default all Pods in a project are accessible from other Pods and network endpoints. \nTo isolate one or more Pods in a project, create `NetworkPolicy` objects in that project to indicate the allowed incoming connections. \nProject administrators can _create_ and _delete_ `NetworkPolicy` objects within their own project.",
    "weakness_title_read_only": "Lack of network access control (OpenShift)",
    "weakness_id_read_only": "P1477",
    "weakness": "18a3bba6-8eed-49bc-98b3-014825e2ca4b",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2019-09-16T12:17:56.348000-04:00",
    "last_updated": "2023-04-18T13:09:53.473000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2000",
    "universal_id": "0802bd41-6ab2-4120-ae79-4683f2bb461d",
    "countermeasure_name": "Verify network policies (OpenShift)",
    "countermeasure_solution": "Verify that each namespace defined in the cluster has at least one `Network Policy`.\nRun the following command to review the NetworkPolicy objects created in the cluster.\n```\noc -n all get networkpolicy\n```",
    "weakness_title_read_only": "Lack of network access control (OpenShift)",
    "weakness_id_read_only": "P1477",
    "weakness": "18a3bba6-8eed-49bc-98b3-014825e2ca4b",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2019-09-16T12:17:56.362000-04:00",
    "last_updated": "2023-05-11T12:49:24.657000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2001",
    "universal_id": "0e3e2e54-4ca2-4921-9de5-0960f87d4b63",
    "countermeasure_name": "Limit the use of privileged containers (OpenShift)",
    "countermeasure_solution": "The set of SCCs that admission uses to authorize a pod are determined by the user identity and groups that the user belongs to.\nIf the pod specifies a service account, the set of allowable SCCs includes any constraints accessible to the service account.\n\nAdmission uses the following approach to create the final security context for the pod:\n\n- Retrieve all SCCs available for use.\n- Generate field values for security context settings that were not specified on the request.\n- Validate the final settings against the available constraints.\n\nIf a matching set of constraints is found, then the pod is accepted.\nIf the request cannot be matched to an SCC, the pod is rejected.\n\nA pod must validate every field against the SCC.\n\n\nThere should be at least one Security Context Constraint (SCC) defined which does not permit privileged containers.\nIf you need to run privileged containers, this should be defined in a separate SCC and you should carefully check RBAC controls to ensure that only limited service accounts and users are given permission to access that SCC.\n\nMake sure that the `Allow Privileged` field is set to `false`, when create a SCC.\nPods defined with `spec.containers[].securityContext.privileged: true` will not be permitted.\n\n## Default Value\nBy default, *OpenShift 4* clusters include the following SCCs:\n```\nanyuid.            Allow Privileged: false          \nhostaccess.        Allow Privileged: false    \nHostmount-anyuid   Allow Privileged: false  \nhostnetwork        Allow Privileged: false      \nnode-exporter      Allow Privileged: true\nnon-root           Allow Privileged: false   \nPrivileged         Allow Privileged: true\nRestricted         Allow Privileged: false\n```",
    "weakness_title_read_only": "Using privileged containers (OpenShift)",
    "weakness_id_read_only": "P1478",
    "weakness": "7f10f1d5-7ffe-484c-81c0-ca1070840d49",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2019-09-16T12:17:56.414000-04:00",
    "last_updated": "2023-04-18T13:26:22.424000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2002",
    "universal_id": "ea9da9f9-b10e-470e-b7c8-7b877ca8349b",
    "countermeasure_name": "Verify the usage of privileged containers (OpenShift)",
    "countermeasure_solution": "Verify that there is at least one SCC which does not have `Allow Privileged ` set to `true`.\nGet the set of SCCs with the following command:\n```\noc get scc\n```\nFor each SCC, check whether privileged is enabled:\n```\nfor i in `oc get scc --template '{{range .items}}{{.metadata.name}}{{\"\\n\"}}{{end}}'`;\ndo\n    echo \"$i\"; oc describe scc $i | grep \"Allow Privileged\"; \ndone\n```\nVerify that there is at least one SCC which does not have `Allow Privileged` set to `true`.",
    "weakness_title_read_only": "Using privileged containers (OpenShift)",
    "weakness_id_read_only": "P1478",
    "weakness": "7f10f1d5-7ffe-484c-81c0-ca1070840d49",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2019-09-16T12:17:56.428000-04:00",
    "last_updated": "2023-05-11T12:49:25.311000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2003",
    "universal_id": "b841e47f-d860-4d40-82e1-290c85ccd36a",
    "countermeasure_name": "Do not disable the 'allow-privileged' flag (OpenShift)",
    "countermeasure_solution": "Do not disable the `allow-privileged` flag in node-config's kubeletArguments section, as it could interfere with cluster behavior.\n\nOpenShift uses Security Context Constraints to prevent privileged containers from running by default. OpenShift explicitly sets the `allow-privileged` kubelet flag, but does not allow privileged container by default. To create privileged pods, the user/serviceAccount must be granted access to the privileged SCC; only cluster-admin can grant SCC privileges. Instead of disabling `allow-privileged` flag, review users and groups who may create privileged containers.",
    "weakness_title_read_only": "Disabling the 'allow-privileged' flag (OpenShift)",
    "weakness_id_read_only": "P1479",
    "weakness": "83374a3f-4fed-4c02-b0d6-e1d11f6513d2",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2019-09-16T12:17:56.475000-04:00",
    "last_updated": "2023-04-18T15:00:12.441000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2004",
    "universal_id": "4b4b6664-3603-403f-9f2d-b2b24e04df98",
    "countermeasure_name": "Verify that the 'allow-privileged' flag is not disabled (OpenShift)",
    "countermeasure_solution": "Verify that the `allow-privileged` flag is not disabled:\n\n```\noc -n openshift-node describe cm node-config-compute | grep -A1 allow-privileged\ngrep -A1 allow-privileged /etc/origin/node/node-config.yaml\n```\n\nIf the following configuration is returned, it should be removed:\n\n```\nkubeletArguments:\n    allow-privileged\n        - false\n```",
    "weakness_title_read_only": "Disabling the 'allow-privileged' flag (OpenShift)",
    "weakness_id_read_only": "P1479",
    "weakness": "83374a3f-4fed-4c02-b0d6-e1d11f6513d2",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2019-09-16T12:17:56.489000-04:00",
    "last_updated": "2023-05-11T12:49:26.017000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2005",
    "universal_id": "bd764d56-8f4b-4a67-9bde-357cd99cdd6f",
    "countermeasure_name": "Disable anonymous requests (OpenShift)",
    "countermeasure_solution": "The requests will be considered anonymous if no authentication methods are used to reject requests made to the kubelet's HTTPS endpoint. Thus, they will be assigned a username of `\"system:anonymous\"` and a group of `\"system:unauthenticated\"`. \n\nTo disable anonymous access and send \"401 Unauthorized\" responses to unauthenticated requests, start the kubelet with the `--anonymous-auth=false` flag. Alternatively, If you use a Kubelet config file, edit the file to set `authentication: anonymous: enabled` to `false`. \n\n## REFERENCE - [Kubernetes authorization and authentication](https://kubernetes.io/docs/reference/access-authn-authz/kubelet-authn-authz/)",
    "weakness_title_read_only": "Setting the anonymous-auth flag to true (OpenShift)",
    "weakness_id_read_only": "P1480",
    "weakness": "5c523fd6-d8fb-4151-baa4-a533ada2e846",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2019-09-16T12:17:56.538000-04:00",
    "last_updated": "2023-05-11T15:17:49.076000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2006",
    "universal_id": "2a0e19fb-fec2-4b4f-b974-c0ee569e45c8",
    "countermeasure_name": "Verify that the anonymous-auth argument is set to false (OpenShift)",
    "countermeasure_solution": "Run the following command on each node:\n```\nfor node in $(oc get nodes -o jsonpath='{.items[*].metadata.name}')\ndo\n oc debug node/${node} -- chroot /host grep -B4 -A1 anonymous: /etc/kubernetes/kubelet.conf\ndone\n```\nThis parameter should be set via the config file specified by the Kubelet's `--config` flag. See [here](https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/) for more information.\n\n\n**Notes:**\n\n- In Kubernetes, by default, anonymous access is enabled.\n- If using a Kubelet config file, edit the file to set `authentication: anonymous: enabled` to `false`.\n- For more information see the Kubernetes [documentation](https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet/).",
    "weakness_title_read_only": "Setting the anonymous-auth flag to true (OpenShift)",
    "weakness_id_read_only": "P1480",
    "weakness": "5c523fd6-d8fb-4151-baa4-a533ada2e846",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2019-09-16T12:17:56.552000-04:00",
    "last_updated": "2021-06-25T14:47:42.832000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2007",
    "universal_id": "bcd0cfb3-49d0-444a-8651-535cc8393cdb",
    "countermeasure_name": "Keep the default value for the authorization mode argument (OpenShift)",
    "countermeasure_solution": "When configuring the API server, it is possible to set `--authorization-mode` to one of the values `AlwaysAllow`, `RBAC`, or `Webhook`. \n\nThe default value OpenShift uses is `RBAC`. Hence, ensure to keep the default value in production clusters. Also, define permissions and assign them to users using RBAC instead when necessary. \n\n## REFERENCE - [Kubernetes authorization and authentication](https://kubernetes.io/docs/reference/access-authn-authz/kubelet-authn-authz/)",
    "weakness_title_read_only": "Setting the authorization-mode argument (OpenShift)",
    "weakness_id_read_only": "P1481",
    "weakness": "9f60e3de-1252-46c3-b047-e946d06657b6",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2019-09-16T12:17:56.602000-04:00",
    "last_updated": "2023-05-11T15:19:03.922000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2008",
    "universal_id": "1fd40bf0-1228-430b-97cb-e45bca084b9f",
    "countermeasure_name": "Verify that the authorization-mode argument is not set (OpenShift)",
    "countermeasure_solution": "In one terminal, run the following command:\n```\n  oc proxy\n```\nThen in another terminal, run:\n```\nfor name in\n$(oc get nodes -ojsonpath='{.items[*].metadata.name}')\ndo  \n curl -sS http://127.0.0.1:8080/api/v1/nodes/$name/proxy/configz | jq -r '.kubeletconfig.authorization.mode'\n  done\n```\n\nAlternative without oc proxy:\n```\nPOD=$(oc -n openshift-kube-apiserver get pod -l app=openshift-kube-apiserver -o jsonpath='{.items[0].metadata.name}')\n\nTOKEN=$(oc whoami -t)\n\nfor name in $(oc get nodes -ojsonpath='{.items[*].metadata.name}')\ndo\n oc exec -n openshift-kube-apiserver $POD -- curl -sS https://172.25.0.1/api/v1/nodes/$name/proxy/configz -k -H \"Authorization: Bearer $TOKEN\" | jq -r '.kubeletconfig.authorization.mode'\ndone\n```\nVerify that access is not successful.",
    "weakness_title_read_only": "Setting the authorization-mode argument (OpenShift)",
    "weakness_id_read_only": "P1481",
    "weakness": "9f60e3de-1252-46c3-b047-e946d06657b6",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2019-09-16T12:17:56.616000-04:00",
    "last_updated": "2023-05-11T12:49:26.756000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2009",
    "universal_id": "341be988-0a4c-446c-9763-ac04fd88bb65",
    "countermeasure_name": "Do not change the default value of the client-ca-file argument (OpenShift)",
    "countermeasure_solution": "Do not change the ` --client-ca-file` argument setting in `/etc/kubernetes/kubelet-ca.crt`.\n\nBy default,` --client-ca-file` argument is set to `/etc/kubernetes/kubelet-ca.crt`.",
    "weakness_title_read_only": "Improper configuration of the client-ca-file argument (OpenShift)",
    "weakness_id_read_only": "P1482",
    "weakness": "66695638-1486-4e01-9039-78283c9ea438",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2019-09-16T12:17:56.665000-04:00",
    "last_updated": "2023-04-18T15:18:01.450000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2010",
    "universal_id": "f7a41bdf-44fc-41cc-a706-89ffb2fff846",
    "countermeasure_name": "Verify that the clientCAFile exists and is not changed (OpenShift)",
    "countermeasure_solution": "Run the following command:\n```\nfor node in \n$(oc get nodes -o jsonpath='{.items[*].metadata.name}')\ndo\n oc debug node/${node} -- chroot /host grep -B3 clientCAFile: /etc/kubernetes/kubelet.conf\ndone\n```\nVerify that the `clientCAFile` exists and is set to `/etc/kubernetes/kubelet-ca.crt`.\nThe output should look like the following:\n\napiVersion: kubelet.config.k8s.io/v1beta1\nauthentication:\n  x509:\n clientCAFile: /etc/kubernetes/kubelet-ca.crt",
    "weakness_title_read_only": "Improper configuration of the client-ca-file argument (OpenShift)",
    "weakness_id_read_only": "P1482",
    "weakness": "66695638-1486-4e01-9039-78283c9ea438",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2019-09-16T12:17:56.678000-04:00",
    "last_updated": "2021-06-25T14:47:47.466000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2011",
    "universal_id": "ced5bffa-4798-4c5d-885e-1cd0e5d73bbe",
    "countermeasure_name": "Do not set the read-only-port argument (OpenShift)",
    "countermeasure_solution": "The kubelet config file can be found at` /etc/kubernetes/kubelet.conf`.\n \n- In OpenShift 4.5 and earlier, do not use the `kubelet-read-only-port` argument. \n- In OpenShift 4.6 and later, the read-only port (10255) on all nodes is disabled by setting the `kubelet-read-only-port` kubelet flag to `0` by default.",
    "weakness_title_read_only": "Enabling read-only port (OpenShift)",
    "weakness_id_read_only": "P1483",
    "weakness": "1ae00dbf-795e-4c02-9215-af665694dd14",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2019-09-16T12:17:56.741000-04:00",
    "last_updated": "2023-04-18T15:23:40.076000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2012",
    "universal_id": "c38f6a8f-92ac-4cb6-b231-40e1ed33d5c6",
    "countermeasure_name": "Verify that the read-only port is not enabled (OpenShift)",
    "countermeasure_solution": "Run the following command:\n```\noc -n openshift-kube-apiserver get cm kube-apiserver-pod -o yaml | grep --color kubelet-read-only-port\n\noc -n openshift-kube-apiserver get cm config -o yaml | grep --color \"kubelet-read-only-port\"\n```",
    "weakness_title_read_only": "Enabling read-only port (OpenShift)",
    "weakness_id_read_only": "P1483",
    "weakness": "1ae00dbf-795e-4c02-9215-af665694dd14",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2019-09-16T12:17:56.755000-04:00",
    "last_updated": "2023-05-11T12:49:27.400000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2013",
    "universal_id": "32949c29-1319-442f-ace0-32b0b57340b7",
    "countermeasure_name": "Adjust the value of streaming-connection-idle-timeout argument (OpenShift)",
    "countermeasure_solution": "Set the `streaming-connection-idle-timeout` argument as appropriate.\n\nThe kubelet configuration is currently serialized as an ignition configuration, so it can be directly edited. However, there is also a new `kubelet-config-controller` added to the Machine Config Controller (MCC). This allows you to create a `KubeletConfig` custom resource (CR) to edit the kubelet parameters.\n\nDo not disable timeouts on streaming connections by setting it to `0`.\nBy default, `--streaming-connection-idle-timeout` is set to `4h0m0s` which might be increase the risk of distributed denial of service attacks.",
    "weakness_title_read_only": "Improper value for the streaming-connection-idle-timeout argument (OpenShift)",
    "weakness_id_read_only": "P1484",
    "weakness": "b9d31d7f-f56f-48dc-b18b-d9a983ea3aad",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2019-09-16T12:17:56.805000-04:00",
    "last_updated": "2023-04-18T15:26:26.731000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2014",
    "universal_id": "259957b1-b571-4474-b10f-3528c718bb7c",
    "countermeasure_name": "Verify the value of streaming-connection-idle-timeout argument (OpenShift)",
    "countermeasure_solution": "Run the following command on each node to:\n\nVerify that the `--streaming-connection-idle-timeout` argument is not set to `0`.\n\nShould return `1` for each node\n```\nfor node in \n$(oc get nodes -o jsonpath='{.items[*].metadata.name}')\ndo\n oc debug node/${node} -- chroot /host ps -ef | grep kubelet | grep streaming-connection-idle-timeout\n echo $?\ndone\n```\n\nVerify that if the argument is not present, and there is a Kubelet config file specified by `--config`, check that it does not set `streamingConnectionIdleTimeout` to `0`:\n\n Should return `1` for each node\n ```\nfor node in \n$(oc get nodes -o jsonpath='{.items[*].metadata.name}')\ndo\n oc debug node/${node} -- chroot /host grep streamingConnectionIdleTimeout /etc/kubernetes/kubelet.conf\n echo $?\ndone\n```",
    "weakness_title_read_only": "Improper value for the streaming-connection-idle-timeout argument (OpenShift)",
    "weakness_id_read_only": "P1484",
    "weakness": "b9d31d7f-f56f-48dc-b18b-d9a983ea3aad",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2019-09-16T12:17:56.819000-04:00",
    "last_updated": "2023-05-11T12:49:28.071000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2015",
    "universal_id": "f3ec9a09-5550-4924-969e-d73a411d54ef",
    "countermeasure_name": "Make sure that protect-kernel-defaults is not set (OpenShift)",
    "countermeasure_solution": "Do not set the `--protect-kernel-defaults` flag for OpenShift nodes. \n\nBy default, OpenShift 4 kubelet modifies the system tunable.",
    "weakness_title_read_only": "Setting the protect-kernel-defaults argument (OpenShift)",
    "weakness_id_read_only": "P1485",
    "weakness": "a7128980-1a80-423d-a628-466b7c01df70",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2019-09-16T12:17:56.883000-04:00",
    "last_updated": "2023-04-19T09:18:00.041000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2016",
    "universal_id": "35a56763-582e-4950-afe6-07151393b414",
    "countermeasure_name": "Verify that protectKernelDefaults is not set (OpenShift)",
    "countermeasure_solution": "Run the following command to verify that `protectKernelDefaults` is not present.\n```\nfor node in \n$(oc get nodes -o jsonpath='{.items[*].metadata.name}');\n do\n oc debug node/${node} -- chroot /host more /etc/kubernetes/kubelet.conf; \ndone\n```",
    "weakness_title_read_only": "Setting the protect-kernel-defaults argument (OpenShift)",
    "weakness_id_read_only": "P1485",
    "weakness": "a7128980-1a80-423d-a628-466b7c01df70",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2019-09-16T12:17:56.898000-04:00",
    "last_updated": "2021-06-25T14:47:50-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2017",
    "universal_id": "2d7331f5-83ce-48c9-a418-e5731876e46b",
    "countermeasure_name": "Ensure that the make-iptables-util-chains is set to true (OpenShift)",
    "countermeasure_solution": "Do not change the default value for the `--make-iptables-util-chains` flag. In OpenShift 4, it is set to `true` by default.\n\nIt is recommended to let kubelets manage changes to iptables. This ensures that the iptables configuration remains in sync with pods networking configuration.",
    "weakness_title_read_only": "Disabling the make-iptables-util-chains flag (OpenShift)",
    "weakness_id_read_only": "P1486",
    "weakness": "6f56e919-0b99-4839-8143-3d3dc828b4ab",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2019-09-16T12:17:56.947000-04:00",
    "last_updated": "2023-04-19T09:39:52.590000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2018",
    "universal_id": "66c313c7-9282-49bf-b4b3-77ca0c26419f",
    "countermeasure_name": "Verify that make-iptables-util-chains is set to true for each machinepool (OpenShift)",
    "countermeasure_solution": "Run the following command:\n```\n/bin/bash\nflag=make-iptables-util-chains\nopt=makeIPTablesUtilChains\n```\nRun the following command to look at each machineconfigpool:\n```\nwhile read -r pool nodeconfig; \ndo\n        # true by default\n        value='true'\n        # first look for the flag\n        oc get machineconfig $nodeconfig -o json | jq -r '.spec.config.systemd[][] | select(.name==\"kubelet.service\") | .contents' | sed -n \"/^ExecStart=/,/^\\$/ { /^\\\\s*--$flag=false/ q 100 }\"\n        # if the above command exited with 100, the flag was false\n        [ $? == 100 ] && value='false'\n        # now look in the yaml KubeletConfig\n        yamlconfig=$(oc get machineconfig $nodeconfig -o json | jq -r '.spec.config.storage.files[] | select(.path==\"/etc/kubernetes/kubelet.conf\") | .contents.source ' | sed 's/^data:,//' | while read; do echo -e ${REPLY//%/\\\\x}; done)\n        echo \"$yamlconfig\" | sed -n \"/^$opt:\\\\s*false\\\\s*$/ q 100\"\n        [ $? == 100 ] && value='false'\n        echo \"Pool $pool has $flag ($opt) set to $value\"\ndone < <(oc get machineconfigpools -o json | jq -r '.items[] | select(.status.machineCount>0) | .metadata.name + \" \" + .spec.configuration.name')\n\n```\nVerify the `--make-iptables-util-chains` argument is set to `true` for each machinepool.\n\nFor example:\n\n- **Pool master** has `make-iptables-util-chains` (makeIPTablesUtilChains) set to true.\n- **Pool worker** has `make-iptables-util-chains` (makeIPTablesUtilChains) set to `true`.",
    "weakness_title_read_only": "Disabling the make-iptables-util-chains flag (OpenShift)",
    "weakness_id_read_only": "P1486",
    "weakness": "6f56e919-0b99-4839-8143-3d3dc828b4ab",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2019-09-16T12:17:56.961000-04:00",
    "last_updated": "2023-05-11T12:49:28.733000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2019",
    "universal_id": "b8993456-8fad-424b-a59f-3263f005fa0d",
    "countermeasure_name": "Do not enable the 'keep-terminated-pod-volumes' flag (OpenShift)",
    "countermeasure_solution": "Do not changed the default value for the `keep-terminated-pod-volumes` flag. It is `false` by default.",
    "weakness_title_read_only": "Enabling the 'keep-terminated-pod-volumes' flag (OpenShift)",
    "weakness_id_read_only": "P1487",
    "weakness": "e5989c55-bd68-4fc6-b5da-d20618fadf8a",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2019-09-16T12:17:57.010000-04:00",
    "last_updated": "2023-04-19T10:01:36.637000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2020",
    "universal_id": "75dab420-1746-4287-bac1-7a14fa8feadb",
    "countermeasure_name": "Verify that the 'keep-terminated-pod-volumes' is not enabled (OpenShift)",
    "countermeasure_solution": "Run the following command:\n\n```\noc -n openshift-node describe cm node-config-compute | grep -A1 keep-terminated-pod-volumes\ngrep -A1 keep-terminated-pod-volumes /etc/origin/node/node-config.yaml\nsystemctl status -l atomic-openshift-node | grep -qv keep-terminated-pod-volumes\n```\n\nMake sure the value is set to false.",
    "weakness_title_read_only": "Enabling the 'keep-terminated-pod-volumes' flag (OpenShift)",
    "weakness_id_read_only": "P1487",
    "weakness": "e5989c55-bd68-4fc6-b5da-d20618fadf8a",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2019-09-16T12:17:57.024000-04:00",
    "last_updated": "2023-05-11T12:49:29.358000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2021",
    "universal_id": "f9823b9b-2023-4acc-9b44-702599a07075",
    "countermeasure_name": "Ensure that the hostname-override is not set (OpenShift)",
    "countermeasure_solution": "Ensure that the `--hostname-override` argument is not set.\n\nIn OpenShift 4, the `--hostname-override` argument is not used.\nBy default, `--hostname-override` argument is not set.",
    "weakness_title_read_only": "Disabling the hostname-override flag (OpenShift)",
    "weakness_id_read_only": "P1488",
    "weakness": "672dd9de-6604-4358-b383-2fd4c32863ad",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2019-09-16T12:17:57.073000-04:00",
    "last_updated": "2023-04-19T10:05:14.918000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2022",
    "universal_id": "779f3132-9b90-49f4-a5f0-fb38eb405b80",
    "countermeasure_name": "Verify that hostname-override does not exist (OpenShift)",
    "countermeasure_solution": "Run the following command on each machine pool. \n\nFor example:\n```\noc get machineconfig 01-worker-kubelet -o yaml | grep hostname-override\noc get machineconfig 01-master-kubelet -o yaml | grep hostname-override\n```\nMake sure that the `--hostname-override` argument does not exist.\n\n**Note:** Some cloud providers may require this flag to ensure that hostname matches names issued by the cloud provider. In these environments, this recommendation should not apply.",
    "weakness_title_read_only": "Disabling the hostname-override flag (OpenShift)",
    "weakness_id_read_only": "P1488",
    "weakness": "672dd9de-6604-4358-b383-2fd4c32863ad",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2019-09-16T12:17:57.086000-04:00",
    "last_updated": "2023-05-11T12:49:30.009000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2023",
    "universal_id": "46d7e59f-9ff6-46d7-b458-603ab444189b",
    "countermeasure_name": "Set the kubeAPIQPS event-qps argument to 0 (OpenShift)",
    "countermeasure_solution": "Use the `--event-qps` flag on the Kubelet to limit the rate at which events are gathered. \n\nSetting this too low could result in relevant events _not being logged_, however the _unlimited_ setting of `0` could result in a **denial of service** on the kubelet.",
    "weakness_title_read_only": "Non-zero value for the event-qps argument (OpenShift)",
    "weakness_id_read_only": "P1489",
    "weakness": "4e2ebea5-c46d-4ebd-97b5-047e07377b69",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2019-09-16T12:17:57.135000-04:00",
    "last_updated": "2023-04-19T10:12:42.619000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2024",
    "universal_id": "a9c7f540-e3cd-4b96-8f12-670947ab4709",
    "countermeasure_name": "Verify that the value of event-qps is set to 0 (OpenShift)",
    "countermeasure_solution": "Run the following command on each machine pool. \n\nFor example:\n\n```\nfor node in \n$(oc get nodes -o jsonpath='{.items[*].metadata.name}'); \ndo\n   oc debug node/${node} -- chroot /host more /etc/kubernetes/kubelet.conf;\ndone\noc get machineconfig 01-worker-kubelet -o yaml | grep --color kubeAPIQPS%3A%2050\noc get machineconfig 01-master-kubelet -o yaml | grep --color kubeAPIQPS%3A%2050\n```\nEnsure that the `kubeAPIQPS` [`--event-qps`] argument is set to `0` or to an appropriate level for the cluster.",
    "weakness_title_read_only": "Non-zero value for the event-qps argument (OpenShift)",
    "weakness_id_read_only": "P1489",
    "weakness": "4e2ebea5-c46d-4ebd-97b5-047e07377b69",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2019-09-16T12:17:57.148000-04:00",
    "last_updated": "2023-05-11T12:49:30.560000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2025",
    "universal_id": "434a6dcc-f408-4e4c-b900-33918bd5f5c0",
    "countermeasure_name": "Ensure that tls-cert-file and tls-private-key-file are properly set (OpenShift)",
    "countermeasure_solution": "By default, OpenShift uses **X.509 certificates** to provide secure connections between the API server and `node/kubele`t. OpenShift **does not use** values assigned to the `tls-cert-file` or `tls-private-key-file` flags.\n\nOpenShift automatically manages TLS authentication for the API server communication with the `node/kublet`. This is not configurable.\n\n- If `--tls-cert-file` and `--tls-private-key-file` are not provided, then a self-signed certificate and key are generated for the public address and saved to the directory passed to `--cert-dir`.This directory is the location of the TLS certs.\n- If `--tls-cert-file` and `--tls-private-key-file` are provided, this flag will be ignored. (default \"/var/run/kubernetes\")",
    "weakness_title_read_only": "Improper value for the cert-dir argument (OpenShift)",
    "weakness_id_read_only": "P1490",
    "weakness": "742da046-fa41-4c7a-b956-4903feb4571d",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2019-09-16T12:17:57.197000-04:00",
    "last_updated": "2023-04-19T13:22:50.836000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2026",
    "universal_id": "02a5c8f6-6775-4a42-97a4-c127aff70b9c",
    "countermeasure_name": "Verify that the kubelet-client-certificate and kubelet-client-key are properly set (OpenShift)",
    "countermeasure_solution": "Run the following command on each node:\n```\n oc get configmap config -n openshift-kube-apiserver -ojson | jq > -r '.data[\"config.yaml\"]' | jq '.kubeletClientInfo' \n```\n Verify that:\n\n- The `kubelet-client-certificate` argument is set to `/etc/kubernetes/static-pod-certs/secrets/kubelet-client/tls.crt `\n- The `kubelet-client-key` argument is set to `/etc/kubernetes/static-pod-certs/secrets/kublet-client/tls.key`",
    "weakness_title_read_only": "Improper value for the cert-dir argument (OpenShift)",
    "weakness_id_read_only": "P1490",
    "weakness": "742da046-fa41-4c7a-b956-4903feb4571d",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2019-09-16T12:17:57.211000-04:00",
    "last_updated": "2021-06-25T14:47:44.859000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2027",
    "universal_id": "c796e34e-1997-454a-b3bd-da5a100b23a8",
    "countermeasure_name": "Do not enable cAdvisor endpoint (OpenShift)",
    "countermeasure_solution": "Do not set the `cadvisor-port` in node-config's kubeletArguments section. If the `cadvisor-port` is set, remove it.",
    "weakness_title_read_only": "Enabling cAdvisor endpoint (OpenShift)",
    "weakness_id_read_only": "P1491",
    "weakness": "a1d23553-baea-4ba8-94b2-9531ccaf8a83",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2019-09-16T12:17:57.260000-04:00",
    "last_updated": "2023-04-19T13:30:57.223000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2028",
    "universal_id": "8803a73a-fd40-4a7a-acca-47453e6e8521",
    "countermeasure_name": "Verify that cAdvisor endpoint is not enabled (OpenShift)",
    "countermeasure_solution": "Run the following command:\n\n```\noc -n openshift-node describe cm node-config-compute | grep -A1 cadvisor-port\ngrep -A1 cadvisor-port /etc/origin/node/node-config.yaml\nsystemctl status -l atomic-openshift-node | grep -q cadvisor-port\n```\n\nMake sure the value is set to 0.",
    "weakness_title_read_only": "Enabling cAdvisor endpoint (OpenShift)",
    "weakness_id_read_only": "P1491",
    "weakness": "a1d23553-baea-4ba8-94b2-9531ccaf8a83",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2019-09-16T12:17:57.274000-04:00",
    "last_updated": "2023-05-11T12:49:31.269000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2029",
    "universal_id": "90b7c3c7-28c2-4ec8-82e1-239fa08ad033",
    "countermeasure_name": "Do not disable rotate-certificates (OpenShift)",
    "countermeasure_solution": "Ensure the following for certificate rotation:\n\n- Do not disable `rotateCertificates`.\n- Do not disable `rotateKubeletClientCertificates`.\n- Enable `RotateKubeletServerCertificate`.\n\nBy default, in OpenShift 4, kubelet client certificate rotation is **enabled** and kubelet server certificate rotation is **disabled**.",
    "weakness_title_read_only": "Disabling the RotateKubeletClientCertificate and RotateKubeletServerCertificate flags (OpenShift)",
    "weakness_id_read_only": "P1492",
    "weakness": "72e09f50-a719-4afc-abb7-b7f63d615b3d",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2019-09-16T12:17:57.322000-04:00",
    "last_updated": "2023-04-19T13:36:58.982000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2030",
    "universal_id": "7d6a15b2-2e31-43f9-a446-88ef2f1824ce",
    "countermeasure_name": "Verify that rotate-certificates settings are not disabled (OpenShift)",
    "countermeasure_solution": "Run the following commands to verify the `rotateKubeletClientCertificate` feature gate is not set to `false`\n```\nfor node in $(oc get nodes -o jsonpath='{.items[*].metadata.name}')\ndo\n oc debug node/${node} -- chroot /host cat /etc/kubernetes/kubelet.conf | grep RotateKubeletClientCertificate\ndone\n```\n \nRun the following commands to verify the `rotateKubeletServerCertificate` feature gate is on\n```\nfor node in $(oc get nodes -o jsonpath='{.items[*].metadata.name}'); \ndo\n    oc debug node/${node} -- chroot /host more /etc/kubernetes/kubelet.conf; \ndone\n```\n\nRun the following commands to verify the `rotateCertificates` argument is set to true\n```\nfor node in $(oc get nodes -o jsonpath='{.items[*].metadata.name}')\ndo\n oc debug node/${node} -- chroot host grep rotate /etc/kubernetes/kubelet.conf;\ndone\n```",
    "weakness_title_read_only": "Disabling the RotateKubeletClientCertificate and RotateKubeletServerCertificate flags (OpenShift)",
    "weakness_id_read_only": "P1492",
    "weakness": "72e09f50-a719-4afc-abb7-b7f63d615b3d",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2019-09-16T12:17:57.336000-04:00",
    "last_updated": "2023-05-11T12:49:31.978000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2033",
    "universal_id": "704bd7f8-9000-442f-a3d5-0103d4f5710b",
    "countermeasure_name": "Ensure SELinux is enabled on all container instances (Amazon ECS)",
    "countermeasure_solution": "The ECS container agent allows container instances (typically EC2 virtual machines) to join a cluster. Install the ECS container agent included in the Amazon ECS-optimized AMIs manually on other distributions. Several configurations are available through the use of environment variables and can be set in the `/etc/ecs/ecs.config` file or by using EC2 user data at launch time.\n\nSELinux is a security feature in Linux operating systems that puts limits on which files programs and daemons can access and what actions they can take. Enable SELinux to enhance the security of ECS clusters. SELinux is disabled by default in ECS.",
    "weakness_title_read_only": "Running With Unnecessary Privileges",
    "weakness_id_read_only": "P150",
    "weakness": "07093262-3118-48ab-911f-86160f3ae8e2",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2019-09-17T20:23:16.822000-04:00",
    "last_updated": "2021-06-25T14:47:51.309000-04:00",
    "custom": "False",
    "rules": "9399a644-5281-419a-867d-fdf67c39236b",
    "rules_read_only": "A1270"
  },
  {
    "countermeasure_id": "T2034",
    "universal_id": "a47e0e88-8d24-4f8f-8397-ba8fc3986167",
    "countermeasure_name": "Ensure AppArmor is enabled on all container instances (Amazon ECS)",
    "countermeasure_solution": "The ECS container agent allows container instances (typically EC2 virtual machines) to join a cluster. Install the ECS container agent included in the Amazon ECS-optimized AMIs manually on other distributions. Several configurations are available through the use of environment variables and can be set in the `/etc/ecs/ecs.config` file or by using EC2 user data at launch time.\n\nAppArmor is a Linux kernel security module that can restrict a programs capabilities using profiles. Profiles may allow capabilities such network access, raw socket access, and the permission to read, write, or execute files on matching paths. Enable AppArmor in containerized environments such as ECS as an additional layer of protection for the underlying host operating system.",
    "weakness_title_read_only": "Running With Unnecessary Privileges",
    "weakness_id_read_only": "P150",
    "weakness": "07093262-3118-48ab-911f-86160f3ae8e2",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2019-09-17T20:41:56.206000-04:00",
    "last_updated": "2021-06-25T14:47:51.602000-04:00",
    "custom": "False",
    "rules": "9399a644-5281-419a-867d-fdf67c39236b",
    "rules_read_only": "A1270"
  },
  {
    "countermeasure_id": "T2035",
    "universal_id": "05202fc9-94f3-49b3-b41b-76a498c5cf38",
    "countermeasure_name": "Ensure privileged containers are not permitted on the container instance (Amazon ECS)",
    "countermeasure_solution": "The ECS container agent allows container instances (typically EC2 virtual machines) to join a cluster. Install the ECS container agent included in the Amazon ECS-optimized AMIs manually on other distributions. Several configurations are available through the use of environment variables and can be set in the `/etc/ecs/ecs.config` file or by using EC2 user data at launch time.\n\nAvoid running containers in privileged mode that remove many of the restrictions and security limitations built into the containers runtime. ECS allows privileged containers to be scheduled in clusters by default.",
    "weakness_title_read_only": "Running With Unnecessary Privileges",
    "weakness_id_read_only": "P150",
    "weakness": "07093262-3118-48ab-911f-86160f3ae8e2",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2019-09-17T22:07:08.025000-04:00",
    "last_updated": "2021-06-25T14:47:51.349000-04:00",
    "custom": "False",
    "rules": "9399a644-5281-419a-867d-fdf67c39236b",
    "rules_read_only": "A1270"
  },
  {
    "countermeasure_id": "T2036",
    "universal_id": "3ac06871-2f78-4ee6-bce2-59513259c4c4",
    "countermeasure_name": "Ensure containers do not run as root (Amazon ECS)",
    "countermeasure_solution": "Avoid running a process in a container scheduled to deploy on ECS as the root user. Apply the principle of least privilege for workloads and only provide the containers, access to the resources needed to perform its required function. The vast majority of container workloads do not require root access therefore containers should not run as root when possible.",
    "weakness_title_read_only": "Running With Unnecessary Privileges",
    "weakness_id_read_only": "P150",
    "weakness": "07093262-3118-48ab-911f-86160f3ae8e2",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2019-09-18T22:58:36.316000-04:00",
    "last_updated": "2021-06-25T14:47:51.874000-04:00",
    "custom": "False",
    "rules": "9399a644-5281-419a-867d-fdf67c39236b",
    "rules_read_only": "A1270"
  },
  {
    "countermeasure_id": "T2037",
    "universal_id": "54019270-03c6-416a-b593-699aeb9ec876",
    "countermeasure_name": "Set root filesystems to be read-only (Amazon ECS)",
    "countermeasure_solution": "Containers may request access to read and write files to the host file system. \n\nBlock containers from having the ability to write to the host file system. This strategy prevents issues such as a malicious or compromised container writing to sensitive host files or changing configurations on the host to further exploit the system.",
    "weakness_title_read_only": "Running With Unnecessary Privileges",
    "weakness_id_read_only": "P150",
    "weakness": "07093262-3118-48ab-911f-86160f3ae8e2",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2019-09-18T23:36:07.784000-04:00",
    "last_updated": "2021-06-25T14:47:51.615000-04:00",
    "custom": "False",
    "rules": "9399a644-5281-419a-867d-fdf67c39236b",
    "rules_read_only": "A1270"
  },
  {
    "countermeasure_id": "T2038",
    "universal_id": "3dba175f-c878-455e-8bbe-b0030e40098c",
    "countermeasure_name": "Apply resource limits on containers (Amazon ECS)",
    "countermeasure_solution": "Set limits on all running containers within a given task in ECS. These limits help prevent resource hogging or denial of service attacks as well as improve availability of the service. ECS offers user-controlled limits on CPU, and memory.",
    "weakness_title_read_only": "Denial of Service (DoS)",
    "weakness_id_read_only": "P750",
    "weakness": "04f3a13f-c7ea-4824-bd73-086d61dd30ba",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2019-09-19T16:09:10.801000-04:00",
    "last_updated": "2021-06-25T14:47:40.969000-04:00",
    "custom": "False",
    "rules": "9399a644-5281-419a-867d-fdf67c39236b",
    "rules_read_only": "A1270"
  },
  {
    "countermeasure_id": "T2039",
    "universal_id": "9a665a08-b075-4eff-b640-d08a499b739c",
    "countermeasure_name": "Enable container insights on ECS clusters (Amazon ECS)",
    "countermeasure_solution": "Enable CloudWatch Container Insights inside of ECS environments. \n\nCloudWatch Container Insights enables the collection and aggregation of metrics and logs from containerized applications running within ECS. When enabled, metrics such as CPU, memory, disk, and network are all stored in CloudWatch to use for security or general diagnostic purposes.",
    "weakness_title_read_only": "Insufficient Logging or Insufficient Protection of Logs",
    "weakness_id_read_only": "P619",
    "weakness": "9a42301f-ed6c-42cb-a85d-a5134b76b701",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "deployment",
    "created": "2019-09-19T23:12:40.295000-04:00",
    "last_updated": "2021-06-25T14:47:57.629000-04:00",
    "custom": "False",
    "rules": "9399a644-5281-419a-867d-fdf67c39236b",
    "rules_read_only": "A1270"
  },
  {
    "countermeasure_id": "T2040",
    "universal_id": "e129014a-89e0-4ec4-a511-83c200de9ccc",
    "countermeasure_name": "Ensure host operating systems are up to date (Amazon ECS)",
    "countermeasure_solution": "Ensure host systems stay up-to-date by enabling the `ECS_UPDATES_ENABLED` flag on all container instances.\n\nThe ECS container agent allows container instances (typically EC2 virtual machines) to join a cluster. The ECS container agent is included in the Amazon ECS-optimized AMIs but must be installed manually on other distributions. Several configurations are available through the use of environment variables and can be set in the `/etc/ecs/ecs.config` file or by using EC2 user data at launch time.",
    "weakness_title_read_only": "Insufficient patching or use of insecure third party software/libraries",
    "weakness_id_read_only": "P728",
    "weakness": "659effab-aba7-464d-8760-f30eed4d032c",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2019-09-20T14:33:37.143000-04:00",
    "last_updated": "2021-06-25T14:47:57.159000-04:00",
    "custom": "False",
    "rules": "9399a644-5281-419a-867d-fdf67c39236b",
    "rules_read_only": "A1270"
  },
  {
    "countermeasure_id": "T2041",
    "universal_id": "47d4cfcc-5204-4c4e-a86d-94f1a3f6f2f3",
    "countermeasure_name": "Attach IAM roles for ECS container instances (Amazon ECS)",
    "countermeasure_solution": "Attach a container instance IAM role that has the least privilege needed to perform its function. AWS provides a container instance IAM role called `ecsInstanceRole` out of the box as a starting point. Review this to ensure it meets security requirements.\n\nThe Amazon ECS container agent makes calls to the Amazon ECS API on your behalf. Container instances that run the agent require an IAM policy and role for the service to know that the agent belongs to you.",
    "weakness_title_read_only": "Improper Access Control (Authorization)",
    "weakness_id_read_only": "P182",
    "weakness": "e488cdc5-3c91-4d2b-bcec-5c651b000d8b",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2019-09-20T16:04:43.888000-04:00",
    "last_updated": "2021-06-25T14:47:49.987000-04:00",
    "custom": "False",
    "rules": "9399a644-5281-419a-867d-fdf67c39236b",
    "rules_read_only": "A1270"
  },
  {
    "countermeasure_id": "T2042",
    "universal_id": "0d24918d-e4f1-456d-9672-e4e4d2153a7d",
    "countermeasure_name": "Ensure virtual machines running ECS instances are inside a VPC (Amazon ECS)",
    "countermeasure_solution": "Choose EC2-VPC for all ECS clusters to ensure maximum control and security over clusters: \n\nEC2-VPC allows control over virtual networking environments giving operators the ability to select details, such as IP ranges, subnets, routing, and access control. \n\nDepending on when your AWS account was created, two choices are available when deciding where to deploy ECS container instances in AWS: EC2-VPC and EC2-Classic.",
    "weakness_title_read_only": "Unrestricted connectivity to sensitive data (Amazon ECS)",
    "weakness_id_read_only": "P1494",
    "weakness": "ced3f3a1-88d2-467f-be07-d6ca9dd5aecb",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2019-09-23T12:01:37.979000-04:00",
    "last_updated": "2021-06-25T14:47:53.005000-04:00",
    "custom": "False",
    "rules": "9399a644-5281-419a-867d-fdf67c39236b",
    "rules_read_only": "A1270"
  },
  {
    "countermeasure_id": "T2043",
    "universal_id": "f6b60ec7-a550-4fd0-86ad-56284c657edf",
    "countermeasure_name": "Identify and remediate vulnerabilities in container images (Amazon ECS)",
    "countermeasure_solution": "Ensure container images are kept free of known security vulnerabilities. \nScan container images as part of a build pipeline before containers are deployed to ECS. \nPermit only container images that are free of vulnerabilities to run in ECS clusters.\n\nA number of tools exist to help scan container images for vulnerabilities. [AWS partner solutions](https://aws.amazon.com/containers/partner-solutions/) offers partnerships with container security vendors such as Aqua Security and Docker to help scan container images for known vulnerabilities as part of your ECS deployment.",
    "weakness_title_read_only": "Using unsafe container images (Amazon ECS)",
    "weakness_id_read_only": "P1495",
    "weakness": "b1434bc5-ea9d-4f75-aa07-4e89c9dd63e6",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2019-09-23T13:54:57.555000-04:00",
    "last_updated": "2021-06-25T14:47:57.248000-04:00",
    "custom": "False",
    "rules": "9399a644-5281-419a-867d-fdf67c39236b",
    "rules_read_only": "A1270"
  },
  {
    "countermeasure_id": "T2044",
    "universal_id": "4787a147-56de-4cb8-b5cc-c058ffed0bef",
    "countermeasure_name": "Utilize AWS parameter store for sensitive data storage (Amazon ECS)",
    "countermeasure_solution": "Containers must inject sensitive secret data at runtime and not store this data in plaintext at rest.\n\nProtect sensitive data as containers are deployed to ECS clusters. AWS offers solutions out of the box to handle the injection of sensitive data into containers using either AWS Secrets Manager or AWS Systems Manager Parameter Store. These features allow containers to retrieve the sensitive data from a secure location and inject the plaintext secret value as the container is initially started.",
    "weakness_title_read_only": "Unprotected sensitive data in containers (Amazon ECS)",
    "weakness_id_read_only": "P1496",
    "weakness": "8ed444fb-6c9d-4456-a797-b4ccdb0b84a3",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2019-09-23T17:06:40.831000-04:00",
    "last_updated": "2021-06-25T14:47:35.696000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2045",
    "universal_id": "d3236c06-0dee-4198-8abe-0ab04cd9640e",
    "countermeasure_name": "Ensure a VPC endpoint is used to access DynamoDB tables (Amazon DynamoDB)",
    "countermeasure_solution": "If access to the DynamoDB table is only required from within a VPC, use a VPC endpoint to limit access from only the required VPC and nowhere else. VPC endpoints for DynamoDB allow internal instances to connect to DynamoDB without leaving the Amazon network.",
    "weakness_title_read_only": "Publicly accessible database (Amazon DynamoDB)",
    "weakness_id_read_only": "P1497",
    "weakness": "ced5f0a8-e473-4734-8ec3-b792dd6c71f0",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2019-09-24T15:57:40.745000-04:00",
    "last_updated": "2021-06-25T14:47:52.529000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2046",
    "universal_id": "1b951859-b3fa-4daa-ba11-8b2c2f1543f3",
    "countermeasure_name": "Encrypt data stored in DynamoDB at rest (Amazon DynamoDB)",
    "countermeasure_solution": "DynamoDB encrypts all data stored in tables at rest by default but leaves the encryption key up to the administrator. DynamoDB supports either AWS managed keys or customer-managed keys (CMK). \n\nUtilize CMKs to give you full control over who can use the keys to access the encrypted data on DynamoDB tables.",
    "weakness_title_read_only": "Missing database encryption (Amazon DynamoDB)",
    "weakness_id_read_only": "P1498",
    "weakness": "5e6e0641-b82b-442e-8c6d-1c61c0c9b825",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2019-09-24T16:32:55.481000-04:00",
    "last_updated": "2021-06-25T14:47:35.963000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2047",
    "universal_id": "a94c0e27-a388-4cfa-8d8b-c03a82497ec6",
    "countermeasure_name": "Attach IAM policies to DynamoDB resources (Amazon DynamoDB)",
    "countermeasure_solution": "Utilize IAM to determine which end users or programs are permitted to create, describe, modify, and delete DynamoDB tables.\n\nCompromised applications or AWS resources may take advantage of misconfigured IAM policies attached to DynamoDB instances.",
    "weakness_title_read_only": "Improper Access Control (Authorization)",
    "weakness_id_read_only": "P182",
    "weakness": "e488cdc5-3c91-4d2b-bcec-5c651b000d8b",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2019-09-27T12:27:57.169000-04:00",
    "last_updated": "2021-06-25T14:47:49.078000-04:00",
    "custom": "False",
    "rules": "a5bb6d04-111c-4fd1-ab43-b8aed799e105 AND 025c7738-6321-4092-890d-1f0f37ce6cda",
    "rules_read_only": "A1159 AND A1271"
  },
  {
    "countermeasure_id": "T2048",
    "universal_id": "3cc873c6-021b-4598-9aa7-38929717df9f",
    "countermeasure_name": "Utilize client-side encryption for DynamoDB (Amazon DynamoDB)",
    "countermeasure_solution": "DynamoDB gives you the ability to utilize client-side encryption to help ensure the plaintext data is protected at origin as well as over the network. \n\nUtilize client-side encryption in DynamoDB, by including a software library with your application that can handle encryption, the signing of attribute values, and key management.",
    "weakness_title_read_only": "Missing database encryption (Amazon DynamoDB)",
    "weakness_id_read_only": "P1498",
    "weakness": "5e6e0641-b82b-442e-8c6d-1c61c0c9b825",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2019-09-27T12:56:11.107000-04:00",
    "last_updated": "2021-06-25T14:47:35.826000-04:00",
    "custom": "False",
    "rules": "a5bb6d04-111c-4fd1-ab43-b8aed799e105 AND c4c7c298-63d8-4d0c-bc32-29c72ff3722c",
    "rules_read_only": "A1159 AND A732"
  },
  {
    "countermeasure_id": "T2051",
    "universal_id": "60454e8f-39aa-4bca-964b-d89e6ff797e6",
    "countermeasure_name": "Configure network access rules for storage accounts (Microsoft Azure)",
    "countermeasure_solution": "Perform the following:\n\n- Set default network access rule for \"Storage Accounts\" to deny:\n\n    Restricting default network access helps to provide a new layer of security since storage accounts accept connections from clients on any network. To limit access to selected networks, the default action must be changed.\n\n    Storage accounts should be configured to deny access to traffic from all networks (including internet traffic). Access can be granted to traffic from specific Azure Virtual networks, allowing a secure network boundary for specific applications to be built. Access can also be granted to public internet IP address ranges, to enable connections from specific internet or on-premises clients. When network rules are configured, only applications from allowed networks can access a storage account. When calling from an allowed network, applications continue to require proper authorization (a valid access key or SAS token) to access the storage account.\n\n-  Enable 'Trusted Microsoft Services' for \"Storage Account\" access:\n\n    The customer can get access to services like Monitor, Networking, Hubs, and Event Grid by enabling `\"Trusted Microsoft Services\"` through exceptions. Also, Backup and Restore of Virtual Machines using unmanaged disks in storage accounts with network rules applied are supported via creating an exception.\n\n    Some Microsoft services that interact with storage accounts operate from networks that can't be granted access through network rules. To help this type of service work as intended, allow the set of trusted Microsoft services to bypass the network rules. These services will then use strong authentication to access the storage account. If the Allow trusted Microsoft services exception is enabled, the following services: Azure Backup, Azure Site Recovery, Azure DevTest Labs, Azure Event Grid, Azure Event Hubs, Azure Networking, Azure Monitor and Azure SQL Data Warehouse (when registered in the subscription), are granted access to the storage account.",
    "weakness_title_read_only": "Improper network access rules for storage accounts (Microsoft Azure)",
    "weakness_id_read_only": "P1499",
    "weakness": "f1f5fd3f-31d5-449c-9532-6b62c6bab736",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2019-10-16T14:39:05.943000-04:00",
    "last_updated": "2021-06-25T14:47:52.485000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2052",
    "universal_id": "a0793790-2e7a-46b5-857f-d6b8afce35d1",
    "countermeasure_name": "Verify that network access rules are configured properly for storage accounts (Microsoft Azure)",
    "countermeasure_solution": "Perform the following:\n\n- Using \"**Azure Console**:\n\n    1. Go to `Storage Accounts`.\n    2. For each storage account, click on the settings menu called `Firewalls` and `virtual networks`.\n    3. Ensure that allow access from `All networks` is not selected.\n\n    Or using **Azure Command-Line Interface 2.0**\n\n    - Ensure `defaultAction` is not set to ` Allow`:\n\n            az storage account list --query '[*].networkRuleSet'\n\n- The using \"**Azure Console**:\n\n    1. Go to `Storage Accounts`.\n    2. For each storage account, click on the settings menu called `Firewalls` and `virtual networks`.\n    3. Click on `Selected networks`.\n    4. Ensure that `Allow trusted Microsoft services to access this storage account` is checked in `Exceptions`.\n\n    Or using **Azure Command-Line Interface 2.0**:\n\n    - Ensure `bypass` contains `AzureServices`:\n\n            az storage account list --query '[*].networkRuleSet'",
    "weakness_title_read_only": "Improper network access rules for storage accounts (Microsoft Azure)",
    "weakness_id_read_only": "P1499",
    "weakness": "f1f5fd3f-31d5-449c-9532-6b62c6bab736",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2019-10-16T14:43:07.419000-04:00",
    "last_updated": "2022-12-01T14:09:38.618000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2053",
    "universal_id": "faf8e9ed-86be-46a1-bc80-fb6fe938b0e6",
    "countermeasure_name": "Ensure virtual machines running instances are inside a VPC (Amazon Aurora)",
    "countermeasure_solution": "Depending on when your AWS account was created, two choices are available when deciding where to deploy Aurora DB instances in AWS: __EC2-VPC__ and __EC2-Classic__. It is a best practice to choose EC2-VPC for Aurora instances to ensure maximum control and security over databases: \n\n- EC2-VPC allows control over virtual networking environments and gives operators the ability to select details such as IP ranges, subnets, routing, and access control. \n\n- EC2-Classic Aurora instances are not placed into a VPC by default and are placed into a flat network that is shared with other AWS customers. This makes isolating Aurora instances difficult.",
    "weakness_title_read_only": "Unrestricted connectivity to sensitive data (Amazon Aurora)",
    "weakness_id_read_only": "P1500",
    "weakness": "9b4e5cb0-c6af-4ff4-bf87-d9b707a6cef8",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2019-10-17T10:32:19.413000-04:00",
    "last_updated": "2021-06-25T14:47:53.312000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2054",
    "universal_id": "a1e5fba1-7d65-4d3c-bc30-b9b46701e5cb",
    "countermeasure_name": "Utilize Security Groups to restrict access to instances (Amazon Aurora)",
    "countermeasure_solution": "Security Groups provide stateful filtering of ingress/egress network traffic to AWS resources including Aurora. Security Groups should be used to isolate traffic at a granular level to and from an Aurora instance within the same VPC. \n\n- Ensure that AWS Aurora database security groups do not allow access from the public Internet (0.0.0.0/0)\n- Aurora databases should not be publicly accessible",
    "weakness_title_read_only": "Unrestricted connectivity to sensitive data (Amazon RDS)",
    "weakness_id_read_only": "P1501",
    "weakness": "081748e7-bc50-4170-ad8d-2a59d491c9f4",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2019-10-17T10:39:03.962000-04:00",
    "last_updated": "2021-06-25T14:47:49.539000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2055",
    "universal_id": "f9591a14-e58a-41c2-9d26-7c46be6232e5",
    "countermeasure_name": "Enforce network ACLs for instances (Amazon Aurora)",
    "countermeasure_solution": "Network ACLs should be used to apply a layer of network segmentation at the subnet level. By using Network ACLs in AWS, Aurora instances within a VPC can have a well-defined network perimeter that contains assets with a similar trust level.",
    "weakness_title_read_only": "Misconfigured or missing network ACLs (Amazon Aurora)",
    "weakness_id_read_only": "P1502",
    "weakness": "3f30dd23-3c98-485c-b63c-eebe3b86e2be",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2019-10-17T10:49:16.391000-04:00",
    "last_updated": "2021-06-25T14:47:52.874000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2056",
    "universal_id": "cb1ea8d3-83e7-4e21-9835-d31022521ae4",
    "countermeasure_name": "Encrypt data stored at rest (Amazon Aurora)",
    "countermeasure_solution": "Always utilize strong encryption mechanisms on Aurora instances that handle data that is sensitive in nature. Aurora encryption is easy to enable within the AWS console and offers the ability to encrypt the data stored on the Aurora instance's underlying storage filesystem, automated backups, and snapshots. Aurora encryption is performed using AES-256 and is protected by the AWS Key Management System (KMS). \n\nUtilize KMS Customer-Managed Keys when possible to give you full control over who can use the keys to access the encrypted data on KMS instances.",
    "weakness_title_read_only": "Missing encryption mechanism (Amazon Aurora)",
    "weakness_id_read_only": "P1503",
    "weakness": "013cbd91-6fcc-43e4-a6e6-2a44ce987fcf",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2019-10-17T10:57:47.209000-04:00",
    "last_updated": "2021-06-25T14:47:36.059000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2057",
    "universal_id": "6a191d2a-a4ca-44e5-ab99-19b2aeb68d78",
    "countermeasure_name": "Enforce authentication on your database engine (Amazon Aurora)",
    "countermeasure_solution": "Every database should have authentication enabled to control who is allowed to access the database itself. There are several options for configuring authentication to Aurora databases.\n\n#IAM Authentication \nYou can set up authentication by using IAM integration if you're using Amazon Aurora with MySQL or PostgreSQL compatibility, or Aurora for MySQL or PostgreSQL. This should be set up during the launch of a new database. \n\n#Database Engine Authentication\nDepending on which database engine you are using on Aurora, you can always set up authentication using the built-in and supported mechanism for your particular database engine. \n\nWhen using this approach, it is a best practice to never hardcode this database password (also known as a secret). Instead, use AWS Secrets Manager for database password rotation and application access to the password. This prevents the secret from being hard-coded within the application source code or configuration code.",
    "weakness_title_read_only": "Improper authentication and access control (Amazon Aurora)",
    "weakness_id_read_only": "P1504",
    "weakness": "7fc6f171-94c7-466f-aab6-fc108bf5db05",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2019-10-17T11:01:33.509000-04:00",
    "last_updated": "2021-06-25T14:47:42.723000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2058",
    "universal_id": "007e9f78-8bf4-478a-b2bb-a8926a816daf",
    "countermeasure_name": "Create IAM policies for database access (Amazon Aurora)",
    "countermeasure_solution": "It is a best practice to always utilize IAM to determine who is allowed to tag resources, modify security groups, and create, describe, modify, and delete Aurora DB instances.",
    "weakness_title_read_only": "Misconfigured IAM policies attached to instances (Amazon Aurora)",
    "weakness_id_read_only": "P1506",
    "weakness": "a299c50b-1fee-4179-bf2f-38a7a60822ce",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2019-10-17T11:08:55.003000-04:00",
    "last_updated": "2021-11-09T15:38:23.877000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2059",
    "universal_id": "395aa38d-689d-4d22-a7be-fb9d6a0d3040",
    "countermeasure_name": "Enable App Service authentication and identity management (Microsoft Azure)",
    "countermeasure_solution": "Perform the following:\n\n- Enable \"App Service Authentication\" on \"Azure App Service\":\n\n    Azure App Service Authentication is a feature that can prevent anonymous HTTP requests from reaching the API app, or authenticate those that have tokens before they reach the API app. If an anonymous request is received from a browser, App Service will redirect to a logon page. To handle the logon process, a choice from a set of identity providers can be made, or a custom authentication mechanism can be implemented.\n\n- Enable \"Register with Azure Active Directory\" on \"App Service\":\n\n    Managed service identity in App Service makes the app more secure by eliminating secrets from the app, such as credentials in the connection strings. When registering with Azure Active Directory in the app service, the app will connect to other Azure services securely without the need for username and passwords. It provides a managed identity for apps, which is a turn-key solution for securing access to Azure SQL Database and other Azure services.",
    "weakness_title_read_only": "Improper App Service authentication and identity management (Microsoft Azure)",
    "weakness_id_read_only": "P1505",
    "weakness": "eec08916-281f-4f36-a22e-d3fe575587ce",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2019-10-17T11:13:47.335000-04:00",
    "last_updated": "2021-06-25T14:47:42.680000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2060",
    "universal_id": "b8b7e27c-72c3-4a32-b6a7-eca76d103a85",
    "countermeasure_name": "Ensure snapshots are not public (RDS)",
    "countermeasure_solution": "Snapshot files created for backup purposes may be configured in a way that allows for public access, potentially exposing large amounts of sensitive data. It is a best practice to ensure snapshots are not set to be publicly accessible.",
    "weakness_title_read_only": "Ensure snapshots are not public (RDS)",
    "weakness_id_read_only": "P1507",
    "weakness": "d8ec078c-87b3-49b5-b14d-94a8c80c4d36",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2019-10-17T11:14:34.544000-04:00",
    "last_updated": "2021-11-22T12:55:40.417000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2061",
    "universal_id": "f2c6d254-3889-4e6f-9cee-69f2d46d59ab",
    "countermeasure_name": "Change the default master username (Amazon Aurora)",
    "countermeasure_solution": "Default master usernames are publicly known to attackers and can be used in brute-force attacks against the database.",
    "weakness_title_read_only": "Default master usernames (Amazon Aurora)",
    "weakness_id_read_only": "P1508",
    "weakness": "eb8e21d3-6a12-4459-a77d-40f31203fa11",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2019-10-17T11:24:44.143000-04:00",
    "last_updated": "2021-06-25T14:47:46.492000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2062",
    "universal_id": "e9dfbefc-ac5f-4f79-9728-185178df2256",
    "countermeasure_name": "Use AWS Secrets Manager for connection credentials (RDS)",
    "countermeasure_solution": "Use an enterprise secret management tool like AWS Secrets Manager, Hashicorp Vault, etc. to store database connection credentials. When applications require access to a database, a connection string must be passed to them. This connection string is considered a \"secret\" and needs to be stored, distributed, and rotated appropriately.",
    "weakness_title_read_only": "Improper secret or connection string management (RDS)",
    "weakness_id_read_only": "P1509",
    "weakness": "6bc5892b-b2c5-4c7b-803f-3a387006e7b7",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2019-10-17T11:33:28.777000-04:00",
    "last_updated": "2021-11-22T12:56:56.946000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2063",
    "universal_id": "2270e056-95cc-4ac8-9221-35bee114f822",
    "countermeasure_name": "Utilize Database Activity Streams for PostgreSQL databases (Amazon Aurora)",
    "countermeasure_solution": "Aurora currently supports Database Activity Streams for Aurora PostgreSQL. Database Activity Streams provide a monitoring solution for specific database engines to enhance the security visibility of managed databases in AWS. A stream of database activity events such as SQL commands executed, session information, and objects accessed are all sent to a secure storage location of your choosing.",
    "weakness_title_read_only": "Insufficient logging or protection of logs (Amazon Aurora)",
    "weakness_id_read_only": "P1510",
    "weakness": "beea8b3c-fcce-4b17-af82-13620ebf5222",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2019-10-17T11:37:08.618000-04:00",
    "last_updated": "2021-06-25T14:47:57.572000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2064",
    "universal_id": "1a6e389b-c840-4318-bcdb-9090eaec8a3b",
    "countermeasure_name": "Verify that App Service authentication and identity management is enabled (Microsoft Azure)",
    "countermeasure_solution": "Perform the following:\n\n- Using console:\n\n    1. Login to Azure Portal using <https://portal.azure.com>.\n    2. Go to `App Services`.\n    3. Click on each app:\n        4. Under `Setting` section, click on `Authentication / Authorization`.\n            5. Ensure that `App Service Authentication` is set to `On`.\n        4. Under the `Setting` section, click on `Identity`.\n            5. Ensure that `Status` is set to `On`.\n\n    Or using command-line:\n\n    - To check App Service Authentication status for an existing app, run the following command,\n\n            az webapp auth show --resource-group  --name  --query enabled\n\n        The output should return `true` if App Service authentication is set to `On`.\n\n    - To check Register with Azure Active Directory feature status for an existing app, run the following command:\n\n            az webapp identity show --resource-group  --name  --query principalId\n\n        The output should return a unique Principal ID. If no output for the above command then \"Register with Azure Active Directory\" is not set.",
    "weakness_title_read_only": "Improper App Service authentication and identity management (Microsoft Azure)",
    "weakness_id_read_only": "P1505",
    "weakness": "eec08916-281f-4f36-a22e-d3fe575587ce",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2019-10-17T11:48:40.080000-04:00",
    "last_updated": "2021-06-25T14:47:42.644000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2065",
    "universal_id": "a5e36f02-aa5d-4667-98cb-1cd74ab96db2",
    "countermeasure_name": "Configure TLS for secure connections to App Service (Microsoft Azure)",
    "countermeasure_solution": "Do the following:\n\n- Redirect all HTTP traffic to HTTPS in Azure App Service:\n\n    Non-secure HTTP requests can be restricted and redirected to the secure HTTPS port. It is recommended to enforce HTTPS-only traffic.\n\n    HTTPS provides a secure connection by using the SSL/TLS protocol, which is both encrypted and authenticated. It is important to support HTTPS for the security benefits.\n\n- Use the latest version of TLS encryption:\n\n    App Service currently allows a web app to use TLS version 1.0, 1.1, or 1.2. It is highly recommended to use the latest TLS 1.2 version for secure web app connections, as this is the version recommended by industry standards such as PCI DSS.\n\n- Consider setting 'Client Certificates (Incoming client certificates)' to 'On':\n\n    The TLS mutual authentication technique in enterprise environments ensures the authenticity of clients to the server. If incoming client certificates are enabled, only an authenticated client with valid certificates can access the app.",
    "weakness_title_read_only": "Insecure network communication (Microsoft Azure)",
    "weakness_id_read_only": "P1511",
    "weakness": "263a9775-a586-4ee3-9ac0-f6ba22191a63",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2019-10-17T12:19:33.797000-04:00",
    "last_updated": "2023-03-16T11:19:58.603000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2066",
    "universal_id": "866938ab-23cf-4051-ab09-c4de87e9bd81",
    "countermeasure_name": "Verify that TLS is configured properly for App Service (Microsoft Azure)",
    "countermeasure_solution": "Perform the following:\n\n- Using console:\n\n    1. Login to Azure Portal using <https://portal.azure.com>.\n    2. Go to `App Services`.\n    3. Click on each app:\n        4. Under `Setting` section, click on `SSL settings`.\n            5. Ensure that `HTTPS Only` set to `On` under `Protocol Settings`.\n            5. Ensure that `Minimum TLS Version` set to `1.2` under `Protocol Settings`.\n            5. Ensure that `Incoming client certificates` set to `On` under `Protocol Settings`.\n\n    Or using command-line:\n\n    - To check HTTPS-only traffic value for an existing app, run the following command:\n\n            az webapp show --resource-group  --name  --query httpsOnly\n\n        The output should return `true` if TTPS-only traffic value is set to `On`.\n\n    - To check TLS Version for an existing app, run the following command:\n\n            az webapp config show --resource-group  --name  --query minTlsVersion\n\n        The output should return `1.2` if TLS Version is set to `1.2 (Which is latest now)`.\n\n    - To check Incoming client certificates value for an existing app, run the following command,\n\n            az webapp show --resource-group  --name  --query clientCertEnabled\n\n        The output should return `true` if the Incoming client certificates value is set to `On`.",
    "weakness_title_read_only": "Insecure network communication (Microsoft Azure)",
    "weakness_id_read_only": "P1511",
    "weakness": "263a9775-a586-4ee3-9ac0-f6ba22191a63",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2019-10-17T12:26:31.529000-04:00",
    "last_updated": "2021-06-25T14:47:36.465000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2067",
    "universal_id": "777692bc-2298-4c78-8623-8fadb48df28c",
    "countermeasure_name": "Use the latest version of software on App Service (Microsoft Azure)",
    "countermeasure_solution": "Use the latest version of the following software for your Web apps:\n\n- .Net Framework\n- PHP\n- Python\n- Java\n- HTTP\n\nPeriodically, newer versions are released for each software either due to security flaws or to include additional functionality. Using the latest version for Web apps is recommended in order to take advantage of security fixes, if any, and/or new functionalities of the latest version.\n\nWith each software installation, determine if a given update meets the requirements and also verify the compatibility and support provided for any additional software against the update revision that is selected.",
    "weakness_title_read_only": "Using outdated software in App Service (Microsoft Azure)",
    "weakness_id_read_only": "P1512",
    "weakness": "412ad9d4-d430-4b6c-bd30-e68946d852fa",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "development",
    "created": "2019-10-17T12:39:54.182000-04:00",
    "last_updated": "2021-11-09T15:40:44.304000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2068",
    "universal_id": "d1dc047b-c46b-4589-83ee-05f54ceacdf0",
    "countermeasure_name": "Verify that the latest version of software is used on App Service (Microsoft Azure)",
    "countermeasure_solution": "Perform the following:\n\n- Using console:\n\n    1. Login to Azure Portal using <https://portal.azure.com>.\n    2. Go to `App Services`.\n    3. Click on each app:\n        4. Under `Setting` section, click on `Application settings`.\n            5. Ensure that `.NET Framework version` set to latest version available under `General settings`.\n            5. Ensure that `PHP version` set to latest version available under `General settings`.\n            5. Ensure that `Python version` set to the latest version available under `General settings`.\n            5. Ensure that `Java version` set to the latest version available under `General settings`.\n            5. Ensure that `HTTP Version` set to `2.0` version under `General settings`.\n                - __Note:__ Most modern browsers support HTTP 2.0 protocol over TLS only, while non-encrypted traffic continues to use HTTP 1.1. To ensure that client browsers connect to your app with HTTP/2, either buy an App Service Certificate for your app's custom domain or bind a third-party certificate.\n\n    __Note:__ No action is required If the version is set to `Off` as it is not used by your web app.\n\n    Or using command-line:\n\n    - To check .NET Framework version for an existing app, run the following command:\n\n            az webapp config show --resource-group  --name  --query netFrameworkVersion\n\n        The output should return latest available version of .Net framework.\n\n    - To check PHP version for an existing app, run the following command:\n\n            az webapp config show --resource-group  --name  --query phpVersion\n\n        The output should return the latest available version of PHP.\n\n    - To check Python version for an existing app, run the following command:\n\n            az webapp config show --resource-group  --name  --query pythonVersion\n\n        The output should return the latest available version of Python.\n\n    - To check Java version for an existing app, run the following command:\n\n            az webapp config show --resource-group  --name  --query javaVersion\n\n        The output should return the latest available version of Java.\n\n    - To check HTTP 2.0 version status for an existing app, run the following command:\n\n            az webapp config show --resource-group  --name  --query http20Enabled\n\n        The output should return `true` if TTPS-only traffic value is set to `On`.\"\n\n    __NOTE:__ No action is required, If the output is empty as it is not used by your web app.",
    "weakness_title_read_only": "Using outdated software in App Service (Microsoft Azure)",
    "weakness_id_read_only": "P1512",
    "weakness": "412ad9d4-d430-4b6c-bd30-e68946d852fa",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2019-10-17T12:45:16.497000-04:00",
    "last_updated": "2021-06-25T14:47:57.102000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2069",
    "universal_id": "228caf6e-23a9-49ce-b9f9-7932191c682b",
    "countermeasure_name": "Set 'Enforce SSL connection' to 'ENABLED' for database servers (Microsoft Azure)",
    "countermeasure_solution": "Perform the following:\n\n- Enable `SSL connection` on `MYSQL` servers.\n- Enable `SSL connection` on `PostgreSQL` servers.\n\nSSL connectivity helps to provide a new layer of security, by connecting database server to client applications using Secure Sockets Layer (SSL). Enforcing SSL connections between the database server and client applications helps protect against \"man in the middle\" attacks by encrypting the data stream between the server and application.",
    "weakness_title_read_only": "Insecure connection to database servers (Microsoft Azure)",
    "weakness_id_read_only": "P1513",
    "weakness": "0e9f7f03-634f-49f2-b531-74cb6b9a9417",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2019-10-21T12:01:31.081000-04:00",
    "last_updated": "2021-06-25T14:47:37.140000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2070",
    "universal_id": "4735dc9f-5a0e-44eb-989c-52722bda6b60",
    "countermeasure_name": "Verify that 'Enforce SSL connection' is set to 'ENABLED' for database servers (Microsoft Azure)",
    "countermeasure_solution": "Perform the following:\n\n- Using **Azure Console**:\n\n    1. Login to Azure Portal using <https://portal.azure.com>.\n    2. Go to `Azure Database for MySQL server` and `Azure Database for PostgreSQL server`.\n    3. For each database, click on `Connection security`.\n    4. In `SSL` settings.\n    5. Ensure `Enforce SSL connection` is set to `ENABLED`.\n\n    Or using **Azure Command-Line Interface 2.0**:\n\n    - Ensure the output of the following commands is `ENABLED`:\n\n            az mysql server show --resource-group myresourcegroup --name  --query sslEnforcement\n\n            az postgres server show --resource-group myresourcegroup --name  --query sslEnforcement",
    "weakness_title_read_only": "Insecure connection to database servers (Microsoft Azure)",
    "weakness_id_read_only": "P1513",
    "weakness": "0e9f7f03-634f-49f2-b531-74cb6b9a9417",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2019-10-21T12:09:57.974000-04:00",
    "last_updated": "2021-06-25T14:47:36.582000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2071",
    "universal_id": "e5c5c0d2-8c8e-4a95-b01a-a2f823972d69",
    "countermeasure_name": "Enable logging of important PostgreSQL security events (Microsoft Azure)",
    "countermeasure_solution": "Perform the following:\n\n- Enable `log_checkpoints` on `PostgreSQL Servers`:\n\n    Enabling `log_checkpoints` helps the PostgreSQL database to log each checkpoint.\n\n- Enable `log_connections` on `PostgreSQL Servers`:\n\n    Enabling `log_connections` helps the PostgreSQL database to log attempted connection to the server, as well as successful completion of client authentication.\n\n- Enable `log_disconnections` on `PostgreSQL Servers`:\n\n    Enabling `log_disconnections` helps PostgreSQL database to log end of a session, including duration.\n\n- Enable `log_duration` on `PostgreSQL Servers`:\n\n    Enabling `log_duration` helps the PostgreSQL database to log the duration of each completed SQL statement.\n\nQuery and error logs can be used to identify, troubleshoot, and repair configuration errors and sub-optimal performance.",
    "weakness_title_read_only": "Insufficient Logging (Microsoft Azure)",
    "weakness_id_read_only": "P1032",
    "weakness": "33905c73-cc8d-44d5-b704-8c7c7349d534",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "development",
    "created": "2019-10-21T13:39:03.206000-04:00",
    "last_updated": "2021-06-25T14:47:58.515000-04:00",
    "custom": "False",
    "rules": "5ef238f5-f826-4c18-bb13-9435df56e7f2",
    "rules_read_only": "A1252"
  },
  {
    "countermeasure_id": "T2072",
    "universal_id": "434e1ac8-7899-4287-bdaa-4b3bcadd76db",
    "countermeasure_name": "Verify that logging of important PostgreSQL security events is enabled (Microsoft Azure)",
    "countermeasure_solution": "Perform the following:\n\n- Using \"**Azure Console**:\n\n    1. Login to Azure Portal using <https://portal.azure.com>.\n    2. Go to Azure `Database` for `PostgreSQL` server.\n    3. For each database, click on `Server parameters`.\n        4. Search for `log_checkpoints`.\n            5. Ensure that value is set to `ON`.\n        4. Search for `log_connections`.\n            5. Ensure that value is set to `ON`.\n        4. Search for `log_disconnections`.\n            5. Ensure that value is set to `ON`.\n        4. Search for `log_duration`.\n            5. Ensure that value is set to `ON`.\n\n    Or using **Azure Command-Line Interface 2.0**:\n\n    - Ensure the following values are set to `ON`:\n\n            az postgres server configuration show --resource-group  --server-name  --name log_checkpoints\n\n            az postgres server configuration show --resource-group  --server-name  --name log_connections\n\n            az postgres server configuration show --resource-group  --server-name  --name log_disconnections\n\n            az postgres server configuration show --resource-group  --server-name  --name log_duration",
    "weakness_title_read_only": "Insufficient Logging (Microsoft Azure)",
    "weakness_id_read_only": "P1032",
    "weakness": "33905c73-cc8d-44d5-b704-8c7c7349d534",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2019-10-21T13:46:13.662000-04:00",
    "last_updated": "2021-06-25T14:47:57.819000-04:00",
    "custom": "False",
    "rules": "5ef238f5-f826-4c18-bb13-9435df56e7f2",
    "rules_read_only": "A1252"
  },
  {
    "countermeasure_id": "T2073",
    "universal_id": "45c0ccff-3d5e-4c0e-b5c8-4e0b1164d886",
    "countermeasure_name": "Enable 'log_retention_days' on PostgreSQL servers (Microsoft Azure)",
    "countermeasure_solution": "Set server parameter `log_retention_days` to more than 3 days for PostgreSQL database server.",
    "weakness_title_read_only": "Inadequate Log Retention (Microsoft Azure)",
    "weakness_id_read_only": "P1030",
    "weakness": "a459a746-fd81-4378-8b5c-b9ac0e225b42",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2019-10-21T14:02:41.259000-04:00",
    "last_updated": "2021-06-25T14:47:57.662000-04:00",
    "custom": "False",
    "rules": "5ef238f5-f826-4c18-bb13-9435df56e7f2",
    "rules_read_only": "A1252"
  },
  {
    "countermeasure_id": "T2074",
    "universal_id": "f1960457-1c98-4c31-9877-84c2ea457420",
    "countermeasure_name": "Verify that server parameter 'log_retention_days' is set to more than 3 days for PostgreSQL database server (Microsoft Azure)",
    "countermeasure_solution": "Using \"**Azure Console**:\n\n1. Login to Azure Portal using <https://portal.azure.com>.\n2. Go to Azure `Database` for `PostgreSQL` server.\n3. For each database, click on `Server parameters`.\n4. Search for `log_retention_days`.\n5. Ensure that value is greater than 3.\n\nOr using **Azure Command-Line Interface 2.0**:\n\n- Ensure `log_retention_days` value is greater than 3:\n\n        az postgres server configuration show --resource-group  --server-name  --name log_retention_days",
    "weakness_title_read_only": "Inadequate Log Retention (Microsoft Azure)",
    "weakness_id_read_only": "P1030",
    "weakness": "a459a746-fd81-4378-8b5c-b9ac0e225b42",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2019-10-21T14:05:48.349000-04:00",
    "last_updated": "2021-06-25T14:47:58.415000-04:00",
    "custom": "False",
    "rules": "5ef238f5-f826-4c18-bb13-9435df56e7f2",
    "rules_read_only": "A1252"
  },
  {
    "countermeasure_id": "T2075",
    "universal_id": "2f1ff832-45d5-4503-a7d0-bf60a58f03bf",
    "countermeasure_name": "Enable 'connection_throttling' on PostgreSQL servers (Microsoft Azure)",
    "countermeasure_solution": "Set server parameter 'connection_throttling' to 'ON' for PostgreSQL database server.",
    "weakness_title_read_only": "No connection throttling for PostgreSQL database server (Microsoft Azure)",
    "weakness_id_read_only": "P1514",
    "weakness": "20c7536a-003c-41e3-8f16-71402782f66a",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "deployment",
    "created": "2019-10-21T16:10:47.160000-04:00",
    "last_updated": "2021-06-25T14:47:40.827000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2076",
    "universal_id": "0efd805d-c031-46ba-9052-93296e223466",
    "countermeasure_name": "Verify that 'connection_throttling' on PostgreSQL servers is enabled (Microsoft Azure)",
    "countermeasure_solution": "Using **Azure Console**:\n\n1. Login to Azure Portal using <https://portal.azure.com>.\n2. Go to Azure `Database` for `PostgreSQL` server.\n3. For each database, click on `Server parameters`.\n4. Search for `connection_throttling`.\n5. Ensure that value is set to `ON`.\n\nOr using **Azure Command-Line Interface 2.0**:\n\n- Ensure `connection_throttling` value is set to `ON`:\n\n        az postgres server configuration show --resource-group  --server-name  --name connection_throttling",
    "weakness_title_read_only": "No connection throttling for PostgreSQL database server (Microsoft Azure)",
    "weakness_id_read_only": "P1514",
    "weakness": "20c7536a-003c-41e3-8f16-71402782f66a",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2019-10-21T16:14:40.318000-04:00",
    "last_updated": "2021-06-25T14:47:39.855000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2077",
    "universal_id": "35c4aa14-5110-467b-969e-d7455c9fd624",
    "countermeasure_name": "Use strong cryptographic ciphers (Kubernetes)",
    "countermeasure_solution": "Configure the API server and Kubelet to only use strong cryptographic ciphers:\n\nAPI server and Kubelet clients that cannot support modern cryptographic ciphers will not be able to make connections to the API server.",
    "weakness_title_read_only": "Using weak cryptographic ciphers (Kubernetes)",
    "weakness_id_read_only": "P1515",
    "weakness": "dc85e455-48af-49a7-98c9-d9ad46f3f0c7",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "deployment",
    "created": "2019-10-25T14:14:27.773000-04:00",
    "last_updated": "2021-09-07T10:24:47.510000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2078",
    "universal_id": "742ac1b8-36bc-4ac7-b4a6-f8b9bbe45ca8",
    "countermeasure_name": "Verify that strong cryptographic ciphers are used (Kubernetes)",
    "countermeasure_solution": " - Run the following command on the master node:\n\n        ps -ef | grep kube-apiserver\n\n    Verify that the `--tls-cipher-suites` argument is set properly.\n\n- Run the following command on each node:\n\n        ps -ef | grep kubelet\n\n    If the `--tls-cipher-suites` argument is present, ensure it only contains values included in the following trusted set:\n\n    - `TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256`\n    - `TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256`\n    - `TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305`\n    - `TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384`\n    - `TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305`\n    - `TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384`\n    - `TLS_RSA_WITH_AES_256_GCM_SHA384`\n    - `TLS_RSA_WITH_AES_128_GCM_SHA256`\n\n    If it is not present check that there is a Kubelet config file specified by `--config`, and that file sets `TLSCipherSuites:` to only include values from the above set.",
    "weakness_title_read_only": "Using weak cryptographic ciphers (Kubernetes)",
    "weakness_id_read_only": "P1515",
    "weakness": "dc85e455-48af-49a7-98c9-d9ad46f3f0c7",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2019-10-25T14:14:27.793000-04:00",
    "last_updated": "2021-09-07T10:51:08.051000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2079",
    "universal_id": "3bbe211d-08b0-491e-a94d-3596901d2017",
    "countermeasure_name": "Restrict Kublet nodes to access only objects associated with them. (Kubernetes)",
    "countermeasure_solution": " - Restrict kubelet nodes to reading only objects associated with them:\n\n    Ensure that the `--authorization-mode` argument includes `Node`. The `Node` authorization mode only allows kubelets to read `Secret`, `ConfigMap`, `PersistentVolume`, and `PersistentVolumeClaim` objects associated with their nodes.\n\n- Limit the `Node` and `Pod` objects that a kubelet could modify.\n\n    Ensure that the admission control plugin `NodeRestriction` is set. Using the `NodeRestriction` plug-in ensures that the kubelet is restricted to the `Node` and `Pod` objects that it could modify as defined. Such kubelets will only be allowed to modify their own `Node` API object, and only modify `Pod` API objects that are bound to their node.",
    "weakness_title_read_only": "Inadequate access control for Kubelet nodes (Kubernetes)",
    "weakness_id_read_only": "P1516",
    "weakness": "6d6e9b6e-a144-4d93-b818-3a79538be475",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2019-10-25T14:14:27.882000-04:00",
    "last_updated": "2021-10-14T22:22:30.597000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2080",
    "universal_id": "0b1d59a1-10b6-4c57-8b26-6523f9e7fdf4",
    "countermeasure_name": "Verify that Kublet nodes are restricted to access only objects associated with them. (Kubernetes)",
    "countermeasure_solution": " - Run the following command on the master node:\n\n        ps -ef | grep kube-apiserver\n\n- Verify that the `--authorization-mode` argument exists and is set to a value to include `Node`.\n- Verify that the `--enable-admission-plugins` argument is set to a value that includes `NodeRestriction`.",
    "weakness_title_read_only": "Inadequate access control for Kubelet nodes (Kubernetes)",
    "weakness_id_read_only": "P1516",
    "weakness": "6d6e9b6e-a144-4d93-b818-3a79538be475",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2019-10-25T14:14:27.901000-04:00",
    "last_updated": "2021-09-07T08:42:58.299000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2081",
    "universal_id": "af537140-df78-45cb-8de9-d82ba411d74c",
    "countermeasure_name": "Encrypt data at rest properly (Kubernetes)",
    "countermeasure_solution": " - Encrypt \"etcd\" key-value store:\n\n    Set `--encryption-provider-config` argument as appropriate.\n\n- Ensure that the appropriate set of encryption providers is used. \n\n   Currently, the aescbc, kms and secretbox are likely to be appropriate options.",
    "weakness_title_read_only": "Cleartext or weakly encrypted data at rest (Kubernetes)",
    "weakness_id_read_only": "P1517",
    "weakness": "0fa97ef9-0731-4550-b7a2-581a5fcfa4d8",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "deployment",
    "created": "2019-10-25T14:14:28.022000-04:00",
    "last_updated": "2021-09-07T10:22:51.444000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2082",
    "universal_id": "52bf63f3-2c6f-408d-98f4-7310ca8b013f",
    "countermeasure_name": "Verify that data at rest is encrypted properly (Kubernetes)",
    "countermeasure_solution": " - Run the following command on the master node:\n\n        ps -ef | grep kube-apiserver\n\n- Verify that the `--encryption-provider-config` argument is set to a `EncryptionConfig` file. Additionally, ensure that the `EncryptionConfig` file has all the desired `resources` covered especially any secrets.\n\n- Get the `EncryptionConfig` file set for `--experimental-encryption-provider-config` argument. Verify that aescbc, kms or secretbox is set as the encryption provider for all the desired resources.",
    "weakness_title_read_only": "Cleartext or weakly encrypted data at rest (Kubernetes)",
    "weakness_id_read_only": "P1517",
    "weakness": "0fa97ef9-0731-4550-b7a2-581a5fcfa4d8",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "testing",
    "created": "2019-10-25T14:14:28.040000-04:00",
    "last_updated": "2021-09-07T09:31:22.480000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2083",
    "universal_id": "ffa41ad1-0a97-4e61-a9a8-64e2de92b85a",
    "countermeasure_name": "Limit the rate at which the API server accepts requests (Kubernetes)",
    "countermeasure_solution": "Perform the following:\n\n- Set the admission control plugin `EventRateLimit`:\n\n    Using `EventRateLimit` admission control enforces a limit on the number of events that the API server will accept in a given time slice. You need to carefully tune in limits as per your environment. \n\n    Note: This is an Alpha feature in the Kubernetes 1.11 release.\n\n- Set global request timeout for API server requests as appropriate:\n\n    It is recommended to set this limit as appropriate and change the default limit of 60 seconds only if needed.",
    "weakness_title_read_only": "Resource Exhaustion (Kubernetes)",
    "weakness_id_read_only": "P1518",
    "weakness": "cd04df29-581a-41cc-8e9b-fc78bfeb4860",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2019-10-25T14:14:28.152000-04:00",
    "last_updated": "2021-09-07T08:52:41.292000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2084",
    "universal_id": "be0121c2-5d36-40a9-b568-0f105ff4c1da",
    "countermeasure_name": "Verify that the admission control plugin 'EventRateLimit' is set (Kubernetes)",
    "countermeasure_solution": "Perform the following:\n\n- Run the following command on the master node:\n\n        ps -ef | grep kube-apiserver\n\n- Verify that the `--enable-admission-plugins` argument is set to a value that includes `EventRateLimit`.\n- Verify that the `--request-timeout` argument is either not set or set to an appropriate value.",
    "weakness_title_read_only": "Resource Exhaustion (Kubernetes)",
    "weakness_id_read_only": "P1518",
    "weakness": "cd04df29-581a-41cc-8e9b-fc78bfeb4860",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2019-10-25T14:14:28.166000-04:00",
    "last_updated": "2021-09-07T08:54:25.424000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2089",
    "universal_id": "515763a6-77f1-42f4-b633-63fd5df149d5",
    "countermeasure_name": "Turn on Role Based Access Control (Kubernetes)",
    "countermeasure_solution": "Include RBAC in the `--authorization-mode` argument.\n\nWhen RBAC is enabled you will need to ensure that appropriate RBAC settings (including Roles, RoleBindings, and ClusterRoleBindings) are configured to allow appropriate access.",
    "weakness_title_read_only": "Lack of Role Based Access Control (RBAC) (Kubernetes)",
    "weakness_id_read_only": "P1521",
    "weakness": "f1b98a47-5e5d-4604-8632-3b2b4ed46662",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "deployment",
    "created": "2019-10-25T14:14:28.380000-04:00",
    "last_updated": "2021-09-07T08:48:10.391000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2090",
    "universal_id": "d6cf8aec-a666-4d09-b87f-9ae79f6bd336",
    "countermeasure_name": "Verify that Role Based Access Control is turned on (Kubernetes)",
    "countermeasure_solution": "Run the following command on the master node:\n\n```\nps -ef | grep kube-apiserver\n```\n\nVerify that the `--authorization-mode` argument exists and is set to a value that includes `RBAC`.",
    "weakness_title_read_only": "Lack of Role Based Access Control (RBAC) (Kubernetes)",
    "weakness_id_read_only": "P1521",
    "weakness": "f1b98a47-5e5d-4604-8632-3b2b4ed46662",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2019-10-25T14:14:28.394000-04:00",
    "last_updated": "2021-09-07T08:47:03.350000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2091",
    "universal_id": "e9c1dc19-b5f8-4c98-b602-a7e3bf43c9c0",
    "countermeasure_name": "Do not bind the scheduler and the controller manager services to non-loopback insecure addresses (Kubernetes)",
    "countermeasure_solution": "Set the `--bind-address argument` for the Scheduler and the Controller Manager services  to `127.0.0.1`:\n\nDo not bind these services to non-loopback insecure addresses to minimize the cluster's attack surface.",
    "weakness_title_read_only": "Unauthorized access to the scheduler and controller manager API services (Kubernetes)",
    "weakness_id_read_only": "P1522",
    "weakness": "f77a3ea7-2b2b-40ad-a04c-33dba60d214d",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2019-10-25T14:14:28.465000-04:00",
    "last_updated": "2021-09-15T15:16:04.220000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2092",
    "universal_id": "1a7a1265-d70e-40c0-bcf1-516917944364",
    "countermeasure_name": "Verify that the scheduler and controller manager services are not bound to non-loopback insecure addresses (Kubernetes)",
    "countermeasure_solution": "Run the following commands on the master node:\n\n    ps -ef | grep kube-scheduler\n    ps -ef | grep kube-controller-manager\n\nVerify that the `--bind-address` arguments are set to `127.0.0.1`.",
    "weakness_title_read_only": "Unauthorized access to the scheduler and controller manager API services (Kubernetes)",
    "weakness_id_read_only": "P1522",
    "weakness": "f77a3ea7-2b2b-40ad-a04c-33dba60d214d",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2019-10-25T14:14:28.483000-04:00",
    "last_updated": "2021-09-15T15:18:01.243000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2093",
    "universal_id": "8df49fe2-63bf-4e1d-9319-ea6aad7a8708",
    "countermeasure_name": "Enable Kubelet server certificate rotation (Kubernetes)",
    "countermeasure_solution": "Perform the following:\n\n- Enable kubelet server certificate rotation by setting the `RotateKubeletServerCertificate` argument to true.\n\n    `RotateKubeletServerCertificate` causes the kubelet to both request a serving certificate after bootstrapping its client credentials and rotate the certificate as its existing credentials expire. This automated periodic rotation ensures that there are no downtimes due to expired certificates and thus addressing availability in the CIA security triad.\n \n- Enable kubelet client certificate rotation:\n\n    Ensure that the `--rotate-certificates` argument is not set to false.\n\n    The `--rotate-certificates` setting causes the kubelet to rotate its client certificates by creating new CSRs as its existing credentials expire. This automated periodic rotation ensures that there are no downtimes due to expired certificates and thus addressing availability in the CIA security triad.\n\n    **Note:** This feature also requires the `RotateKubeletClientCertificate` feature gate to be enabled (which is the default since Kubernetes v1.7)\n\n__Note:__ These recommendations only apply if you let kubelets get their certificates from the API server. In case your kubelet certificates come from an outside authority/tool (e.g. Vault) then you need to take care of rotation yourself.",
    "weakness_title_read_only": "Downtimes due to expired certificates (Kubernetes)",
    "weakness_id_read_only": "P1523",
    "weakness": "c22c38f2-4ab7-45b5-b786-a8d306fde4ac",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2019-10-25T14:14:28.556000-04:00",
    "last_updated": "2021-09-07T11:02:18.026000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2094",
    "universal_id": "da1f885f-aed0-4437-bb11-92e70e5254d9",
    "countermeasure_name": "Verify that Kubelet server certificate rotation is enabled (Kubernetes)",
    "countermeasure_solution": "Perform the following:\n\n- Run the following command on the master node:\n\n        ps -ef | grep kube-controller-manager\n\n    Verify that `RotateKubeletServerCertificate` argument exists and is set to `true`.\n\n- Run the following command on each node:\n\n        ps -ef | grep kubelet\n\n    Verify that `RotateKubeletServerCertificate` argument exists and is set to `true`.\n\n- Run the following command on each node:\n\n        ps -ef | grep kubelet\n\n    Verify that the `--rotate-certificates` argument is set to `true`.\n\n    If the `--rotate-certificates` argument is not present, verify that there is a Kubelet config file specified by `--config` and that file contains `rotateCertificates: true`.",
    "weakness_title_read_only": "Downtimes due to expired certificates (Kubernetes)",
    "weakness_id_read_only": "P1523",
    "weakness": "c22c38f2-4ab7-45b5-b786-a8d306fde4ac",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2019-10-25T14:14:28.569000-04:00",
    "last_updated": "2021-09-07T11:03:14.610000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2095",
    "universal_id": "9c711e70-b0fa-4770-a501-506e2dad48fd",
    "countermeasure_name": "Set the permissions properly on the sensitive configuration files (Kubernetes)",
    "countermeasure_solution": " - Set the `admin.conf` file permissions to `644` or more restrictive.\n\n    The file should be writable by only the administrators on the system.\n\n    - Set the `admin.conf` file ownership to `root:root`.\n\n- Set the `scheduler.conf` file permissions to `644` or more restrictive.\n\n    The file should be writable by only the administrators on the system.\n\n    - Set the `scheduler.conf` file ownership to `root:root`.\n\n- Set the `controller-manager.conf` file permissions to `644` or more restrictive.\n\n    The file should be writable by only the administrators on the system.\n\n    - Set the `controller-manager.conf` file ownership to `root:root`. \n\n- Set the Kubernetes PKI certificate files permissions to `644` or more restrictive.\n\n    - Set the Kubernetes PKI directory and file ownership to `root:root`.\n\n- Set the Kubernetes PKI key files permissions to `600`.\n\n- Set the `kubelet.conf` file permissions to `644` or more restrictive.\n\n    The file should be writable by only the administrators on the system.\n\n    - Set the `kubelet.conf` file ownership to `root:root`.\n\n- Set the certificate authorities file permissions to `644` or more restrictive.\n\n    The file should be writable by only the administrators on the system.\n\n    - Set the certificate authorities file ownership to `root:root`.",
    "weakness_title_read_only": "Unauthorized access to the sensitive configuration files (Kubernetes)",
    "weakness_id_read_only": "P1524",
    "weakness": "93e04769-5452-4a5e-bccd-a02ca5440edc",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2019-10-25T14:14:28.768000-04:00",
    "last_updated": "2021-09-07T08:25:33.035000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2096",
    "universal_id": "7525c2a5-c112-40fe-806e-c98cd86b4355",
    "countermeasure_name": "Verify that the permissions on the sensitive configuration files are set properly (Kubernetes)",
    "countermeasure_solution": " - Run the following commands (based on the file location on your system) on the master node. For example:\n\n    - `stat -c %a /etc/kubernetes/admin.conf`\n\n        Verify that the permissions are `644` or more restrictive.\n\n    - `stat -c %U:%G /etc/kubernetes/admin.conf`\n\n        Verify that the ownership is set to `root:root`.\n\n    - `stat -c %a /etc/kubernetes/scheduler.conf`\n\n    Verify that the permissions are `644` or more restrictive.\n\n    - `stat -c %U:%G /etc/kubernetes/scheduler.conf`\n\n        Verify that the ownership is set to `root:root`.\n\n    - `stat -c %a /etc/kubernetes/controller-manager.conf`\n\n        Verify that the permissions are `644` or more restrictive.\n\n    - `stat -c %U:%G /etc/kubernetes/controller-manager.conf`\n\n        Verify that the ownership is set to `root:root`.\n\n    - `ls -laR /etc/kubernetes/pki/*.crt`\n\n        Verify that the permissions are `644` or more restrictive.\n\n    - `ls -laR /etc/kubernetes/pki/`\n\n        Verify that the ownership of all files and directories in this hierarchy is set to `root:root`.\n\n    - `ls -laR /etc/kubernetes/pki/*.key`\n\n        Verify that the permissions are `600`.\n\n- Run the below commands (based on the file location on your system) on each worker node. For example:\n\n    - `stat -c %a /etc/kubernetes/kubelet.conf`\n\n        Verify that the permissions are `644` or more restrictive.\n\n    - `stat -c %U:%G /etc/kubernetes/kubelet.conf`\n\n        Verify that the ownership is set to `root:root`.\n\n- Run the following command:\n\n        ps -ef | grep kubelet\n\n    Find the file specified by the `--client-ca-file` argument.\n\n    Then run the following commands:\n\n    - `stat -c %a <filename>`\n\n        Verify that the permissions are `644` or more restrictive.\n\n    - `stat -c %U:%G <filename>`\n\n        Verify that the ownership is set to `root:root`.",
    "weakness_title_read_only": "Unauthorized access to the sensitive configuration files (Kubernetes)",
    "weakness_id_read_only": "P1524",
    "weakness": "93e04769-5452-4a5e-bccd-a02ca5440edc",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2019-10-25T14:14:28.843000-04:00",
    "last_updated": "2021-09-07T08:25:02.302000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2097",
    "universal_id": "5cbc9831-54e5-4683-91e1-3586d88f11f8",
    "countermeasure_name": "Minimize containers with excessive privileges (Kubernetes)",
    "countermeasure_solution": " - Minimize the admission of privileged containers.\n\n    Do not generally permit containers to be run with the `securityContext.privileged` flag set to `true`. This flag exists to allow special use-cases, like manipulating the network stack and accessing devices.\n\n    There should be at least one PodSecurityPolicy (PSP) defined which does not permit privileged containers.\n\n    If you need to run privileged containers, this should be defined in a separate PSP and you should carefully check RBAC controls to ensure that only limited service accounts and users are given permission to access that PSP.\n\n- Minimize the admission of containers wishing to share the host process ID namespace:\n\n    Do not generally permit containers to be run with the `hostPID` flag set to true.\n\n    There should be at least one PodSecurityPolicy (PSP) defined which does not permit containers to share the host PID namespace.\n\n    If you need to run containers that require hostPID, this should be defined in a separate PSP and you should carefully check RBAC controls to ensure that only limited service accounts and users are given permission to access that PSP.\n\n- Minimize the admission of containers wishing to share the host IPC namespace:\n\n    Do not generally permit containers to be run with the `hostIPC` flag set to true.\n\n    There should be at least one PodSecurityPolicy (PSP) defined which does not permit containers to share the host IPC namespace.\n\n    If you have a requirement to containers that require hostIPC, this should be defined in a separate PSP and you should carefully check RBAC controls to ensure that only limited service accounts and users are given permission to access that PSP.\n\n- Minimize the admission of containers wishing to share the host network namespace:\n\n    Do not generally permit containers to be run with the `hostNetwork` flag set to true.\n\n    There should be at least one PodSecurityPolicy (PSP) defined which does not permit containers to share the host network namespace.\n\n    If you have need to run containers that require hostNetwork, this should be defined in a separate PSP and you should carefully check RBAC controls to ensure that only limited service accounts and users are given permission to access that PSP.\n\n- Minimize the admission of containers with `allowPrivilegeEscalation`:\n\n    Do not generally permit containers to be run with the `allowPrivilegeEscalation` flag set to true.\n\n    There should be at least one PodSecurityPolicy (PSP) defined which does not permit containers to allow privilege escalation. The option exists (and is defaulted to true) to permit setuid binaries to run.\n\n    If you have need to run containers that use setuid binaries or require privilege escalation, this should be defined in a separate PSP and you should carefully check RBAC controls to ensure that only limited service accounts and users are given permission to access that PSP.",
    "weakness_title_read_only": "Allowing containers with excessive privileges (Kubernetes)",
    "weakness_id_read_only": "P1525",
    "weakness": "0b1023e5-6b0a-47a2-88ca-fab0f5cfa5d7",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "deployment",
    "created": "2019-10-25T14:14:29.382000-04:00",
    "last_updated": "2021-10-01T10:23:12.843000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2098",
    "universal_id": "9cc981c4-162d-4cb3-a2e0-59a8da6a05a1",
    "countermeasure_name": "Verify that containers with excessive privileges are minimized (Kubernetes)",
    "countermeasure_solution": " - Get the set of PSPs with the following command:\n\n        kubectl get psp\n\n- For each PSP:\n\n    - Verify that there is at least one PSP that does not return `true` for each on the following commands:\n\n            kubectl get psp  -o=jsonpath='{.spec.privileged}'\n            kubectl get psp  -o=jsonpath='{.spec.hostPID}'\n            kubectl get psp  -o=jsonpath='{.spec.hostIPC}'\n            kubectl get psp  -o=jsonpath='{.spec.hostNetwork}'\n            kubectl get psp  -o=jsonpath='{.spec.allowPrivilegeEscalation}'",
    "weakness_title_read_only": "Allowing containers with excessive privileges (Kubernetes)",
    "weakness_id_read_only": "P1525",
    "weakness": "0b1023e5-6b0a-47a2-88ca-fab0f5cfa5d7",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2019-10-25T14:14:29.416000-04:00",
    "last_updated": "2021-10-01T10:23:52.816000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2105",
    "universal_id": "20caf26a-fc2a-4342-a20b-1c35e319f3bd",
    "countermeasure_name": "Enforce the use of client certificate bundles for unprivileged users to access UCP (Docker)",
    "countermeasure_solution": "Provide unprivileged users with client certificate bundles for connecting to UCP manager nodes and communicating with a UCP cluster so that their access rights are controlled via the built-in role-based access control (RBAC) model.\n\nWith the use of UCP client certificate bundles, you do not need to include standard users in the \"docker\" security group and instead, you can facilitate user access to the cluster via RBAC.",
    "weakness_title_read_only": "Providing direct access to UCP manager nodes by giving administrative permissions to users (Docker)",
    "weakness_id_read_only": "P1529",
    "weakness": "9c184251-eec3-4f4d-a9f0-cb32971c17ce",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2019-12-04T18:14:23.548000-05:00",
    "last_updated": "2021-06-25T14:47:41.968000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2106",
    "universal_id": "52f70c3b-2517-4b4e-8365-facfd6cc6ac3",
    "countermeasure_name": "Verify that the use of client certificate bundles for unprivileged users is enforced (Docker)",
    "countermeasure_solution": "UCP cluster administrators can audit client certificate bundles on a per-user basis. You can verify that a user's client certificate bundle has been created by navigating to the `USER MANAGEMENT | USERS` interface in UCP, selecting the user from the list, clicking on the \"Configure\" button from the right-hand navigation menu, and selecting \"Client Bundle\" from the drop-down. From there, a list of client bundles assigned to the user will appear.",
    "weakness_title_read_only": "Providing direct access to UCP manager nodes by giving administrative permissions to users (Docker)",
    "weakness_id_read_only": "P1529",
    "weakness": "9c184251-eec3-4f4d-a9f0-cb32971c17ce",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2019-12-04T18:16:50.456000-05:00",
    "last_updated": "2021-06-25T14:47:41.982000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2107",
    "universal_id": "78a63a95-fd6e-405e-b674-73af17f28128",
    "countermeasure_name": "Configure applicable cluster role-based access control policies for UCP access (Docker)",
    "countermeasure_solution": "The Universal Control Plane provides robust role-based access control (RBAC) capabilities that can be used to harden a deployment. Develop an appropriate RBAC model that aligns with your organization's IT Security policies by creating custom roles and collections off of the default set of RBAC components which includes subjects, roles, resource collections, and grants.",
    "weakness_title_read_only": "Using the default RBAC roles provided by UCP (Docker)",
    "weakness_id_read_only": "P1530",
    "weakness": "6b293b52-e02f-49b8-9aec-a8f61809041b",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "deployment",
    "created": "2019-12-04T18:41:47.569000-05:00",
    "last_updated": "2021-06-25T14:47:45.166000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2108",
    "universal_id": "450fca19-228b-40fd-a163-8e1d9f0e0b65",
    "countermeasure_name": "Verify that a valid RBAC model is configured for UCP access (Docker)",
    "countermeasure_solution": "Use the UCP \"User Management\" UI to validate that the configured RBAC model satisfies the requirements of your organization.",
    "weakness_title_read_only": "Using the default RBAC roles provided by UCP (Docker)",
    "weakness_id_read_only": "P1530",
    "weakness": "6b293b52-e02f-49b8-9aec-a8f61809041b",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2019-12-04T18:50:10.977000-05:00",
    "last_updated": "2021-06-25T14:47:49.052000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2109",
    "universal_id": "20f7953b-62de-49ca-94db-c2494c392c6c",
    "countermeasure_name": "Enable signed image enforcement (Docker)",
    "countermeasure_solution": "The Universal Control Plane includes the ability to enforce running of only images that have been signed by members of a particular group. Enable this capability to prevent unsigned images from being deployed to your cluster.\n\nCombined with the Docker Content Trust recommendations, signed image enforcement in UCP gives you more control over the validity and origination of your Docker images prior to deployment. Signed image enforcement can prohibit images that are unsigned, have malformed signatures, and/or compromised signatures from being deployed.",
    "weakness_title_read_only": "Running untrusted containers (Docker)",
    "weakness_id_read_only": "P1531",
    "weakness": "8c06d570-05ff-4a6e-9830-b2af7c8fb7aa",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2019-12-06T04:33:33.354000-05:00",
    "last_updated": "2021-06-25T14:47:57.022000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2110",
    "universal_id": "0b9846a9-9a3f-4f93-b704-bad7cf6d5a41",
    "countermeasure_name": "Verify that signed image enforcement is enabled (Docker)",
    "countermeasure_solution": "Use the \"Docker Content Trust\" page under the UCP \"Admin Settings\" UI to verify that this setting has been enabled.",
    "weakness_title_read_only": "Running untrusted containers (Docker)",
    "weakness_id_read_only": "P1531",
    "weakness": "8c06d570-05ff-4a6e-9830-b2af7c8fb7aa",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2019-12-06T04:35:43.740000-05:00",
    "last_updated": "2021-06-25T14:47:57.004000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2111",
    "universal_id": "e6c8f9c3-0675-4bd6-a3aa-f297bb65e3dc",
    "countermeasure_name": "Set the 'Per-User Session Limit' to a value of '3' or lower (Docker)",
    "countermeasure_solution": "Set the \"Per User Limit\" Login Session Control to '3' or lower but greater than '0' to prevent users from initiating an unnecessarily high number of concurrent sessions.\n\nThis setting, which is configured in the UCP `\"Admin Settings\" | \"Authentication & Authorization\"` section, specifies the maximum number of sessions that any user can have active at any given time. If creating a new session would put a user over this limit then the least recently used session will be deleted. This limit applies to users that are authenticated to UCP and/or DTR as the built-in authentication and authorization backplane in UCP serves both UCP and DTR.",
    "weakness_title_read_only": "Using an improper value for limiting the number of per user concurrent sessions (Docker)",
    "weakness_id_read_only": "P1532",
    "weakness": "c6c536a1-aba2-4bfb-8f78-8a3ee1cf46d3",
    "tags": "",
    "countermeasure_priority": "3",
    "phase": "deployment",
    "created": "2019-12-06T04:55:15.637000-05:00",
    "last_updated": "2021-06-25T14:47:40.433000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2112",
    "universal_id": "ba319a4d-61df-41a5-a740-cc7fb858f022",
    "countermeasure_name": "Verify that the 'Per-User Session Limit' is set to a value of '3' or lower (Docker)",
    "countermeasure_solution": "As a Docker Enterprise Administrator, you should execute the following commands from a machine with connectivity to the UCP management console. Replace `[ucp_url]` with your UCP URL, `[ucp_username]` with the username of a Docker Enterprise Administrator and `[ucp_password]` with the password of a Docker Enterprise Administrator:\n\n- **Step 1:** Retrieve a UCP API token:\n\n    Linux (requires curl and jq):\n\n        $ AUTHTOKEN=$(curl -sk -d '{\"\"username\"\":\"\"[ucp_username]\"\",\"\"password\"\":\"\"[ucp_password]\"\"}' https://[ucp_url]/auth/login | jq -r .auth_token)\n\n- **Step 2:** Retrieve UCP config:\n\n    Linux (requires curl):\n\n        $ curl -sk -H \"\"Authorization: Bearer $AUTHTOKEN\"\" https://[ucp_url]/api/ucp/config-toml\n\n- **Step 3:** Look for the `per_user_limit` entry under the `[auth.sessions]` section in the output, and verify that it is set to a value of '3' or lower, but greater than '0'.",
    "weakness_title_read_only": "Using an improper value for limiting the number of per user concurrent sessions (Docker)",
    "weakness_id_read_only": "P1532",
    "weakness": "c6c536a1-aba2-4bfb-8f78-8a3ee1cf46d3",
    "tags": "",
    "countermeasure_priority": "3",
    "phase": "testing",
    "created": "2019-12-06T05:01:30.763000-05:00",
    "last_updated": "2021-06-25T14:47:41.086000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2113",
    "universal_id": "08faf780-d8da-4d28-a611-d95a78e37881",
    "countermeasure_name": "Set the 'Lifetime Minutes' and 'Renewal Threshold Minutes' values to '15' or lower and '0' respectively (Docker)",
    "countermeasure_solution": "Set the \"Lifetime Minutes\" Login Session Control to a value of '15' or lower so as to restrict a Docker Enterprise user's session length to 15 minutes or less. This setting, which is configured in the UCP `\"Admin Settings\" | \"Authentication & Authorization\"` section, specifies the initial lifetime (in minutes) of a session from the moment it is generated.\n\nSet the \"Renewal Threshold Minutes\" Login Session Control to '0' to prevent a user's session from being extended for any period of time. This setting, which is also configured in the UCP `\"Admin Settings\" | \"Authentication & Authorization\"` section, indicates the period of time (in minutes) before the expiration of a session where, if set, a session will be extended by the current configured lifetime from then. This value cannot be greater than the configured lifetime. A value equal to the lifetime means that sessions will be extended with every use. A value of zero indicates that sessions should never be extended, but this may result in unexpectedly being logged out if the session expires while performing a series of actions in the UI.",
    "weakness_title_read_only": "Using an improper value for limiting the duration of active sessions (Docker)",
    "weakness_id_read_only": "P1533",
    "weakness": "a21f6c0c-8bd9-4161-bc21-bdeff0cc3c14",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "deployment",
    "created": "2019-12-06T05:17:36.805000-05:00",
    "last_updated": "2021-06-25T14:48:00.987000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2114",
    "universal_id": "b0375d68-672e-43b1-8eff-43eae57b16a5",
    "countermeasure_name": "Verify that the 'Lifetime Minutes' and 'Renewal Threshold Minutes' values are set to '15' or lower and '0' respectively (Docker)",
    "countermeasure_solution": "As a Docker Enterprise Administrator, execute the following commands from a machine with connectivity to the UCP management console. Replace `[ucp_url]` with your UCP URL, `[ucp_username]` with the username of a Docker Enterprise Administrator and `[ucp_password]` with the password of a Docker Enterprise Administrator:\n\n- **Step 1:** Retrieve a UCP API token:\n\n    Linux (requires curl and jq):\n\n        $ AUTHTOKEN=$(curl -sk -d '{\"\"username\"\":\"\"[ucp_username]\"\",\"\"password\"\":\"\"[ucp_password]\"\"}' https://[ucp_url]/auth/login | jq -r .auth_token)\n\n- **Step 2:** Retrieve UCP config:\n\n    Linux (requires curl):\n\n        $ curl -sk -H \"\"Authorization: Bearer $AUTHTOKEN\"\" https://[ucp_url]/api/ucp/config-toml\n\n- **Step 3:** Look for the `lifetime_minutes` and `renewal_threshold_minutes` entries under the `[auth.sessions]` section in the output, and verify that they are set to values of '15' or lower and '0' respectively.",
    "weakness_title_read_only": "Using an improper value for limiting the duration of active sessions (Docker)",
    "weakness_id_read_only": "P1533",
    "weakness": "a21f6c0c-8bd9-4161-bc21-bdeff0cc3c14",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2019-12-06T05:20:25.050000-05:00",
    "last_updated": "2021-06-25T14:48:01.045000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2115",
    "universal_id": "d3d069c6-5dff-4c9a-b7c2-7c7b1e62fdd8",
    "countermeasure_name": "Enable image vulnerability scanning (Docker)",
    "countermeasure_solution": "Enable image vulnerability scanning to ensure that your Docker images are free from vulnerabilities. The Docker Trusted Registry (DTR) includes image vulnerability scanning which can check any packages included in your image against known vulnerability databases.\n\nThe vulnerability scanning service included with DTR can check the signature of any packages included in your image's layers against both the MITRE Common Vulnerabilities and Exposures (CVE) database and NIST National Vulnerability Database (NVD). Docker Inc. maintains a security scanning database which is an aggregation of the MITRE CVE and NIST NVD data that can be read by DTR. DTR's vulnerability scanning capability can operate in online mode, where it connects directly to Docker's database at https://dss-cve-updates.docker.com/. It can also operate in offline mode, where the user must download a .tar file that contains the aggregated database that DTR can read. Docker Inc. updates this database on a daily basis.",
    "weakness_title_read_only": "Running Docker containers based on images with known vulnerabilities (Docker)",
    "weakness_id_read_only": "P1534",
    "weakness": "c9b739c0-d30e-414a-b5cb-79b038c01284",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2019-12-06T15:45:57.356000-05:00",
    "last_updated": "2021-06-25T14:47:59.647000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2116",
    "universal_id": "fec8035f-15da-44f8-b8a4-d472b57e3c90",
    "countermeasure_name": "Verify that image vulnerability scanning is enabled (Docker)",
    "countermeasure_solution": "The \"Security\" tab in the DTR \"Settings\" UI can be used to verify that image scanning has been enabled, along with information regarding the synchronization status of the vulnerability database. The Image Scanning configuration can also be retrieved by executing an HTTP GET request to the DTR API using the cURL command as follows:\n\n    $ curl -X GET \"https:///api/v0/imagescan/status\" -H \"accept: application/json\"",
    "weakness_title_read_only": "Running Docker containers based on images with known vulnerabilities (Docker)",
    "weakness_id_read_only": "P1534",
    "weakness": "c9b739c0-d30e-414a-b5cb-79b038c01284",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2019-12-06T15:48:21.427000-05:00",
    "last_updated": "2021-06-25T14:47:59.892000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2117",
    "universal_id": "5ce734c9-304e-4e5c-82ad-260c6e32474d",
    "countermeasure_name": "Secure microservices APIs that access sensitive data",
    "countermeasure_solution": "**Security strategies for authentication (NIST 800-204, MS-SS-1):**\n\nDesign a secure authentication system for microservices APIs. Create authentication tokens that are digitally signed or verified with an authoritative source. For example, a signed JSON Web Token (JWT) is one approach to secure a service-to-service communication.\n\nAdditionally, single used tokens or short-lived tokens that expire after a short period of time help to prevent the potential damage of compromised tokens.\n\n**For enhancing the security of JWT tokens:**\n\n- Set the token expiry times as short as possible because an active session cannot be revoked.\n- Use the token secret key that is a dynamic variable represented by an environmental variable or specified in an environment data file. Do not use the secret key that is a part of the library code.\nThe key value should be stored in a data vault solution.",
    "weakness_title_read_only": "Improper Access Control (Authorization)",
    "weakness_id_read_only": "P182",
    "weakness": "e488cdc5-3c91-4d2b-bcec-5c651b000d8b",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "architecture-design",
    "created": "2020-02-03T12:33:15.932000-05:00",
    "last_updated": "2023-03-17T17:05:47.833000-04:00",
    "custom": "False",
    "rules": "5b7ec139-3cd5-4c99-b157-21bdae9a2774 AND cab80cea-1a20-433f-b78c-783b816b8d33",
    "rules_read_only": "A1269 AND A739"
  },
  {
    "countermeasure_id": "T2118",
    "universal_id": "81042859-b5d8-472b-a82b-5f7ea4b51ad1",
    "countermeasure_name": "Exercise security monitoring best practices in Microservices environments",
    "countermeasure_solution": "**Security strategies for security monitoring in Microservices environments (NIST 800-204, MS-SS-5):**\n\n- Perform security monitoring and logging at both the **gateway** and **service level** to detect, alert, and respond to inappropriate behavior and potential attacks (e.g. bearer token reuse attack, and injection attacks).\n- Log input validation errors, extra parameter errors, crashes, and core dumps. A class of software that can help accomplish this is the open-source *OWASP AppSensor*, which can be implemented in the gateway, service mesh layer, or microservice itself.\n- Implement a **central monitoring dashboard** that displays the status of various services and network segments linked to them. At a minimum, the dashboard should include security parameters (e.g. input validation failures) and unexpected parameters that are obvious signs of injection attack attempts.\n- Create a baseline for normal, uncompromised behavior in terms of the outcome of business logic decisions, contact attempts, and other relevant behavior. The placement and capabilities of Intrusion Detection System (IDS) nodes should be made to that deviations from this baseline can be detected. Monitoring of security events and analysis should be done against the normal baseline and reported on as part of the central monitoring dashboard.\n\nTo detect attacks and identify factors for degradation of services (which may impact availability and load balancing), it is necessary to monitor network traffic into and out of microservices with analytics and aggregation capabilities in addition to routine logging features.\n\nA microservices-based application or system must monitor a large number of services, each running in different servers hosted on heterogeneous application platforms or cloud providers. Any meaningful transaction will require communication between at least two or more microservices, so security monitoring and logging capabilities need to be implemented at multiple levels and across the various microservices. \n\nA central console or monitoring dashboard needs to be implemented to obtain the status of each component and the overall state of the application or system. Therefore, infrastructure must be created with distributed monitoring and centralized viewing capabilities. An API-gateway or micro-gateway is generally used for implementing security monitoring features in microservice deployments.",
    "weakness_title_read_only": "Lack of security monitoring in Microservices environments",
    "weakness_id_read_only": "P1712",
    "weakness": "e30992b5-911f-4c53-a695-9b68c917c998",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "architecture-design",
    "created": "2020-02-05T11:40:56.697000-05:00",
    "last_updated": "2022-11-28T09:25:38.406000-05:00",
    "custom": "False",
    "rules": "5b7ec139-3cd5-4c99-b157-21bdae9a2774 AND cab80cea-1a20-433f-b78c-783b816b8d33",
    "rules_read_only": "A1269 AND A739"
  },
  {
    "countermeasure_id": "T2119",
    "universal_id": "0fbabfc6-6f98-40a3-a3ee-8d64f6a114e7",
    "countermeasure_name": "Deploy circuit breakers in Microservices environments",
    "countermeasure_solution": "**Security strategies for implementing circuit breaker functions in Microservices environments (NIST 800-204, MS-SS-6):**\n\n- Deploy a proxy circuit breaker option to limit the trusted component to be the proxy. This avoids the need to place the trust on the clients and microservices since there are multiple components (e.g. setting thresholds and cutting off requests based on the set threshold).\n\nIn microservices-based applications, targeted efforts that improve the availability or resiliency of certain critical services are needed to enhance the overall security profile of the application. Circuit breakers are commonly deployed in Microservices environments in order to improve security and availability.\n\nA common strategy for preventing or minimizing *cascading failures* involves the use of circuit breakers, which prohibits the delivery of data to microservice that is failing beyond a specified threshold. This is also known as the **fail fast principle**. An API-gateway or micro-gateway is generally used for implementing circuit breaker features in microservice deployments.",
    "weakness_title_read_only": "Lack of strategies to limit resource consumption in Microservices environments",
    "weakness_id_read_only": "P1711",
    "weakness": "b71bda54-2dac-41c8-b09b-0f45cc8f04f2",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "architecture-design",
    "created": "2020-02-05T11:46:49.483000-05:00",
    "last_updated": "2022-11-28T08:56:34.048000-05:00",
    "custom": "False",
    "rules": "5b7ec139-3cd5-4c99-b157-21bdae9a2774 AND cab80cea-1a20-433f-b78c-783b816b8d33",
    "rules_read_only": "A1269 AND A739"
  },
  {
    "countermeasure_id": "T2120",
    "universal_id": "4249002e-007c-489b-a902-e894462b8444",
    "countermeasure_name": "Exercise security best practices for load balancing in Microservices environments",
    "countermeasure_solution": "**Security strategies for load balancing in Microservices environments (NIST 800-204, MS-SS-7):**\n\n- Decouple all programs supporting the load balancing function from individual service requests. For example, the program that performs health checks on services to determine the load balancing pool should run asynchronously in the background.\n- Protect the network connection between the load balancer and the microservice platform.\n- The DNS resolver should work in tandem with the health check program to present a single list to the calling microservice.\n\nLoad balancing is an integral function in all microservices-based applications. The main purpose of load balancing is to distribute loads to its services. A service name is associated with namespace that supports multiple instances of the same service. Therefore, multiple instances of the same service would use the same namespace.\n\nTo balance the service load, the load balancer chooses one service instance in the request namespace using an algorithm (such as a round-robin algorithm, a circular pattern to assign the request to a service instance). An API-gateway or micro-gateway is generally used for implementing load balancing features in microservice deployments.",
    "weakness_title_read_only": "Lack of strategies to limit resource consumption in Microservices environments",
    "weakness_id_read_only": "P1711",
    "weakness": "b71bda54-2dac-41c8-b09b-0f45cc8f04f2",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "architecture-design",
    "created": "2020-02-05T11:49:59.858000-05:00",
    "last_updated": "2022-11-28T08:57:22.276000-05:00",
    "custom": "False",
    "rules": "5b7ec139-3cd5-4c99-b157-21bdae9a2774 AND cab80cea-1a20-433f-b78c-783b816b8d33",
    "rules_read_only": "A1269 AND A739"
  },
  {
    "countermeasure_id": "T2121",
    "universal_id": "20488c7e-f610-4942-9fdc-6b33de2a398e",
    "countermeasure_name": "Exercise security best practices for service rate limiting in Microservices environments",
    "countermeasure_solution": "**Security strategies for rate limiting in Microservices environments (NIST 800-204, MS-SS-8):**\n \n - Base quotas or limits for application usage on both infrastructure and application-related requirements.\n - Determine Limits based on well-defined API usage plans.\n - Implement **replay detection** for high security microservices. Based on the level of risk, configured this feature based on the level of risk to detect replays or perform random detection.\n \nThe primary goal of **rate limiting** is to ensure a microservice is not oversubscribed, which impacts availability. \nFor example, when one client increases the rate of requests, the microservice continues to respond to other clients by setting a limit on how often a client can call service within a defined time period. When the limit is exceeded, the client receives a notification that the allowed rate has been exceeded as well as additional data regarding the limit number and the time at which the limit counter will be reset for the requester to resume receiving responses. \n \nA secondary goal of rate limiting is to mitigate the impact of Denial of Service (DoS) attacks.\nClosely related to the concept of rate limiting is **quota management** or **conditional rate-limiting** where limits are determined based on application requirements rather than infrastructure limitations or requirements. An API-gateway or micro-gateway is generally used for implementing rate-limiting features in microservice deployments.",
    "weakness_title_read_only": "Lack of strategies to limit resource consumption in Microservices environments",
    "weakness_id_read_only": "P1711",
    "weakness": "b71bda54-2dac-41c8-b09b-0f45cc8f04f2",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "architecture-design",
    "created": "2020-02-06T10:02:35.198000-05:00",
    "last_updated": "2022-11-28T08:57:45.927000-05:00",
    "custom": "False",
    "rules": "5b7ec139-3cd5-4c99-b157-21bdae9a2774 AND cab80cea-1a20-433f-b78c-783b816b8d33",
    "rules_read_only": "A1269 AND A739"
  },
  {
    "countermeasure_id": "T2122",
    "universal_id": "eb8348e2-1323-4241-a91d-1d2a6022a6ef",
    "countermeasure_name": "Update Android Security Provider",
    "countermeasure_solution": "To protect against vulnerabilities found in the Android Security Provider, Google Play services, if enabled, automatically updates a device's security provider to protect against known exploits, once in a while. Call Google Play services' methods in your app to ensure that it's running on a device that has the latest updates to protect against known exploits.",
    "weakness_title_read_only": "Lack of Verification of Up-to-date Android Security Provider",
    "weakness_id_read_only": "P1535",
    "weakness": "b320de22-2221-49f3-ab89-12d60ac5bbf1",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "requirements",
    "created": "2020-02-28T13:13:16.375000-05:00",
    "last_updated": "2021-06-25T14:47:56.907000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2123",
    "universal_id": "778fd54b-a008-4931-b88c-3b5b536d04b8",
    "countermeasure_name": "Verify that Android Security Provider gets checked to be up-to-date",
    "countermeasure_solution": "Use the following guidelines for verifying that the network communication security provider is updated:\n\n- Verify that `installIfNeeded()` is called as part of the app's startup process.\n- Verify that `GooglePlayServicesRepairableException` is caught and handled properly by informing the user to update/enable Google Play services.\n- Verify that `GooglePlayServicesNotAvailableException` is caught and handled properly by informing the user to update/enable of Google Play services. \n- Verify that the application is terminated upon unsuccessful execution of `installIfNeeded()` method.",
    "weakness_title_read_only": "Lack of Verification of Up-to-date Android Security Provider",
    "weakness_id_read_only": "P1535",
    "weakness": "b320de22-2221-49f3-ab89-12d60ac5bbf1",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2020-02-28T13:16:24.613000-05:00",
    "last_updated": "2021-06-25T14:47:56.646000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2124",
    "universal_id": "dc58d7bc-5779-4cee-917a-89e249a4c708",
    "countermeasure_name": "Exercise security best practices for inducing new versions of microservices",
    "countermeasure_solution": "**Security (integrity assurance) strategies for the induction of new versions of microservices (NIST 800-204, MS-SS-9)**\n\n- Route the traffic to the existing and new versions of the microservice through a central node (i.e. API Gateway) to monitor and control the blue/green transition and canary release's risk (see below).\n- Increase the traffic to the new version while monitoring the usage of the existing version.\n- Factor in the performance and correct functionality of the new version when transitioning from the existing version.\n- Take into account the client's (web, mobile, and so on) consideration when transitioning to the new version.\n\n###Blue/Green Deployments\nWhen a new version of microservice is deployed, an API Gateway can be configured so that client requests can be redirected to the new version. This is known as Blue/Green deployments.\n###Canary Release\nWhen a new version of a microservice is deployed, only a limited number of requests are redirected to that instance. Once the correctness of the new version is established and its performance is tested under all operational scenarios, then all requests can be redirected to that instance. This is known as the Canary release.",
    "weakness_title_read_only": "Insecure induction of new versions for microservices",
    "weakness_id_read_only": "P1536",
    "weakness": "a2631e5d-9649-4152-a398-32190bcfc5a3",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "architecture-design",
    "created": "2020-03-03T22:55:51.677000-05:00",
    "last_updated": "2021-06-25T14:48:01.674000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2125",
    "universal_id": "81d8946d-4271-4cd8-89f2-94338bc47b9c",
    "countermeasure_name": "Exercise security strategies for handling session persistence",
    "countermeasure_solution": "**Security (integrity assurance) strategies for handling session persistence (MS-SS-10)**\n\n- Securely store the session information on a client.\n- Protect the artifact (i.e. sticky cookie) used for transferring the binding server information.\n- Prevent provision of internal authorization tokens back to the user, and avoid user's session information being passed beyond the gateway (e.g. to be used in internal policy decisions).\n\n###Sticky Cookies\nA client's transaction with a given upstream microservice may include multiple requests to that instance. If a load balancer starts to redirect that client's requests to another instance in the middle of its transaction, it can cause loss of data as well as usability issues. The need for protecting this transaction is known as session persistence. One method for achieving this requirement is known as _Sticky Cookies_. In this method, a session cookie will be added to the first response from the upstream microservice to a given client. The subsequent requests from that client will include that cookie, and the load balancer will route these requests to the same upstream microservice (based on the value of that session cookie).",
    "weakness_title_read_only": "Lack of security strategies for handling session persistence",
    "weakness_id_read_only": "P1537",
    "weakness": "4987b949-0ad0-49d0-b9eb-110c0306a009",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "architecture-design",
    "created": "2020-03-03T23:04:58.531000-05:00",
    "last_updated": "2021-06-25T14:48:01.213000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2126",
    "universal_id": "4583f3b1-0b3b-4e72-963d-84e48e27a58f",
    "countermeasure_name": "Exercise security strategies for preventing credential abuse and stuffing attacks",
    "countermeasure_solution": "**Security strategies for preventing credential abuse and stuffing attacks (MS-SS-11)**\n\n- Set up a run-time credential abuse prevention mechanism. For example, allow set number of login attempts to be made from an IP address. Once this threshold is exceeded, take a preventative measure such as throttling the login requests from that IP or temporarily blocking it.\n- Deploy a credential-stuffing prevention mechanism where it checks user logins against a database of compromised credentials (like a list of revoked tokens) and alerts legitimate users if their credentials are stolen.\n- Deploy and configure IDS/IPS systems to safeguard against the following attacks:\n    - Detecting DoS/DDoS attacks and raising a flag as soon as a service becomes unavailable.\n    - Detecting a distributed network probe (i.e. IP and port scans).\n- Configure malware and antivirus systems to scan file uploads as well as each container's memory and file system contents.",
    "weakness_title_read_only": "Lack of security strategies for preventing credential abuse and stuffing attacks",
    "weakness_id_read_only": "P1538",
    "weakness": "af040447-b34c-459b-91e6-12d462d51747",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "architecture-design",
    "created": "2020-03-03T23:15:17.188000-05:00",
    "last_updated": "2023-04-19T13:42:24.558000-04:00",
    "custom": "False",
    "rules": "5b7ec139-3cd5-4c99-b157-21bdae9a2774",
    "rules_read_only": "A1269"
  },
  {
    "countermeasure_id": "T2127",
    "universal_id": "2d47cf49-7216-49ab-a86a-ed9f7d42915e",
    "countermeasure_name": "Exercise security best practices for API gateway implementation",
    "countermeasure_solution": "** Security strategy for API gateway implementation (MS-SS-12)**\n\n- Integrate the API gateway with an identity and access management (IAM) system to provision credentials before publishing micorservices.\n- Provide connectors to integrate with identity providers (IdPs) when IAM is invoked through the API gateway.\n- Provide connectors to the authorization server (OAuth 2.0) that generates access tokens for client requests.\n- Channel all traffic information securely through monitoring and analytics applications to detect any DoS attacks and performance degradation early on.\n- Implement token translation mechanisms for distributed gateway deployments and microgateways. The token given to the initial gateway must have a broader scope than the ones closer to the services (inside gateways or microgateways) with narrower scopes and tighter permissions.",
    "weakness_title_read_only": "Lack of security best practices for API gateway implementation",
    "weakness_id_read_only": "P1539",
    "weakness": "83cccd6d-537e-49cc-9650-255e04d3890c",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "architecture-design",
    "created": "2020-03-03T23:22:51.381000-05:00",
    "last_updated": "2021-06-25T14:47:47.298000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2128",
    "universal_id": "6453f87e-5a82-4036-afb2-a22805775698",
    "countermeasure_name": "Notify users and regulators of breaches of personal information",
    "countermeasure_solution": "[Controllers](/library/glossary/G33) have the primary responsibility to notify users and regulators about breaches of personal information. If they are delegating this responsibility to their [processors](/library/glossary/G34), they must provide them with written instructions. Processors who have been assigned such a job must ensure that notification is provided in compliance with the controller's written instructions.\n \n\n Upon discovery of a breach of personal information, take steps to notify individuals and regulators of the privacy breach as required by law.\n \n\n A *\"breach of personal information\"* includes the unauthorized access, use, or disclosure of data (computerized or other information) that compromises the security, confidentiality, or integrity of personal information maintained by the organization. The definition of a breach of personal information may include other private, financial, or other confidential information in certain jurisdictions.\n \n\n Financial penalties and other sanctions may apply for organizations that fail to notify individuals or regulators of breaches of personal information in a timely manner or in accordance with regulatory requirements.\n \n\n ##Best practices for privacy data breach notifications\n \n\n 1. Create a breach response protocol for your organization. Logging and automatically detecting breach events, and creating breach notification templates can help you streamline the breach notification process. \n \n\n 2. Conduct and document an assessment of risk of harm to individuals potentially affected by the breach. \n \n\n  * In assessing the risk of harm, consider: the scope of the breach, sensitivity of the data, the level of encryption, and the nature of the individuals affected by the breach.\n \n\n  * When a privacy breach is detected and confirmed, the decision to notify individuals requires an analysis of the risk of harm to individuals in addition to breach notification policies, regulations, and laws that apply.\n \n\n 3. Write the notice in plain language and deliver it to affected individuals (and regulatory authorities, as required by law) without unreasonable delay. \n \n\n  * The contents of the notice should include:\n  * What happened \n  * What information was involved in the breach\n  * Steps the organization is taking to mitigate risks of the breach\n  * What individuals can do to protect themselves\n  * Who to contact and where to find more information\n \n\n 4. Provide individuals with notice of how to take defensive actions to protect themselves if the data breach could potentially result in identity theft, such as in the breach of social security numbers or credit information. This includes providing services such as credit monitoring or identity protection.\n \n\n 5. Provide additional support, such as an email address or phone number, to answer questions and provide information about the breach. A website can also be set up to provide an alternate form of breach notification and include updated information and new facts about the breach as they become known.\n \n\n 6. Notify individuals as the entity directly known to the recipients when more than one entity is involved in a breach, such as with third-party vendors. The source of the notification should be familiar to the individual.\n \n\n 7. Maintain records of potential privacy breaches, including event logs and details of the breach, risk assessment or impact report, and any notifications or communications associated with the breach for at least 24 months, or as otherwise specified by law.",
    "weakness_title_read_only": "Privacy Violation",
    "weakness_id_read_only": "P257",
    "weakness": "b0418f1b-bf92-45ba-845f-abfb9735f1cf",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "requirements",
    "created": "2020-03-18T12:28:04.228000-04:00",
    "last_updated": "2023-05-11T15:16:15.554000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2129",
    "universal_id": "97e7f386-d42d-4ad2-b245-3354491a3396",
    "countermeasure_name": "Exercise security best practices for access management in microservices",
    "countermeasure_solution": "**Security strategies for access management (MS-SS-2)**\n\n- Define and provision access policies to all APIs and their resources through an access server. Usually, coarse level access policies such as \"\"Permit to call for a given set of addressable functionalities\"\" are defined and enforced at the initial API Gateway while the finer grain authorization (specific to particular microservices' business logic) are defined and enforced closer to the microservices (e.g. at the microgateway or the microservice itself).\n- Allow microservices to cache access policies at the time the access server becomes unavailable. These caches must expire after a set period of time depending on environment and infrastructure parameters.\n- Use standardized tokens encoded in platform-independent format (e.g. OAuth 2.0 token formatted in JSON) to communicate the access decisions by the access servers to microservices. These tokens should be either handle-based or assertion bearing. For more information on OAuth 2.0, please see [T1887: Decide on the right OAuth 2.0 flow for your application](/library/tasks/T1887/).\n- Carefully control the scope of internal authorization tokens appended by the micro gateway to each request. For example, in a request for transaction, the internal authorization token's scope should be limited to only involve the API endpoints that must be accessed for that transaction.",
    "weakness_title_read_only": "Inadequate access management in microservices",
    "weakness_id_read_only": "P1540",
    "weakness": "afa226b7-f9c0-40ee-83ea-d82b3f65f488",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "architecture-design",
    "created": "2020-03-20T15:37:16.029000-04:00",
    "last_updated": "2021-06-25T14:47:46.750000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2130",
    "universal_id": "32daf873-2d34-4523-91cc-fd11e436094d",
    "countermeasure_name": "Exercise best practices for securing microservices communication",
    "countermeasure_solution": "**Security strategies for secure communication (MS-SS-4)**\n\n- Configure the clients to point to the single API gateway URL instead of calling target services directly.\n- Perform mutual authentication and channel encryption, such as by using a mutual TLS (mTLS) protocol, between the client and API gateway and in service to service communication.\n- Create keep-alive TLS connections for frequently interacting services.",
    "weakness_title_read_only": "Unsecure microservices communication",
    "weakness_id_read_only": "P1541",
    "weakness": "fa8b298c-0009-49d0-82af-a29154ad7dc0",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "architecture-design",
    "created": "2020-03-20T15:56:50.889000-04:00",
    "last_updated": "2021-06-25T14:47:37.310000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2131",
    "universal_id": "bf284feb-07a3-467d-882c-ecb9f81708af",
    "countermeasure_name": "Exercise security strategies for service mesh implementation",
    "countermeasure_solution": "** Security strategy for service mesh implementation (MS-SS-13)**\n\n- Based on the application requirements, think of policies for designing the communication protocol between pairs of services as well as for specifying the traffic load between pairs of services.\n- Configure the defaults to *always* enable access control policies for all services.\n- Avoid configuration that leads to privilege escalation (e.g. binding service user accounts to service roles).\n- Configure service mesh deployments to limit resource usage for its components.\n- Configure service mesh deployments to collect and send environment metrics, including request metrics to a centralized monitoring service.\n- Configure Layer 3 network segmentation within the orchestrator platform to complement the layer 5 network segmentation done by the service mesh in highly sensitive microservices-based applications. This is to complement the sidecar proxy that the service mesh uses for firewalling and blocking network traffic.",
    "weakness_title_read_only": "Lack of security strategies for service mesh implementation",
    "weakness_id_read_only": "P1542",
    "weakness": "5739c11d-08ea-4370-bed2-5d7da9ed1495",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "architecture-design",
    "created": "2020-03-20T17:33:15.318000-04:00",
    "last_updated": "2021-06-25T14:47:59.236000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2132",
    "universal_id": "e3c495df-e570-4a62-ab2d-aa58cf007575",
    "countermeasure_name": "Exercise security best practices for service registry",
    "countermeasure_solution": "**Security strategies for service registry configuration (MS-SS-3)**\n\n- Provide service registry capabilities through servers that are dedicated for this purpose or are part of the service mesh architecture.\n- Provide service registry services in a network with configured Quality of Service (QoS) parameters to ensure availability and resiliency.\n- Secure the channel between individual application services and service registry using HTTPS or TLS.\n- Configure service registry such that it only allows legitimate services to perform registration, refresh operations, and the database queries.\n- Enable registration/deregistration of an application service (microservice) using a third-party registration pattern. The application service must be limited to only querying the service registry (read only) for service location information. Otherwise, if service deregistration is expected to be done by the application services themselves, they can become unresponsive before doing so and endangering the integrity of the application as a result.\n- If you are using third-party service registration pattern, you should only allow registration/deregistration once the health check on the application service is performed.\n- If you are using distributed service registry (only for large microservices application) you should then take extra care to maintain the data consistency across multiple service registry instances.",
    "weakness_title_read_only": "Lack of security best practices for service registry",
    "weakness_id_read_only": "P1543",
    "weakness": "492b11ec-9556-49ed-be67-55d2b3d06c03",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "architecture-design",
    "created": "2020-03-20T17:40:52.142000-04:00",
    "last_updated": "2021-06-25T14:47:59.210000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2133",
    "universal_id": "8a753c38-2be3-46c5-a539-25261243b83b",
    "countermeasure_name": "Protect the security of data in iOS",
    "countermeasure_solution": "Provide data protection and verification for the iOS platform. \n\nBelow are some techniques for providing data security:\n\n- Use a framework that provides data encryption, signatures, and verification, such as _CryptoKit_ or implement methods such as _Apple Secure Enclave_ .\n- Use techniques for secure data storage on iOS devices, such as _CommonCrypto_ .",
    "weakness_title_read_only": "Unprotected and Unsecure Data in Mobile Applications",
    "weakness_id_read_only": "P1544",
    "weakness": "4f0901ce-7d7f-4a6f-bcd7-1d162cca967a",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "requirements",
    "created": "2020-04-14T11:29:58.486000-04:00",
    "last_updated": "2021-06-25T14:47:36.027000-04:00",
    "custom": "False",
    "rules": "3657f540-0b47-49b3-9a4d-69412ec692d6",
    "rules_read_only": "A714"
  },
  {
    "countermeasure_id": "T2134",
    "universal_id": "6e83e6b7-e0da-4fc4-a17d-80d383a592d8",
    "countermeasure_name": "Compile iOS applications with PIE and ARC flags",
    "countermeasure_solution": "Compile your application with Position Independent Executable (PIE) and Automatic Reference Counting (ARC) flags.\n\n## Enable the __Position Independent Executable__ flag in Xcode to:\n\n- Load the application at a random memory address when it runs. \n- Prevent user-controlled input overflows to the memory allocated on the stack. This makes it more difficult for attackers to exploit weaknesses such as buffer overflows.\n\n**Note:** Your application is PIE if and only if your main executable and all its dependencies were built as `PIE`. **iOS 4.3 or later** and **OS X 10.7 or later** fully support PIE.\n\n## Enable the __Automatic Reference Counting__ flag in Xcode to:\n\n- Prevent other types of memory corruption vulnerabilities that might be inadvertently introduced in developer source code for the Objective-C and Swift \n   programming languages. For examples, object use-after-free and double free.\n- Insert a command into the object code messages to retain and release during compile time. This helps in increasing and decreasing the reference count at run time, marking those objects for deallocation when the number of references to them reaches zero.",
    "weakness_title_read_only": "Buffer Copy without Checking the Bounds",
    "weakness_id_read_only": "P21",
    "weakness": "162b0723-2710-4397-98a4-4da915a7ea2a",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "development",
    "created": "2020-04-14T16:11:50.422000-04:00",
    "last_updated": "2021-06-25T14:47:59.056000-04:00",
    "custom": "False",
    "rules": "3657f540-0b47-49b3-9a4d-69412ec692d6;654a5f4b-7de3-4e42-84eb-2fc00b54e247;cac96606-18f1-40b5-b598-04cb3b6a6e19",
    "rules_read_only": "A714;A1129;A716"
  },
  {
    "countermeasure_id": "T2137",
    "universal_id": "5f478606-4af3-4ff8-8ab4-20927fa7be07",
    "countermeasure_name": "Ensure that sensitive data is not recorded (iOS)",
    "countermeasure_solution": "Actively monitor if a _ReplayKit_ session is active and mask sensitive information from the UI when appropriate. ReplayKit framework recording features or Screen Mirroring can capture an application's sensitive contents if they are displayed at the time of recording.",
    "weakness_title_read_only": "Information Disclosure in iOS via ReplayKit Framework",
    "weakness_id_read_only": "P1545",
    "weakness": "be632653-f991-4564-9cfe-aeecd8291a6d",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "requirements",
    "created": "2020-04-20T12:35:25.803000-04:00",
    "last_updated": "2021-06-25T14:47:37.921000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2139",
    "universal_id": "e8481664-d610-4098-be4a-b8c4516d77ed",
    "countermeasure_name": "Prevent information exposure through APIs",
    "countermeasure_solution": "Use the following guidelines to avoid exposing information with APIs:\n\n- Remove unused API endpoints. \n\n- Never return unrequested sensitive data in API responses, and never rely on the client-side filtering. Attackers can call the API directly and receive sensitive data that the client would filter out.\n\n- Define a schema for all the data returned by API methods including errors, and enforce it by a schema-based response validation mechanism. Use this mechanism as an extra layer of security.",
    "weakness_title_read_only": "Information Exposure",
    "weakness_id_read_only": "P96",
    "weakness": "5caa926a-86e4-498d-97f8-5d2f5c5ddd7b",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "development",
    "created": "2020-04-28T16:23:37.229000-04:00",
    "last_updated": "2021-06-25T14:47:38.488000-04:00",
    "custom": "False",
    "rules": "8359976a-65ff-49fd-92b7-b95ab3d9df68;5be24703-9455-4585-9e4c-35d75f2a9def",
    "rules_read_only": "A754;A6"
  },
  {
    "countermeasure_id": "T2140",
    "universal_id": "419043ac-c450-4ebe-b81b-8feba3c1dcc1",
    "countermeasure_name": "Test that APIs do not expose sensitive information",
    "countermeasure_solution": "Test that only legitimate data is exposed through APIs. \n\nIn particular, ensure that responses from APIs match your customers' needs and there is no excessive information in the response. Review if APIs return any sensitive data and [PII](/library/glossary/G8/), and make sure these responses do not pose any security risk.",
    "weakness_title_read_only": "Information Exposure",
    "weakness_id_read_only": "P96",
    "weakness": "5caa926a-86e4-498d-97f8-5d2f5c5ddd7b",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2020-04-28T16:34:24.975000-04:00",
    "last_updated": "2021-06-25T14:47:38.687000-04:00",
    "custom": "False",
    "rules": "8359976a-65ff-49fd-92b7-b95ab3d9df68;5be24703-9455-4585-9e4c-35d75f2a9def",
    "rules_read_only": "A754;A6"
  },
  {
    "countermeasure_id": "T2141",
    "universal_id": "be9c045c-bbfa-48d5-872c-03c68a779922",
    "countermeasure_name": "Perform function level authorization in API",
    "countermeasure_solution": "Follow these guidelines to avoid allowing function-level broken authorization to administrative endpoints, accessing functions from another group, and performing sensitive actions such as `POST` and `DELETE`.\n\n1. Implement an __authorization check__ function based on users, groups, and roles in the administrative abstract controller.\n\n2. Make sure the administrative controller __inherits__ the administrative abstract controller.\n\n3. Implement an __authorization check__ function for administrative functions in the regular controller.\n\n4. Deny all access by __default__.",
    "weakness_title_read_only": "Direct Request ('Forced Browsing')",
    "weakness_id_read_only": "P317",
    "weakness": "c331d52e-0833-4d02-8b17-2399f8e0c8ca",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "architecture-design",
    "created": "2020-04-28T16:37:29.996000-04:00",
    "last_updated": "2021-06-25T14:47:50.788000-04:00",
    "custom": "False",
    "rules": "8359976a-65ff-49fd-92b7-b95ab3d9df68;5be24703-9455-4585-9e4c-35d75f2a9def",
    "rules_read_only": "A754;A6"
  },
  {
    "countermeasure_id": "T2142",
    "universal_id": "ece90fd1-d176-4578-91ab-4838499d789d",
    "countermeasure_name": "Verify that function level authorization is implemented in API",
    "countermeasure_solution": "Verify the following items to avoid function-level broken authorization: \n\n- Test all existing API endpoints for potential authorization flaws.\n- This test __passes__ if :\n\n    1.  an __authorization check__ function based on users, groups, and roles in administrative abstract controller (a base controller for controlling access permissions) has been implemented.\n\n    2. an administrative controller __inherits__ administrative abstract controller.\n\n    3. an __authorization check__ function has been implemented for administrative functions in regular controller.\n\n    4.  all access is denied by default with: `.anyRequest().denyAll()` and requests with `.hasRole` are explicitly allowed.",
    "weakness_title_read_only": "Direct Request ('Forced Browsing')",
    "weakness_id_read_only": "P317",
    "weakness": "c331d52e-0833-4d02-8b17-2399f8e0c8ca",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2020-04-29T12:56:57.036000-04:00",
    "last_updated": "2021-06-25T14:47:50.688000-04:00",
    "custom": "False",
    "rules": "5be24703-9455-4585-9e4c-35d75f2a9def;8359976a-65ff-49fd-92b7-b95ab3d9df68",
    "rules_read_only": "A6;A754"
  },
  {
    "countermeasure_id": "T2143",
    "universal_id": "b9587a7c-61f3-42a9-9e47-89ea384e207c",
    "countermeasure_name": "Enhance the security of OBD ports (Connected Cars)",
    "countermeasure_solution": "Combine cryptography and access control mechanisms to enhance the security of ODB ports:\n\n- Design an **OBD Security Module** in your OBD connected device to place messages on the CAN bus to prevent attacks via OBD. Use the OBD security module to enforce the access control rules assigned by the OEM after the successful authentication of the OBD device. Restrict the type of messages that the OBD device can send and the CAN messages that can flow from the vehicle to the OBD device.\n\n- Use asymmetric cryptography mechanisms like RSA and elliptic curve to provide digital signatures and public keys. In this method, the OBD device sends the public key to the OBD security module using an X.509 certificate. This proves the identity of the connected device and that the OEM certified it. \n\nFor more information about combining these techniques, refer to [A Balanced Approach for Securing the OBD-II Port](https://www.thefreelibrary.com/A+Balanced+Approach+for+Securing+the+OBD-II+Port.-a0531111147).",
    "weakness_title_read_only": "Lack of security measures in OBD port (Connected Cars)",
    "weakness_id_read_only": "P1547",
    "weakness": "c15f2627-f856-4c95-8e9a-cdf6843435fb",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "architecture-design",
    "created": "2020-05-14T11:52:23.376000-04:00",
    "last_updated": "2021-06-25T14:47:49.021000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2144",
    "universal_id": "4b27c4ab-04d9-4ed4-89e9-d045e2b22459",
    "countermeasure_name": "Implement CAN bus protocol properly (Connected Cars)",
    "countermeasure_solution": "Develop all the controls in the CAN bus protocol and consider potential attack vectors and weaknesses that can be caused by improper implementation of the protocol during development.",
    "weakness_title_read_only": "Poor implementation of CAN bus protocol (Connected Cars)",
    "weakness_id_read_only": "P1548",
    "weakness": "4123e97b-fb11-4532-b9fb-2172265ed60e",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "development",
    "created": "2020-05-22T10:27:50.477000-04:00",
    "last_updated": "2021-06-25T14:47:59.250000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2145",
    "universal_id": "89f2668b-1f81-4497-9491-55b3b7f7dd04",
    "countermeasure_name": "Enable gRPC Server-Client Certificate Authentication (.NET Core 3)",
    "countermeasure_solution": " - Enable gRPC Server-Client Certificate Authentication where is appropriate.\n\nASP.NET Core 3.0 supports gRPC for implementing microservices and client-server communication. Parties can use authentication certifications to prove their identity and gain access to the services provided by the ASP.NET gRPC-enabled services.\n\nRef: https://docs.microsoft.com/en-us/aspnet/core/grpc/authn-and-authz?view=aspnetcore-6.0",
    "weakness_title_read_only": "Unauthenticated gRPC client-server communication",
    "weakness_id_read_only": "P1549",
    "weakness": "36cc03c9-8ca6-481a-98af-da8c87794236",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "requirements",
    "created": "2020-05-26T21:11:47.068000-04:00",
    "last_updated": "2022-04-01T14:27:14.825000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2148",
    "universal_id": "00150d29-985e-40e3-a54d-a2f01e0f8e9a",
    "countermeasure_name": "Perform security checks before infotainment OS update (Connected Cars)",
    "countermeasure_solution": "Perform security checks before updating the vehicle infotainment operating system via USB or over-the-air (OTA) mechanisms.\n\nFor software updates via local means, perform the following:\n\n- Check and limit the size of the update file to avoid Denial of Service due to oversized malicious content.\n- Make sure that the update file is encrypted or digitally signed and verify that the file originated from a trusted source.\n- Check the hash provided in the digital signature to verify the integrity of the update file.\n- Decrypt and deserialize the update only after verifying all of the above.\n- Authenticate the user who is attempting to update the operating system.\n- Ensure that the authenticated user has proper authorization to perform the software update.\n\n__Note__: Make sure that the operating system can revert back to the previous state in case of a failure in the update process.",
    "weakness_title_read_only": "Insecure software updates (Connected Cars)",
    "weakness_id_read_only": "P1550",
    "weakness": "fa6f13b0-0119-445a-96d1-2f0063b0bf21",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "requirements",
    "created": "2020-06-01T13:20:59.456000-04:00",
    "last_updated": "2021-06-25T14:47:56.513000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2149",
    "universal_id": "d7c835b1-0167-402d-aae3-ee888c510ec4",
    "countermeasure_name": "Perform security checks before external infotainment communication (Connected Cars)",
    "countermeasure_solution": "Perform security checks for communications between in-vehicle Infotainment system (IVI) and external devices.\n\nUse the following best practices for secure communication:\n\n- Ensure infotainment systems use a communication network that differs from the vehicle operational and safety network.\n- Perform user authorization and authentication __involving signatures and strong passwords__ for mobile applications that can communicate with vehicles. \n- Perform user authorization and authentication for mobile OTA updates that can update firmware.\n\nFor more information, please see [Vehicle Cybersecurity Threats and Mitigation Approaches](https://www.nrel.gov/docs/fy19osti/74247.pdf).",
    "weakness_title_read_only": "Insufficient security checks between infotainment system and external devices (Connected Cars)",
    "weakness_id_read_only": "P1551",
    "weakness": "0226f0b4-4831-4ba9-81e7-e8a2fde603f7",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "requirements",
    "created": "2020-06-01T15:21:18.859000-04:00",
    "last_updated": "2021-06-25T14:47:36.815000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2150",
    "universal_id": "faa0def5-52ff-46d0-8011-6ee38f3e2380",
    "countermeasure_name": "Verify that external infotainment communication is secure (Connected Cars)",
    "countermeasure_solution": "Verify that communication between the in-vehicle infotainment (IVI) system and external devices is secure.\n\nUse the following tests:\n\n- Use sniffing tools for eavesdropping on the traffic to make sure no unwanted data is leaked from the infotainment network to the vehicle operational and safety network.\n- Check that unauthorized or unauthenticated users cannot connect to the vehicle infotainment network.\n- Verify that only authorized and authenticated users can perform mobile OTA updates.",
    "weakness_title_read_only": "Insufficient security checks between infotainment system and external devices (Connected Cars)",
    "weakness_id_read_only": "P1551",
    "weakness": "0226f0b4-4831-4ba9-81e7-e8a2fde603f7",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2020-06-02T12:01:22.168000-04:00",
    "last_updated": "2021-06-25T14:47:36.895000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2151",
    "universal_id": "fd8d47be-9d4f-42fe-97e0-6b2dff99e38d",
    "countermeasure_name": "Verify that security checks are performed before updating infotainment OS (Connected Cars)",
    "countermeasure_solution": "Verify that following security checks are performed before updating the vehicle infotainment operating system via USB or OTA mechanisms.\n\n- Verify that the size of update file is limited. If not, then this test __fails__. \n- Verify that digital signatures and the file origin are properly checked. If not, then this test __fails__.\n- Verify that the integrity of the update file is provided by hash. If not, then this test __fails__.\n- Verify that update decryption and deserialization are done after verifying all of the above.  If not, then this test __fails__.\n- Verify that authorization and authentication of the user for software updates is performed properly. If not, then this test __fails__.\n- Verify that if the update installation process fails, the system will revert to a previous state. If not, then this test __fails__.",
    "weakness_title_read_only": "Insecure software updates (Connected Cars)",
    "weakness_id_read_only": "P1550",
    "weakness": "fa6f13b0-0119-445a-96d1-2f0063b0bf21",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2020-06-02T14:27:50.469000-04:00",
    "last_updated": "2021-06-25T14:47:56.786000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2152",
    "universal_id": "2fa23aa4-c16a-4341-a3b0-c518a7fc034f",
    "countermeasure_name": "Protect against Denial of Service attacks (Connected Cars)",
    "countermeasure_solution": "Use the following guidelines to limit Denial of Service (DoS) attacks in connected cars:\n\n- Use network segmentation or topology alteration by firewalls.\n- Limit access to input ports. For instance, the ODB-II diagnostic port should apply physical/software-level authorization and authentication.\n- Encrypt CAN frame ID fields. This can prevent attackers from identifying CAN frames as their target.",
    "weakness_title_read_only": "Denial of Service in networks (Connected Cars)",
    "weakness_id_read_only": "P1553",
    "weakness": "75e4cd9a-cab7-4970-860e-24aa9fec58b2",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "requirements",
    "created": "2020-06-05T12:00:32.720000-04:00",
    "last_updated": "2021-06-25T14:47:40.908000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2153",
    "universal_id": "0d7d1afc-43c0-4e85-99a8-d800ae581610",
    "countermeasure_name": "Verify the security against Denial of Service attacks (Connected Cars)",
    "countermeasure_solution": "Use the following to test that connected cars are protected against Denial of Service (DoS) attacks:\n\n- Check that network segmentation is applied using firewalls. If not, then this test __fails__.\n- Verify that access to input ports requires authorization and authentication. If not, then this test __fails__.\n- Check that the CAN frame ID fields are encrypted. If not, then this test __fails__.",
    "weakness_title_read_only": "Denial of Service in networks (Connected Cars)",
    "weakness_id_read_only": "P1553",
    "weakness": "75e4cd9a-cab7-4970-860e-24aa9fec58b2",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2020-06-05T12:21:57.002000-04:00",
    "last_updated": "2021-06-25T14:47:40.877000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2154",
    "universal_id": "712ffd3e-8ab3-41a2-afa2-8d3070b0df8c",
    "countermeasure_name": "Validate all YAML input",
    "countermeasure_solution": "Use the following steps for validating all YAML input:\n\n1. Make a __schema__ to validate YAML files using the open-source JSON/YAML validation tool called Rx. \n    \n    * Each schema describes the rules and general structure of your YAML files.\n\n    * Rx provides a system for data validation that matches up with JSON-style data structures and is as easy to work with as JSON itself.\n\n2. Check a specific YAML file against that schema to verify whether it is valid or not. This validation mitigates the risk of invalid configuration files with the YAML format as well as providing users with more informative feedback. \n \n##  References\n\n-  [How to use YAML Schema to validate your YAML files](https://blog.picnic.nl/how-to-use-yaml-schema-to-validate-your-yaml-files-c82c049c2097)",
    "weakness_title_read_only": "Improper Input Validation",
    "weakness_id_read_only": "P95",
    "weakness": "df80ca69-a2c0-4d7f-b3f7-d81bd6d685e9",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "development",
    "created": "2020-06-10T16:15:25.345000-04:00",
    "last_updated": "2021-06-25T14:47:54.968000-04:00",
    "custom": "False",
    "rules": "055cf9bb-6c6f-473f-98e2-7eb68db9b0ce AND c942552c-0d31-41c5-bba7-795ba0e8d88d",
    "rules_read_only": "A1285 AND A736"
  },
  {
    "countermeasure_id": "T2155",
    "universal_id": "764ed35b-7d46-4527-9ff6-fd1a2445394c",
    "countermeasure_name": "Follow security best practices for YAML parsers",
    "countermeasure_solution": "Use the following steps as best practices to avoid potential vulnerabilities when using the YAML markup language:\n\n1. Carefully inspect the user-provided (untrusted) YAML string to prevent __Remote code Execution (RCE)__.\n\n    * Use `Yaml.safe_load` instead of `Yaml.load`, especially in unsafe languages such as Ruby and Python.\n \n    * `yaml.safe_load` correctly sanitizes YAML input, which prevents attackers from embedding Python code to be executed within YAML content.\n \n2. Securely configure `js-yaml` and install updates from the vendor's website to avoid resource exhaustion that can lead to a __Denial of Service (DoS)__ attack in `js-yaml`.\n\n3. To avoid errors in parsing data: \n \n    * Debug Yaml configuration files, especially when they are large because accidentally getting the indentation wrong is not typically an error. It will often simply deserialize to something you did not intend.\n \n    * Use `load_all()` in Python and `load_stream()` in Ruby when there are multiple Yaml documents in a single file. Otherwise, a file starting with `---` will cause an error.\n \n4. To avoid Yaml incompatibilities with implementations:\n     \n    * Quote all strings, even when it is not strictly required. In different implementations, each value can be compiled differently. For instance, in the following YAML code, `Yes` can be interpreted as either `True` or `\"Yes\"`. In the following Yaml code snippet, ` Test: Yes` can be interpreted differently in different languages such as:\n\n        [{'Test': True}]\n\n        OR\n\n        [{'Test': \"Yes\"}]\n\n    * See this [page](https://github.com/cblp/yaml-sucks) for a complete list of incompatibilities.  \n    \n   \n## References\n\n- [DoS in js-YAML](https://www.cybersecurity-help.cz/vdb/SB2019032106)\n- [DoS - npm](https://www.npmjs.com/advisories/788)\n- [RCE in YAML](https://www.arp242.net/yaml-config.html)\n- [Error in parsing](https://www.arp242.net/yaml-config.html)\n- [Yaml Incompatibilities](https://github.com/cblp/yaml-sucks)",
    "weakness_title_read_only": "Improper serializing/deserializing of YAML data",
    "weakness_id_read_only": "P1556",
    "weakness": "f5d5abd1-0549-417f-8351-998c82df4b43",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "development",
    "created": "2020-06-10T17:04:50.337000-04:00",
    "last_updated": "2021-06-25T14:47:53.765000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2156",
    "universal_id": "d7aa915d-0a27-405a-ae8e-45574f4e53cb",
    "countermeasure_name": "Validate Scalable Vector Graphics (SVG)",
    "countermeasure_solution": "Scalable Vector Graphics (SVG) images and their behaviors are defined in XML text files. This means that they can be searched, indexed, scripted, and compressed.\n\nIt is recommend that web developers use the following guidelines when using SVG images:\n\n- Do not to load SVG images as objects or iFrames.\n- Sanitize untrusted SVG images before uploading them onto a server.\n- Restrict dangerous tags, such as `script` and `foreignObject`.\n- Restrict loading resources from an external link inside an SVG image.\n- Limit expansion inside an SVG image.",
    "weakness_title_read_only": "Missing or Incorrect XML Validation",
    "weakness_id_read_only": "P12",
    "weakness": "f568ebe3-2bc5-4510-a840-cd30a159ed25",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "development",
    "created": "2020-06-12T00:45:28.143000-04:00",
    "last_updated": "2021-06-25T14:47:53.440000-04:00",
    "custom": "False",
    "rules": "f21d586b-defa-4cce-ba86-2c35d88cb388",
    "rules_read_only": "A1286"
  },
  {
    "countermeasure_id": "T2157",
    "universal_id": "9639750d-12c3-44f0-ab85-d3c791a0c3b6",
    "countermeasure_name": "Secure email and messaging in web applications",
    "countermeasure_solution": "Follow security and privacy guidelines and best practices for sending emails and messages in web application.\n\n\n### Encryption\n\n- Apply end-to-end encryption using TLS.\n- Never send unencrypted sensitive information information over email. For example, use PGP encryption tools and Secure FTP when sending sensitive files over email.\n- Authenticate the sender and receiver of emails with SPF (Sender Policy Framework) and DKIM (DomainKeys Identified Mail). SPF helps indicate which IP addresses are authorized to send email on behalf of a domain, and DKIM verifies that received messages are not faked or modified using digital signatures and encryption keys.\n\n### Configuration\n- Set up Domain-based Message Authentication, Reporting, and Conformance (DMARC) for compliance-focus organizations. \n    - DMARC unifies SPF and DKIM authentication into a common framework.\n    - This framework confirms that legitimate email is appropriately authenticated based on SPF and DKIM standards and that fraudulent email from the sender's domain is blocked.\n- Use a trusted email service provider. The provider must be privacy certified and have secure redundant and distributed data centers. It should also support TLS, SPF, DKIM, and DMARC. \n- Configure the email server in accordance with organizational Security Policies. For example, email alert frequencies and other restrictions.\n\n### Client-side security\n- For Client side security and privacy:\n    - Use two-factor authentication.\n    - Limit email forwarding.\n    - Use BCC instead of CC when sending bulk emails.\n    - Apply the appropriate data classification labels when sending emails, as required by organizational Data Classification and Acceptable Use Policies.\n    - Provide an unsubscribe mechanism in bulk emails to manage the list of recipients who have opted out. This is requirement for sending Commercial Electronic Messages (CEMs) under CASL and the CAN-SPAM Act.",
    "weakness_title_read_only": "Lack of a process for regulating the use of electronic messaging",
    "weakness_id_read_only": "P1226",
    "weakness": "1529e449-ed35-40de-a18d-acb2c22ac0b8",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "requirements",
    "created": "2020-07-06T14:55:33.400000-04:00",
    "last_updated": "2021-06-25T14:47:36.947000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2158",
    "universal_id": "2184ab18-6dcb-4a9a-8a2f-b2f43fb33a75",
    "countermeasure_name": "Ensure that data is deleted securely and efficiently from storage (Cloud)",
    "countermeasure_solution": "Follow these security guidelines for erasing an existing data object in a cloud provider's system on behalf of a cloud customer (cloud subscriber or unidentified user):\n\n__As a cloud provider:__\n\n- Implement the customer's delete request to erase a data object that includes unique identifiers, date, and time of erasure. This process applies zero-filling the object and returning the space for use by others, and n-pass overwriting of the object with random data. \n\n- Erase redundant copies together or ensure that there is no redundant data storage.\n\n- Disable all new attempts to access the object at the requested deletion time.\n\n- Complete all in-process data transfers of the object and follow these steps:\n\n    1. Perform the requested erasure process on the media that stored the object. \n    2. Charge the cloud customer for the service and provide the cloud customer with a time-stamped signed message confirming the steps that have been performed to delete the object within an agreed-upon period of time after erasure.\n\n- Ensure you receive an error message during the erasure process if the object has been moved or renamed before the deletion process is attempted (race condition). In this case, retry the erasure process.\n\n- Undo erasure on incorrect data objects and perform deletion on correct data objects if you receive a notification from the cloud customer of incorrect data object erasure.\n\n- Undo deletion that has been performed by unauthorized users through the cloud provider's account management web page if you receive such a notification from the cloud customer.\n\n- Delete or reattempt deletion immediately if you receive any notification about incomplete or unsuccessful erasure of the object from the cloud customer.\n\n__As a cloud customer:__\n\n- Notify the cloud provider of any erasure of incorrect data objects.\n\n- Inform the cloud provider to undo any deletion that has been performed by an unauthorized user who has access to the cloud provider's account management web page and can impersonate a legitimate cloud customer.\n\n- Contact the cloud provider to undo erasure if the cloud provider has disabled access to the object before the requested date and time.\n\n- Ensure the cloud provider has erased the requested object if you do not receive erasure notification from the cloud provider. \n\n- Contact the cloud provider and ask about immediate or reattempted deletion if the cloud provider has not erased the object completely or at all.\n\nFor more information please see [NIST - Erase Data Objects in a Cloud](https://www.nist.gov/itl/36-erase-data-objects-cloud).",
    "weakness_title_read_only": "Insecure or ineffective erasure of data",
    "weakness_id_read_only": "P1558",
    "weakness": "1b973f52-9385-4849-973a-993a22a9252b",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "activities",
    "created": "2020-09-01T18:03:25.970000-04:00",
    "last_updated": "2021-06-25T14:48:01.661000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2159",
    "universal_id": "9772c8fd-03db-4296-809c-e76babb8b134",
    "countermeasure_name": "Ensure security of virtualized environments (Cloud)",
    "countermeasure_solution": "Use the following best practices for virtualization security:\n\n__As a cloud provider:__\n\n- Implement a secure underlying physical infrastructure for virtualization.\n\n- Develop secure isolation between tenants.\n\n- Support cloud users to secure their assets by offering adequate security features at the virtualization layers.\n\n- Avoid attacks or any internal compromises by protecting physical infrastructure and virtualization platforms.\n\n- Provide all virtualization features that can be managed by customers by using a secure-by default configuration.\n\nFor more guidelines about computing, network, and storage, please see [CSA security guidelines-virtualization and containers](https://downloads.cloudsecurityalliance.org/assets/research/security-guidance/security-guidance-v4-FINAL.pdf).\n\n__As a cloud customer:__\n\n- Configure virtualization services based on the cloud provider and industry best practices. \n\n- Take note of the capabilities offered by the cloud provider and any possible security gaps.\n\n- Ensure proper configuration after considering the security isolation capabilities of both the selected container platform and the underlying operating system. \n\n__When using containers:__\n\n- Ensure proper configuration after considering the security isolation capabilities of both the selected container platform and the underlying operating system. \n\n- Apply physical or virtual machines for container isolation and define groups for containers with the same security settings on the same physical or virtual hosts. \n\n- Implement only approved and secure container images or code.\n\n- Develop a trusted authentication mechanism and proper role-based access controls for containers and repository management. \n\n- Ensure container orchestration or management and scheduler software stacks are properly secured.\n\nFor more information, please see [CSA security guidelines-virtualization and containers](https://downloads.cloudsecurityalliance.org/assets/research/security-guidance/security-guidance-v4-FINAL.pdf).",
    "weakness_title_read_only": "Insecure virtualization",
    "weakness_id_read_only": "P1559",
    "weakness": "1e4750ce-4b6a-47f8-82a2-a1e2a9f22f12",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "activities",
    "created": "2020-09-01T18:18:33.420000-04:00",
    "last_updated": "2021-06-25T14:48:01.687000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2160",
    "universal_id": "7c73febc-c633-43ac-a6e5-cc107dde565d",
    "countermeasure_name": "Avoid vendor lock-in as a customer when migrating into or out of solutions (Cloud)",
    "countermeasure_solution": "Use the following security guidelines to avoid vendor lock-in with cloud-based solutions:\n\n__As a cloud customer:__\n\n- Familiarize yourself with the definitions of services, data handling, performance measurement, disaster recovery, and termination of the agreement. Accept the Service Level Agreement (SLA) of the cloud provider only after reading it and ensuring that it meets your requirements.\n \n- Ask the cloud provider about their data moving policies before the planning phase. Request detailed information from the cloud provider about moving the services to another cloud provider.\n\n- Consider ease of migration from one cloud to another and execution on multiple cloud platforms when deciding about the architecture of the selected technology.\n\n- Ensure technical boundary conditions by asking detailed information about the cloud provider's architecture. Request special system architecture diagrams for review if you are moving a large section of business functionality to a cloud provider. \n\n- Confirm with the cloud provider whether you have the possibility of maintaining the same image of the data on-premise or exporting data in a raw format. \n\n- Ensure the cloud provider uses proper standards for transparent movement among different cloud providers. \n\n- Confirm with the cloud provider whether you should rewrite your application with their proprietary language or if they accept Python, Java, and C++ for cloud applications.",
    "weakness_title_read_only": "Insufficient data portability in the cloud and insecure migration to the cloud (in and out)",
    "weakness_id_read_only": "P1560",
    "weakness": "559eb396-1a1f-4501-9711-d27a88e00430",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "activities",
    "created": "2020-09-02T13:17:19.342000-04:00",
    "last_updated": "2021-06-25T14:48:01.727000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2161",
    "universal_id": "f5de63be-93fe-4788-b136-a013299fbd1c",
    "countermeasure_name": "Ensure the cloud management interface is secured properly (Cloud)",
    "countermeasure_solution": "__Authentication and authorization:__\n\n   - Ensure that cloud management interfaces are only exposed to a limited number of authorized inbound IP addresses and dedicated management networks.\n   - Use a bastion host or jump server (with screen recording enabled) to provide secure access from the external network into your dedicated management network, and require that users authenticate and are authorized to access your management network.\n   - If you do not have a bastion host, use an Authentication Policy with multi-factor authentication (MFA) to require administrators to successfully authenticate before you allow them to continue to the web interface login page or CLI (Command Line Interface) login prompt. This prevents access to the management interface using stolen credentials or through vulnerability exploits.\n\n__Log management:__\n\n   - Maintain logs of all the commands issued by users on authorization servers.\n   - Ensure all network and server infrastructure audit records are also kept securely where administrators do not have readily available access and would need multiple people to modify it.\n   - Security-centric events logs against your cloud management infrastructure should be collected, analyzed, and alerted automatically to identify suspicious behavior.\n\n__Managing services:__\n\n   - Disable all unnecessary services that are available on the management interface.\n   - Use only the latest versions of secure protocols and configure them to use strong authentication mechanisms. For example, use the latest version of SSH rather than Telnet, and use public-key authentication to secure access.\n   - Perform regular penetration tests to assess the strength of management interfaces.\n\n**Note:** The above best practices for securing management interface changes are for both cloud customers and service providers. The roles and responsibilities change based on the deployment model in use (IaaS, SaaS, and PaaS).\n\nFor more guidelines about cloud management interfaces, please refer to: \n\n- [Cloud security guidance by the National Cyber Security Center (NCSC)](https://www.ncsc.gov.uk/collection/cloud-security/implementing-the-cloud-security-principles/secure-user-management) \t  \n- [Protect your management interfaces by the National Cyber Security Center (NCSC)](https://www.ncsc.gov.uk/blog-post/protect-your-management-interfaces)",
    "weakness_title_read_only": "Insecure cloud management interface",
    "weakness_id_read_only": "P1561",
    "weakness": "d506ae6e-fdaa-4e89-b7e2-9b86a0c95bd4",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "activities",
    "created": "2020-09-04T10:54:44.573000-04:00",
    "last_updated": "2021-06-25T14:48:01.648000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2162",
    "universal_id": "a7d7af12-c1d7-40e5-9a71-53a7a7846db1",
    "countermeasure_name": "Prevent malicious insider risks and privileged user abuse in cloud providers (Cloud)",
    "countermeasure_solution": "Use the following security best practices to avoid privilege user abuse:\n\n- Use the principle of least privilege and only provide the minimum necessary permissions to users so that that can complete their jobs. \n\n- Obtain a consolidated view on user permissions and profiles. This helps to avoid any further errors when you manage different sandboxes and must change permissions in some of them.\n   \n- Monitor compliance and unusual user behavior. This provides an acceptable level of security for confidential information and sensitive data to obtain global regulations, such as GDPR. \n\n- Monitor user access to data in the cloud environment (what/when/where). This assists in detecting permission abuse and in developing stronger regulations for privileged users. \n\n- Monitor privileged users to detect any changes in the cloud environment. This provides proper control of data. Also consider implementing a proactive approach to providing alerts for any user role changes.",
    "weakness_title_read_only": "Malicious insiders and abuse of high privilege roles",
    "weakness_id_read_only": "P1562",
    "weakness": "f38617c1-c973-43d0-b68c-25f41725b9d7",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "activities",
    "created": "2020-09-04T16:05:27.112000-04:00",
    "last_updated": "2021-06-25T14:47:51.664000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2163",
    "universal_id": "5883c283-a4a5-445b-9bf4-ba93e23bccd9",
    "countermeasure_name": "Ensure the security of hypervisors (Cloud)",
    "countermeasure_solution": "Follow the following best practices for hypervisor security:\n\n**Monitoring:** \n\n- Use monitoring and network security tools to monitor virtual environments and detect any unusual behavior.\n- The privileged commands or instructions from a Guest OS to the host processor must be monitored.\n- Disable unnecessary services and devices, only allow services needed for successful operation. \n\n**Access control:**\n\n- Disconnect unused physical hardware from host systems.\n- Put access control restrictions to who can have remote and console access to the hypervisor.\n- Set up an Access Control List (ACL) to restrict the access of each Virtual Machine (VM) process to only the devices assigned to that VM. \n- All device drivers installed as part of a hypervisor platform should be configured to run as lower-privileged level process or user mode, rather than the privilege level of the hypervisor or kernel mode.\n \n**Networking:**\n\n- Create separate Virtual Machine (VM) and hypervisor management networks, to safeguard hypervisors from potential attacks.\n- Do not install any non-standard Virtual Machine (VM) images in the hypervisor library, which can result in platform-level vulnerabilities.\n- Run workloads of different trust levels on different physical and/or logical networks\n- Set up resource limits for network bandwidth and I/O bandwidth (e.g., disk read/write speeds) for each VM to prevent denial-of-service (DOS) attacks.\n- Access to the server storing VM images should always be through a secure protocol such as TLS.\n\n**Patch management:**\n\n- Gold standard must be defined for VMs of all types, and VM Images that do not conform to the standard should not be allowed to be stored in the VM Image server or library. \n- Images in the VM Image library should be periodically scanned for outdated OS versions and patches.\n- Install patches and updates to the hypervisor as the vendor releases them. \n- Every VM Image stored in the image server should have a digital signature attached to it as a mark of authenticity and integrity, signed using trustworthy, robust cryptographic keys. \n\n\n**Memory Management:**\n\n- Define and implement a standard operating procedure that prevents resource exhaustion.\n- Conducted hypervisor self-integrity checks (or the equivalent) upon boot-up.\n- The integrity of the memory management function of the hypervisor host must be protected against attacks such as buffer overflows and illegal code execution. \n\n\n**Note:** The above best practices for securing hypervisor are for both cloud customer and service provider, as the roles and responsibilities changes based on deployment model (IaaS, SaaS, and PaaS) in use.\n\nFor more information on hypervisor security please refer:\n\n- [ NIST Security Recommendations for Server-based Hypervisor Platforms](https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-125Ar1.pdf) \n- [Guide to Security for Full Virtualization Technologies ](https://www.govinfo.gov/content/pkg/GOVPUB-C13-ad063940b2ba8fcf2e891bc658e6ef3e/pdf/GOVPUB-C13-ad063940b2ba8fcf2e891bc658e6ef3e.pdf)",
    "weakness_title_read_only": "Lack of hypervisor security",
    "weakness_id_read_only": "P1563",
    "weakness": "63741a36-8c3b-487e-98a3-7127b15b7440",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "activities",
    "created": "2020-09-04T16:48:09.625000-04:00",
    "last_updated": "2021-06-25T14:48:01.700000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2164",
    "universal_id": "f0070fea-972f-4200-9617-378c2930f1dc",
    "countermeasure_name": "N/A - Not Applicable",
    "countermeasure_solution": "N/A - Not Applicable",
    "weakness_title_read_only": "Not Applicable",
    "weakness_id_read_only": "P704",
    "weakness": "995ed50e-efc6-4515-a7f0-ce4887406bf5",
    "tags": "",
    "countermeasure_priority": "1",
    "phase": "requirements",
    "created": "2020-09-10T10:30:10.218000-04:00",
    "last_updated": "2023-05-11T11:19:01.244000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2165",
    "universal_id": "689647f6-2aa3-4f90-93b6-63cece595a30",
    "countermeasure_name": "Ensure security governance when outsourcing to cloud providers (Cloud)",
    "countermeasure_solution": "Use the following security guidelines when contracting with cloud providers to ensure control on a number of governance issues that may affect security.\n\nAs a cloud customer, identify the shared responsibilities of security and governance for the chosen Cloud service model:\n\n1. Develop a Cloud Governance security framework based on applicable industry leading practices, standards, and regulations such as: CSA, COBIT 5, NIST Standards, ISO 27017, PCI-DSS and GDPR.\n    * Cloud providers can often provide evidence of certification or compliance with relevant security requirements (e.g. SOC2, CSA CCM certifications)\n    * Public cloud infrastructure implies certain kinds of compliance cannot be achieved (e.g. PCI-DSS)\n\n2. Familiarize yourself with how contracts affect your cloud governance model and implement standardized security requirements into cloud service agreements.\n    * Obtain, review, and ensure contractual obligations are approved by IT security and legal teams before entering into any cloud services agreement.\n    * Contracts cannot always be negotiated with out-of-the-box cloud providers. Be aware of and manage any residual risks through alternate means such as auditing, monitoring, and encryption.\n\n3. Develop a process for cloud provider security assessments. *(For more information on the supplier security assessment process, see Additional Requirements)*\n    * Establish, maintain, and review a Service Level Agreement (SLA).\n    * Regularly review contracts, provider security documentation, reporting (e.g. SOC2, Third Party Audits, SLAs), and security policies (e.g. change management, data protection, third party access).\n    * Monitor the provider for compliance, and manage any residual risks identified from security assessments.",
    "weakness_title_read_only": "Loss of control over security of supply chain",
    "weakness_id_read_only": "P1565",
    "weakness": "f1d3e080-ee3c-4209-8cc9-959f84f6af30",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "activities",
    "created": "2020-09-15T12:38:01.284000-04:00",
    "last_updated": "2021-06-25T14:48:01.780000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2166",
    "universal_id": "5f5e88b0-873f-4532-b1a6-39bfb59a4f78",
    "countermeasure_name": "Ensure business continuity over cloud services (Cloud)",
    "countermeasure_solution": "Use the following guidelines when designing and implementing Business Continuity and Disaster Recovery (BC/DR) plans for cloud services:\n\n1. When using cloud services, an organization's BC/DR requirements must be included in the procurement, planning, design, management, and monitoring of both cloud environments and their cloud service providers.\n\n2. Ensure processes, controls, and contractual requirements are in place for continuity in the supply chain. All aspects of BC/DR requirements and responsibilities on the part of the cloud provider should be negotiated into contracts and fully defined in their service level agreements (SLAs).\n\n3. Perform a Business Impact Analysis (BIA) identifying the threats and associated risks of hosting a particular application or system with the intended cloud service. The BIA should consider the required service levels and maximum outages for critical systems and functions for consideration for cloud migration. The BIA should also consider factors such as:\n    - Acceptable recovery times (RTO/RPO)\n    - Scope of revenue or operational loss from an outage\n    - Required redundancy, backup, and failover measures\n    - Brand, reputation and legal risks\n\n4. Consider the shared responsibilities when incorporating considerations for cloud infrastructure and services into your overall BC/DR plans and activities. Contingency plans should be tested, reviewed, and continuously improved as more services are migrated to the cloud.\n\nFor more information, please see [CSA SecaaS Implementation Guidance Category 9 // Business Continuity/Disaster Recovery](https://downloads.cloudsecurityalliance.org/initiatives/secaas/SecaaS_Cat_9_BCDR_Implementation_Guidance.pdf)",
    "weakness_title_read_only": "Lack of business continuity and disaster recovery processes",
    "weakness_id_read_only": "P1566",
    "weakness": "0b08d3ba-f7e9-416b-9b41-76bbd7f2edad",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "activities",
    "created": "2020-09-17T15:01:44.941000-04:00",
    "last_updated": "2021-06-25T14:48:01.753000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2167",
    "universal_id": "9d673183-9f05-4c47-b2a6-1ca6ee729f85",
    "countermeasure_name": "Secure file storage",
    "countermeasure_solution": "Before storing a file uploaded by a user, perform the following checks:\n\n- Check for the validity of a file name with a set of accepted characters.\n\n- Do not put files in \"DocumentRoot\". For example, If your Apache DocumentRoot points to Rails' `/public` directory, do not put file uploads in it, and store files at least one level above it.",
    "weakness_title_read_only": "Unrestricted Upload of Unsafe File Types",
    "weakness_id_read_only": "P325",
    "weakness": "bcfd4030-b81a-4ba5-9140-1da1c4a43260",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "requirements",
    "created": "2020-10-07T20:58:47.533000-04:00",
    "last_updated": "2021-06-25T14:47:53.594000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2170",
    "universal_id": "2672d516-eb0b-4e27-8c71-d9cb9a554893",
    "countermeasure_name": "Ensure that personal information processed by the application meets data localization requirements",
    "countermeasure_solution": "Data localization requirements are broadly defined as any laws, standards, or policies that require an entity to collect, process, and store information on a nation's citizens or residents within that country's borders.  \n \n**Follow these guidelines to correctly localize information and comply with regulatory requirements:** \n \n1. Identify the organization's information assets by determining what information is impacted, what processes use that information, and where those processes are conducted. \n \n2. Research and define compliance regulations for each country the information will be stored in. If only a small amount of non-sensitive  information is involved, specify purpose of transfer, identify scope, and obtain explicit consent of data subjects. If necessary, use locally based service providers with the necessary infrastructure and technical safety measures to satisfy  information localization requirements. \n \n    * Set up a detailed risk assessment for each jurisdiction to monitor risk levels and ensure local service providers meet the organization's risk appetite. \n \n3. Select hosting providers and define costs. Conduct due diligence when choosing a service provider by performing a stress test by socializing data and running through different scenarios. \n \n4. Conduct self-assessments on amount, scope, type, and sensitivity of personal information before cross-border transfer. Determine security capabilities of the receiver. If national security or public interest concerns exist, halt the transfer.  \n \n5. Maintain a repository of records of cross-border transfer of information including the date and time of transfer, identity of recipients, quantities and sensitivity levels of information. \n\n \n\n6. Consider whether local replication will meet the information localization requirement, or whether the only instance of the information must be in the jurisdiction.",
    "weakness_title_read_only": "Privacy Violation",
    "weakness_id_read_only": "P257",
    "weakness": "b0418f1b-bf92-45ba-845f-abfb9735f1cf",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "requirements",
    "created": "2021-01-13T08:24:31.644000-05:00",
    "last_updated": "2023-04-19T14:10:43.696000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2171",
    "universal_id": "1dc8fef7-b20e-4525-a1a9-dd09c68f0c0f",
    "countermeasure_name": "Avoid observable discrepancy and side channel attacks (Hardware/Firmware)",
    "countermeasure_solution": "Minimize the amount of information that is leaked through hardware signals (power consumption, electromagnetic emissions (EME), and acoustic emissions) by either protecting the signals (lowering the power or protecting the circuit board, etc.) or adding random delays and noises that make the detection difficult. Some of the most common strategies and ideas are listed here:\n\n- Apply blinding or masking techniques to implementations of cryptographic algorithms\n- Add shielding or tamper-resistant protections to the device to increase the difficulty of obtaining measurements of the side-channel\n- In the Architecture and Design phase, compartmentalize the system to have safe areas where trust boundaries can be unambiguously drawn. Do not allow sensitive data to go outside of the trust boundary and always be careful when interfacing with a compartment outside of the safe area. Ensure that appropriate compartmentalization is built into the system design and that the compartmentalization allows for and reinforces privilege separation functionality. Architects and designers should rely on the principle of least privilege to decide the appropriate time to use privileges and the time to drop privileges.\n- Ensure that error messages only contain minimal details that are useful to the intended audience and no one else. The messages need to strike a balance between being too cryptic and confusing users. The messages should not reveal the methods that were used to determine the error. Such detailed information may be used to refine an attack and increase the chances of a successful attack. If errors must be captured in detail, the messages should be saved into log messages. Highly sensitive information such as passwords should never be saved to log files. Avoid inconsistent messaging that might accidentally tip off an attacker about the internal device state, such as whether a username is valid or not.\n- Ensure the algorithm for evaluating security tokens is robust enough. Review every single check of a security token versus a standard and the amount of power consumed during checking for a good token against a bad token.",
    "weakness_title_read_only": "Observable discrepancy (Hardware/Firmware)",
    "weakness_id_read_only": "P1569",
    "weakness": "93d7e640-c9a1-4991-a4d6-4719751fa428",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "requirements",
    "created": "2021-01-18T05:18:23.750000-05:00",
    "last_updated": "2023-04-19T14:23:57.081000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2172",
    "universal_id": "fc2e3aff-1938-4630-a1cd-fcf334752378",
    "countermeasure_name": "Enforce the principle of least privilege (Hardware/Firmware)",
    "countermeasure_solution": "Perform the following steps with respect to setting the permissions:\n\n- Ensure that the architecture grants access and modification attributes for files to only those users who actually require those actions.\n- Compartmentalize the system to have safe areas where trust boundaries can be unambiguously drawn. Do not allow sensitive data to go outside of the trust boundary and always be careful when interfacing with a compartment outside of the safe area. Ensure that appropriate compartmentalization is built into the system design and that the compartmentalization serves to allow for and further reinforce privilege separation functionality. Architects and designers should rely on the principle of least privilege to decide when it is appropriate to use and to drop system privileges.",
    "weakness_title_read_only": "Incorrect default permissions (Hardware/Firmware)",
    "weakness_id_read_only": "P1570",
    "weakness": "8d219616-dcb9-4ea2-bc3a-27961784211b",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "requirements",
    "created": "2021-01-18T05:18:23.876000-05:00",
    "last_updated": "2023-04-26T17:22:51.854000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2173",
    "universal_id": "d851b4a4-2b54-440c-92f2-b78daefe7f82",
    "countermeasure_name": "Ensure the expected behavior is implemented (Hardware/Firmware)",
    "countermeasure_solution": "Ensure that a feature, API, or function performs according to its specification. Application behavior that is not consistent with the developer's expectations may cause incorrect use of the software.\n\nSome causes of incorrect functionality include:\n- Not adhering to coding standards\n- Improper finite status machines in hardware logic\n- Misrepresentation of critical information\n- Not reporting error conditions\n- Using large timeout values\nand more.",
    "weakness_title_read_only": "Expected behavior violation (Hardware/Firmware)",
    "weakness_id_read_only": "P1571",
    "weakness": "2830b95c-483c-4668-90bd-fafaf1a94d60",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "requirements",
    "created": "2021-01-18T05:18:23.946000-05:00",
    "last_updated": "2023-04-19T16:00:00.750000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2174",
    "universal_id": "dcf1ea56-df8d-4a65-b75f-7c3e697a4cc4",
    "countermeasure_name": "Avoid unintended proxy or intermediary (Confused Deputy) (Hardware/Firmware)",
    "countermeasure_solution": "Perform the following actions to prevent unintended proxies/intermediaries (known as confused deputy):\n\n- Enforce the use of a strong mutual authentication mechanism between the two transaction parties.\n- Ensure the proxy core does not drop the transacation initiator's identity whenever a product is an intermediary or proxy for transactions between two other components. \n- Maintain the immutability of the transaction initiator's identity and forward it all the way to the target.",
    "weakness_title_read_only": "Unintended proxy or intermediary (Confused Deputy) (Hardware/Firmware)",
    "weakness_id_read_only": "P1572",
    "weakness": "67d2b13a-7071-4c50-8a71-f4fa290e7953",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "requirements",
    "created": "2021-01-18T05:18:24.014000-05:00",
    "last_updated": "2023-04-19T16:34:12.659000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2175",
    "universal_id": "3193f647-0b78-4c60-9ecb-75a3e5690ad4",
    "countermeasure_name": "Provide documentation for design (Hardware/Firmware)",
    "countermeasure_solution": "Provide accompanying product documentation to show how it is designed. This helps administrators and engineers understand and maintain the product as well as detect and fix vulnerabilities.",
    "weakness_title_read_only": "Missing documentation for design (Hardware/Firmware)",
    "weakness_id_read_only": "P1573",
    "weakness": "eb53d708-5440-4923-980d-c5bfc35d6913",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "requirements",
    "created": "2021-01-18T05:18:24.086000-05:00",
    "last_updated": "2023-04-19T16:50:57.031000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2176",
    "universal_id": "b62ae4a9-b731-4b93-85cf-ba4117422141",
    "countermeasure_name": "Avoid mixing agents of varying trust levels (Hardware/Firmware)",
    "countermeasure_solution": "Avoid mixing agents of varying trust levels, when sharing resources. Untrusted agents should not share resources with trusted agents. For example, make sure agents have the same trust level when multiplexing the pins for them in a SoC.",
    "weakness_title_read_only": "Improper isolation of shared resources on SoC (Hardware/Firmware)",
    "weakness_id_read_only": "P1574",
    "weakness": "6dec4903-4dbf-4213-8df4-4f28c4d2294c",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "architecture-design",
    "created": "2021-01-18T05:18:24.156000-05:00",
    "last_updated": "2023-04-19T17:06:45.463000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2177",
    "universal_id": "45aad97e-eb70-46d2-96a9-9fd002e082b0",
    "countermeasure_name": "Generate unique and immutable identifiers in SoC (Hardware/Firmware)",
    "countermeasure_solution": "Perform the following steps regarding IP identifiers in a System on Chip (SoC):\n\n- Ensure every identity generated in the SoC has unique and immutable in hardware. \n- Clearly define, implement, configure, and test the actions pertaining whether an IP is trusted or not trusted. \n- Ensure the policy is immutable or protected with clear authentication and authorization, if the definition is implemented via a policy.",
    "weakness_title_read_only": "SoC using components without unique and immutable identifiers (Hardware/Firmware)",
    "weakness_id_read_only": "P1575",
    "weakness": "9deb887a-51c1-4b2b-b6ab-81d17bc363e8",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "architecture-design",
    "created": "2021-01-18T05:18:24.336000-05:00",
    "last_updated": "2023-04-19T17:14:34.571000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2178",
    "universal_id": "95f5fd7d-5938-4c4c-b2f8-032b2764380e",
    "countermeasure_name": "Ensure fabric access controls enablement before 3rd party hardware IPs (Hardware/Firmware)",
    "countermeasure_solution": "Ensure the boot sequence enables fabric access controls and memory protections before enabling third-party hardware IPs and peripheral microcontrollers that use untrusted firmware.",
    "weakness_title_read_only": "Power-on of untrusted execution core before enabling fabric access control (Hardware/Firmware)",
    "weakness_id_read_only": "P1576",
    "weakness": "ef6cb7b2-7d2b-4352-894c-d9c18fe368b6",
    "tags": "",
    "countermeasure_priority": "3",
    "phase": "architecture-design",
    "created": "2021-01-18T05:18:24.404000-05:00",
    "last_updated": "2023-05-11T11:04:51.056000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2179",
    "universal_id": "de637c9e-f9b1-426d-8f3d-9c1cd39b5774",
    "countermeasure_name": "Block write operations to reserve bits (Hardware/Firmware)",
    "countermeasure_solution": "Perform the following actions during implementation and integration phases:\n\n- Include a feature disable in the implementation phase of the reserve bits.\n- Block any write operations to these reserve bits (e.g., ignored, access-protected, etc.), or assert an exception, during the integration phase.",
    "weakness_title_read_only": "Failure to disable reserved bits (Hardware/Firmware)",
    "weakness_id_read_only": "P1577",
    "weakness": "b6a22bef-2fc1-49b3-a2f4-9b6df9974ff1",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "requirements",
    "created": "2021-01-18T05:18:24.507000-05:00",
    "last_updated": "2023-04-20T09:43:42.417000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2180",
    "universal_id": "49d9108d-a6f1-49c9-9861-15e55540d6c8",
    "countermeasure_name": "Review Access Control Policy (Hardware/Firmware)",
    "countermeasure_solution": "Perform the following steps to check Access Control policies for design, definition, and programming flow:\n\n- Review Access Control policy protections for design inconsistency and common weaknesses during the Implementation Testing phase. \n- Ensure there is enough Access Control policy granularity considered during the design and implementation of the product. \n- Access-control-policy definition and programming flow must be tested in pre-silicon, post-silicon testing.",
    "weakness_title_read_only": "Insufficient granularity of access control (Hardware/Firmware)",
    "weakness_id_read_only": "P1578",
    "weakness": "871c0d17-1a23-4e30-a1dc-662af18f0157",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "architecture-design",
    "created": "2021-01-18T05:18:24.698000-05:00",
    "last_updated": "2023-04-20T10:17:24.596000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2181",
    "universal_id": "96a0bd4a-5287-4ba4-9f5d-452d9e7284b6",
    "countermeasure_name": "Evaluate write-once registers for proper configuration (Hardware/Firmware)",
    "countermeasure_solution": "Perform the following steps to ensure secure use and correct implmentation of write-once registers:\n\n- During hardware design, evaluate all register write-once or sticky fields for proper configuration. For example, check if the register's `Write_once_status (bit 0)` value is zero before being programmed and set to one by the trusted software.\n- In the testing phase, use automated tools to verify that values are not reprogrammable and that write-once fields lock on writing zeros (i.e. it doesn't only lock on writing ones). For example, test if any untrusted agent can set the defined `Write_once_status` register to one before trusted software modules.",
    "weakness_title_read_only": "Race condition for write-once attributes (Hardware/Firmware)",
    "weakness_id_read_only": "P1579",
    "weakness": "33203f28-0ab7-4856-81d3-4612d98efb9d",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "architecture-design",
    "created": "2021-01-18T05:18:24.767000-05:00",
    "last_updated": "2023-04-20T10:23:33.255000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2182",
    "universal_id": "faf25727-c02f-4e44-b639-08580e6fc9e4",
    "countermeasure_name": "Check lock bit protections for design consistency (Hardware/Firmware)",
    "countermeasure_solution": "Perform the following steps to ensure a secure behavior with respect to _lock bits_:\n\n- Review the security lock bit protections for design inconsistency and common weaknesses. Ensure they cannot be modified after being set to one.\n- Review the security Lock bit protections for behavior across supported power state transitions (e.g., entry and wake from low power sleep modes). \n- Review the security Lock bit protections for any bypass/override modes supported. \n- Either remove or protect using authenticated/authorized debug mode, any supported override modes. \n- Test security lock programming flow and lock properties in pre-silicon and post-silicon testing including testing across power transitions.",
    "weakness_title_read_only": "Improper implementation of lock protection registers (Hardware/Firmware)",
    "weakness_id_read_only": "P1580",
    "weakness": "cc5c73ab-0e57-4567-a16a-f4f2bc42abb0",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "architecture-design",
    "created": "2021-01-18T05:18:24.837000-05:00",
    "last_updated": "2023-04-20T11:50:34.544000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2183",
    "universal_id": "5e58ae71-eaa9-49de-b92a-97671a0ee747",
    "countermeasure_name": "Avoid using chicken bits (Hardware/Firmware)",
    "countermeasure_solution": "Perform the following best practices regarding _chicken bits_:\n\n- Avoid implementing chicken bits in a released product as much as possible. \n- If implemented at all, ensure that they are disabled in production devices. \n- Document all interfaces to a device.",
    "weakness_title_read_only": "Inclusion of undocumented features or chicken bits (Hardware/Firmware)",
    "weakness_id_read_only": "P1581",
    "weakness": "f89812a4-0e7f-4d35-a1cb-5a0596da39c9",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "architecture-design",
    "created": "2021-01-18T05:18:24.992000-05:00",
    "last_updated": "2023-04-21T09:13:17.855000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2184",
    "universal_id": "447f93c6-682b-4129-bb90-3fd5d4a2e727",
    "countermeasure_name": "Disable access to security-sensitive information stored in fuses (Hardware/Firmware)",
    "countermeasure_solution": "Disable access to security-sensitive information stored in fuses directly as well as reflected from temporary storage locations when in debug mode.",
    "weakness_title_read_only": "Sensitive non-volatile information not protected during debug (Hardware/Firmware)",
    "weakness_id_read_only": "P1582",
    "weakness": "f0414ecd-6699-48d4-be5e-d3e889099657",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "requirements",
    "created": "2021-01-18T05:18:25.082000-05:00",
    "last_updated": "2023-04-21T09:19:34.953000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2185",
    "universal_id": "015f35f7-b157-467a-981f-490f950a3031",
    "countermeasure_name": "Prevent unauthorized access to sensitive data through debug or test interfaces (Hardware/Firmware)",
    "countermeasure_solution": "Ensure the product implements the authorization mechanism on the debug and test interfaces. An insufficient protection mechanism allows the attacker to access or control sensitive assets. \nPerform the following steps to avoid unauthorized access to sensitive data through JTAG interfaces:\n\n- Disable permanently the JTAG interface before releasing the system to untrusted users.\n- Encrypt all information (traffic) on the JTAG interface using an approved algorithm (such as NIST). Encrypt path from inside chip to trusted user application.",
    "weakness_title_read_only": "Improper access to sensitive information using debug and test interfaces (Hardware/Firmware)",
    "weakness_id_read_only": "P1583",
    "weakness": "7c801e3b-ccf8-4005-80aa-5dfe581f50e7",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "architecture-design",
    "created": "2021-01-18T05:18:25.170000-05:00",
    "last_updated": "2021-09-30T18:44:14.112000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2186",
    "universal_id": "5badfe1a-03f5-4bf5-9d71-a86d5145875d",
    "countermeasure_name": "Enforce valid Finite State Machines (FSMs) in hardware logic (Hardware/Firmware)",
    "countermeasure_solution": "Ensure the hardware logic contains the valid finite state machines (FSMs). Defective FSMs cause a denial of service (DoS) or privilege escalation on the victim's system.To avoid faulty FSMs, determine every possible states, and manage unused states by default statements. Also, make sure the system fails to secure states.",
    "weakness_title_read_only": "Improper finite state machines (FSMs) in hardware logic (Hardware/Firmware)",
    "weakness_id_read_only": "P1584",
    "weakness": "f5c536df-88d2-4cbb-91e4-033211080806",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "architecture-design",
    "created": "2021-01-18T05:18:25.238000-05:00",
    "last_updated": "2023-04-21T09:25:30.992000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2187",
    "universal_id": "c5e8b023-9eb8-4646-a638-3751a0e0f27c",
    "countermeasure_name": "Enforce proper implementation of wear leveling operations (Hardware/Firmware)",
    "countermeasure_solution": "Ensure the product implements properly wear leveling operations in limited-write non-volatile memories. To do so, add secure wear leveling algorithms and prevent any bypass on them.",
    "weakness_title_read_only": "Improper write handling in limited-write non-volatile memories (Hardware/Firmware)",
    "weakness_id_read_only": "P1585",
    "weakness": "9d2904b9-dd88-49c0-a612-818143b05588",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "architecture-design",
    "created": "2021-01-18T05:18:25.306000-05:00",
    "last_updated": "2023-04-21T09:37:18.215000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2188",
    "universal_id": "715d64eb-5168-4305-9fd5-9724dc32f882",
    "countermeasure_name": "Enforce proper protection against voltage and clock glitches (Hardware/Firmware)",
    "countermeasure_solution": "Protect devices (including sensitive information/software) against fault attacks by properly implementing circuitry or sensors to detect and mitigate voltage and clock glitches. To do so, use Tunable Replica Circuits (TRCs) or special flip-flops such as Razor flip-flops at the circuit-level. Also, where appropriate, use level sensors at the SoC or platform base to identify glitches or implement redundancy in secure-sensitive code to mitigate glitch attacks.",
    "weakness_title_read_only": "Missing or improperly implemented protection against voltage and clock glitches (Hardware/Firmware)",
    "weakness_id_read_only": "P1586",
    "weakness": "108edafb-82e2-4176-9873-7b5a120108b7",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "architecture-design",
    "created": "2021-01-18T05:18:25.410000-05:00",
    "last_updated": "2023-04-21T09:49:39.865000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2189",
    "universal_id": "16113a34-eb75-459f-9291-757538db945d",
    "countermeasure_name": "Prevent Semiconductor Defects in Hardware Logic with Security-Sensitive Implications (Hardware/Firmware)",
    "countermeasure_solution": "Perform extensive post-silicon checking after completing silicon packaging. It ensures hardware logic that implements functionalities of security does not have any defect. Also, consider device specification properly to prevent any compromise of security guarantees in the operation phase.",
    "weakness_title_read_only": "Semiconductor defects in hardware logic with security-sensitive implications (Hardware/Firmware)",
    "weakness_id_read_only": "P1587",
    "weakness": "fc07a95b-4fea-475f-a251-ee908cc7a6cb",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "requirements",
    "created": "2021-01-18T05:18:25.478000-05:00",
    "last_updated": "2023-04-21T10:08:51.654000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2190",
    "universal_id": "fb070bfd-c4e6-4627-86e3-74fc6dcc1104",
    "countermeasure_name": "Prevent mirroring regions with different values (Hardware/Firmware)",
    "countermeasure_solution": "To avoid existing multiple different copies of the same value when there is not the possibility of atomic and immediate updates, prepare the out-of-sync period of the updates as small as possible and implement a robust update process.",
    "weakness_title_read_only": "Mirrored regions with different values (Hardware/Firmware)",
    "weakness_id_read_only": "P1588",
    "weakness": "b60e18fa-8814-40ef-8f3e-9e31ed601d49",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "architecture-design",
    "created": "2021-01-18T05:18:25.547000-05:00",
    "last_updated": "2023-04-21T10:36:49.335000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2191",
    "universal_id": "fe288146-2557-40f5-a2e3-3c8f45ef9d3d",
    "countermeasure_name": "Ensure using configured CPU hardware to support exclusivity of write and execute operations (Hardware/Firmware)",
    "countermeasure_solution": "To prevent an attacker from executing data from memory, implement a bit that the operating system can use to mark the memory's non-executable areas. If this bit does not exist in the CPU hardware, then use MMU/MPU (memory management unit/memory protection unit). Otherwise, implement a firewall in the SoC interconnect to simulate the write-exclusivity operation in the integration phase.",
    "weakness_title_read_only": "CPU hardware not configured to support exclusivity of write and execute operations (Hardware/Firmware)",
    "weakness_id_read_only": "P1589",
    "weakness": "811a14dc-5478-4553-ac5a-b7bf3aef6c71",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "architecture-design",
    "created": "2021-01-18T05:18:25.632000-05:00",
    "last_updated": "2023-04-21T10:51:35.475000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2192",
    "universal_id": "e108df40-fdd5-4bc9-a531-a392629328e5",
    "countermeasure_name": "Prevent incorrect selection of fuse values (Hardware/Firmware)",
    "countermeasure_solution": "To prevent an attacker to set the system to an insecure state, design the hardware logic so that blown fuses do not put the device into an insecure state.",
    "weakness_title_read_only": "Incorrect selection of fuse values (Hardware/Firmware)",
    "weakness_id_read_only": "P1590",
    "weakness": "83e930c8-722a-4d68-8d3d-ff9c4c468ea6",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "architecture-design",
    "created": "2021-01-18T05:18:25.718000-05:00",
    "last_updated": "2023-04-21T10:58:05.889000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2193",
    "universal_id": "132db012-7ccb-4d32-9c72-c345ba2d9aee",
    "countermeasure_name": "Prevent incorrect comparison logic granularity (Hardware/Firmware)",
    "countermeasure_solution": "Ensure a comparison logic failure does not occur over the whole series of steps. This operation makes the product vulnerable against timing attacks. To prevent incorrect comparison logic, implement it only in one operation.",
    "weakness_title_read_only": "Incorrect comparison logic granularity (Hardware/Firmware)",
    "weakness_id_read_only": "P1591",
    "weakness": "66fa6343-e027-4462-a978-4bb0a25cc7f1",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "architecture-design",
    "created": "2021-01-18T05:18:25.806000-05:00",
    "last_updated": "2023-04-21T12:13:50.760000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2194",
    "universal_id": "7bdc28b8-e0c0-46fb-a1ec-e0311dbd27d0",
    "countermeasure_name": "Prevent hardware features to enable physical attacks from Software (Hardware/Firmware)",
    "countermeasure_solution": "Protect software-controllable features changing physical operating conditions such as clock frequency and voltage.",
    "weakness_title_read_only": "Hardware features enable physical attacks from software (Hardware/Firmware)",
    "weakness_id_read_only": "P1592",
    "weakness": "56e988a4-2b21-421c-a7d1-32e0dfc9bf74",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "architecture-design",
    "created": "2021-01-18T05:18:25.891000-05:00",
    "last_updated": "2023-04-21T12:41:02.354000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2195",
    "universal_id": "842ec1f4-7118-45b9-9655-961532b2de26",
    "countermeasure_name": "Ensure access control applied properly to Mirrored or Aliased Memory Regions (Hardware/Firmware)",
    "countermeasure_solution": "To prevent attacker access to aliased or mirrored memory regions because of inconsistent read/write permissions, perform proper checks for consistency access rights. These checks compare permissions between primary memory and any aliased or mirrored memory regions. Also, only a trusted software component must enable memory aliases or change the size of mapped memory regions.",
    "weakness_title_read_only": "Improper access control applied to mirrored or aliased memory regions (Hardware/Firmware)",
    "weakness_id_read_only": "P1593",
    "weakness": "51650fcb-e45c-436d-96b1-da26c50fd86a",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "architecture-design",
    "created": "2021-01-18T05:18:25.978000-05:00",
    "last_updated": "2023-04-21T12:52:25.323000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2196",
    "universal_id": "fb7a6dea-71a2-4fd4-87bc-09ab2bfc2f7c",
    "countermeasure_name": "Prevent exposure of sensitive system information due to uncleared debug information (Hardware/Firmware)",
    "countermeasure_solution": "Do not leave any sensitive information in debug mode and make sure all debug information is eradicated before releasing the hardware. This includes but is not limited to security-sensitive values such as keys and steps of cryptographic operations stored in temporary hardware registers.",
    "weakness_title_read_only": "Exposure of sensitive system information due to uncleared debug information (Hardware/Firmware)",
    "weakness_id_read_only": "P1594",
    "weakness": "6d026dff-a527-40d2-91aa-b5e113f7b62e",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "architecture-design",
    "created": "2021-01-18T05:18:26.048000-05:00",
    "last_updated": "2023-04-21T13:01:21.212000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2197",
    "universal_id": "54db9c30-054a-4169-8b2e-8acc0bdfe33b",
    "countermeasure_name": "Prevent Improper Restriction of Security Token Assignment (Hardware/Firmware)",
    "countermeasure_solution": "To prevent malicious agents program improper protected Security Tokens and spoof an action as the one initiated by a trusted agent, follow these steps:\n- Perform review checks of Security Token assignment for design inconsistency and common weaknesses.\n- Use pre-silicon and post-silicon testing for Security-Token definition and programming flow.",
    "weakness_title_read_only": "Improper restriction of security token assignment (Hardware/Firmware)",
    "weakness_id_read_only": "P1595",
    "weakness": "6553106d-e402-468a-9591-2fb370c76173",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "architecture-design",
    "created": "2021-01-18T05:18:26.135000-05:00",
    "last_updated": "2023-04-21T13:13:21.968000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2198",
    "universal_id": "4c4e3276-2bcf-4897-9dc5-dd07f50f49a6",
    "countermeasure_name": "Prevent improper handling of overlap between protected memory ranges (Hardware/Firmware)",
    "countermeasure_solution": "Prevent an attacker from performing a privilege escalation attack. The attacker uses a software component running at lower privilege and access to other memory regions used by other software running at higher previlege. Also, ensure the attacker cannot use address overlap weakness to launch a denial of service attack on the higher privilege software memory regions. To do so, follow these steps:\n- Isolate memory regions from unauthorized access and apply access control policies for hardware to protect privileged software in the design phase.\n- Specify a priority scheme by the memory protection unit (MPU) for each programmable memory protection region in the implementation phase.",
    "weakness_title_read_only": "Improper handling of overlap between protected memory ranges (Hardware/Firmware)",
    "weakness_id_read_only": "P1596",
    "weakness": "2ae9c733-f700-4090-bce9-d70e69013628",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "architecture-design",
    "created": "2021-01-18T05:18:26.221000-05:00",
    "last_updated": "2023-04-21T13:28:08.283000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2199",
    "universal_id": "5d49a5da-cd75-4f57-b250-2e6a4a60e486",
    "countermeasure_name": "Prevent improper handling of single-event upsets (Hardware/Firmware)",
    "countermeasure_solution": "To prevent failures happening by single-event upsets (SEUs), implement Error-Correcting-Codes (ECC) and Address Interleaving, and enforce triple-modular redundancy throughout security-sensitive modules.",
    "weakness_title_read_only": "Improper handling of single event upsets (Hardware/Firmware)",
    "weakness_id_read_only": "P1597",
    "weakness": "08135640-3272-448d-82de-c86eac5fc384",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "architecture-design",
    "created": "2021-01-18T05:18:26.290000-05:00",
    "last_updated": "2023-04-21T13:47:16.799000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2200",
    "universal_id": "e0ce73a6-79e4-4314-b8df-0509302e3564",
    "countermeasure_name": "Ensure register interface does not allow software access to sensitive data (Hardware/Firmware)",
    "countermeasure_solution": "Enforce an appropriate access control policy for the register interface to protect accessible assets against malicious software tampering.",
    "weakness_title_read_only": "Register interface allows software access to sensitive data or security settings (Hardware/Firmware)",
    "weakness_id_read_only": "P1598",
    "weakness": "6288b025-dcc0-4455-b07e-cee81dc483c0",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "architecture-design",
    "created": "2021-01-18T05:18:26.377000-05:00",
    "last_updated": "2023-04-21T13:52:10.730000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2201",
    "universal_id": "4d383c28-1bba-4199-bb26-efab5e08fb23",
    "countermeasure_name": "Enforce physical access control (Hardware/Firmware)",
    "countermeasure_solution": "To provide proper physical access control, employ anti-tampering methods in the design phase to protect against attack, identify tampering attempts, and mitigate in case of unauthorized access. Make sure during the testing phase that protection mechanisms provide sufficient security for the system.",
    "weakness_title_read_only": "Improper physical access control (Hardware/Firmware)",
    "weakness_id_read_only": "P1599",
    "weakness": "6ba0b6af-4dc9-42f9-84f4-b9e3369d43bb",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "architecture-design",
    "created": "2021-01-18T05:18:26.447000-05:00",
    "last_updated": "2023-04-21T14:08:46.102000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2202",
    "universal_id": "8aa0785d-3ede-4afc-9686-e50941361d7c",
    "countermeasure_name": "Prevent hardware logic with insecure De-Synchronization between control and data channels (Hardware/Firmware)",
    "countermeasure_solution": "Ensure error handling or security checks entirely block insecure dataflows using complete data routing logic verification.",
    "weakness_title_read_only": "Hardware logic with insecure desynchronization between control and data channels (Hardware/Firmware)",
    "weakness_id_read_only": "P1600",
    "weakness": "99b4e643-7052-4f37-9b49-11501f2d876a",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "architecture-design",
    "created": "2021-01-18T05:18:26.516000-05:00",
    "last_updated": "2023-04-28T10:19:02.889000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2203",
    "universal_id": "e9fd50c7-026a-4bc0-8991-08b3dca89b19",
    "countermeasure_name": "Ensure a policy that prevents the use of obsolete encoding (Hardware/Firmware)",
    "countermeasure_solution": "Design and implement an encoding scheme that takes into account the system's design and characteristics. Avoid re-using encoding schemes from other designs, systems, or projects.",
    "weakness_title_read_only": "Policy uses obsolete encoding (Hardware/Firmware)",
    "weakness_id_read_only": "P1601",
    "weakness": "87dbba17-ff2a-4bbd-9c5d-85524ab97dc4",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "architecture-design",
    "created": "2021-01-18T05:18:26.630000-05:00",
    "last_updated": "2023-04-28T10:18:11.693000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2204",
    "universal_id": "5dffffaf-c826-4e15-9247-355d0d126386",
    "countermeasure_name": "Enforce policy privilege assignments consistently between control and data agents (Hardware/Firmware)",
    "countermeasure_solution": "If your access control policy has multiple levels, make sure that all levels remain consistent during the design and implementation of the system. Policies should be fine-grained enough to restrict an unauthorized agent at each level. If, for example, access to an agent is restricted in the control policy, it should be restricted in the write policy as well.",
    "weakness_title_read_only": "Policy privileges are not assigned consistently between control and data agents (Hardware/Firmware)",
    "weakness_id_read_only": "P1602",
    "weakness": "6e2ad9f1-d658-48f5-a3d7-9974a62582cc",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "architecture-design",
    "created": "2021-01-18T05:18:26.717000-05:00",
    "last_updated": "2023-04-28T10:17:18.825000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2205",
    "universal_id": "69ac66bb-0da8-4665-99e7-2ddc9af2e50c",
    "countermeasure_name": "Prevent a product being released in non-release configuration (Hardware/Firmware)",
    "countermeasure_solution": "During the implementation, integration, and manufacturing phases:\n\n1. Confirm that a marker exists for denoting the Manufacturing Complete stage.\n2. Ensure that the Manufacturing Complete marker gets updated at the Manufacturing Complete stage (i.e., the Manufacturing Complete fuse gets blown).\n\nReferences:\n \n- https://cwe.mitre.org/data/definitions/1269.html\n- https://www.tomshardware.com/news/intel-me-cpu-undocumented-manufacturing-mode,37883.html",
    "weakness_title_read_only": "Product released in non-release configuration (Hardware/Firmware)",
    "weakness_id_read_only": "P1603",
    "weakness": "bd3dc364-7a93-4bc5-b406-13d7c93540d3",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "requirements",
    "created": "2021-01-18T05:18:26.803000-05:00",
    "last_updated": "2023-04-28T10:16:27.336000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2206",
    "universal_id": "f9890ad3-3696-43bc-a596-c1710d477e94",
    "countermeasure_name": "Prevent the generation of incorrect security tokens (Hardware/Firmware)",
    "countermeasure_solution": "Enforce the generation of appropriate security tokens by reviewing the design for inconsistency and common vulnerabilities. Make sure each agent is assigned only one unique token. Tokens should not be reused among multiple agents, and no agent should be assigned more than one token.",
    "weakness_title_read_only": "Generation of incorrect security tokens (Hardware/Firmware)",
    "weakness_id_read_only": "P1604",
    "weakness": "b23c53c3-f571-40fa-b206-0ea1c881de0b",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "architecture-design",
    "created": "2021-01-18T05:18:26.892000-05:00",
    "last_updated": "2023-04-28T10:15:34.878000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2207",
    "universal_id": "e234ba2a-c3d9-423f-916b-ae4cfc647f89",
    "countermeasure_name": "Prevent uninitialized value on reset for registers holding security settings (Hardware/Firmware)",
    "countermeasure_solution": "Ensure registers that store security settings are set to a known value on reset. Also, perform design checks to determine any uninitialized flip-flops utilized for security-critical functions in the implementation phase.",
    "weakness_title_read_only": "Uninitialized value on reset for registers holding security settings (Hardware/Firmware)",
    "weakness_id_read_only": "P1605",
    "weakness": "47df6eea-ac9f-4739-be9c-be4841a5bad1",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "architecture-design",
    "created": "2021-01-18T05:18:26.979000-05:00",
    "last_updated": "2023-04-28T10:14:29.299000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2208",
    "universal_id": "d86722fa-5881-499e-b268-f7206047431d",
    "countermeasure_name": "Restrict sharing device unlocking credentials across multiple parties (Hardware/Firmware)",
    "countermeasure_solution": "Ensure the unlock credentials are shared with the minimum number of parties and with utmost secrecy. To limit the risk associated with compromised credentials, where possible, the credentials should be part-specific.",
    "weakness_title_read_only": "Device unlock credential sharing (Hardware/Firmware)",
    "weakness_id_read_only": "P1606",
    "weakness": "78e4ca6b-66b4-494a-bde5-9658a5b0f670",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2021-01-18T05:18:27.096000-05:00",
    "last_updated": "2023-04-28T10:12:53.805000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2209",
    "universal_id": "61f86df3-3870-4583-9006-35728b040c86",
    "countermeasure_name": "Prevent boot code tampering in the non-volatile memory (Hardware/Firmware)",
    "countermeasure_solution": "Ensure the volatile-memory-region protections or access controls are sufficient to prevent modifications from an adversary or untrusted agent.",
    "weakness_title_read_only": "Insufficient protections on the volatile memory containing boot code (Hardware/Firmware)",
    "weakness_id_read_only": "P1607",
    "weakness": "f79fdbae-a07c-487c-814c-307efe6a3fbc",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "architecture-design",
    "created": "2021-01-18T05:18:27.186000-05:00",
    "last_updated": "2023-04-28T10:11:59.206000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2210",
    "universal_id": "7c3d5633-af17-4e18-a55c-1c92f80d5fa7",
    "countermeasure_name": "Prevent signals conflict between a hardware IP and the parent system (Hardware/Firmware)",
    "countermeasure_solution": "Ensure individual hardware IP must communicate with the parent system in order for the product to function correctly and as intended. Use system-level verification to ensure that components are correctly connected and design security requirements are not violated due to interactions between various IP blocks.",
    "weakness_title_read_only": "Hardware child block incorrectly connected to parent system (Hardware/Firmware)",
    "weakness_id_read_only": "P1608",
    "weakness": "6e556d4f-76f2-4d46-8c27-e4a8dc9b5e34",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "architecture-design",
    "created": "2021-01-18T05:18:27.255000-05:00",
    "last_updated": "2023-04-28T10:05:39.491000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2211",
    "universal_id": "93d08f47-0009-4fce-85cf-a2fef89f1d0c",
    "countermeasure_name": "Include a firmware update mechanism/feature (Hardware/Firmware)",
    "countermeasure_solution": "Implement necessary functionality to allow the product's firmware to be updated. The product's inability to patch firmware leaves the system or device open to potential exploitation of the inherent weakness, as any weaknesses therein cannot be mitigated through an update.",
    "weakness_title_read_only": "Firmware cannot be updated (Hardware/Firmware)",
    "weakness_id_read_only": "P1609",
    "weakness": "b76e33d8-8311-4bff-b58c-ca9b3ed0d556",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "requirements",
    "created": "2021-01-18T05:18:27.344000-05:00",
    "last_updated": "2023-04-28T10:03:19.620000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2212",
    "universal_id": "2c1c1427-b949-4428-9434-fb13f6152e30",
    "countermeasure_name": "Use Integrated Circuit (IC) Imaging Techniques to protect against hardware reverse engineering (Hardware/Firmware)",
    "countermeasure_solution": "Ensure there is adequate protection against IC reverse engineering, safeguard device secrets by including IC camouflaging and obfuscation, tamper-proof packaging, active shielding, and physical tampering detection information erasure.",
    "weakness_title_read_only": "Missing protection against reverse engineering using IC imaging techniques (Hardware/Firmware)",
    "weakness_id_read_only": "P1610",
    "weakness": "f76207d6-568a-4ad5-96df-514fe9710a4f",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "architecture-design",
    "created": "2021-01-18T05:18:27.414000-05:00",
    "last_updated": "2023-04-28T09:58:56.100000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2213",
    "universal_id": "2013528b-596c-4bfb-959e-4a5fb68fedcb",
    "countermeasure_name": "Implement access control checks before accessing the assets (Hardware/Firmware)",
    "countermeasure_solution": "Ensure product implements hardware-based access control check, the asset should be accessible only after the check is successful. If the asset accessed before the check is completed, the security of the system may be compromised.",
    "weakness_title_read_only": "Access control check implemented after asset is accessed (Hardware/Firmware)",
    "weakness_id_read_only": "P1611",
    "weakness": "b124dc86-9dd0-4ee8-b900-5746c7344559",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "architecture-design",
    "created": "2021-01-18T05:18:27.499000-05:00",
    "last_updated": "2023-04-28T09:57:43.480000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2214",
    "universal_id": "82d4a30d-aca2-46e1-8218-43f4f9989b17",
    "countermeasure_name": "Protect unexpected behavior of system due to sequence of processor instructions (Halt and Catch Fire) (Hardware/Firmware)",
    "countermeasure_solution": "Follow the best practices to avoid Halt and Catch Fire instructions:\n\n- Ensure the instruction set architecture (ISA) and processor logic are designed carefully, and tested thoroughly, specific combinations of legal and illegal instructions may cause unexpected behavior with security implications such as allowing unprivileged programs to completely lock the CPU. for example Pentium f00f bug, MC6800 HCF, the Cyrix comma bug.\n\n- Implement a rigorous testing strategy that incorporates randomization to explore instruction sequences that are unlikely to appear in normal workloads in order to identify halt and catch fire instruction sequences.\n\n- Patch operating system to avoid running Halt and Catch Fire type sequences or to mitigate the damage caused by unexpected behaviour.",
    "weakness_title_read_only": "Sequence of processor instructions leads to unexpected behavior (halt and catch fire) (Hardware/Firmware)",
    "weakness_id_read_only": "P1612",
    "weakness": "a7ee4cb1-c74b-4947-9db8-427c6b8beadd",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "activities",
    "created": "2021-01-18T05:18:27.566000-05:00",
    "last_updated": "2023-04-28T09:56:23.852000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2215",
    "universal_id": "b6f9bdac-26f6-49b3-b997-9560001464c9",
    "countermeasure_name": "Prevent modification of immutable data (Hardware/Firmware)",
    "countermeasure_solution": "Security services such as secure boot, authentication of code and data, device attestation all require assets such as a first-stage bootloader, device identifiers, public keys, golden hash digests etc. These assets are implicitly trusted. Storing these assets in read-only memory (ROM), or one-time programmable (OTP) memory provides strong integrity guarantees and provides a root of trust for securing the rest of the system. Security is lost if assets assumed to be immutable can be modified.",
    "weakness_title_read_only": "Assumed-immutable data is stored in writable memory (Hardware/Firmware)",
    "weakness_id_read_only": "P1613",
    "weakness": "23fa3506-17b2-4c09-8b48-04681fd6e984",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "activities",
    "created": "2021-01-18T05:18:27.653000-05:00",
    "last_updated": "2023-04-28T09:55:14.758000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2216",
    "universal_id": "4f6a79fd-2ba7-45dc-9b79-d1b1c8822652",
    "countermeasure_name": "Prevent modification of measurement reporting data by an untrusted agent (Hardware/Firmware)",
    "countermeasure_solution": "Measurement data used in reporting and attestation, as it is leveraged by System-on-Chip (SoC) during secure boot or verified boot process. The measurement is usually done by calculating the one-way hash of the code binary and extending it to the previous hash, the hash is stored in registers that can later be read by the party of interest to determine tampering of the boot flow. Follow the best practices to secure the process:\n\n- Use industry standard secure One-Way hash function.\n- Store hash functions in registers that are read-only or otherwise have access controls that prevent modification.",
    "weakness_title_read_only": "Mutable attestation or measurement reporting data (Hardware/Firmware)",
    "weakness_id_read_only": "P1614",
    "weakness": "ee9c9086-640f-4a26-a9f6-e15450afeb4a",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "architecture-design",
    "created": "2021-01-18T05:18:27.740000-05:00",
    "last_updated": "2023-04-28T09:54:08.666000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2217",
    "universal_id": "d496c6fd-1e07-4bee-a3d5-2807f90db2ec",
    "countermeasure_name": "Prevent security identifiers from unauthorized access while decoding (Hardware/Firmware)",
    "countermeasure_solution": "The security identifier helps the destination agent decide on the set of allowed actions (e.g., access an asset for read and writes) during integrated circuits and hardware engines generate transactions in a System-On-Chip (SoC). A decoder which runs on the destination agent decodes the bus transactions to map security identifiers into necessary access-controls/protections. Following steps are required to protect security identifiers from unauthorized access.\n\n- Security identifier decoders must be reviewed for design consistency and common weaknesses\n- Access and programming flows must be tested in pre-silicon and post-silicon testing in order to check for this weakness",
    "weakness_title_read_only": "Incorrect decoding of security identifiers (Hardware/Firmware)",
    "weakness_id_read_only": "P1615",
    "weakness": "6e7ffb58-cea3-4bca-9f59-234f7d1dd12f",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "architecture-design",
    "created": "2021-01-18T05:18:27.809000-05:00",
    "last_updated": "2023-04-28T09:51:21.899000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2218",
    "universal_id": "3230f912-425b-4a3b-adad-803f51fad98a",
    "countermeasure_name": "Prevent same Public Key usage for different environments (Debug and Production) (Hardware/Firmware)",
    "countermeasure_solution": "Signing software provides assurance of both file integrity and source authentication.\n\n- Ensure digital signatures are produced for all application run-time binaries and any installer packages. Where feasible and appropriate to the risk level of the product, firmware needs to be signed (to support Secure Boot or Verified Boot) and packages delivered to customers as firmware update packages.\n\n- Use different keys for production and debug environments. Debug additional capability into the System-on-Chip (SoC) and the firmware. If compromised, these capabilities could be exploited by an attacker to take full control of the system. \n\nOnce the product exits the manufacturing stage and enters production, use a different public key. With the debug key being reused as the production key, the debug image will also work on the production image allowing debuging capabilities to the attacker. If a different public key is used for the production image, even if the attacker gains access to the debug firmware image, they will not be able to run it on a production machine. Thus, damage will be limited to the intellectual property leakage resulting from the debug image.",
    "weakness_title_read_only": "Public key re-use for signing both debug and production code (Hardware/Firmware)",
    "weakness_id_read_only": "P1616",
    "weakness": "ba83e70c-dbce-4c90-9806-b9ba65ebe1eb",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "activities",
    "created": "2021-01-18T05:18:27.899000-05:00",
    "last_updated": "2023-04-28T09:50:20.175000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2219",
    "universal_id": "60a47d8a-b801-4201-8dce-48d42fc918b1",
    "countermeasure_name": "Implement secure conversion of Security Identifiers (Hardware/Firmware)",
    "countermeasure_solution": "A protocol conversion is a process to seamlessly connect different protocols on the bus. The product implements a conversion mechanism to map certain bus-transaction signals to security identifiers. Make sure the conversion is correctly implemented, if not done properly untrusted agents can gain unauthorized access to the asset. Follow the best practices for securing the conversation mechanism.\n\n- Security identifier decoders must be reviewed for design inconsistency and common weaknesses\n- Access and programming flows must be tested in pre-silicon and post-silicon testing",
    "weakness_title_read_only": "Incorrect conversion of security identifiers (Hardware/Firmware)",
    "weakness_id_read_only": "P1617",
    "weakness": "e38038a7-fe4b-43a0-bb7f-2a9d32c41e45",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "architecture-design",
    "created": "2021-01-18T05:18:27.967000-05:00",
    "last_updated": "2023-04-28T09:48:55.287000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2220",
    "universal_id": "c950eb84-f789-421e-9fe5-585501fcb276",
    "countermeasure_name": "Implement secure mechanism to generate Security Identifiers (Hardware/Firmware)",
    "countermeasure_solution": "Security identifiers are generated and assigned to every agent in the System-on-Chip (SoC) that is either capable of generating an action or receiving an action from another agent. The System-on-Chip (SoC) implements a Security Identifier mechanism to differentiate what actions are allowed or disallowed when a transaction originates from an entity. Myriad of flaws can exist in the Security Identifier generation process for example improper conversion of security identifiers, incorrect generation of security identifiers, etc. Follow the best practices for secure \"Security Identifier\" generation mechanism. \n\n- Security Identifier Decoders must be reviewed for design inconsistency and common weaknesses.\n- Access and programming flows must be tested in pre-silicon and post-silicon testing.",
    "weakness_title_read_only": "Insecure security identifier mechanism (Hardware/Firmware)",
    "weakness_id_read_only": "P1618",
    "weakness": "fd5276d4-067d-45a7-b62d-1c2fa2478a61",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "architecture-design",
    "created": "2021-01-18T05:18:28.060000-05:00",
    "last_updated": "2023-04-28T09:45:03.775000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2221",
    "universal_id": "f12826cb-7d62-41ae-bb01-51cf92ca24cc",
    "countermeasure_name": "Prevent debugging messages revealing sensitive Information (Hardware/Firmware)",
    "countermeasure_solution": "Follow these guidlines for debug message outputs:\n\n- Ensure that a debug message does not reveal any sensitive information  \n- Verify that debug message discloses minimum information during the debug process for the intended response",
    "weakness_title_read_only": "Debug messages revealing unnecessary information (Hardware/Firmware)",
    "weakness_id_read_only": "P1619",
    "weakness": "ba10d7bc-672e-4d38-890b-89b83fe90602",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "requirements",
    "created": "2021-01-18T05:18:28.149000-05:00",
    "last_updated": "2023-04-28T09:44:08.902000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2222",
    "universal_id": "12bcc2b5-e920-4382-a4e9-2be2661ac36a",
    "countermeasure_name": "Prevent incorrect Chaining or Granularity of Debug Components (Hardware/Firmware)",
    "countermeasure_solution": "Logic errors during design or synthesis could misconfigure the interconnection of the debug components, which could allow unintended access permissions.Ensure that debug components are properly chained and their granularity is maintained at different authentication levels.",
    "weakness_title_read_only": "Incorrect chaining or granularity of debug components (Hardware/Firmware)",
    "weakness_id_read_only": "P1620",
    "weakness": "7bb80b77-9bbe-4338-85f8-a4b384526c7b",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "activities",
    "created": "2021-01-18T05:18:28.218000-05:00",
    "last_updated": "2023-04-27T17:23:06.277000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2223",
    "universal_id": "1c7c048e-7efe-4295-a5ac-d5f08ef2d5ae",
    "countermeasure_name": "Restrict access to confidential information on device by OSAT vendors (Hardware/Firmware)",
    "countermeasure_solution": "Follow these guidelines to restrict exposure to confidential information by Outsourced Semiconductor Assembly and Test (OSAT).\n\n- Ensure when an OSAT vendor is allowed to access test interfaces necessary for preproduction and returned parts, the vendor only pulls the minimal information necessary. Design the product in such a way that, when an unlock device request comes, it only unlocks that specific part and not all the parts for that product line.\n- Ensure outsourced Semiconductor Assembly and Testproduct's non-volatile memory (NVM) is scrubbed of all confidential information and secrets before handing it over to an OSAT.\n- Secure all communication between an OSAT facility and the chipmaker.",
    "weakness_title_read_only": "Unprotected confidential information on device is accessible by OSAT vendors (Hardware/Firmware)",
    "weakness_id_read_only": "P1621",
    "weakness": "b1b578f9-8503-498f-984c-57420ad63fa6",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "architecture-design",
    "created": "2021-01-18T05:18:28.304000-05:00",
    "last_updated": "2023-04-27T17:21:09.386000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2224",
    "universal_id": "a014ab62-10f6-4ba7-b956-a736f956d10d",
    "countermeasure_name": "Implement protections to alternate access paths and interfaces inside the SoC (Hardware/Firmware)",
    "countermeasure_solution": "Protect assets from access against all potential interfaces and alternate paths. System-on-Chip (SoC) assets have various interfaces such as UART, SMBUS, PCIe, USB, etc. If access control is implemented for SoC internal registers only over the PCIe interface, then an attacker could still modify the SoC internal registers through alternate paths by coming through interfaces such as UART, SMBUS, USB, etc. Alternatively, attackers might be able to bypass existing protections by exploiting unprotected, shadow registers that can be accessed from multiple addresses.",
    "weakness_title_read_only": "Missing protection mechanism for alternate hardware interface (Hardware/Firmware)",
    "weakness_id_read_only": "P1622",
    "weakness": "ff166591-7a33-461b-bbdc-670c3267a450",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "architecture-design",
    "created": "2021-01-18T05:18:28.418000-05:00",
    "last_updated": "2023-04-27T17:20:00.508000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2225",
    "universal_id": "53714d08-ffb6-4263-b81b-6e6827ab7d00",
    "countermeasure_name": "Data remanence within the hardware component (Hardware/Firmware)",
    "countermeasure_solution": "Follow these guidelines to protect against sensitive data exposure.\n\n- Apply blinding or masking techniques to implementations of cryptographic algorithms\n- Alter the method of erasure, add protection of media, or destroy the media to protect the data.",
    "weakness_title_read_only": "Insufficient or incomplete data removal within hardware component (Hardware/Firmware)",
    "weakness_id_read_only": "P1623",
    "weakness": "8825885f-c9cd-4a5c-87a8-0420123fc9bb",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "architecture-design",
    "created": "2021-01-18T05:18:28.489000-05:00",
    "last_updated": "2023-04-27T17:18:49.912000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2226",
    "universal_id": "f416c03f-b5d0-4c86-ba1b-1d044320b922",
    "countermeasure_name": "Transaction without a security identifier (Hardware/Firmware)",
    "countermeasure_solution": "Perform the following test to check the transaction for a security identifier:\n\n- Transaction details must be reviewed for design inconsistency and common weaknesses\n- Security identifier definition and programming flow must be tested in pre-silicon and post-silicon",
    "weakness_title_read_only": "Missing security identifier (Hardware/Firmware)",
    "weakness_id_read_only": "P1624",
    "weakness": "a31b54cc-61f4-43d1-add5-7257060d7787",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "architecture-design",
    "created": "2021-01-18T05:18:28.557000-05:00",
    "last_updated": "2023-04-27T17:17:36.993000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2227",
    "universal_id": "e24f3ed7-edd5-49a6-b525-dcf83489fbbe",
    "countermeasure_name": "Preserve the integrity of hardware configuration state (Hardware/Firmware)",
    "countermeasure_solution": "Follow the guidelines below to preserve the integrity of hardware configuration state.\n\n\n#### Inside the Intellectual Property (IP)\n\n- Incorporate integrity checking on the configuration state via a cryptographic hash. The hash can be protected inside the intellectual property such as by storing it in internal registers which never lose power. \n\n- Before powering down, the Intellectual Property (IP) should perform a hash of the configuration and saves it in these persistent registers.\n\n- Upon restore, the Intellectual Property (IP) performs a hash of the saved configuration and compares it with the saved hash. If they do not match, then the Intellectual Property IP should not trust the configuration\n\n#### Outside the Intellectual Property (IP)\n\n- Incorporate integrity checking of the configuration state via a trusted agent. \n- Before powering down, the trusted agent performs a hash of the configuration and saves the hash in persistent storage. \n- Upon restore, the Intellectual Property IP requests the trusted agent validate its current configuration. If the configuration hash is invalid, then the IP should not trust the configuration.\n- Incorporate a protected environment that prevents undetected modification of the configuration state by untrusted agents. \n- Before powering down, a trusted agent saves the Intellectual Property (IP) configuration state in this protected location that only it is privileged to. Upon restore, the trusted agent loads the saved state into the Intellectual Property (IP).",
    "weakness_title_read_only": "Improperly preserved integrity of hardware configuration state during a power save/restore operation (Hardware/Firmware)",
    "weakness_id_read_only": "P1625",
    "weakness": "01a5e65d-1a01-49b7-9d88-5c04fb4f170f",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "activities",
    "created": "2021-01-18T05:18:28.688000-05:00",
    "last_updated": "2023-04-27T17:12:59.815000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2228",
    "universal_id": "6bc475e0-aa78-4bf3-9340-0ffd990d6987",
    "countermeasure_name": "Include functionality to patch Read-only-Memory (ROM) Code (Hardware/Firmware)",
    "countermeasure_solution": "Follow the guidelines below to patch Read-only-Memory (ROM) code:\n\n- Secure patch support to allow Read-only-Memory (ROM) code to be patched at next boot. \n- Support patches that can be programmed in-field or during manufacturing through hardware fuses. This feature can be used to do limited patching of device after shipping or for next batch of silicon devices manufactured without changing the full device ROM.",
    "weakness_title_read_only": "Missing ability to patch ROM code (Hardware/Firmware)",
    "weakness_id_read_only": "P1626",
    "weakness": "0013381d-e3c7-4a00-86ec-088239ba527f",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "architecture-design",
    "created": "2021-01-18T05:18:28.759000-05:00",
    "last_updated": "2023-04-27T17:11:48.082000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2229",
    "universal_id": "feab7bcb-71e3-4a62-9809-5afc5aa5d7a1",
    "countermeasure_name": "Prevent improper translation of security attributes by Fabric Bridge (Hardware/Firmware)",
    "countermeasure_solution": "The bridge incorrectly translates security attributes from either trusted to untrusted or from untrusted to trusted when converting from one fabric protocol to another, ensure the translation must map signals in such a way that untrusted agents cannot map to trusted agents or vice-versa.",
    "weakness_title_read_only": "Improper translation of security attributes by fabric bridge (Hardware/Firmware)",
    "weakness_id_read_only": "P1627",
    "weakness": "ee339386-e0c2-4da6-b2ad-484a908a23a5",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "architecture-design",
    "created": "2021-01-18T05:18:28.833000-05:00",
    "last_updated": "2023-04-27T17:10:31.715000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2230",
    "universal_id": "9ca26d04-0267-4421-ba8d-01bb74323ba6",
    "countermeasure_name": "Protect mirrored regions in On-Chip Fabric Firewall (Hardware/Firmware)",
    "countermeasure_solution": "Ensure the fabric firewall apply same protections as original region to the mirrored regions as mirrored regions contain copies of the original data which is used to achieve fault tolerance.",
    "weakness_title_read_only": "Missing protection for mirrored regions in on-chip fabric firewall (Hardware/Firmware)",
    "weakness_id_read_only": "P1628",
    "weakness": "a9fd8301-657c-4fd1-9077-bf8a21522473",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "architecture-design",
    "created": "2021-01-18T05:18:28.903000-05:00",
    "last_updated": "2023-04-27T17:04:35.739000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2231",
    "universal_id": "8fdaa5cb-e4c3-426c-81d5-298e2b56c7d1",
    "countermeasure_name": "Protect debug logic (feature) runtime alterations and sensitive data exposure (Hardware/Firmware)",
    "countermeasure_solution": "Follow the below guidelines to protect against runtime alterations and sensitive data exposure:\n\n- Insert restrictions on when the hardware's test or debug features can be activated. For example, during normal operating modes, the hardware's privileged modes that allow access to such features cannot be activated. \n- Configuring the hardware to only enter a test or debug mode within a window of opportunity such as during boot or configuration stage. The result is disablement of such test/debug features and associated modes during normal runtime operations.",
    "weakness_title_read_only": "Hardware allows activation of test or debug logic at runtime (Hardware/Firmware)",
    "weakness_id_read_only": "P1629",
    "weakness": "137afc79-9625-480c-9a2e-70dd62bfa79d",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "architecture-design",
    "created": "2021-01-18T05:18:28.973000-05:00",
    "last_updated": "2023-04-27T17:03:10.475000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2232",
    "universal_id": "0dc06a29-d065-45d9-b979-cdfd6801f9fa",
    "countermeasure_name": "Use write protection for Parametric Data values (Hardware/Firmware)",
    "countermeasure_solution": "Access controls for sensor blocks should ensure that only trusted software is allowed to change threshold limits and sensor parametric data.",
    "weakness_title_read_only": "Missing write protection for parametric data values (Hardware/Firmware)",
    "weakness_id_read_only": "P1630",
    "weakness": "23757f88-0949-400f-a432-6d2be81aafe7",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "architecture-design",
    "created": "2021-01-18T05:18:29.044000-05:00",
    "last_updated": "2023-04-27T17:00:41.407000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2233",
    "universal_id": "24e0b532-c0d3-45da-99df-05fe431c6d09",
    "countermeasure_name": "Set proper setting of Bus Controlling Capability in Fabric end-point (Hardware/Firmware)",
    "countermeasure_solution": "For responder devices, the register bit in the fabric end-point that enables the bus controlling capability must be set to 0 by default. This bit should not be set during secure-boot flows. Also, writes to this register must be access-protected to prevent malicious modifications to obtain bus-controlling capability.",
    "weakness_title_read_only": "Improper setting of bus controlling capability in fabric end-point (Hardware/Firmware)",
    "weakness_id_read_only": "P1631",
    "weakness": "e2f30fe1-cdb3-444d-902a-10ba5f863689",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "activities",
    "created": "2021-01-18T05:18:29.129000-05:00",
    "last_updated": "2023-04-27T16:59:26.422000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2234",
    "universal_id": "163a07ae-7e03-497d-b756-d517c27ca55c",
    "countermeasure_name": "Restrict mapping of unwarranted programming overlaps of protected and unprotected ranges by Fabric-Address (Hardware/Firmware)",
    "countermeasure_solution": "Use the following guidelines to restrict the mapping of unwarranted programming overlaps of protected and unprotected ranges by the Fabric-Address.\n\n#### Architecture and Design\n\n- When architecting the address map of the chip, ensure that protected and unprotected ranges are isolated and do not overlap. \n- When designing, ensure that ranges hardcoded in Register-Transfer Level (RTL) do not overlap.\n\n#### Implementation\n\n- Ranges configured by firmware should not overlap. If overlaps are mandatory because of constraints such as a limited number of registers, then ensure that no assets are present in the overlapped portion.\n\n#### Testing\n\n- Validate mitigation actions with robust testing.",
    "weakness_title_read_only": "Fabric-address map allows programming of unwarranted overlaps of protected and unprotected ranges (Hardware/Firmware)",
    "weakness_id_read_only": "P1632",
    "weakness": "858b93b1-1009-40ed-bb45-abbd07d08752",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "architecture-design",
    "created": "2021-01-18T05:18:29.236000-05:00",
    "last_updated": "2023-04-27T16:57:57.457000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2235",
    "universal_id": "46363988-5e21-4117-b418-377c5060fef1",
    "countermeasure_name": "Put security checks in Fabric Bridge (Hardware/Firmware)",
    "countermeasure_solution": "Use the following guidelines for putting security checks in the Fabric Bridge:\n\n#### Architecture and Design\n\n- Design includes provisions for access-control checks in the bridge for both upstream and downstream transactions.\n\n#### Implementation\n\n- Implement access-control checks in the bridge for both upstream and downstream transactions.",
    "weakness_title_read_only": "Missing security checks in fabric bridge (Hardware/Firmware)",
    "weakness_id_read_only": "P1633",
    "weakness": "88c82ebe-4096-498b-8167-0e1b9b7688d2",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "architecture-design",
    "created": "2021-01-18T05:18:29.322000-05:00",
    "last_updated": "2023-04-27T16:52:22.184000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2236",
    "universal_id": "407c0007-8ee2-460a-91ca-8a7a0a5120d2",
    "countermeasure_name": "Put security controls in On-chip Fabrics or Buses (Hardware/Firmware)",
    "countermeasure_solution": "Certain on-chip fabrics and buses, especially simple and low-power buses, do not support security features. Apart from data transfer and addressing ports, some fabrics and buses do not have any interfaces to transfer privilege, immutable identity, or any other security attribute coming from the bus master. If fabric does not support security features, implement security checks in a bridge or any component that is between the master and the fabric. Alternatively, connect all fabric slaves that do not have any security assets under one such fabric and connect peripherals with security assets to a different fabric that supports security features.",
    "weakness_title_read_only": "Missing support for security features in on-chip fabrics or buses (Hardware/Firmware)",
    "weakness_id_read_only": "P1634",
    "weakness": "89544ee1-e83c-4b1d-9e0b-1ab48c02a6ae",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "architecture-design",
    "created": "2021-01-18T05:18:29.425000-05:00",
    "last_updated": "2023-04-27T16:43:45.253000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2237",
    "universal_id": "1c031169-a048-4496-9750-abcc111f2a88",
    "countermeasure_name": "Protect against Electromagnetic Fault Injection (EM-FI) (Hardware/Firmware)",
    "countermeasure_solution": "EM-FI attacks consist of producing a local, transient magnetic field near the device, inducing current in the device wires. A typical EMFI setup is made up of a pulse injection circuit that generates a high current transient in an EMI coil, producing an abrupt magnetic pulse which couples to the target producing faults in the device, which can lead to: Bypassing security mechanisms such as secure JTAG or Secure Boot Leaking device information Modifying program flow Perturbing secure hardware modules (e.g. random number generators). \n\nUse the following guidelines to detect and protect against Electromagnetic Fault Injection (EM-FI) attacks:\n \n- Look for redundancy caused by replicating critical operations and comparing the two outputs, which can help indicate whether a fault has been injected. \n- Use error detection and correction codes to detect faults injected by a malicious adversary and also automatically correct single nibble/byte errors introduced by low-multiplicity faults.\n- Use fail by default coding. When checking conditions (switch or if) check all possible cases and fail by default because the default case in a switch (or the else part of a cascaded if-else-if construct) is used for dealing with the last possible (and valid) value without checking. This is prone to fault injection because this alternative is easily selected as a result of potential data manipulation [REF-1141] (https://www.riscure.com/uploads/2018/11/201708_Riscure_Whitepaper_Side_Channel_Patterns.pdf).\n- Use random Behavior. Adding random delays before critical operations so that timing is not predictable.\n- Use Program Flow Integrity Protection. The program flow can be secured by integrating run-time checking aiming at detecting control flow inconsistencies. One such example is tagging the source code to indicate the points not to be bypassed [REF-1147](https://www.labri.fr/perso/ly/publications/cfed.pdf). \n- Use sensors to detect variations in voltage and current.\n- Shield physical barriers to protect the chips from malicious manipulation.",
    "weakness_title_read_only": "Improper protection against Electromagnetic Fault Injection (EM-FI) (Hardware/Firmware)",
    "weakness_id_read_only": "P1635",
    "weakness": "a85435fb-7fd5-453b-b7ba-bece2bdd8ffa",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "architecture-design",
    "created": "2021-01-18T05:18:29.513000-05:00",
    "last_updated": "2023-04-27T16:37:12.631000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2238",
    "universal_id": "d9dd4995-d729-4f52-9723-39c05fd15918",
    "countermeasure_name": "Protect alert signals against untrusted agents (Hardware/Firmware)",
    "countermeasure_solution": "Protect alert signals that are generated by critical events, from access by untrusted agents. Ensure that only hardware or trusted firmware modules are able to alter the alert configuration.",
    "weakness_title_read_only": "Improper protection for out of bounds signal level alerts (Hardware/Firmware)",
    "weakness_id_read_only": "P1636",
    "weakness": "fbe5a431-2347-4ba4-aa2f-c8d5802e143f",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "architecture-design",
    "created": "2021-01-18T05:18:29.616000-05:00",
    "last_updated": "2023-04-27T16:33:28.923000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2239",
    "universal_id": "5db7ccad-0d82-4912-8b99-e361417098a7",
    "countermeasure_name": "Tag traces to indicate owner and debugging privilege level (Hardware/Firmware)",
    "countermeasure_solution": "Tag traces to indicate owner and debugging privilege level (designer, OEM, or end user) needed to access that trace.",
    "weakness_title_read_only": "Improper management of sensitive trace data (Hardware/Firmware)",
    "weakness_id_read_only": "P1637",
    "weakness": "3501da3f-5aaa-4c61-8093-edf8e48efdfc",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "requirements",
    "created": "2021-01-18T05:18:29.701000-05:00",
    "last_updated": "2023-04-27T16:22:11.298000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2240",
    "universal_id": "2e6e295a-2437-4d43-887d-2b2694813173",
    "countermeasure_name": "Designate an immutable Root of Trust for storage (Hardware/Firmware)",
    "countermeasure_solution": "Perform the following steps with respect to the Root of Trust (RoT):\n\n- When architecting the system, designate the RoT for storage in a memory that does not allow further programming/writes.\n- During implementation and test, demonstrate the RoT memory location to deny further programming/writes.",
    "weakness_title_read_only": "Missing immutable root of trust in hardware (Hardware/Firmware)",
    "weakness_id_read_only": "P1638",
    "weakness": "a009f170-cf91-4ae7-a439-7067f3169981",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "architecture-design",
    "created": "2021-01-18T05:18:29.787000-05:00",
    "last_updated": "2021-10-12T11:19:55.830000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2241",
    "universal_id": "92ad30b1-6af4-42e8-8d67-524f1aa6ad39",
    "countermeasure_name": "Ensure security version data is protected from tampering (Hardware/Firmware)",
    "countermeasure_solution": "Perform the following steps to safeguard against \"downgrade (roll-back) attacks\":\n\n- When architecting the system, designate the security version for storage in registers that are either read-only or have access controls that prevent modification by an untrusted agent.\n- During implementation and test, demonstrate the security version data is read-only and validate the access controls for that version data.",
    "weakness_title_read_only": "Security version number mutable to older versions (Hardware/Firmware)",
    "weakness_id_read_only": "P1639",
    "weakness": "58dafc35-2597-4455-ae01-e4a375f92bce",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "architecture-design",
    "created": "2021-01-18T05:18:29.859000-05:00",
    "last_updated": "2023-04-27T15:55:51.445000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2242",
    "universal_id": "d8791530-e03a-42da-a607-002b18990dc9",
    "countermeasure_name": "Implement priority-based arbitration inside the Network on Chips (Hardware/Firmware)",
    "countermeasure_solution": "Implement priority-based arbitration inside the Network on Chips (NoC) and have dedicated buffers or virtual channels for routing secret data from trusted agents.",
    "weakness_title_read_only": "Improper isolation of shared resources in network on chip (Hardware/Firmware)",
    "weakness_id_read_only": "P1640",
    "weakness": "a1775416-4a18-460b-ab32-6b8b5fc97f92",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "requirements",
    "created": "2021-01-18T05:18:29.973000-05:00",
    "last_updated": "2023-04-20T12:54:30.882000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2243",
    "universal_id": "9543f2af-d336-4dab-bf43-848cbfd25b4d",
    "countermeasure_name": "Protect against fault injection attacks (Hardware/Firmware)",
    "countermeasure_solution": "Follow these steps to protect against \"fault injection\" attacks:\n\n- Design strategies for ensuring safe failure if inputs such as VCC (higher voltage) are modified out of acceptable ranges\n- Design strategies for ensuring safe behavior if instructions attempt to be skipped\n- Ensure that architected fault mitigations are strong enough in practice. For example, a low power detection mechanism which takes 50 clock cycles to trigger at lower voltages may be an insufficient security mechanism if the instruction counter has already progressed with no other CPU activity occurring.",
    "weakness_title_read_only": "Insufficient protection against instruction skipping via fault injection (Hardware/Firmware)",
    "weakness_id_read_only": "P1641",
    "weakness": "90cffd3c-140c-4a72-9520-1c3db47b6b93",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "architecture-design",
    "created": "2021-01-18T05:18:30.046000-05:00",
    "last_updated": "2023-04-26T13:31:45.410000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2244",
    "universal_id": "d9097a55-1fbb-41e4-aed6-64975506343e",
    "countermeasure_name": "Protect against error injection errors in redundant blocks (Hardware/Firmware)",
    "countermeasure_solution": "Follow these steps to protect against \"error injections\" in redundant blocks:\n\n- Ensure the design does not allow error injection in modes intended for normal run-time operation. Provide access controls on interfaces for injecting errors.\n- Disallow error injection in modes which are expected to be used for normal run-time operation. Provide access controls on interfaces for injecting errors.\n- Add an access control layer atop any unprotected interfaces for injecting errors.",
    "weakness_title_read_only": "Unauthorized error injection can degrade hardware redundancy (Hardware/Firmware)",
    "weakness_id_read_only": "P1642",
    "weakness": "3fb81945-4615-4188-b3db-a9736f027a0d",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "architecture-design",
    "created": "2021-01-18T05:18:30.117000-05:00",
    "last_updated": "2023-04-26T13:33:44.601000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2245",
    "universal_id": "ab98e3d8-0a09-4da4-8031-339e618c9296",
    "countermeasure_name": "Protect against abnormal thermal range (Hardware/Firmware)",
    "countermeasure_solution": "Perform the following steps to ensure avoiding abnormal thermal ranges:\n\n- Enforce temperature maximum and minimum limits using thermal sensors both in silicon and at the platform level.\n- Ensure the platform supports cooling solutions such as fans that can be modulated based on device-operation needs to maintain a stable temperature.",
    "weakness_title_read_only": "Improper protections against hardware overheating (Hardware/Firmware)",
    "weakness_id_read_only": "P1643",
    "weakness": "a2e2429c-ccec-4378-b9f7-9c67a91e1364",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "architecture-design",
    "created": "2021-01-18T05:18:30.205000-05:00",
    "last_updated": "2023-04-28T17:41:55.570000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2246",
    "universal_id": "7734a126-4fc5-4092-a283-e324780371af",
    "countermeasure_name": "Use correct and approved cryptographic parameters and key lengths (Bluetooth)",
    "countermeasure_solution": "To assure each device uses the strongest cryptographic parameters, follow these steps:\n\n- Enforce the maximum allowable size of the encryption key for link key generation (versions 3.0 and earlier allow devices to negotiate encryption keys as small as one byte). Based on NIST recommendations, use Secure Connections Only Mode, which needs the full 128- bit key strength for BR/EDR and LE.\n\n- Ensure that link keys are based on combination keys rather than unit keys (versions 1.2 and earlier use link keys based on unit keys). Using shared unit keys causes eavesdropping, MITM, and spoofing attacks. Also, store link keys securely to prevent attackers from any reading or modification of link keys.\n\n__Notes:__  \n\n- A Link key is a secret symmetric key used in authentication and encryption mechanisms in Bluetooth BR/EDR.\n- A Unit key is generated in a device in the installation process.\n- A Combination key is obtained from information of two devices and generated for each new pair of Bluetooth devices.\n\nFor more information about cryptographic features, see NIST's [Guide to Bluetooth Security](https://www.nist.gov/publications/guide-bluetooth-security-1).",
    "weakness_title_read_only": "Use of weak cryptographic algorithms or unsecure algorithm practices",
    "weakness_id_read_only": "P224",
    "weakness": "043ee434-f7bc-48aa-b75e-d2ec73c2a0d2",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "requirements",
    "created": "2021-03-05T10:27:58.164000-05:00",
    "last_updated": "2021-10-29T17:11:42.586000-04:00",
    "custom": "False",
    "rules": "3bbc8ed1-bd94-4ab7-9a41-b58e5a019f97 AND 51bc45f3-9bc0-4b59-af4f-73809f0df5fd AND 4fd90244-5770-4b68-88a7-9445cca26ec8",
    "rules_read_only": "A1307 AND A1313 AND A1077"
  },
  {
    "countermeasure_id": "T2247",
    "universal_id": "28d5b6a6-74d6-400b-bcf3-408ebc7fb1ef",
    "countermeasure_name": "Use the strongest Security Mode and Level in devices (Bluetooth)",
    "countermeasure_solution": "Always use the strongest Bluetooth Security Mode and Level in devices to ensure the latest authentication and encryption algorithms:\n\n## Use the latest Bluetooth version\n\n- Do not use Bluetooth versions 1.0-1.2, 2.0-2.1, or 3.0. Avoid using Bluetooth versions 4.0-4.2 and use Bluetooth versions 5.0-5.2 whenever possible, as they are more reliable. \n\n## BR/EDR and High Speed (HS) Mode and levels:\n- Ensure devices use Secure Connection Only Mode for private and sensitive data transmission. Use Security Mode 4 Level 4 that applies Secure Connections (with authenticated pairing and encryption using Elliptic Curve Diffie-Hellman (ECDHE) P-256 (FIPS-compliant)) for __Bluetooth 4.1__ devices. Use Security Mode 4 Level 4 that applies Secure Connections (with authenticated pairing and encryption using AES-128-bit strength keys) for __Bluetooth 4.1__ devices. Use Security Mode 4 Level 3 for __Bluetooth 2.1__ through 4.0 devices and Security Mode 3 for __Bluetooth 2.0__ and earlier devices. Never use Security Mode 1 for version 2.1 and later Bluetooth devices.\n\n- Use Security Mode 1 Level 4 that applies authenticated low energy Secure Connections pairing (with Elliptic Curve Diffie-Hellman, ECDH, based encryption) for Bluetooth low energy devices. Consider that Security Mode 1 Level 3 needs encryption and authenticated pairing but does not apply ECDH-based cryptography and thus gives limited eavesdropping protection because of weak encryption. Do not use other security modes/levels to allow unauthenticated pairing (otherwise, MITM protection is not provided during cryptographic key establishment).\n\n- A Security Mode 4 device should fall back to Security Mode 3 when connecting with devices that do not support Security Mode 4 (such as with Bluetooth 2.0 and earlier).\n\nFor more information about Security Modes, see NIST's [Security Features of Bluetooth BR/EDR/HS](https://www.nist.gov/publications/guide-bluetooth-security-1).\n\n## Low Energy Security Mode and levels:\n-Use Security Mode 1 Level 4 as the most secure modes/levels to apply for every low energy connection in 4.2 (because Mode 1 Level 4 requires low energy Secure Connections authenticated pairing and encryption using AES-CMAC and P-256 elliptic curve).\n-Use Security Mode 1 Level 3 for 4.0 and 4.1 low energy connections\nas it requires authenticated pairing and encryption but not as strong encryption as Level 4 (because it is not using P-256 elliptical curve). \n-Don't use Security Mode 1 Level 1 because it is not secure. \n-Use Security Mode 1 Level 4 and 3 rather than Security Mode 2 as Security Mode 2 does not provide encryption.\n\nFor more information, see NIST's [Security Features of Bluetooth Low Energy - Low Energy Security Modes and Levels](https://www.nist.gov/publications/guide-bluetooth-security-1).",
    "weakness_title_read_only": "Improper implementation of Bluetooth security features",
    "weakness_id_read_only": "P1644",
    "weakness": "afe7fa7d-3a30-4dfe-9552-4c18fc270d22",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "requirements",
    "created": "2021-03-09T11:28:11.338000-05:00",
    "last_updated": "2022-09-09T17:25:39.025000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2248",
    "universal_id": "ff615a36-a7ae-4789-8d4f-25daf3e333f9",
    "countermeasure_name": "Provide appropriate range and power controls for secure communication (Bluetooth)",
    "countermeasure_solution": "To prevent malicious access to and eavesdropping of Bluetooth transmissions, apply the following controls: \n\n- Apply frequency hopping to avoid interference and make it less feasible for an adversary to locate Bluetooth transmissions. For more information about frequency hopping, please see this [article](https://en.wikipedia.org/wiki/Frequency-hopping_spread_spectrum).\n\n- Set Bluetooth devices to the lowest possible power level to provide a secure range for authorized users.",
    "weakness_title_read_only": "Using a fixed frequency or high power levels for Bluetooth communication",
    "weakness_id_read_only": "P1645",
    "weakness": "ab0bf901-2837-43a5-87af-722733832b1b",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "requirements",
    "created": "2021-03-09T21:22:59.012000-05:00",
    "last_updated": "2021-10-29T17:12:02.569000-04:00",
    "custom": "False",
    "rules": "4fd90244-5770-4b68-88a7-9445cca26ec8;4b7f88a2-85e9-4813-b58e-922788e230d3",
    "rules_read_only": "A1077;A1137"
  },
  {
    "countermeasure_id": "T2249",
    "universal_id": "84d95da0-b94e-4c47-a73a-d3ba6691da9d",
    "countermeasure_name": "Enforce strongest association model in Secure Simple Pairing (SSP) (Bluetooth)",
    "countermeasure_solution": "Ensure that the most secure and suitable pairing method is applied. \n\n- Use Mode 4 for 2.1 and later devices and choose one of the association models, Numeric Comparison, Passkey Entry, or Out Of Band (OOB), based on the communication devices' capabilities.\n- Do not use the Just Works model for 2.1 and later devices because it does not provide authenticated link keys and MITM attack protection.\n\n__Notes:__ \n\nTwo pairing methods can be chosen based on devices' input/output capability (e.g., having a display, keyboard, etc.). These methods are Personal Identification Number (PIN) pairing and Secure Simple Pairing. Security Modes 2 and 3 use Personal Identification Number (PIN) Pairing (i.e., Legacy or Classic Pairing), while Security Mode 4 uses SSP. \nIn comparison with PIN/Legacy Pairing, Secure Simple Pairing (SSP) simplify the pairing process by introducing several association models (Numeric Comparison, Passkey Entry, Just Works, and Out Of Band (OOB)) that can be chosen based on the input/output capabilities of the device. SSP also enhances security by adding ECDH public-key cryptography to mitigate passive eavesdropping and man-in-the-middle (MITM) attacks during the pairing process.\n\nFor more information about SSP, see NIST's [Guide to Bluetooth Security](https://www.nist.gov/publications/guide-bluetooth-security-1).",
    "weakness_title_read_only": "Improper implementation of Bluetooth security features",
    "weakness_id_read_only": "P1644",
    "weakness": "afe7fa7d-3a30-4dfe-9552-4c18fc270d22",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "requirements",
    "created": "2021-03-10T11:01:32.758000-05:00",
    "last_updated": "2022-02-17T13:22:30.331000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2250",
    "universal_id": "dd599447-0cb3-4dd5-a7f5-f7163e8f307f",
    "countermeasure_name": "Implement secure authentication for connections (Bluetooth)",
    "countermeasure_solution": "Add extra layers of authentication for pairing Bluetooth devices.\n\n- Check Bluetooth pairing requests and reply packets. \n- If the requests or packets show the following elements, there is no authentication in place or the authentication is poor and you must implement additional layers of authentication, such as a PIN code, token, etc:\n    - OOB data flag = 0x00 (no authentication)\n    - I/O capacity = 0x00, 0x01 or 0x02 or 0x03 (poor authentication)",
    "weakness_title_read_only": "Poor authentication in wireless technologies",
    "weakness_id_read_only": "P1646",
    "weakness": "e106e1d9-f7dd-4073-97db-9227682ec98c",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "requirements",
    "created": "2021-03-10T20:45:58.402000-05:00",
    "last_updated": "2021-10-29T17:07:06.271000-04:00",
    "custom": "False",
    "rules": "15dd26f4-d322-434a-bcb7-8f57ccf4d02f AND 4b7f88a2-85e9-4813-b58e-922788e230d3;15dd26f4-d322-434a-bcb7-8f57ccf4d02f AND 4fd90244-5770-4b68-88a7-9445cca26ec8;15dd26f4-d322-434a-bcb7-8f57ccf4d02f AND d0d429b5-9b82-466a-af97-db8c40d0c246",
    "rules_read_only": "A1312 AND A1137;A1312 AND A1077;A1312 AND A713"
  },
  {
    "countermeasure_id": "T2251",
    "universal_id": "c7bb6a99-95ad-45e2-87a3-ed03e774bec6",
    "countermeasure_name": "Implement secure authentication for connections (WiFi)",
    "countermeasure_solution": "Upgrade any WiFi Protected Access (WPA) protocol to WPA2 or higher in your network. WPA is vulnerable to intrusion and can no longer be trusted.\n\nEnable a secure authentication method for WiFi connections:\n\n- WiFi clients should enable a secure method on their devices.\n- Access point providers should set up and enable this secure method.\n- There are several authentication methods that provide more security in comparison with open system and shared key authentication methods, such as EAP-FAST (Extensible Authentication Protocol-Flexible Authentication by Secure Tunneling) in which the end-user is authenticated through a TLS tunnel; PEAP (Protected EAP) that uses digital certificate in addition to TLS tunnel; and EAP-TLS and PEAP-MSCHAPv2. For more information, see this Wireless Access And Security [whitepaper](https://assets.tequipment.net/assets/1/26/Documents/WhitePaper-WirelessAccessAndSecurity.pdf).\n\n__Note__: Open system and shared key authentication methods are both insecure. In open system authentication, there is no shard key or credentials, therefore there is no identity verification. Shared key authentication, on the other hand, uses a simple challenge-response scheme and the WLAN key is usually shared between all devices.",
    "weakness_title_read_only": "Poor authentication in wireless technologies",
    "weakness_id_read_only": "P1646",
    "weakness": "e106e1d9-f7dd-4073-97db-9227682ec98c",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "requirements",
    "created": "2021-04-21T19:30:55.577000-04:00",
    "last_updated": "2021-10-29T17:07:17.942000-04:00",
    "custom": "False",
    "rules": "2d746169-bd63-4cec-a6b6-2055df072262",
    "rules_read_only": "A1316"
  },
  {
    "countermeasure_id": "T2253",
    "universal_id": "57ebdb49-1cf2-458a-9443-c6f988771e02",
    "countermeasure_name": "Use AES encryption in CCMP mode when WPA is applied (WiFi)",
    "countermeasure_solution": "Use Counter Mode Cipher Block Chaining Message Authentication Protocol (CCMP). CCMP applies the AES block cipher instead of the RC4 cipher used in Wired Equivalent Privacy (WEP) and Temporal Key Integrity protocol (TKIP). \n\nFor more information about WPA features, see NIST's [Guide to IEEE 802.11i](https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-97.pdf).",
    "weakness_title_read_only": "Use of weak cryptographic algorithms or unsecure algorithm practices",
    "weakness_id_read_only": "P224",
    "weakness": "043ee434-f7bc-48aa-b75e-d2ec73c2a0d2",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "requirements",
    "created": "2021-04-26T17:44:05.551000-04:00",
    "last_updated": "2021-09-30T15:14:42.249000-04:00",
    "custom": "False",
    "rules": "3bbc8ed1-bd94-4ab7-9a41-b58e5a019f97 AND fcc228a0-9a93-4eb0-9242-920471565200 AND 4fd90244-5770-4b68-88a7-9445cca26ec8",
    "rules_read_only": "A1307 AND A1318 AND A1077"
  },
  {
    "countermeasure_id": "T2254",
    "universal_id": "a0502139-09d1-4749-bcda-cdc742f47477",
    "countermeasure_name": "Use the most robust Security Operation Mode (WiFi)",
    "countermeasure_solution": "Use the authentication server rather than pre-shared keys for most situations based on the following reasons:\n\n1. Generating, deploying, and periodically replacing PSKs is impractical. \n2. There is a lack of individual user/client authentication in most PSK access points. \n\nFor more information about Modes of Operation, see NIST's [Guide to IEEE 802.11i](https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-97.pdf).\n\n__Notes:__\n\n- WPA and WPA2 both use two security operation modes: Personal and Enterprise. Personal mode uses a pre-shared key for authentication, while the Enterprise mode uses IEEE 802.1X and EAP.\n- Products can be certified for both modes or only Personal mode. Organizations that plan to have authentication servers rather than PSKs should look specifically for the Enterprise certification.",
    "weakness_title_read_only": "Weak authentication in PSK Mode",
    "weakness_id_read_only": "P1648",
    "weakness": "b6ac30b7-f418-42d4-b482-84a514ef37b7",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "requirements",
    "created": "2021-04-26T17:49:35.561000-04:00",
    "last_updated": "2021-10-29T17:17:35.708000-04:00",
    "custom": "False",
    "rules": "fcc228a0-9a93-4eb0-9242-920471565200",
    "rules_read_only": "A1318"
  },
  {
    "countermeasure_id": "T2255",
    "universal_id": "018c1411-13f8-4f72-9f41-6022bb62014e",
    "countermeasure_name": "Protect personally identifiable information in wireless devices",
    "countermeasure_solution": "Implement a feature to randomly change the MAC address of your wireless devices in order to protect against tracking and information theft. When a wireless device's Mac address changes, access points and trackers recognize it as a new device.\n\n__Note__: Some regulations consider a device's Mac addresses as personally identifiable information and its exposure can result in privacy issues in wireless networks.",
    "weakness_title_read_only": "Lack of privacy protection in wireless technologies",
    "weakness_id_read_only": "P1649",
    "weakness": "2a2e8689-85da-4141-889a-d3ddf6339bd7",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "requirements",
    "created": "2021-04-26T21:38:47.184000-04:00",
    "last_updated": "2021-10-29T17:05:15.103000-04:00",
    "custom": "False",
    "rules": "51bc45f3-9bc0-4b59-af4f-73809f0df5fd;a72ca5ce-6953-4d4e-b837-176c14bc26b3",
    "rules_read_only": "A1313;A1317"
  },
  {
    "countermeasure_id": "T2256",
    "universal_id": "acf4500c-3812-4928-9ee4-d442d2507d7d",
    "countermeasure_name": "Authenticate and log all access to registries containing sensitive or proprietary images",
    "countermeasure_solution": "Take the following steps to ensure only authorized users can access sensitive images: \n\n- Use private registries to store and share sensitive images.\n- Disable any type of anonymous access to registries (public, default users).\n- Limit read and write access to registries to trusted entities.\n- Implement strong role-based access controls to access registries or centralize registry authentication with existing accounts to take advantage of security controls already in place for those accounts.\n- Log and audit all access to registries that contain proprietary or sensitive images.",
    "weakness_title_read_only": "Insufficient authentication for container registries",
    "weakness_id_read_only": "P1650",
    "weakness": "f7606aaa-9462-4489-966f-5a982aa7740b",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "requirements",
    "created": "2021-08-27T10:23:56.042000-04:00",
    "last_updated": "2022-06-07T06:43:08.282000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2257",
    "universal_id": "fb4b97cc-3c86-4d17-b046-a1fd6d32eb95",
    "countermeasure_name": "Keep host OS components up-to-date",
    "countermeasure_solution": "Use the following guidelines to keep host OS components up-to-date and prevent host OS vulnerabilities that can result in container breakout scenarios:\n\n- Validate the versioning of components provided for base OS management and functionality.\n- Run patch management frequently, both with security patches and the latest component updates.\n- Leverage tools provided by the OS vendors or other trusted third parties in updating software components.",
    "weakness_title_read_only": "Insufficient updates of host OS components",
    "weakness_id_read_only": "P1651",
    "weakness": "15dd58a9-6682-4cf2-85b8-553af124bc5e",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2021-08-27T13:50:28.459000-04:00",
    "last_updated": "2022-06-07T07:02:08.446000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2258",
    "universal_id": "bf4a5fd2-ee4d-49d3-9394-c0b65572c433",
    "countermeasure_name": "Minimize host OS attack surface",
    "countermeasure_solution": "Follow the steps below to reduce the host OS attack surface:\n\n- Use a container-specific OS as opposed to a general purpose operating system wherever possible.\n- Harden hosts and keep them up-to-date.\n- Do not run other apps, like a web server or database, on hosts that run containers.\n- Do not run unnecessary system services on hosts that run containers.\n- Maintain a schedule to continuously scan hosts and the appropriate lower-level components for vulnerabilities and updates, such as with the kernel. \n\nFor organizations that cannot use a container-specific OS, see NIST's [Guide to General Server Security](https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-123.pdf).",
    "weakness_title_read_only": "Large host OS attack surface",
    "weakness_id_read_only": "P1652",
    "weakness": "f916f0c8-a57f-4697-8882-8da04905e4c4",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2021-08-27T14:03:07.590000-04:00",
    "last_updated": "2023-03-07T12:34:34.566000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2259",
    "universal_id": "0a135b94-dd02-40fa-b078-45e84f6c8022",
    "countermeasure_name": "Minimize access rights assigned to RBAC roles and Service Accounts (Kubernetes)",
    "countermeasure_solution": "Use the following guidance to minimize access rights assigned to RBAC roles and Service Accounts:\n\n## On Master Node\n\n- Minimize access to secrets:\n    - The Kubernetes API stores secrets, which may be service account tokens for the Kubernetes API or credentials used by workloads in the cluster. Access to these secrets should be restricted to the smallest possible group of users to reduce the risk of privilege escalation.\n\n- Minimize access to create pods:\n    - The ability to create pods in a namespace can provide a number of opportunities for privilege escalation, such as assigning privileged service accounts to these pods or mounting hostPaths with access to sensitive data (unless Pod Security Policies are implemented to restrict this access). As such, access to create new pods should be restricted to the smallest possible group of users.\n\n- Ensure that default service accounts are not actively used:\n    - The default service account should not be used to ensure that rights granted to applications can be more easily audited and reviewed. Kubernetes provides a default service account, which is used by cluster workloads where no specific service account is assigned to the pod. \n    - Where access to the Kubernetes API from a pod is required, a specific service account should be created for that pod, and rights granted to that service account.\n    - The default service account should be configured such that it does not provide a service account token and does not have any explicit rights assignments. \n\n- Ensure that Service Account Tokens are only mounted where necessary:\n     - Service accounts tokens should not be mounted in pods except where the workload running in the pod explicitly needs to communicate with the API server.\n\n- Avoid use of the system:masters group:\n    - The special group system:masters should not be used to grant permissions to any user or service account, except where strictly necessary (e.g. bootstrapping access prior to RBAC being fully available).\n\n- Limit use of the Bind, Impersonate, and Escalate permissions in the Kubernetes cluster:\n    - Cluster roles and roles with the impersonate, bind, or escalate permissions should not be granted unless strictly required. Each of these permissions allow a particular subject to escalate their privileges beyond those explicitly granted by cluster administrators\n\n## On Worker Nodes\n\n- Minimize wildcard use in Roles and ClusterRoles:\n     - Kubernetes Roles and ClusterRoles provide access to resources based on sets of objects and actions that can be taken on those objects. It is possible to set either of these to be the wildcard \"*\", which matches all items. Use of wildcards is not optimal from a security perspective as it may allow for inadvertent access to be granted when new resources are added to the Kubernetes API either as CRDs or in later versions of the product.",
    "weakness_title_read_only": "Inappropriate access settings for RBAC roles and Service Accounts (Kubernetes)",
    "weakness_id_read_only": "P1653",
    "weakness": "df8a4509-4006-4e7c-8ea7-c476bdc8ad51",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2021-09-16T15:06:51.494000-04:00",
    "last_updated": "2022-06-07T07:04:59.646000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2260",
    "universal_id": "1fb195bd-0f03-4e61-858c-fefd315fbf07",
    "countermeasure_name": "Verify access rights assigned to RBAC roles and Service Accounts are minimal (Kubernetes)",
    "countermeasure_solution": "Use the following guidance to verify that only the minimal RBAC roles and Service Accounts access rights have been assigned:\n\n## On Master Node\n\n- Review the users who have 'get', 'list', or 'watch' access to 'secrets' objects in the Kubernetes API.\n\n- Review the users who have create access to pod objects in the Kubernetes API.\n\n- For each namespace in the cluster, review the rights assigned to the default service account and ensure that it has no roles or cluster roles bound to it apart from the defaults. Additionally ensure that the 'automountServiceAccountToken: false' setting is in place for each default service account.\n\n- Review pod and service account objects in the cluster and ensure that the option below is set, unless the resource explicitly requires this access.\n\n- Review a list of all credentials that have access to the cluster and ensure that the group 'system:masters' is not used.\n\n- Review the users who have access to cluster roles or roles which provide the impersonate, bind or escalate privileges.\n\n## On Worker Nodes\n\n- Retrieve the roles defined across each namespaces in the cluster and review for wildcards.",
    "weakness_title_read_only": "Inappropriate access settings for RBAC roles and Service Accounts (Kubernetes)",
    "weakness_id_read_only": "P1653",
    "weakness": "df8a4509-4006-4e7c-8ea7-c476bdc8ad51",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2021-09-16T15:12:28.346000-04:00",
    "last_updated": "2022-06-07T07:05:36.728000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2261",
    "universal_id": "c63912cc-4b30-4600-853b-e13be6f20235",
    "countermeasure_name": "Do not use client certificate authentication for users (Kubernetes)",
    "countermeasure_solution": "Do not use client certificate authentication for users.\n\nKubernetes provides the option to use client certificates for user authentication. However, as there is no way to revoke these certificates when a user leaves an organization or loses their credential, they are not suitable for this purpose.",
    "weakness_title_read_only": "Lack of support for certificate revocation (Kubernetes)",
    "weakness_id_read_only": "P1654",
    "weakness": "dfa8d315-99d0-452c-9681-3e3e8bca8a58",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2021-09-16T15:52:12.361000-04:00",
    "last_updated": "2022-06-07T07:06:50.879000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2262",
    "universal_id": "3965c41f-ed42-4165-9e4b-0c14e1f96f7a",
    "countermeasure_name": "Verify client certificate authentication is not used for users (Kubernetes)",
    "countermeasure_solution": "Review user access to the cluster and ensure that users are not making use of Kubernetes client certificate authentication.",
    "weakness_title_read_only": "Lack of support for certificate revocation (Kubernetes)",
    "weakness_id_read_only": "P1654",
    "weakness": "dfa8d315-99d0-452c-9681-3e3e8bca8a58",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2021-09-16T16:01:53.155000-04:00",
    "last_updated": "2023-05-11T13:26:25.611000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2263",
    "universal_id": "6a7b3be8-afdc-4f88-8681-5f509e089e7f",
    "countermeasure_name": "Ensure network policies and CNI selection are appropriate (Kubernetes)",
    "countermeasure_solution": "Use the following guidance to ensure that network policies and CNI selections are appropriate:\n\n- Ensure that all Namespaces have Network Policies defined:\n    - Use network policies to isolate traffic in your cluster network.\n\n- Ensure that the CNI in use supports Network Policies:\n    - It is important to ensure that the CNI plugin supports both Ingress and Egress network policies.",
    "weakness_title_read_only": "Inappropriate Network policies and CNI configurations (Kubernetes)",
    "weakness_id_read_only": "P1528",
    "weakness": "fea8ae1c-4900-4b3a-a797-972a9918c453",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2021-09-17T14:39:06.212000-04:00",
    "last_updated": "2022-06-07T07:07:51.942000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2264",
    "universal_id": "39da769f-22d7-4d6e-8c9d-754e150b6b78",
    "countermeasure_name": "Verify network policies and CNI selection are appropriate (Kubernetes)",
    "countermeasure_solution": "Use the following guidance to verify that network policies and CNI selections are appropriate:\n\n- Run the below command and review the `NetworkPolicy` objects created in the cluster:\n\n     ``` kubectl --all-namespaces get networkpolicy ```\n\n    Ensure that each namespace defined in the cluster has at least one Network Policy.\n\n- Review the documentation of CNI plugin in use by the cluster, and confirm that it supports Ingress and Egress network policies.",
    "weakness_title_read_only": "Inappropriate Network policies and CNI configurations (Kubernetes)",
    "weakness_id_read_only": "P1528",
    "weakness": "fea8ae1c-4900-4b3a-a797-972a9918c453",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2021-09-17T14:52:19.708000-04:00",
    "last_updated": "2023-05-11T13:26:26.709000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2265",
    "universal_id": "2763c791-d041-42a8-a286-a72bf5f2950f",
    "countermeasure_name": "Ensure proper Secrets Management (Kubernetes)",
    "countermeasure_solution": "Use the following guidance to ensure proper secrets management:\n\n- Prefer using secrets as files over secrets as environment variables:\n    - Kubernetes supports mounting secrets as data volumes or as environment variables. Minimize the use of environment variable secrets.\n    - Note that Application code that expects to read secrets in the form of environment variables would need modification.\n\n- Consider external secret storage:\n    - Consider the use of an external secrets storage and management system instead of using Kubernetes Secrets directly if you have more complex secret management needs. \n    - Ensure the solution requires authentication to access secrets, has auditing of access to and use of secrets, and encrypts secrets. Some solutions also make it easier to rotate secrets.",
    "weakness_title_read_only": "Improper secrets management (Kubernetes)",
    "weakness_id_read_only": "P1655",
    "weakness": "d0c7c64a-3d48-4599-813f-d99ec29ae09e",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2021-09-17T16:02:56.063000-04:00",
    "last_updated": "2022-06-07T07:17:36.607000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2266",
    "universal_id": "c2b9e555-35c1-4734-a4b4-9bde961624d0",
    "countermeasure_name": "Verify proper Secrets Management (Kubernetes)",
    "countermeasure_solution": "Use the following guidance to ensure proper secrets management:\n\n- Run the following command to find references to objects which use environment variables defined from secrets:\n\n    `kubectl get all -o jsonpath='{range .items[?(@..secretKeyRef)]} {.kind} {.metadata.name} {\"\\n\"}{end}' -A`\n\n- Review your secrets management implementation:\n    - If using external secret storage, check if the solution requires authentication to access secrets, has auditing of access to and use of secrets, and encrypts secrets. Some solutions also make it easier to rotate secrets.",
    "weakness_title_read_only": "Improper secrets management (Kubernetes)",
    "weakness_id_read_only": "P1655",
    "weakness": "d0c7c64a-3d48-4599-813f-d99ec29ae09e",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2021-09-17T16:20:11.479000-04:00",
    "last_updated": "2022-06-07T07:17:49.463000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2267",
    "universal_id": "978356a2-71db-4f8b-b669-fa7bb01ff677",
    "countermeasure_name": "Do not use default namespaces (Kubernetes)",
    "countermeasure_solution": "Do not use default namespaces.\n\nResources in a Kubernetes cluster should be segregated by namespace, to allow for security controls to be applied at that level and to make it easier to manage resources.",
    "weakness_title_read_only": "Using default namespaces (Kubernetes)",
    "weakness_id_read_only": "P1656",
    "weakness": "c79a5e04-188a-4638-82b5-b3906b4acb7e",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2021-09-19T18:27:31.183000-04:00",
    "last_updated": "2022-06-07T07:20:36.965000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2268",
    "universal_id": "d87d7f76-a557-448f-8425-3cac044b5b70",
    "countermeasure_name": "Verify default namespace is not used (Kubernetes)",
    "countermeasure_solution": "Use the following guidance to verify that you are not using the default namespace:\n\n- Run this command to list objects in default namespace:\n\n    `kubectl get all`\n\n    The only entries returned should be system managed resources such as the ' kubernetes ' service.",
    "weakness_title_read_only": "Using default namespaces (Kubernetes)",
    "weakness_id_read_only": "P1656",
    "weakness": "c79a5e04-188a-4638-82b5-b3906b4acb7e",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2021-09-19T18:33:08.218000-04:00",
    "last_updated": "2022-06-07T07:20:45.295000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2269",
    "universal_id": "3b39cba9-0465-45d1-ac0a-9d9593b5d049",
    "countermeasure_name": "Prevent batching attacks (GraphQL)",
    "countermeasure_solution": "Limit incoming requests at the code level so the code will apply the limitation for each batching request. Batching requests or query batching is supported in GraphQL to batch multiple queries or batch requests for various object instances in a single network call. To limit requests and thereby reduce the threat of batching attacks, apply one of the following approaches:\n\n- In the code, add an object request rate limit\n- Avoid batching sensitive objects\n- Limit the number of queries running at the same time\n\n__Note__: Batching attacks lead to several issues such as Application-level DoS attacks, enumeration of objects on the server (like users, emails, user IDs, etc.), and brute-forcing sensitive values\n(like passwords, two-factor authentication codes, session tokens, etc.).\n\n## Reference\n[OWASP's GraphQL Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/GraphQL_Cheat_Sheet.html#batching-attacks)",
    "weakness_title_read_only": "Denial of Service (DoS)",
    "weakness_id_read_only": "P750",
    "weakness": "04f3a13f-c7ea-4824-bd73-086d61dd30ba",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "development",
    "created": "2021-09-21T10:10:09.055000-04:00",
    "last_updated": "2023-03-07T11:47:31.749000-05:00",
    "custom": "False",
    "rules": "cab80cea-1a20-433f-b78c-783b816b8d33 AND 3453b9ec-40ec-4609-a930-0820741240f8;2d6dc5e3-0ccb-4911-86d2-1f4aaac107b3 AND 3453b9ec-40ec-4609-a930-0820741240f8",
    "rules_read_only": "A739 AND A1325;A742 AND A1325"
  },
  {
    "countermeasure_id": "T2270",
    "universal_id": "c84e185e-886f-4285-8b69-9b1cd6e2ac0f",
    "countermeasure_name": "Test to confirm that password policies are configurable",
    "countermeasure_solution": "Use the following guidelines to test whether password policies are configurable: \n\n__ Try to change the password configuration.__\n\nThe test __fails__ if the system does not allow administrators to change the following settings: \n\n* Password complexity\n* Password age and expiry (minimum and maximum)\n* Password history\n* Optional dictionary of words that cannot be used as passwords",
    "weakness_title_read_only": "Password Requirements Are Weak",
    "weakness_id_read_only": "P408",
    "weakness": "e4138dde-9a0c-43d1-b721-ab4945beaaf6",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2021-09-21T12:08:29.247000-04:00",
    "last_updated": "2022-06-07T10:09:54.422000-04:00",
    "custom": "False",
    "rules": "583f20c1-76a3-48ee-924d-a45029a29531",
    "rules_read_only": "A19"
  },
  {
    "countermeasure_id": "T2271",
    "universal_id": "3aa038f4-1e24-42e8-a737-69c0ac7764fb",
    "countermeasure_name": "Test to confirm that unauthorized access to sensitive data through debug or test interfaces is properly restricted (Hardware/Firmware)",
    "countermeasure_solution": "__ Try to access sensitive data through the debug and test interfaces.__ This test __fails__ if the authorization mechanism can be bypassed.",
    "weakness_title_read_only": "Improper access to sensitive information using debug and test interfaces (Hardware/Firmware)",
    "weakness_id_read_only": "P1583",
    "weakness": "7c801e3b-ccf8-4005-80aa-5dfe581f50e7",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2021-09-21T12:49:08.584000-04:00",
    "last_updated": "2023-05-11T12:49:36.548000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2272",
    "universal_id": "40f3d223-c3bf-4f4c-a4a8-d4a6735e3b58",
    "countermeasure_name": "Test immutability of Root of Trust for storage (Hardware/Firmware)",
    "countermeasure_solution": "Apply automated testing to test that RoT components are immutable. The result shows whether bypassing secure boot or executing untrusted or adversarial boot code is possible.",
    "weakness_title_read_only": "Missing immutable root of trust in hardware (Hardware/Firmware)",
    "weakness_id_read_only": "P1638",
    "weakness": "a009f170-cf91-4ae7-a439-7067f3169981",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2021-09-21T12:56:43.672000-04:00",
    "last_updated": "2023-05-11T12:49:37.368000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2273",
    "universal_id": "18e956bb-9d63-43fe-b668-7869f4a92819",
    "countermeasure_name": "Verify that unified and manageable interfaces are available for security settings and configuration parameters",
    "countermeasure_solution": "Follow these guidelines to confirm that security settings and configuration parameters have unified and manageable interfaces:\n\n- Verify that secure configurations and standard baselines are implemented based on the system requirements.\n\n- Verify that authorized administrators can approve the integrity of security-relevant configurations via properly implemented functionalities.",
    "weakness_title_read_only": "Lack of system transparency and control over configuration parameters",
    "weakness_id_read_only": "P756",
    "weakness": "f99dd60e-53d5-4591-ae7b-05560f434fd9",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2021-09-21T14:38:03.725000-04:00",
    "last_updated": "2023-03-07T12:35:16.852000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2274",
    "universal_id": "25bc2ab6-9f44-4c86-b8b6-b7504725c941",
    "countermeasure_name": "Test to confirm that the principle of least privilege is strongly implemented",
    "countermeasure_solution": "Follow these guidelines to confirm that the principle of least privilege is implemented appropriately:\n\n- Test to confirm that all privileges are restricted as much as possible.\n- Test to confirm that all privileges are granted as late as possible.\n- Test to confirm that all privileges are revoked as soon as possible.",
    "weakness_title_read_only": "Running With Unnecessary Privileges",
    "weakness_id_read_only": "P150",
    "weakness": "07093262-3118-48ab-911f-86160f3ae8e2",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2021-09-21T14:43:15.628000-04:00",
    "last_updated": "2021-10-06T17:34:45.838000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2275",
    "universal_id": "72949dd1-5a6b-422e-85b2-3a1500498743",
    "countermeasure_name": "Test to confirm that the most robust Security Operation Mode is applied (WiFi)",
    "countermeasure_solution": "Test to confirm that the authentication server is used for operation mode rather than pre-shared keys for situations where Enterprise certification is available.",
    "weakness_title_read_only": "Weak authentication in PSK Mode",
    "weakness_id_read_only": "P1648",
    "weakness": "b6ac30b7-f418-42d4-b482-84a514ef37b7",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2021-09-21T14:53:13.133000-04:00",
    "last_updated": "2021-10-29T17:19:30.526000-04:00",
    "custom": "False",
    "rules": "fcc228a0-9a93-4eb0-9242-920471565200",
    "rules_read_only": "A1318"
  },
  {
    "countermeasure_id": "T2276",
    "universal_id": "bf941229-490c-4290-8925-a38344b0405d",
    "countermeasure_name": "Test to confirm that authorization and authentication controls are in place for access to resources",
    "countermeasure_solution": "Follow these guidelines to ensure that the system properly enforces user authentication/authorization: \n\n- The system is able to identify a user that can be a human, software process, or device.\n    - This test __fails__ if the system cannot identify any type of user mentioned above.\n\n- The system is able to authenticate a user and assign roles to them.\n    - This test __fails__ if the system cannot authenticate users or assign a role to them\n\n- Per any request made to access a resource, the system should check a user's permission before processing the request.\n    - This test __fails__ if the system processes the request without checking a user's permission.\n\n_ All interfaces or pages that require authentication should have logout functionality.\n    - This test __fails__ if an interface or page with authentication requirements does not have logout functionality.\n\n- Test to confirm the use of an access control mechanism for the system, such as Role-Based Access Control (RBAC).\n\n- Test to confirm that publicly accessible content containing nonpublic information requires authentication and/or authorization.\n    - This test __fails__ if nonpublic content is publicly accessible without authentication/authorization.",
    "weakness_title_read_only": "Improper Access Control (Authorization)",
    "weakness_id_read_only": "P182",
    "weakness": "e488cdc5-3c91-4d2b-bcec-5c651b000d8b",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2021-09-21T17:25:27.777000-04:00",
    "last_updated": "2023-03-07T10:55:40.580000-05:00",
    "custom": "False",
    "rules": "2ef3b940-05af-4cb9-bfc6-ed2fee4c8d42 AND c942552c-0d31-41c5-bba7-795ba0e8d88d;2ef3b940-05af-4cb9-bfc6-ed2fee4c8d42 AND 2d6dc5e3-0ccb-4911-86d2-1f4aaac107b3;89a5e903-a2cd-4234-b0ea-714e3da7fee9 AND c942552c-0d31-41c5-bba7-795ba0e8d88d;616b6ea4-5436-4bad-83f6-bc83781aa8f2 AND 479085b0-c021-41a9-8b6c-1233b8e05e39",
    "rules_read_only": "A728 AND A736;A728 AND A742;A1082 AND A736;A23 AND A734"
  },
  {
    "countermeasure_id": "T2277",
    "universal_id": "18448a4f-13bb-4968-86bd-3f0959b08bc2",
    "countermeasure_name": "Test to confirm the use of an account and identity management system",
    "countermeasure_solution": "Test to confirm that the account management system is capable of organizing user and service accounts (service accounts are used for software processes and devices). This test __fails__ if the answer to any of following questions is no:\n\n- Can the system add, remove, disable, modify, and activate accounts in accordance with the organization's requirements and procedures?\n- Can the system identify and select the types of accounts in use when there is an organizational need?\n- Does the system assign account managers for each account?\n- Does the system control and manage authenticators that can be any combination of passwords, tokens, and cryptographic keys?\n- Can the system create conditions for accounts, assign roles to them, and create groups of accounts? \n- Can the system give permissions to accounts, roles, or groups of accounts? \n- Can the system verify account creation requests based on organizational roles?\n- Does the system keep track of account usage and notify account managers within a proper period of time when:\n    - Accounts are no longer required.\n    - Users are terminated or transferred.\n    - Knowledge of individual information system usage or individual account changes is needed.\n- Does the system support information access authorization based upon:\n    - Valid access authorization.\n    - Intended system usage.\n    - Attributes as required by the organization, associated missions or other business functions.\n- Can the system analyze accounts for compliance with account management requirements that adhere to an organization-defined policy? \n- Can the system create a process for reissuing shared/group account credentials (if deployed) when accounts are removed from the group?\n- Are default authenticators or passwords modified after the first installation of the system?\n- Are default accounts that are only used for installation removed after the installation of the system?",
    "weakness_title_read_only": "Improper Access Control (Authorization)",
    "weakness_id_read_only": "P182",
    "weakness": "e488cdc5-3c91-4d2b-bcec-5c651b000d8b",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2021-09-21T17:36:08.694000-04:00",
    "last_updated": "2021-10-06T17:53:43.285000-04:00",
    "custom": "False",
    "rules": "2058e370-15ea-438f-9dfe-33bbba20751d;2ef3b940-05af-4cb9-bfc6-ed2fee4c8d42;89a5e903-a2cd-4234-b0ea-714e3da7fee9;be965488-96da-4440-9541-f0f926250d70",
    "rules_read_only": "A45;A728;A1082;A1075"
  },
  {
    "countermeasure_id": "T2278",
    "universal_id": "1b7227fe-4bc6-41d6-8191-3cc74d9ec0dd",
    "countermeasure_name": "Test to confirm that different rules for access to the system are enforced based on the origin, type, and medium of the request",
    "countermeasure_solution": "Follow these guidelines to verify that different access control rules are enforced:\n\n- Analyze the access control policies in place and find a scenario for which there is no access rule. Craft a request based on the scenario and send it to the destination. This test __fails__ if the request is accepted by the destination.\n\n- Identify channels from which access to a system's zone is allowed. Make sure all zones are accessible only through channels with enabled access. This test __fails__ if a channel that is not allowed to communicate to a zone is able to do so.",
    "weakness_title_read_only": "Improper Access Control (Authorization)",
    "weakness_id_read_only": "P182",
    "weakness": "e488cdc5-3c91-4d2b-bcec-5c651b000d8b",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2021-09-21T17:47:58.379000-04:00",
    "last_updated": "2022-03-18T11:51:42.776000-04:00",
    "custom": "False",
    "rules": "be965488-96da-4440-9541-f0f926250d70;354f0787-0d6e-4b74-881b-956ae947f511",
    "rules_read_only": "A1075;A1065"
  },
  {
    "countermeasure_id": "T2279",
    "universal_id": "7a9bd8f6-2c4b-4852-a5ee-3de0da9514b5",
    "countermeasure_name": "Verify that the application adopts a zoning model",
    "countermeasure_solution": "Verify that the application is divided into zones and conduits in the design of the application, data storage, and services.",
    "weakness_title_read_only": "Insufficient Control over Data Flow",
    "weakness_id_read_only": "P753",
    "weakness": "1f0959bb-0e33-401b-a7da-6b831553a405",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2021-09-21T17:55:04.331000-04:00",
    "last_updated": "2022-03-18T11:55:48.238000-04:00",
    "custom": "False",
    "rules": "a5ca3310-459c-488a-8c4f-65d8f794a4e4;be965488-96da-4440-9541-f0f926250d70 AND 4fd90244-5770-4b68-88a7-9445cca26ec8",
    "rules_read_only": "A1089;A1075 AND A1077"
  },
  {
    "countermeasure_id": "T2280",
    "universal_id": "30ff2193-9f14-4d2e-b431-47fd7c799104",
    "countermeasure_name": "Verify that a priority scheme for application services and operations is designed",
    "countermeasure_solution": "Verify that the system's processes are categorized into the following categories where each category has its own priority:\n\n- Emergency and safety\n- Monitoring (such as virus scanning)\n- Main system functions (especially control systems)\n- Supervisory and administrative operations\n\nAlso, verify the application design wherein the application is able to prioritize some processes when resources become scarce. That is, the application should disable low-priority processes for the sake of running high-priority processes.",
    "weakness_title_read_only": "Denial of Service (DoS)",
    "weakness_id_read_only": "P750",
    "weakness": "04f3a13f-c7ea-4824-bd73-086d61dd30ba",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2021-09-21T17:58:47.398000-04:00",
    "last_updated": "2021-10-06T18:12:54.538000-04:00",
    "custom": "False",
    "rules": "be965488-96da-4440-9541-f0f926250d70;89a5e903-a2cd-4234-b0ea-714e3da7fee9",
    "rules_read_only": "A1075;A1082"
  },
  {
    "countermeasure_id": "T2281",
    "universal_id": "19db946c-fa4a-49a7-a425-32e9e4bf03d7",
    "countermeasure_name": "Secure access control (GraphQL)",
    "countermeasure_solution": "Follow these guidelines to secure access control in GraphQL:\n\n- Use an access control mechanism such as Role-Based Access Control (RBAC) to verify whether the resource requester is authorized to access or edit that resource.\n- Perform authorization checks on nodes and edges.\n- Delegate authorization logic to the business logic layer, so that enforcing permissions happens within the business logic layer instead of the resolver.\n- Disable Introspection and GraphiQL in the production environment.\n- Make use of Interfaces and Unions to create your data types. These are useful for returning objects regarding the user's permissions. \n- Use resolver functions (both for queries and mutations) to enforce an access control policy. A query resolver ensures that the caller has proper access to get the data they request. A mutation resolver ensures that the user trying to edit some fields is authorized to do so.\n\n## References\n- [OWASP GraphQL Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/GraphQL_Cheat_Sheet.html#access-control)\n[GraphQL Authorization](https://graphql.org/learn/authorization/)",
    "weakness_title_read_only": "Improper Access Control (Authorization)",
    "weakness_id_read_only": "P182",
    "weakness": "e488cdc5-3c91-4d2b-bcec-5c651b000d8b",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "development",
    "created": "2021-09-21T19:12:40.694000-04:00",
    "last_updated": "2023-03-13T10:27:39.979000-04:00",
    "custom": "False",
    "rules": "cab80cea-1a20-433f-b78c-783b816b8d33 AND 3453b9ec-40ec-4609-a930-0820741240f8;2d6dc5e3-0ccb-4911-86d2-1f4aaac107b3 AND 3453b9ec-40ec-4609-a930-0820741240f8",
    "rules_read_only": "A739 AND A1325;A742 AND A1325"
  },
  {
    "countermeasure_id": "T2282",
    "universal_id": "a125ceb0-29fb-4f1c-9c4e-3caf330b7f0b",
    "countermeasure_name": "Test to confirm that unauthenticated parts of the application are accessible",
    "countermeasure_solution": "__ Try to access unauthenticated parts of the application.__ This test __fails__ if unauthenticated parts of the application or any pages and services that do not need authentication are not accessible.",
    "weakness_title_read_only": "Denial of Service (DoS)",
    "weakness_id_read_only": "P750",
    "weakness": "04f3a13f-c7ea-4824-bd73-086d61dd30ba",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2021-09-22T17:22:28.210000-04:00",
    "last_updated": "2021-10-06T18:14:19.365000-04:00",
    "custom": "False",
    "rules": "2058e370-15ea-438f-9dfe-33bbba20751d AND 0b07fc15-1e13-4c03-b097-c7e222fc019a AND c942552c-0d31-41c5-bba7-795ba0e8d88d",
    "rules_read_only": "A45 AND A718 AND A736"
  },
  {
    "countermeasure_id": "T2283",
    "universal_id": "b4825412-f913-4aff-a3fe-f2e81043dd3f",
    "countermeasure_name": "Configure GraphQL correctly",
    "countermeasure_solution": "GraphQL's default configuration is often insecure for the production environment. Follow the guidelines below to secure a GraphQL application:\n\n- Disable GraphiQL and Introspection\n- Make sure the `NODE_ENV` environment variable has a value. For production use, set `NODE_ENV` to **production**, and for development, set the value to **test**. If setting `NODE_ENV` is not possible, pass `debug:false` to the Apollo server constructor.\n- In some implementations of GraphQL, even though Introspection and GraphiQL are disabled, an attacker is able to guess the field names based on the hint that GraphQL's response gives them. Use [ShapeShifter](https://github.com/szski/shapeshifter) which is a tool designed to help with disabling this feature. For more information on secure error handling, see [T159](/library/tasks/T159)\n- To remove sensitive information from error messages before they are sent to a user or Apollo Studio or get logged with stack messages, see [this link](https://www.apollographql.com/docs/apollo-server/data/errors/#masking-and-logging-errors)\n\n## Reference\n[OWASP's GraphQL Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/GraphQL_Cheat_Sheet.html#secure-configurations)",
    "weakness_title_read_only": "Improper Access Control (Authorization)",
    "weakness_id_read_only": "P182",
    "weakness": "e488cdc5-3c91-4d2b-bcec-5c651b000d8b",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "development",
    "created": "2021-09-28T09:16:43.832000-04:00",
    "last_updated": "2022-06-07T10:12:42.395000-04:00",
    "custom": "False",
    "rules": "cab80cea-1a20-433f-b78c-783b816b8d33 AND 3453b9ec-40ec-4609-a930-0820741240f8;2d6dc5e3-0ccb-4911-86d2-1f4aaac107b3 AND 3453b9ec-40ec-4609-a930-0820741240f8",
    "rules_read_only": "A739 AND A1325;A742 AND A1325"
  },
  {
    "countermeasure_id": "T2284",
    "universal_id": "ec3d7513-f993-495c-a964-f84bce3c535d",
    "countermeasure_name": "Prevent DoS attacks (GraphQL)",
    "countermeasure_solution": "Use the following guideline to prevent DoS attacks in GraphQL:\n\n- Limit incoming queries by adding depth and amount limitations. Each query has depth by default, and each requested object in a query can have a defined amount. As both can be unlimited and can potentially enable a DoS attack, setting some limits on depth and amount through a custom implementation is strongly recommended. A reasonable depth limit might be 4-7 levels of nested fields, depending on the complexity of your data and the resources available to your server.\n- Consider setting a maximum incoming request rate per IP or user (or both).\n- Limit the amount of data that can be returned in a single response by adding pagination. In GraphQL, some fields return a list of values, so developers can use different pagination models to apply different capabilities for limiting the response.\n- Enforce a maximum number of queries based on a query cost analysis.\n- Apply batching and caching techniques on the server side. This technique allows multiple requests for data from a backend, gathered over a short period of time, to be sent in a single request to a database or microservice by applying a tool such as Facebook's DataLoader.\n\n## Reference\n[OWASP's GraphQL Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/GraphQL_Cheat_Sheet.html#dos-prevention)",
    "weakness_title_read_only": "Denial of Service (DoS)",
    "weakness_id_read_only": "P750",
    "weakness": "04f3a13f-c7ea-4824-bd73-086d61dd30ba",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2021-09-28T16:42:20.307000-04:00",
    "last_updated": "2023-03-16T11:22:13.414000-04:00",
    "custom": "False",
    "rules": "cab80cea-1a20-433f-b78c-783b816b8d33 AND 3453b9ec-40ec-4609-a930-0820741240f8;2d6dc5e3-0ccb-4911-86d2-1f4aaac107b3 AND 3453b9ec-40ec-4609-a930-0820741240f8",
    "rules_read_only": "A739 AND A1325;A742 AND A1325"
  },
  {
    "countermeasure_id": "T2285",
    "universal_id": "dbf24f4c-dc80-48c9-924e-159380f12378",
    "countermeasure_name": "Set up and maintain cloud users and roles (Cloud)",
    "countermeasure_solution": "Follow these guidelines to apply security best practices for your cloud identity management: \n\n- Ensure that your accounts maintain valid (current) contact information such as email and phone number for more than one person within your organization.\n- Create security questions or enable other access restoration mechanisms for your cloud accounts.\n- Remove users who are inactive or should no longer be included in any group.\n- Remove groups/roles that are unused.",
    "weakness_title_read_only": "Improper identity management (Cloud)",
    "weakness_id_read_only": "P1658",
    "weakness": "9e362ed9-6ebd-42bb-810b-10b39a17f2f9",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "deployment",
    "created": "2021-10-29T13:39:21.076000-04:00",
    "last_updated": "2022-02-10T14:04:38.504000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2286",
    "universal_id": "01d159ad-ed6e-4956-a3a4-86ef74961389",
    "countermeasure_name": "Configure a secure user authentication (Cloud) (1/2)",
    "countermeasure_solution": "Follow these guidelines to secure the authentication process: \n\n- Enforce multi-factor authentication for privileged users.\n- Do not use privileged accounts/access keys for day-to-day work.\n- Enforce a strong password policy for users.\n- Set the password expiration days to a limited time (e.g. 90 days) and prevent password reuse.\n- Rotate or change all user security credentials (e.g. user access key) regularly or even immediately if they have been exposed.\n- Remove security credentials (e.g. user access key) that are no longer needed.\n- Ensure that only one active access key is available for any single user.\n- Use temporary access keys whenever possible.",
    "weakness_title_read_only": "Improper user authentication (Cloud)",
    "weakness_id_read_only": "P1659",
    "weakness": "5aa62730-c631-48d7-b732-9d56c41346bd",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "deployment",
    "created": "2021-10-29T13:42:21.424000-04:00",
    "last_updated": "2022-06-06T16:17:08.824000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2287",
    "universal_id": "b8b4a198-366d-4a14-804a-085391f6ded3",
    "countermeasure_name": "Configure a secure user authorization (Cloud) (1/2)",
    "countermeasure_solution": "Follow these guidelines to create secure access policies:\n\n- Restrict access to identity and access management services to a limited group of trusted users.\n- Follow the principles of least-privileged access when creating access policies and only assign a minimal set of permissions to any user or group.\n- If possible, attach access policies only to groups or roles instead of individual users. If an individual user has a user-specific policy, ensure you understand why that user needs the policy.",
    "weakness_title_read_only": "Permissive access policies or improper access control (Cloud)",
    "weakness_id_read_only": "P1660",
    "weakness": "d3ab7149-1792-4220-a1aa-a27bb5dbab68",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "deployment",
    "created": "2021-10-29T13:46:03.381000-04:00",
    "last_updated": "2022-06-03T14:13:29.019000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2288",
    "universal_id": "f2d53fb3-2784-495f-aa6a-379cb09a03e5",
    "countermeasure_name": "Design a secure application architecture for the cloud environment (Cloud) (1/2)",
    "countermeasure_solution": "Follow these guidelines to design your application architecture:\n\n- Separate your application into distinct layers (e.g. Web, Application, and Data layers)\n- If possible, use autoscaling services from your cloud provider to automatically scale up/down your environment.\n- Use load balancing services from your cloud provider to separate the incoming traffic between your servers.\n- Use availability regions and zones from your cloud provider to create any necessary redundancy in your application.\n- If needed, use content distribution networks and services from your cloud provider to protect your application against DDoS attacks.",
    "weakness_title_read_only": "Design weakness in application security architecture (Cloud)",
    "weakness_id_read_only": "P1661",
    "weakness": "3a1cb75a-468d-4aed-8a5f-0639432f235a",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "architecture-design",
    "created": "2021-10-29T13:47:47.048000-04:00",
    "last_updated": "2023-03-13T12:37:55.646000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2289",
    "universal_id": "50dedade-08bb-4f1e-b6ea-79bfbb12181e",
    "countermeasure_name": "Secure network access control (Cloud) (1/4)",
    "countermeasure_solution": "Follow the guidelines below to secure network access control in your cloud environment:\n\n- Use the default VPC only for testing and development purposes and avoid using it for the production environment.\n- Configure routing tables and network access control lists to control inbound/outbound traffic into or out of subnets based on the least privilege principle for necessary services.\n- Configure security/firewall rules for each server/instance to limit the inbound/outbound traffic to only required services and ports.\n- Create secure gateways for access to the public Internet and assign public IPs to only required instances/servers.",
    "weakness_title_read_only": "Improper network access control (Cloud)",
    "weakness_id_read_only": "P1662",
    "weakness": "257ad3e6-8ca7-4218-8a68-0d2079466105",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "deployment",
    "created": "2021-10-29T13:50:05.334000-04:00",
    "last_updated": "2022-06-03T14:13:55.784000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2290",
    "universal_id": "3e77f1d7-960a-43ef-b94e-8ec0ec712fe0",
    "countermeasure_name": "Secure data in transit (Cloud) (1/2)",
    "countermeasure_solution": "To prevent unauthorized access to data in transit, make sure to implement adequate security measures:\n\n- Enforce the use of secure protocols that utilize encrypted network communications like TLS.\n- Ensure you use a secure version of each protocol.\n- Securely store secret keys and certificates used for secure communications.\n- Rotate secret keys and certificates used for secure communications regularly and avoid using expired TLS certificates.",
    "weakness_title_read_only": "Improper protection of data in transit (Cloud)",
    "weakness_id_read_only": "P1663",
    "weakness": "c22e9f08-e27b-40c1-8bca-d4153e1d7c27",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "deployment",
    "created": "2021-10-29T13:53:18.888000-04:00",
    "last_updated": "2022-06-03T14:13:57.900000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2291",
    "universal_id": "745eb593-4493-4b48-92cf-d9d0885c8b28",
    "countermeasure_name": "Secure hosts and operating systems (Cloud)",
    "countermeasure_solution": "Follow these guidelines to ensure the security of hosts and their operating systems in your cloud environment:\n\n- Restrict access to operating system images.\n- Use minimal operating system images to reduce the attack surface on your instances.\n- Employ built-in OS security features to create a more robust access control mechanism to resources.\n- Use the automated patch management service from your cloud provider to automate the patching of instances with security updates.\n- Ensure all your instances are created from approved images.\n- Restrict the permissions assigned to each instance/server.",
    "weakness_title_read_only": "Weak host/OS security (Cloud)",
    "weakness_id_read_only": "P1664",
    "weakness": "b94acad0-b27c-46a3-9013-729b4ddc9221",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "deployment",
    "created": "2021-10-29T13:56:05.295000-04:00",
    "last_updated": "2021-12-23T14:45:56.285000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2292",
    "universal_id": "e9e29f4c-fdef-4905-947a-a74fffccdf45",
    "countermeasure_name": "Protect data at rest (Cloud) (1/3)",
    "countermeasure_solution": "Follow the guidelines below to secure and protect data at rest:\n\n- Enable encryption for sensitive volumes attached to your instances/servers.\n- Enable encryption for all your database instances managed by your cloud provider.\n- Enable encryption for other storage services (e.g. object stores) provided by your cloud provider.\n- When possible, enable versioning for the storage services provided by your cloud provider.\n- Design a lifecycle policy for your storage services and configure data retention based on your specific needs.\n- Restrict access to your storage services.",
    "weakness_title_read_only": "Improper protection of data at rest (Cloud)",
    "weakness_id_read_only": "P1665",
    "weakness": "03ea5dd6-30f3-40e2-a261-f7b13d26d96b",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "deployment",
    "created": "2021-10-29T13:57:52.447000-04:00",
    "last_updated": "2022-06-03T14:14:07.037000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2293",
    "universal_id": "69d3d7a9-e916-40a8-aa85-207ffc170091",
    "countermeasure_name": "Enable logging and protect log files in your cloud environment (Cloud) (1/4)",
    "countermeasure_solution": "Follow the guidelines below to enable and protect logging information:\n\n- Use logging services from your cloud provider.\n- When possible, enable logging for changes to the configuration of your cloud resources.\n- Enable logging for different cloud services you use.\n- Restrict access to logs.\n- When possible, encrypt logs.\n- When possible, version and backup logs.\n- Include sufficient information in the log files.",
    "weakness_title_read_only": "Lack of activity tracking and secure logging (Cloud)",
    "weakness_id_read_only": "P1666",
    "weakness": "f056c394-85fc-45c8-b301-4c4975aafdf4",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2021-10-29T13:59:33.637000-04:00",
    "last_updated": "2022-06-03T14:14:42.502000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2294",
    "universal_id": "2cfed2e3-8fe9-4b3d-ac98-319284a6ce72",
    "countermeasure_name": "Enable logs and configuration monitoring in your cloud environment (Cloud) (1/4)",
    "countermeasure_solution": "Follow the guidelines below for effective log and configuration monitoring:\n\n- Use log monitoring services from your cloud provider.\n- When possible, enable configuration monitoring for your cloud resources.\n- Create log metrics and alarms to be notified of anomalies.\n- Install and use monitoring agents inside your cloud instances to get more comprehensive performance data about your applications and services.",
    "weakness_title_read_only": "Lack of monitoring (Cloud)",
    "weakness_id_read_only": "P1667",
    "weakness": "692ff87f-9bb7-4995-b15e-a24d351df672",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2021-10-29T14:01:27.752000-04:00",
    "last_updated": "2022-06-03T14:14:57.132000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2295",
    "universal_id": "3ffcede3-4b72-4dc5-8c8b-ef3b0b45cbb1",
    "countermeasure_name": "Secure cloud key management system (Cloud)",
    "countermeasure_solution": "Follow the guidelines below to secure your key management processes:\n\n- Use key management services from your cloud provider.\n- Restrict access to your key management system.\n- Ensure your key management system is resilient and highly available.\n- Ensure your key management system itself is encrypted and secure.\n- Rotate keys in your key management system regularly.",
    "weakness_title_read_only": "Insecure key management (Cloud)",
    "weakness_id_read_only": "P1668",
    "weakness": "f342b1e8-3324-4b71-aaaa-b69dc9899bce",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "deployment",
    "created": "2021-10-29T14:03:22.446000-04:00",
    "last_updated": "2022-02-10T14:05:10.792000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2296",
    "universal_id": "2650d37e-2503-443e-94b4-7978a17fe4d2",
    "countermeasure_name": "Securely install and configure all software components",
    "countermeasure_solution": "Follow these guidelines to install and configure all software components securely:\n\n1. Provide security guidance to all stakeholders involved in software installation and configuration. Train and direct all stakeholders through the deployment and configuration of the software, especially for new software. Ensure that your guidance and training include all [key components for pre-installation training](/library/glossary/G87/).\n2. Document and consistently follow [software installation and configuration planning best practices](/library/glossary/G89/). \n3. Ensure that development and operations are aligned on the project install and configuration timelines. Operations must be informed of infrastructure changes in advance, as well as how to best monitor the application and early warning signs of weaknesses to be alerted to.\n4. Automate software deployment whenever possible. Utilize a build server to automate the process or a script that copies files across the network - avoid manual installations and make them repeatable to eliminate the possibility of skipping manual steps.\n5. Minimize the amount of change and introduce small changes in each software update if possible. If a weakness is identified , it is easier to roll back those changes or to know what the source of the weakness may be. Each release takes an effort in planning and testing - establish the right balance of frequency and size of releases that is optimal for the organization to handle.\n6. Create a test plan for the application login page, key pages within the application, APIs, etc. Execute on the test plan and document results for future reference.\n7. Establish key performance indicators (KPIs) or metrics to know if the application is running as expected. [Performance and capacity metrics](/library/glossary/G88/) will vary between applications. Monitor metrics and KPIs at all times.\n8. Execute [post-implementation checks](/library/glossary/G90/) after deployment.",
    "weakness_title_read_only": "Lack of a process for securely installing and configuring all software components",
    "weakness_id_read_only": "P1669",
    "weakness": "75e1f447-972c-4497-9a43-8e806c6c7ae1",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "activities",
    "created": "2021-11-17T20:45:38.483000-05:00",
    "last_updated": "2023-04-28T17:38:38.794000-04:00",
    "custom": "False",
    "rules": "a51f437c-40f4-4b75-a1d7-91767230872c;bba3a932-302b-415e-b24a-6fb715b2d7a1;541a6527-47cc-4100-bb97-53b8b98c7948;2b5f47f2-88fd-484b-899a-023076dbce25;68c64fac-a002-469d-8f74-872b0a3352c9;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1228;A1229;A1230;A1231;A1233;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233"
  },
  {
    "countermeasure_id": "T2297",
    "universal_id": "3ba612f1-c876-4ac2-8028-18452ca04f9e",
    "countermeasure_name": "Verify that cloud users and roles are set up and maintained (Cloud)",
    "countermeasure_solution": "Follow these guidelines to verify that your cloud identity management is strongly secured: \n\n- Verify that user accounts maintain valid (current) contact information for more than one person within your organization. \n- Verify that security questions exist or that other access restoration mechanisms are enabled for your cloud accounts. \n- Verify that inactive users and users unnecessarily belonging to one or more groups are removed.\n- Verify that unused groups/roles are removed.",
    "weakness_title_read_only": "Improper identity management (Cloud)",
    "weakness_id_read_only": "P1658",
    "weakness": "9e362ed9-6ebd-42bb-810b-10b39a17f2f9",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "testing",
    "created": "2021-11-26T10:00:24.067000-05:00",
    "last_updated": "2022-02-10T14:04:38.572000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2298",
    "universal_id": "9e44b101-d7a0-49bc-a091-6c501ffa4ae5",
    "countermeasure_name": "Verify that user authentication is securely configured (Cloud)",
    "countermeasure_solution": "Follow these guidelines to verify that your cloud authentication process is secure: \n\n- Verify the application of multi-factor authentication for privileged users.\n- Verify the usage restriction of privileged accounts and access keys for day-to-day work.\n\n- Verify the enforcement of a strong password policy for users.\n- Verify the enforcement of regular password expiration dates to prevent password overuse.\n\n- Verify the regular rotation or changing of all user security credentials (e.g. user access key).\n- Verify that unused security credentials do not exist.\n- Verify that any single user has only one active access key.\n- Verify that temporary access keys are used whenever possible.",
    "weakness_title_read_only": "Improper user authentication (Cloud)",
    "weakness_id_read_only": "P1659",
    "weakness": "5aa62730-c631-48d7-b732-9d56c41346bd",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "testing",
    "created": "2021-11-26T10:05:59.380000-05:00",
    "last_updated": "2022-02-10T14:04:47.071000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2299",
    "universal_id": "36a9ad7a-d149-49da-9181-08b2f6f6d3b7",
    "countermeasure_name": "Verify that user authorization is securely configured (Cloud)",
    "countermeasure_solution": "Follow these guidelines to verify that access policies are secure:\n\n- Verify that identity and access management services are restricted to a limited group of trusted users.\n- Verify that least-privileged access policies are applied when creating access policies for any user or group.\n- Verify that access policies are attached whenever possible to groups or roles instead of individual users.",
    "weakness_title_read_only": "Permissive access policies or improper access control (Cloud)",
    "weakness_id_read_only": "P1660",
    "weakness": "d3ab7149-1792-4220-a1aa-a27bb5dbab68",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "testing",
    "created": "2021-11-26T10:10:52.482000-05:00",
    "last_updated": "2022-02-10T14:04:48.090000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2300",
    "universal_id": "390d13fe-e5c5-437b-9531-756a06457bb1",
    "countermeasure_name": "Verify that a secure application architecture is designed for the cloud environment (Cloud)",
    "countermeasure_solution": "Follow these guidelines to verify that your cloud-based application architecture is secure:\n\n- Verify that the application is separated into different layers such as Web, Application, and Data.\n- Verify that your cloud provider uses autoscaling services to manage incoming traffic among your servers.\n- Verify that your cloud provider uses load balancing services to divide incoming traffic between your servers.\n- Verify that your cloud provider uses availability regions and zones if needed to create redundancy in your application.\n- Verify that your cloud provider applies content distribution networks and services if needed to protect your application against DDoS attacks.",
    "weakness_title_read_only": "Design weakness in application security architecture (Cloud)",
    "weakness_id_read_only": "P1661",
    "weakness": "3a1cb75a-468d-4aed-8a5f-0639432f235a",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "testing",
    "created": "2021-11-26T10:15:11.515000-05:00",
    "last_updated": "2021-12-23T14:45:45.198000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2301",
    "universal_id": "7d07f313-cddc-41fb-b345-0d155594cd31",
    "countermeasure_name": "Verify that network access control is secured (Cloud)",
    "countermeasure_solution": "Follow these guidelines to verify that network access control in your cloud environment is secure:\n\n- Verify that the default VPC is not used for your production environment.\n- Verify that the least-privileged principle is applied for necessary services (e.g. routing tables and network access control lists to control inbound/outbound traffic into or out of subnets).\n- Verify that security/firewall rules for each server/instance exist to limit inbound/outbound traffic to only required services and ports.\n- Verify that access to the public Internet by gateways is secure and that public IPs are assigned to only required instances/servers.",
    "weakness_title_read_only": "Improper network access control (Cloud)",
    "weakness_id_read_only": "P1662",
    "weakness": "257ad3e6-8ca7-4218-8a68-0d2079466105",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "testing",
    "created": "2021-11-26T10:20:07.832000-05:00",
    "last_updated": "2022-02-10T14:04:54.508000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2302",
    "universal_id": "3e4ffaaa-3135-43f2-aab5-ea954de5af1e",
    "countermeasure_name": "Verify that data in transit is secured (Cloud)",
    "countermeasure_solution": "Follow these guidelines to verify that unauthorized access to data in transit is prevented:\n\n- Verify the use of secure protocols (e.g. TLS) to apply encrypted network communications.\n- Verify that a secure version of each protocol is being used.\n- Verify that secret keys and certificates are stored securely.\n- Verify that a regular schedule for rotating secret keys and certificates is used for secure communications and check that the use of expired certificates is prevented.",
    "weakness_title_read_only": "Improper protection of data in transit (Cloud)",
    "weakness_id_read_only": "P1663",
    "weakness": "c22e9f08-e27b-40c1-8bca-d4153e1d7c27",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "testing",
    "created": "2021-11-26T11:10:56.738000-05:00",
    "last_updated": "2022-02-10T14:04:55.244000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2303",
    "universal_id": "b86a8846-6cf7-4047-b1c9-39bd4fe513c5",
    "countermeasure_name": "Verify that hosts and operating systems are secure (Cloud)",
    "countermeasure_solution": "Follow these guidelines to verify the security of hosts and their operating systems in your cloud environment:\n\n- Verify that access to operating system images is restricted.\n- Verify that the use of operating system images is minimized to reduce the attack surface on your instances.\n- Verify the use of a robust access control mechanism to resources by applying built-in OS security features.\n- Verify the use of automated patch management services from your cloud provider to automate the patching of instances with critical security updates.\n- Verify that all your instances are created from approved images.\n- Verify that permissions assigned to each instance/server are restricted.",
    "weakness_title_read_only": "Weak host/OS security (Cloud)",
    "weakness_id_read_only": "P1664",
    "weakness": "b94acad0-b27c-46a3-9013-729b4ddc9221",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "testing",
    "created": "2021-11-26T11:12:55.452000-05:00",
    "last_updated": "2021-12-23T14:45:56.423000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2304",
    "universal_id": "a733ffc8-3fef-4fd3-aaab-4f5a6bcba44a",
    "countermeasure_name": "Verify that data at rest is protected (Cloud)",
    "countermeasure_solution": "Follow these guidelines to verify that data at rest in your cloud environment is protected and secure:\n\n- Verify the use of encryption for all database instances managed by your cloud provider.\n- Verify the use of encryption for other storage services (e.g. object stores) provided by your cloud provider.\n- Verify the use of versioning for storage services provided by your cloud provider.\n- Verify the use of a lifecycle policy for your storage services and data retention based on your specific needs.\n- Verify that access to your storage services is restricted.",
    "weakness_title_read_only": "Improper protection of data at rest (Cloud)",
    "weakness_id_read_only": "P1665",
    "weakness": "03ea5dd6-30f3-40e2-a261-f7b13d26d96b",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "testing",
    "created": "2021-11-26T11:15:15.453000-05:00",
    "last_updated": "2022-02-10T14:04:58.406000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2305",
    "universal_id": "64632bc6-8dca-435a-bfc6-d1d35a89da5e",
    "countermeasure_name": "Verify that logging is enabled and log files are protected (Cloud) (1/2)",
    "countermeasure_solution": "Follow these guidelines to verify that logging information in your cloud environment is protected:\n\n- Verify the use of logging services provided by your cloud provider.\n- Verify that changes to the configuration of your cloud resources are logged.\n- Verify that logging takes place for your specific cloud services.\n- Verify that log files are encrypted.\n- Verify the versioning and backup of log files.\n- Verify that sufficient information is included in log files.",
    "weakness_title_read_only": "Lack of activity tracking and secure logging (Cloud)",
    "weakness_id_read_only": "P1666",
    "weakness": "f056c394-85fc-45c8-b301-4c4975aafdf4",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2021-11-26T11:17:13.303000-05:00",
    "last_updated": "2022-06-03T14:15:04.633000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2306",
    "universal_id": "a3b0cc90-db31-48e0-a4fe-baaa2646f2bd",
    "countermeasure_name": "Verify that log monitoring and configuration monitoring are enabled (Cloud) (1/3)",
    "countermeasure_solution": "Follow these guidelines to verify that logs and configurations are monitored effectively:\n\n- Verify the use of log monitoring services provided by your cloud provider.\n- Verify that configuration monitoring for your cloud resources is enabled.\n- Verify the existence of log metrics and alarms for notification of anomalies.\n- Verify that monitoring agents inside your cloud instances are applied to get more comprehensive performance data about your applications and services.",
    "weakness_title_read_only": "Lack of monitoring (Cloud)",
    "weakness_id_read_only": "P1667",
    "weakness": "692ff87f-9bb7-4995-b15e-a24d351df672",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2021-11-26T11:21:47.708000-05:00",
    "last_updated": "2022-06-03T14:15:15.954000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2307",
    "universal_id": "c7173911-9543-444f-ab89-aad15cac904f",
    "countermeasure_name": "Verify that the key management system is secured (Cloud)",
    "countermeasure_solution": "Follow these guidelines to verify that key management processes for your cloud environment are properly secured:\n\n- Verify the use of key management services provided by your cloud provider.\n- Verify that access to the key management system is restricted.\n- Verify that the key management system is durable and highly available.\n- Verify that the key management system itself is encrypted and secure.\n- Verify that keys in the key management system are being rotated at intervals appropriate to your needs.",
    "weakness_title_read_only": "Insecure key management (Cloud)",
    "weakness_id_read_only": "P1668",
    "weakness": "f342b1e8-3324-4b71-aaaa-b69dc9899bce",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "testing",
    "created": "2021-11-26T11:24:42.307000-05:00",
    "last_updated": "2022-02-10T14:05:11.337000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2311",
    "universal_id": "fe340f62-3a8f-47f8-b73f-f9ec62ce6540",
    "countermeasure_name": "Ensure proper network settings and configuration (Containerization)",
    "countermeasure_solution": " - Ensure secure network configuration.\n- Enable HTTPS and securely configure it.\n- Do not set insecure bind address and port \n- Make sure network policies and CNI selection are appropriate",
    "weakness_title_read_only": "Improper network settings and configuration (Containerization)",
    "weakness_id_read_only": "P1673",
    "weakness": "33d0ec72-a7ac-4cae-bdda-755781a33646",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2021-12-09T18:52:32.688000-05:00",
    "last_updated": "2022-06-08T22:47:39.780000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2312",
    "universal_id": "8c8317d1-1d4f-4baa-8c4c-0d750f3c2bfa",
    "countermeasure_name": "Ensure proper logging and security monitoring (Containerization)",
    "countermeasure_solution": "Ensure proper logging and security monitoring by using the following guidelines:\n\n- Securely configure logs.\n- Enable auditing on master nodes.\n- Set the desired audit log path as appropriate.\n\nFor details specific to your system, refer to the How-to section of this countermeasure.",
    "weakness_title_read_only": "Inadequate logging and security monitoring (Containerization)",
    "weakness_id_read_only": "P1674",
    "weakness": "89c70c3c-efba-4ef6-b023-d7f5813e22c1",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "development",
    "created": "2021-12-09T18:57:06.622000-05:00",
    "last_updated": "2022-08-24T15:10:44.208000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2313",
    "universal_id": "b15a41a4-ba3e-45d6-845b-1230a39a87f8",
    "countermeasure_name": "Keep data and secrets safe (Containerization)",
    "countermeasure_solution": "Keep data and secrets safe by using the following guidelines:\n\n- Select and configure secret keys and certificates securely.\n- Use strong cryptography and secrets management.\n- Encrypt data at rest properly.",
    "weakness_title_read_only": "Lack of data and secrets protection (Containerization)",
    "weakness_id_read_only": "P1675",
    "weakness": "94ed1d41-5aea-4a4c-9165-342378966bfb",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2021-12-09T19:02:32.904000-05:00",
    "last_updated": "2022-06-08T22:48:58.187000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2314",
    "universal_id": "c60f548a-fea0-4005-bdc3-b9c3c5b73995",
    "countermeasure_name": "Enforce secure policies (Containerization)",
    "countermeasure_solution": "Enforce secure policies by using the following guidelines:\n\n- Apply security context to the containerized environment.\n- Select secure profiles.\n- Use the latest versions of services and options.",
    "weakness_title_read_only": "Lack of secure policies (Containerization)",
    "weakness_id_read_only": "P1676",
    "weakness": "a3afa445-5495-445e-8125-2b00c0b9e911",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2021-12-09T19:04:34.799000-05:00",
    "last_updated": "2022-06-08T22:54:24.801000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2319",
    "universal_id": "b0425685-33d2-4c03-81a2-407fb1997973",
    "countermeasure_name": "Verify proper network settings and configuration (Containerization)",
    "countermeasure_solution": "Follow the instructions in Amendments to:\n\n- Test if network configuration is secure.\n- Verify that HTTPS is enabled and configured securely.\n- Verify that insecure bind addresses and ports are not used.\n- Verify that network policies and CNI selection are appropriate",
    "weakness_title_read_only": "Improper network settings and configuration (Containerization)",
    "weakness_id_read_only": "P1673",
    "weakness": "33d0ec72-a7ac-4cae-bdda-755781a33646",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2021-12-23T11:32:28.431000-05:00",
    "last_updated": "2022-06-09T00:00:37.628000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2320",
    "universal_id": "fa668427-c4ee-42e2-b299-ab0b950dc31d",
    "countermeasure_name": "Verify proper logging and security monitoring are implemented (Containerization)",
    "countermeasure_solution": "Verify that proper logging and security monitoring is implemented by following the guidelines in Amendments to:\n\n- Verify that logs are configured securely.\n- Test that auditing on master nodes is enabled.\n- Verify that the audit log path is set appropriately.",
    "weakness_title_read_only": "Inadequate logging and security monitoring (Containerization)",
    "weakness_id_read_only": "P1674",
    "weakness": "89c70c3c-efba-4ef6-b023-d7f5813e22c1",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2021-12-23T11:33:27.324000-05:00",
    "last_updated": "2022-06-09T00:00:40.480000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2321",
    "universal_id": "7faac4e8-0e84-4fee-a36d-8e354c0a094d",
    "countermeasure_name": "Verify data and secrets are kept safe (Containerization)",
    "countermeasure_solution": "Verify that data and secrets are safe by following guidelines in Amendments to:\n\n- Test that secret keys and certificates are selected and configured securely.\n- Test that strong cryptography and secrets management are used.\n- Test that data at rest is encrypted properly.",
    "weakness_title_read_only": "Lack of data and secrets protection (Containerization)",
    "weakness_id_read_only": "P1675",
    "weakness": "94ed1d41-5aea-4a4c-9165-342378966bfb",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2021-12-23T11:34:22.862000-05:00",
    "last_updated": "2022-06-09T00:00:42.471000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2322",
    "universal_id": "8cbea13d-18cc-45c5-b42a-57a9feaf8c87",
    "countermeasure_name": "Verify secure policies are enforced (Containerization)",
    "countermeasure_solution": "Verify that secure policies are enforced using the tests below: \n\n- Test that the security context to the containerized environment is applied properly. \n- Verify that secure profiles are selected.\n- Verify that the latest versions of services and options are used.",
    "weakness_title_read_only": "Lack of secure policies (Containerization)",
    "weakness_id_read_only": "P1676",
    "weakness": "a3afa445-5495-445e-8125-2b00c0b9e911",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2021-12-23T11:35:36.108000-05:00",
    "last_updated": "2022-06-09T00:00:44.695000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2324",
    "universal_id": "fde6e14d-a94b-4a14-b402-955be9a0d207",
    "countermeasure_name": "Verify whether privacy principles are applied for handling personal data",
    "countermeasure_solution": "Verify whether any of the following items exists as evidence for handling personal data properly:  \n\n- Privacy governance policy documents, privacy policy documents or charter/mission statements\n- Job descriptions of entities responsible for data privacy (e.g. CPO, privacy counsel, etc.)\n- Privacy committees or working groups and memberships\n- Stakeholder communications such as emails, agendas, or meeting minutes\n- Reports and findings.",
    "weakness_title_read_only": "Privacy Violation",
    "weakness_id_read_only": "P257",
    "weakness": "b0418f1b-bf92-45ba-845f-abfb9735f1cf",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2022-01-05T13:33:32.295000-05:00",
    "last_updated": "2023-05-11T12:48:14.825000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2327",
    "universal_id": "b2971597-ae69-4ff9-8d05-f0a65ae25957",
    "countermeasure_name": "Verify if a Privacy Impact Assessment is performed",
    "countermeasure_solution": "Check whether any of the following items exists as evidence of a proper Privacy Impact Assessment:\n\n- Privacy Impact Assessment policies/procedures\n- Databases or specialized systems\n- Templates, privacy reviews, assessments or reports to third parties\n\nAlso, verify whether external stakeholders (e.g. individuals, privacy advocates) are engaged as part of the PIA/DPIA process where required or appropriate.",
    "weakness_title_read_only": "Lack of Privacy Impact Assessment (PIA)",
    "weakness_id_read_only": "P1435",
    "weakness": "600242df-fdc6-4eb0-94ba-4516e6b68170",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2022-01-06T11:15:00.146000-05:00",
    "last_updated": "2023-05-11T12:48:58.095000-04:00",
    "custom": "False",
    "rules": "a51f437c-40f4-4b75-a1d7-91767230872c;bba3a932-302b-415e-b24a-6fb715b2d7a1;68c64fac-a002-469d-8f74-872b0a3352c9;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1228;A1229;A1233;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233"
  },
  {
    "countermeasure_id": "T2328",
    "universal_id": "b38b4e02-5667-475e-827f-7df1e7328c70",
    "countermeasure_name": "Verify if proper policies exist for processing sensitive personal data",
    "countermeasure_solution": "Verify whether any of the following items exists as evidence of processing sensitive personal data properly:\n\n- Processing policies \n- Data classifications for sensitive personal information\n- Scripts and procedures for handling sensitive data \n- Appropriate consents \n- Legal opinions",
    "weakness_title_read_only": "Lack of process for collecting and protecting sensitive data",
    "weakness_id_read_only": "P1180",
    "weakness": "d0db87ea-36f4-4f02-9193-5c41d531f433",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "testing",
    "created": "2022-01-06T14:08:24.622000-05:00",
    "last_updated": "2023-05-11T12:48:55.606000-04:00",
    "custom": "False",
    "rules": "a51f437c-40f4-4b75-a1d7-91767230872c;bba3a932-302b-415e-b24a-6fb715b2d7a1;541a6527-47cc-4100-bb97-53b8b98c7948;2b5f47f2-88fd-484b-899a-023076dbce25;3574b6ec-b55d-4390-99e7-35866abe1e17;68c64fac-a002-469d-8f74-872b0a3352c9;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1228;A1229;A1230;A1231;A1232;A1233;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233"
  },
  {
    "countermeasure_id": "T2329",
    "universal_id": "35aa7e43-8985-4e1c-93a7-51b2d8a44430",
    "countermeasure_name": "Verify if health data is handled securely",
    "countermeasure_solution": "Check whether any of the following items exists as evidence of handling personal health data properly:\n\n- Policies; regulation-specific policies\n- Employee training; notices; contracts with third parties\n- Logging and monitoring of access\n- Role-based access controls",
    "weakness_title_read_only": "Plaintext Protected Health Information",
    "weakness_id_read_only": "P709",
    "weakness": "b863a7e9-9fd8-4061-9843-85c086567884",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2022-01-06T14:13:31.576000-05:00",
    "last_updated": "2023-05-11T12:48:12.555000-04:00",
    "custom": "False",
    "rules": "088e2318-7522-439a-a136-d43260a729da",
    "rules_read_only": "A717"
  },
  {
    "countermeasure_id": "T2330",
    "universal_id": "bcd9133d-46ec-4215-b091-15695616183b",
    "countermeasure_name": "Verify if children's personal information is handled securely",
    "countermeasure_solution": "Check whether any of the following items exists as evidence of handling children's personal information securely:\n\n- Policies on children/minor privacy\n- Age verification processes (web, other channels)\n- Procedures and notices",
    "weakness_title_read_only": "Privacy Violation",
    "weakness_id_read_only": "P257",
    "weakness": "b0418f1b-bf92-45ba-845f-abfb9735f1cf",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2022-01-06T14:14:32.683000-05:00",
    "last_updated": "2023-05-11T12:48:16.769000-04:00",
    "custom": "False",
    "rules": "76af4e5f-79a8-46e1-bc5d-fbc03577c47d",
    "rules_read_only": "A780"
  },
  {
    "countermeasure_id": "T2331",
    "universal_id": "b4e54c58-2945-43fd-9225-df1dd64aae1f",
    "countermeasure_name": "Verify whether any plan exists for data privacy incident response",
    "countermeasure_solution": "Verify the following items to ensure that your incident response plan is properly implemented:\n\n- Data privacy incident/breach response plan\n- Protocols for breach notification (to affected individuals) and governance procedures for reporting (to regulators, credit agencies, law enforcement, etc.)\n- Logs to track data privacy incidents/breaches\n- Metrics monitoring and reporting for any data privacy incident/breach (e.g. nature of the breach, risk, root cause)\n- Periodic testing of the data privacy incident/breach plan\n- A breach response remediation provider.\n- A forensic investigation team\n- Data privacy breach insurance coverage\n\nAlso, check for evidence such as a database/system for managing incidents, minutes of meetings, tabletop exercises, contracts with third-party remediation providers, contracts with third-party forensic providers, contracts with insurance providers.\n\n_Note_: The items above are identified in the Nymity framework.",
    "weakness_title_read_only": "Privacy Violation",
    "weakness_id_read_only": "P257",
    "weakness": "b0418f1b-bf92-45ba-845f-abfb9735f1cf",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2022-01-06T14:16:03.730000-05:00",
    "last_updated": "2023-05-11T12:49:35.361000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2332",
    "universal_id": "d1d9f179-0194-400a-a7a6-db617fa24b52",
    "countermeasure_name": "Adhere to an appropriate Global Privacy Control (GPC) header",
    "countermeasure_solution": "The Global Privacy Control (GPC) is a HTTP header that indicates a user's preference for sharing their data with external parties. Implement a feature to restrict the sharing of this data, in a way that is verifiable. This accommodation is necessary and mandated by law in several jurisdictions, including the EU and California. \n\nThe header field name is `Sec-GPC` and a value of '1' indicates a user preference to not have their data shared with external parties.\n\n    GET /something/here HTTP/2\n    Host: example.com\n    Sec-GPC: 1\n\nUnless the field value is exactly the character 1, any server processing a HTTP request that contains a Sec-GPC header must ignore it and process the request as if that header had not been specified. If there are multiple Sec-GPC headers at least one of which has a field value of exactly 1, the server must treat the request as if there was only one Sec-GPC header with a field value of 1.\n\nHTTP intermediaries must not remove a Sec-GPC header set to 1, but they may remove Sec-GPC headers that contain other values. Additionally, any HTTP intermediary that has reason to believe the person originating a given HTTP request has a do-not-sell-or-share preference may insert a Sec-GPC header set to 1.",
    "weakness_title_read_only": "Insufficient consent for user tracking",
    "weakness_id_read_only": "P732",
    "weakness": "f4b8e089-29b2-450e-b619-3b279d903891",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "requirements",
    "created": "2022-02-23T11:47:29.704000-05:00",
    "last_updated": "2022-11-25T02:33:04.971000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2333",
    "universal_id": "ae602ef1-e199-4b50-bea8-28f41a8347f9",
    "countermeasure_name": "Test if your application adheres to a Global Privacy Control (GPC) header",
    "countermeasure_solution": "Use the following guidelines for testing that your application adheres to GPC header:\n\n- Use a commodity browser like \"Chrome\" to access your application.\n- Change the settings of your browser to send \"GPC\" headers with your browsing traffic.\n- Now test that your application adheres to the included header and disables third party tracking and deletes all previously stored tracking data.",
    "weakness_title_read_only": "Insufficient consent for user tracking",
    "weakness_id_read_only": "P732",
    "weakness": "f4b8e089-29b2-450e-b619-3b279d903891",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2022-02-23T11:57:03.250000-05:00",
    "last_updated": "2022-06-09T00:32:56.705000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2335",
    "universal_id": "d9522ded-a8af-446e-a9f3-374564cef856",
    "countermeasure_name": "Securely automate your infrastructure provisioning process (Terraform)",
    "countermeasure_solution": "Analyze the security implications of a Terraform infrastructure file before you use it to create your environment. This early decision making is tremendously helpful, and Terraform includes two tools that make it easier:\n\n- Static analysis: Third-party tools can scan Terraform files looking for misconfigurations common to specific cloud providers.\n\n- Policies: Terraform has a policy enforcement language called Sentinel that you can use to reject insecure Terraform files and follow security standards such as CIS Benchmarks.\n\nBoth techniques let you vet your configuration before you try to use it. But even if you don’t use any tool to validate configuration files, Terraform’s infrastructure workflow naturally lends itself to a review process. Using Terraform, developers can request the infrastructure provisioning for their preferred environment without needing the permissions to actually create it. Then, a DevOps engineer can review the Terraform configuration before it’s used in a staging environment. These process improvements allow you to implement a more secure development pipeline.",
    "weakness_title_read_only": "Unsafe infrastructure as code (IaC) processes",
    "weakness_id_read_only": "P1678",
    "weakness": "d13a7ff7-0c40-4068-bf94-a314193dd785",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2022-05-28T21:03:38.640000-04:00",
    "last_updated": "2022-06-09T00:42:35.290000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2336",
    "universal_id": "7b80e557-893b-4cfc-9aeb-6d900e362bd9",
    "countermeasure_name": "Use a remote backend to securely store your infrastructure state (Terraform)",
    "countermeasure_solution": "Use a remote backend to store your Terraform state. Remote backends are already important for synchronizing work when multiple team members need to manipulate the same infrastructure with Terraform. A remote backend puts the terraform.tf file in a secure location like cloud storage. To further protect your state, you can choose a remote backend that supports encryption at rest.\n\nBy default, Terraform creates a local file to store information about your infrastructure. This file, named terraform.tfstate, is placed in the working directory where you run Terraform’s apply command. Its contents are stored in plain JSON text.\n\nTechnically, there are three types of Terraform blocks that store information in the state file: resources, data sources, and output values. A typical state file stores secrets like API keys and credentials for databases and other resources. Even if you follow proper security practices and don’t hard-code these details in your Terraform configuration files, they’re still recorded in the Terraform state file. That’s because Terraform needs this information to determine when your configuration files are making changes to existing infrastructure.",
    "weakness_title_read_only": "Unsafe infrastructure as code (IaC) state",
    "weakness_id_read_only": "P1679",
    "weakness": "d9e25767-aad1-4c57-bea8-94243d4e24f3",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2022-05-28T21:06:45.346000-04:00",
    "last_updated": "2022-06-09T00:55:29.447000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2337",
    "universal_id": "9981f437-13ac-4326-920f-882c808134c0",
    "countermeasure_name": "Keep your infrastructure state secure (Terraform)",
    "countermeasure_solution": "You should keep your state file secure and encrypted. Some of the actions you can perform include: \n\n\n- *Automatically encrypt the state file at rest.* Some remote backends, such as AWS S3 and Terraform Cloud, can provide this feature. You should take advantage of it if it’s available. \n- *Make sure you limit direct access to the state file through your cloud provider.* For example, if you store state in an S3 bucket, use the appropriate IAM settings in AWS to restrict access to just the people who are provisioning infrastructure, or—if the process is automated—restrict access to the build server that runs Terraform. \n- *Be aware that the backend may keep historical state information.* One example of a backend that keeps old copies of the state file is Terraform Cloud. As a result, sensitive details can persist even if they’ve been removed in the most recent version of your configuration. \n- *Ensure you don’t check the state file into source control.* If at any point you aren’t using a remote backend, even temporarily, make sure you don’t check the state file into source control. You can tell GitHub to ignore the state file using a gitignore file.",
    "weakness_title_read_only": "Unsafe infrastructure as code (IaC) state",
    "weakness_id_read_only": "P1679",
    "weakness": "d9e25767-aad1-4c57-bea8-94243d4e24f3",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2022-05-28T21:13:01.605000-04:00",
    "last_updated": "2023-05-11T15:20:51.930000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2338",
    "universal_id": "c86dc1c4-6236-4e7c-b905-4bbfc551b4a2",
    "countermeasure_name": "Protect your credentials (Terraform)",
    "countermeasure_solution": "Use different techniques to keep your credentials out of your configuration files and ensure they aren’t leaked.\n\nYour resources will also have sensitive details like unique identifiers and database passwords. These details can’t be drawn from environment variables, so to keep them out of your configuration files and ensure they aren’t leaked you need a different technique such as:\n\n- A secret manager\n- Short-lived credentials",
    "weakness_title_read_only": "Credentials Are Not Protected",
    "weakness_id_read_only": "P409",
    "weakness": "19f185b7-a883-440f-933d-9270f0215b10",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2022-05-29T13:11:33.184000-04:00",
    "last_updated": "2022-06-09T01:00:32.893000-04:00",
    "custom": "False",
    "rules": "3663a834-60f4-4819-9a5e-47dc9454be8c",
    "rules_read_only": "A1338"
  },
  {
    "countermeasure_id": "T2339",
    "universal_id": "7452868d-6653-4849-8a54-08c72909b528",
    "countermeasure_name": "Restrict direct access to your cloud provider (Terraform)",
    "countermeasure_solution": "By restricting Terraform configuration files, you can prevent others from creating infrastructures with security issues. You can benefit from these security measures only when you have a controlled workflow based on Terraform. If anyone is able to make changes outside of Terraform, for example through a cloud provider's web interface or a command-line tool, these security measures will no longer be effective.\n\nThere are two steps that you can take to have a controlled workflow based on only Terraform:\n\n- Restrict access to your cloud provider's interface.\n- Apply Terraform jobs that are to be deployed in a production environment through checked-in code managed in a VCS like GitHub.",
    "weakness_title_read_only": "Unsafe infrastructure as code (IaC) processes",
    "weakness_id_read_only": "P1678",
    "weakness": "d13a7ff7-0c40-4068-bf94-a314193dd785",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2022-05-29T13:19:36.688000-04:00",
    "last_updated": "2022-06-09T01:21:25.150000-04:00",
    "custom": "False",
    "rules": "3663a834-60f4-4819-9a5e-47dc9454be8c",
    "rules_read_only": "A1338"
  },
  {
    "countermeasure_id": "T2340",
    "universal_id": "da33de09-1587-4aa0-b085-7eff41ed6410",
    "countermeasure_name": "Use Terraform Teams to implement role-based security (Terraform)",
    "countermeasure_solution": "A useful feature that you can use to limit who can open, edit, or run Terraform configuration files is Teams. Through this feature, you can implement role-based access control (RBAC) by which you can assign users to different teams and thereby give them various levels of permissions for using Terraform. \n\nIf you have separate teams working on different applications, you should use different Terraform workspaces. In this case, each team owns its workspace environment. You should also have separate workspaces for production and development environments. By using the Teams feature in each workspace, you can assign appropriate permissions to users.\n\nFollow these best security practices with the Terraform Teams feature:\n\n- Use the principle of least privilege, granting only the permissions that are required.\n- Keep teams small, especially the number of users in a powerful owners team.\n- Get users to log in with two-factor authentication.",
    "weakness_title_read_only": "Unsafe infrastructure as code (IaC) state",
    "weakness_id_read_only": "P1679",
    "weakness": "d9e25767-aad1-4c57-bea8-94243d4e24f3",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2022-05-29T13:21:09.891000-04:00",
    "last_updated": "2022-06-09T01:22:53.970000-04:00",
    "custom": "False",
    "rules": "3663a834-60f4-4819-9a5e-47dc9454be8c",
    "rules_read_only": "A1338"
  },
  {
    "countermeasure_id": "T2341",
    "universal_id": "71252f3e-ccc5-4657-8b83-3e2b1657c186",
    "countermeasure_name": "Catch common security mistakes with a linter (Terraform)",
    "countermeasure_solution": "Protect your infrastructure from misconfigurations by reviewing Terraform files before applying them. You can also use a static analyzer called linter. Depending on the tool, it will scan your Terraform files for potential mistakes, security best practices, and so on. \n\nThere are a number of open source linting tools that support Terraform, including Checkov, Terrascan, and TFLint. There are two things to consider when choosing a linting tool:\n\n- Its policy support. For example, Checkov currently uses about 2000 policies to cover security best practices and compliance for AWS, Azure, and Google Cloud, documented online at [https://docs.bridgecrew.io/docs/general-policies](https://docs.bridgecrew.io/docs/general-policies).\n- Its compatibility with popular cloud providers. Some linters might not have good coverage for less common cloud providers. If you are using a less common cloud provider, choose a linter that works well with that cloud provider.",
    "weakness_title_read_only": "Unsafe infrastructure as code (IaC) state",
    "weakness_id_read_only": "P1679",
    "weakness": "d9e25767-aad1-4c57-bea8-94243d4e24f3",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2022-05-29T13:26:38.290000-04:00",
    "last_updated": "2022-06-09T01:23:55.002000-04:00",
    "custom": "False",
    "rules": "3663a834-60f4-4819-9a5e-47dc9454be8c",
    "rules_read_only": "A1338"
  },
  {
    "countermeasure_id": "T2342",
    "universal_id": "d85154da-c21b-4647-96e8-c64f96b6c3b8",
    "countermeasure_name": "Improve your security posture with Sentinel policies (Terraform)",
    "countermeasure_solution": "After establishing a basic infrastructure, add Sentinel policies to prevent users from accidentally violating good security practices or your organization’s in-house conventions. Terraform checks these policies to prevent security mistakes and potential misconfigurations. HashiCorp has a free command-line tool that can be used to test Sentinel policies. Integration of policy checking into your Terraform workflow requires a paid upgrade.\n\nSentinel policies are stored as text files that have the extension **.sentinel**. You can either create separate policy files to restrict different configuration details, or combine all your policies into one file. You should store your policies in a VCS like GitHub, in the same way that you store and version your Terraform configuration files.",
    "weakness_title_read_only": "Unsafe infrastructure as code (IaC) state",
    "weakness_id_read_only": "P1679",
    "weakness": "d9e25767-aad1-4c57-bea8-94243d4e24f3",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2022-05-29T13:28:42.894000-04:00",
    "last_updated": "2022-06-09T01:44:13.078000-04:00",
    "custom": "False",
    "rules": "3663a834-60f4-4819-9a5e-47dc9454be8c",
    "rules_read_only": "A1338"
  },
  {
    "countermeasure_id": "T2343",
    "universal_id": "1821329c-36c6-426a-9139-7b4a64ecd18c",
    "countermeasure_name": "Define security-related roles and provide role-base training",
    "countermeasure_solution": "Ensure that everyone inside and outside of the organization is prepared to perform their roles and responsibilities throughout the Software Development Life Cycle (SDLC).\n\n- Create new roles:\n    - Define roles and responsibilities for all members of the software development team.\n    - Integrate the security roles into the software development team.\n    - Define roles and responsibilities for cybersecurity staff, security champions, project managers and leads, senior management, software developers, software testers, software assurance leads and staff, product owners, operations and platform engineers, and others involved in the SDLC.\n    - Conduct an annual review of all roles and responsibilities.\n    - Educate affected individuals on impending changes to roles and responsibilities.\n\n- Provide role-based training:\n    - Document the desired outcomes of training for each role.\n    - Define the type of training or curriculum required to achieve the desired outcome for each role.\n    - Create a training plan for each role.\n    - Acquire or create training for each role, where acquired training may need to be customized for the organization.\n    - Measure personnel performance to identify areas where changes to training may be beneficial.\n\n- Ensure commitment from senior leadership:\n    - Appoint a single leader or leadership team to be responsible for the entire secure software development process, including authorizing the release of software to production.\n    - Increase upper management awareness of the risks of developing software without integrating security throughout the development life cycle.\n    - Assist upper management in incorporating secure development support into their communications with personnel with security-related roles and responsibilities.\n    - Educate all personnel on upper management’s commitment to secure software development and the importance of the secure software development to the organization.",
    "weakness_title_read_only": "Lack of defining proper security roles and responsibilities",
    "weakness_id_read_only": "P1680",
    "weakness": "dcdd6dc8-fc7e-481e-9eac-21aa9b347b8b",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "activities",
    "created": "2022-06-02T16:08:11.480000-04:00",
    "last_updated": "2023-06-09T12:03:57.781000-04:00",
    "custom": "False",
    "rules": "bba3a932-302b-415e-b24a-6fb715b2d7a1",
    "rules_read_only": "A1229"
  },
  {
    "countermeasure_id": "T2344",
    "universal_id": "8c830397-0772-4b64-89c6-d78fd0d48929",
    "countermeasure_name": "Implement and augment supporting toolchains by automating SDLC security activities",
    "countermeasure_solution": "Use automation to reduce human effort and improve the accuracy, consistency, usability, and comprehensiveness of security practices throughout the SDLC.\n\n- Select the best tool to be included in each toolchain to mitigate identified risks:\n    - Define categories of toolchains, and specify the mandatory tools or tool types to be used for each category.\n    - Identify security tools to integrate into the developer toolchain.\n    - Evaluate tool signing capabilities to create immutable records/logs for auditability within the toolchain.\n    - Use automated technology for toolchain management and orchestration.\n\n- Follow recommended security practices to deploy and maintain tools and toolchains:\n    - Evaluate, select, and acquire tools, and assess the security of each tool.\n    - Integrate tools with other tools and existing software development processes and workflows.\n    - Use code-based configuration for toolchains (e.g., pipelines as code, toolchains as code).\n    - Implement the technologies and processes needed for reproducible builds.\n    - Update, upgrade, or replace tools as needed to address tool vulnerabilities or add new tool capabilities.\n    - Continuously monitor tools and tool logs for potential operational and security issues, including policy violations and anomalous behavior.\n    - Regularly verify the integrity and check the provenance of each tool to identify potential weaknesses.\n    - Be prepared to share evidence and artifact data when requested with auditors and purchasers who want to confirm the use of tools and toolchains to support the development practices.\n\n- Configure tools to generate evidence and artifacts of their support of secure software development practices as defined by the organization:\n    - Use existing tooling (e.g., workflow tracking, issue tracking, value stream mapping) to create an audit trail of the secure development-related actions that are performed for continuous improvement purposes.\n    - Determine how often the collected information should be audited, and implement the necessary processes.\n    - Establish and enforce security and retention policies for evidence and artifact data.\n    - Be prepared to share evidence and artifact data when requested with auditors and purchasers who want to confirm the use of secure software development practices.",
    "weakness_title_read_only": "Lack of automation and implementation of supporting toolchains",
    "weakness_id_read_only": "P1681",
    "weakness": "6d97879c-c96d-4c99-b879-bab3e58d686c",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "activities",
    "created": "2022-06-02T16:30:04.389000-04:00",
    "last_updated": "2023-04-24T09:28:03.627000-04:00",
    "custom": "False",
    "rules": "541a6527-47cc-4100-bb97-53b8b98c7948",
    "rules_read_only": "A1230"
  },
  {
    "countermeasure_id": "T2345",
    "universal_id": "fb4aa38d-748c-4567-8e6c-7c0faa4706cc",
    "countermeasure_name": "Define and implement criteria for software security checks",
    "countermeasure_solution": "Define criteria for software security checks to ensure that the software resulting from the SDLC meets the organization’s expectations by defining and using criteria for checking the software’s security during development.\n\nThe defined criteria must meet the following objectives:\n    - Ensure that the criteria adequately indicates how effectively security risk is being managed.\n    - Define key performance indicators (KPIs) and key risk indicators (KRIs) for software security.\n    - Add software security criteria to existing checks (e.g., the Definition of Done in agile SDLC methodologies).\n    - Review the artifacts generated as part of the software development workflow system to determine if they meet the criteria's goals.\n    - Record security check approvals, rejections, and exception requests as part of the workflow and tracking system.\n    - Summarize the results of the software security checks, including a description of the security risks that were successfully mitigated.\n\n- Implement processes, mechanisms, and so on to gather and safeguard the necessary information in support of this criteria:\n    - Use the toolchain to automatically gather information that informs security decision-making.\n    - Deploy additional tools if needed to support the generation and collection of information supporting the criteria.\n    - Automate decision-making processes utilizing the criteria.\n    - Only allow authorized personnel to access the gathered information, and prevent any alteration or deletion of the information.\n    - Be prepared to share evidence and artifact data when requested with auditors and purchasers who want to confirm the use of secure software development practices.",
    "weakness_title_read_only": "Lack of proper criteria for software security checks",
    "weakness_id_read_only": "P1682",
    "weakness": "ba35b0a5-1129-4cac-9393-d7845f780706",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "activities",
    "created": "2022-06-02T16:43:39.725000-04:00",
    "last_updated": "2023-06-16T12:02:09.758000-04:00",
    "custom": "False",
    "rules": "a51f437c-40f4-4b75-a1d7-91767230872c;bba3a932-302b-415e-b24a-6fb715b2d7a1;541a6527-47cc-4100-bb97-53b8b98c7948;2b5f47f2-88fd-484b-899a-023076dbce25;3574b6ec-b55d-4390-99e7-35866abe1e17;68c64fac-a002-469d-8f74-872b0a3352c9;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1228;A1229;A1230;A1231;A1232;A1233;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233"
  },
  {
    "countermeasure_id": "T2346",
    "universal_id": "d3010d77-8b32-4c5e-aa6b-9381fc116f44",
    "countermeasure_name": "Establish an organization-wide software and code repository",
    "countermeasure_solution": "Establish an organization-wide software and code repository to store the following items: \n\n    - Store the release files, associated images, and other data in repositories following the organization’s established policy, and allow read-only access to them for auditing purposes by necessary personnel and no access by anyone else.\n    - Store and protect release integrity verification information and provenance data, such as by keeping it in a separate location from the release files or by signing the data.\n    - Store all source code in a code repository, and restrict access to it based on the nature of the code. For example, some code may be intended for public access, in which case its integrity and availability should be protected. Other code may also need its confidentiality protected.\n    - Store sanctioned and vetted open-source components. Maintain a list of organization-approved commercial software components and component versions along with their provenance data.\n    - Store well-secured software components created and maintained in-house.\n    - Use automated tools to identify and remediate documented and verified unsafe software practices on a continuous basis as human-readable code is checked into the code repository.\n    - Use version control features of the repository to track all changes made to the code with accountability to the individual developer account.",
    "weakness_title_read_only": "Lack of organization-wide software and code repository",
    "weakness_id_read_only": "P1683",
    "weakness": "cdbf2e22-53af-4955-8b9d-c46f89f5d403",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "activities",
    "created": "2022-06-02T17:18:38.426000-04:00",
    "last_updated": "2023-06-23T13:58:18.945000-04:00",
    "custom": "False",
    "rules": "a51f437c-40f4-4b75-a1d7-91767230872c;bba3a932-302b-415e-b24a-6fb715b2d7a1;541a6527-47cc-4100-bb97-53b8b98c7948;2b5f47f2-88fd-484b-899a-023076dbce25;3574b6ec-b55d-4390-99e7-35866abe1e17;68c64fac-a002-469d-8f74-872b0a3352c9;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1228;A1229;A1230;A1231;A1232;A1233;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233"
  },
  {
    "countermeasure_id": "T2347",
    "universal_id": "138a8726-0864-48e2-90a7-ac9110d15b91",
    "countermeasure_name": "Configure the Integrated Development Environment, Compilation, Interpreter, and Build Processes",
    "countermeasure_solution": "Configure the Integrated Development Environment (IDE), compilation, interpreter, and build processes to improve executable security and decrease the number of security vulnerabilities in the software and reduce costs by eliminating vulnerabilities before testing occurs.\n\n- Use compiler, interpreter, and build tools that offer features to improve executable security.\n    - Use up-to-date versions of compiler, interpreter, and build tools.\n    - Follow change management processes when deploying or updating compiler, interpreter, and build tools, and audit all unexpected changes to tools.\n    - Regularly validate the authenticity and integrity of compiler, interpreter, and build tools.\n\n- Determine which compiler, interpreter, and build tool features should be used and how each should be configured, then implement and use the approved configurations.\n    - Enable compiler features that produce warnings for poorly secured code during the compilation process.\n    - Implement the “clean build” concept, where all compiler warnings are treated as errors and eliminated.\n    - Enable compiler features that randomize characteristics, such as memory location usage, that would otherwise be easily predictable and thus exploitable.\n    - Conduct testing to ensure that the features are working as expected and not inadvertently causing any operational issues or other problems.\n    - Continuously verify that the approved configurations are being used.\n    - Document information about the compiler, interpreter, and build tool configuration in a knowledge base that developers can access, search, and reproduce in their local development environment.",
    "weakness_title_read_only": "Lack of proper integration of the development environment and tools",
    "weakness_id_read_only": "P1684",
    "weakness": "57a3c10f-2519-4a9f-b5b3-f8b1f5d35fef",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "activities",
    "created": "2022-06-02T17:39:04.582000-04:00",
    "last_updated": "2023-06-23T14:04:39.357000-04:00",
    "custom": "False",
    "rules": "a51f437c-40f4-4b75-a1d7-91767230872c;bba3a932-302b-415e-b24a-6fb715b2d7a1;541a6527-47cc-4100-bb97-53b8b98c7948;2b5f47f2-88fd-484b-899a-023076dbce25;3574b6ec-b55d-4390-99e7-35866abe1e17;68c64fac-a002-469d-8f74-872b0a3352c9;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1228;A1229;A1230;A1231;A1232;A1233;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233"
  },
  {
    "countermeasure_id": "T2348",
    "universal_id": "6cd35d3d-faea-4a49-a5c5-373c29c30cc5",
    "countermeasure_name": "Perform code reviews",
    "countermeasure_solution": "It may be required for a human to perform a code review to look directly at the code to find issues.\n\n- Follow the organization’s policies or guidelines for when code reviews should be performed and how they should be conducted. This may include third-party code and reusable code modules written in-house.\n- Perform peer review of code, and review any existing code review, analysis, or testing results as part of the peer review.\n- Use peer reviews to check code for backdoors and other malicious content.\n- Have the developer review their own human-readable code to complement (not replace) code review performed by other people or tools. \n- Use review checklists to verify that the code complies with the requirements.\n- Identify and document the root cause of each discovered issue.\n- Document lessons learned from code review and analysis in a knowledge base that developers can access and search.",
    "weakness_title_read_only": "Lack of proper code reviews",
    "weakness_id_read_only": "P1685",
    "weakness": "1132e71e-72c5-4713-be3b-564b24343697",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "development",
    "created": "2022-06-02T19:10:48.503000-04:00",
    "last_updated": "2023-01-20T15:59:10.035000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2349",
    "universal_id": "cd939a2c-d1f5-47cd-89db-38461ca8e5be",
    "countermeasure_name": "Configure software to have secure settings by default",
    "countermeasure_solution": "Define and implement secure default settings for the software baseline by determining how to configure each setting that has an effect on security so that the default settings are secure and do not weaken the security functions provided by the platform, network infrastructure, or services.\n\n- Conduct testing to ensure that the settings, including the default settings, are working as expected and are not inadvertently causing any security weaknesses, operational issues, or other problems.\n- Verify that the approved configuration is in place for the software.\n- Document each setting’s purpose, options, default value, security relevance, potential operational impact, and relationships with other settings.\n- Use authoritative programmatic technical mechanisms to document how each setting can be implemented and assessed by software administrators.\n- Store the default configuration in a usable format and follow change control practices for modifying it (e.g., configuration as code).",
    "weakness_title_read_only": "Lack of secure default settings",
    "weakness_id_read_only": "P1686",
    "weakness": "0d6ad0df-9c70-4053-929c-196dcf36c908",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2022-06-02T19:14:44.482000-04:00",
    "last_updated": "2023-03-07T12:35:52.815000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2350",
    "universal_id": "7a8e6aff-72ff-476e-8652-d6f444fdd165",
    "countermeasure_name": "Create a Product Security Incident Response Team (PSIRT)",
    "countermeasure_solution": "Create a Product Security Incidence Response Team (PSIRT) and associated processes.\n\n- Have a Product Security Incident Response Team and processes in place to handle the responses to vulnerability reports and incidents.\n- Have a security response playbook to handle a generic reported vulnerability, a report of zero-days, a vulnerability being exploited in the wild, and a major ongoing incident involving multiple parties and open-source software components.",
    "weakness_title_read_only": "Lack of a Product Security Incident Response",
    "weakness_id_read_only": "P1687",
    "weakness": "580e603b-1c5e-4a43-9f59-95707e21d2f6",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "activities",
    "created": "2022-06-02T19:19:01.764000-04:00",
    "last_updated": "2023-04-24T09:33:14.184000-04:00",
    "custom": "False",
    "rules": "bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1229 AND !A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233"
  },
  {
    "countermeasure_id": "T2351",
    "universal_id": "c0b23206-93f4-4d14-899d-d1eb744c780e",
    "countermeasure_name": "Verify that security-related roles and responsibilities are properly defined and assigned",
    "countermeasure_solution": "Verify that security-related roles in your organization are well defined and assigned:\n\n- Verify that everyone involved in the SDLC (including all members of the software development team, cybersecurity staff, security champions, project managers and leads, senior management, software developers, software testers, software assurance leads and staff, product owners, operations and platform engineers) is clearly and sufficiently aware of their security-related roles and responsibilities.\n- Verify that role-based training is provided.\n- Verify that senior leadership is informed regularly.",
    "weakness_title_read_only": "Lack of defining proper security roles and responsibilities",
    "weakness_id_read_only": "P1680",
    "weakness": "dcdd6dc8-fc7e-481e-9eac-21aa9b347b8b",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2022-06-03T12:52:18.348000-04:00",
    "last_updated": "2023-04-24T09:29:20.046000-04:00",
    "custom": "False",
    "rules": "bba3a932-302b-415e-b24a-6fb715b2d7a1",
    "rules_read_only": "A1229"
  },
  {
    "countermeasure_id": "T2352",
    "universal_id": "a02a9d4e-1c3b-4152-987b-115ab1fe0b91",
    "countermeasure_name": "Verify that supporting toolchains are properly implemented",
    "countermeasure_solution": "Verify that supporting toolchains are properly implemented in your organization:\n\n- Verify that the best tool is selected and integrated into each toolchain to mitigate identified risks.\n- Verify that best security practices are followed to deploy and maintain tools and toolchains.\n- Verify that tools are correctly configured to generate evidence and artifacts of their support of secure software development practices as defined by the organization.",
    "weakness_title_read_only": "Lack of automation and implementation of supporting toolchains",
    "weakness_id_read_only": "P1681",
    "weakness": "6d97879c-c96d-4c99-b879-bab3e58d686c",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2022-06-03T13:02:12.058000-04:00",
    "last_updated": "2023-04-24T09:28:12.299000-04:00",
    "custom": "False",
    "rules": "541a6527-47cc-4100-bb97-53b8b98c7948",
    "rules_read_only": "A1230"
  },
  {
    "countermeasure_id": "T2353",
    "universal_id": "35ee7914-0368-4f1a-aad3-c0d1a2cf8d21",
    "countermeasure_name": "Verify that proper criteria for software security checks are defined and implemented",
    "countermeasure_solution": "Verify that proper criteria for software security checks are defined and implemented in your organization:\n\n- Verify that proper criteria for software security checks are defined and meet the organization's security objectives.\n- Verify that proper processes and mechanisms are implemented to gather and safeguard the necessary information in support of these criteria.",
    "weakness_title_read_only": "Lack of proper criteria for software security checks",
    "weakness_id_read_only": "P1682",
    "weakness": "ba35b0a5-1129-4cac-9393-d7845f780706",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2022-06-03T13:04:51.241000-04:00",
    "last_updated": "2023-06-19T15:56:17.032000-04:00",
    "custom": "False",
    "rules": "a51f437c-40f4-4b75-a1d7-91767230872c;bba3a932-302b-415e-b24a-6fb715b2d7a1;541a6527-47cc-4100-bb97-53b8b98c7948;2b5f47f2-88fd-484b-899a-023076dbce25;3574b6ec-b55d-4390-99e7-35866abe1e17;68c64fac-a002-469d-8f74-872b0a3352c9;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1228;A1229;A1230;A1231;A1232;A1233;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233"
  },
  {
    "countermeasure_id": "T2354",
    "universal_id": "d8d266f0-327e-4e45-85cc-fcc277c830eb",
    "countermeasure_name": "Verify that an organization-wide software and code repository is established and used",
    "countermeasure_solution": "Verify that an organization-wide software and code repository is established and is used to store the following items:\n \n- The release files, associated images, and other data in repositories following the organization’s established policy, and allow read-only access to them for auditing purposes by necessary personnel and no access by anyone else.\n- The release integrity verification information and provenance data, such as by keeping it in a separate location from the release files or by signing the data.\n- All source code in a code repository, and restrict access to it based on the nature of the code. For example, some code may be intended for public access, in which case its integrity and availability should be protected. \n- Sanctioned and vetted open-source components. Maintain a list of organization-approved commercial software components and component versions along with their provenance data.\n- Software components created and maintained in-house.\n\nVerify that automated tools are used to identify and remediate documented and verified unsafe software practices on a continuous basis as human-readable code is checked into the code repository.\n\nVerify that version control features of the repository are used to track all changes made to the code with accountability to the individual developer account.",
    "weakness_title_read_only": "Lack of organization-wide software and code repository",
    "weakness_id_read_only": "P1683",
    "weakness": "cdbf2e22-53af-4955-8b9d-c46f89f5d403",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2022-06-03T13:09:12.735000-04:00",
    "last_updated": "2023-03-07T11:57:02.095000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2355",
    "universal_id": "4c9f16bb-1356-41a4-bb20-6a5a5bb03f19",
    "countermeasure_name": "Verify that the IDE, compiler, interpreter, and build processes are configured securely",
    "countermeasure_solution": "Verify that the Integrated Development Environment (IDE), compiler, interpreter, and build processes are configured securely:\n\n- Verify that up-to-date versions of compiler, interpreter, and build tools are used.\n- Verify that change management processes are used when deploying or updating compiler, interpreter, and build tools, and audit all unexpected changes to tools.\n- Verify that the authenticity and integrity of compiler, interpreter, and build tools are regularly validated\n- Verify that the compiler, interpreter, and build tool use the approved configurations.",
    "weakness_title_read_only": "Lack of proper integration of the development environment and tools",
    "weakness_id_read_only": "P1684",
    "weakness": "57a3c10f-2519-4a9f-b5b3-f8b1f5d35fef",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2022-06-03T13:12:54.685000-04:00",
    "last_updated": "2022-06-09T01:52:57.477000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2356",
    "universal_id": "c9285c57-3e71-4b5d-9a07-f7743ba0adf0",
    "countermeasure_name": "Verify that code reviews are performed properly",
    "countermeasure_solution": "Verify that code reviews are performed properly:\n\n- Verify that the organization’s policies or guidelines for when code reviews are followed.\n- Verify that peer review of code is performed.\n- Verify that developers review their own human-readable code to complement (not replace) code review performed by other people or tools. \n- Verify that the root cause of each discovered issue is identified and documented.\n- Verify that lessons learned from code review and analysis are documented in a knowledgebase that developers can access and search.",
    "weakness_title_read_only": "Lack of proper code reviews",
    "weakness_id_read_only": "P1685",
    "weakness": "1132e71e-72c5-4713-be3b-564b24343697",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2022-06-03T13:16:06.666000-04:00",
    "last_updated": "2022-06-09T01:52:58.174000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2357",
    "universal_id": "43be5506-6b2d-4cbd-8b5d-f3a48f59a21b",
    "countermeasure_name": "Verify that software is configured to have secure settings by default",
    "countermeasure_solution": "Verify that software is configured to have secure settings by default:\n\n- Verify that testing is conducted to ensure that the settings, including the default settings, are working as expected.\n- Verify that the approved configuration is in place for the software.\n- Verify that each setting’s purpose, options, default value, security relevance, potential operational impact, and relationships with other settings are documented.\n- Verify that authoritative programmatic technical mechanisms are used to document how each setting can be implemented and assessed by software administrators.\n- Verify that the default configuration is stored in a usable format and follow change control practices for modifying it (e.g., configuration as code).",
    "weakness_title_read_only": "Lack of secure default settings",
    "weakness_id_read_only": "P1686",
    "weakness": "0d6ad0df-9c70-4053-929c-196dcf36c908",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2022-06-03T13:18:46.660000-04:00",
    "last_updated": "2023-03-07T12:36:29.915000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2358",
    "universal_id": "f8f910d2-834a-42b2-94de-d04a0410d6f2",
    "countermeasure_name": "Verify that the organization has a Product Security Incident Response Team (PSIRT)",
    "countermeasure_solution": "Verify that the organization has a Product Security Incident Response Team (PSIRT):\n\n- Verify that your organization has a Product Security Incident Response Team and processes are in place to handle the responses to vulnerability reports and incidents.\n- Verify that the PSIRT team has a security response playbook to handle a generic reported vulnerability, a report of zero-days, a vulnerability being exploited in the wild, and a major ongoing incident involving multiple parties and open-source software components.",
    "weakness_title_read_only": "Lack of a Product Security Incident Response",
    "weakness_id_read_only": "P1687",
    "weakness": "580e603b-1c5e-4a43-9f59-95707e21d2f6",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2022-06-03T13:21:00.764000-04:00",
    "last_updated": "2023-04-24T09:34:35.883000-04:00",
    "custom": "False",
    "rules": "bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1229 AND !A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233"
  },
  {
    "countermeasure_id": "T2359",
    "universal_id": "f6959cf0-b451-4b6b-8148-10b87744758f",
    "countermeasure_name": "Configure a secure user authentication (Cloud) (2/2)",
    "countermeasure_solution": "Follow these guidelines to secure the authentication process: \n\n- Enforce multi-factor authentication for privileged users.\n- Do not use privileged accounts/access keys for day-to-day work.\n- Enforce a strong password policy for users.\n- Set the password expiration days to a limited time (e.g. 90 days) and prevent password reuse.\n- Rotate or change all user security credentials (e.g. user access key) regularly or even immediately if they have been exposed.\n- Remove security credentials (e.g. user access key) that are no longer needed.\n- Ensure that only one active access key is available for any single user.\n- Use temporary access keys whenever possible.",
    "weakness_title_read_only": "Improper user authentication (Cloud)",
    "weakness_id_read_only": "P1659",
    "weakness": "5aa62730-c631-48d7-b732-9d56c41346bd",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2022-06-03T14:00:52.195000-04:00",
    "last_updated": "2023-04-25T12:32:13.543000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2360",
    "universal_id": "c47b7d7f-2cfd-4ad2-8147-451e381d0868",
    "countermeasure_name": "Configure a secure user authorization (Cloud) (2/2)",
    "countermeasure_solution": "Follow these guidelines to create secure access policies:\n\n- Restrict access to identity and access management services to a limited group of trusted users.\n- Follow the principles of least-privileged access when creating access policies and only assign a minimal set of permissions to any user or group.\n- If possible, attach access policies only to groups or roles instead of individual users. If an individual user has a user-specific policy, ensure you understand why that user needs the policy.",
    "weakness_title_read_only": "Permissive access policies or improper access control (Cloud)",
    "weakness_id_read_only": "P1660",
    "weakness": "d3ab7149-1792-4220-a1aa-a27bb5dbab68",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "deployment",
    "created": "2022-06-03T14:13:26.934000-04:00",
    "last_updated": "2023-04-25T12:26:32.840000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2361",
    "universal_id": "2e2b851b-b847-45a6-a08d-a860d0559905",
    "countermeasure_name": "Design a secure application architecture for the cloud environment (Cloud) (2/2)",
    "countermeasure_solution": "Follow these guidelines to design your application architecture:\n\n- Separate your application into distinct layers (e.g. Web, Application, and Data layers)\n- If possible, use autoscaling services from your cloud provider to automatically scale up/down your environment.\n- Use load balancing services from your cloud provider to separate the incoming traffic between your servers.\n- Use availability regions and zones from your cloud provider to create any necessary redundancy in your application.\n- If needed, use content distribution networks and services from your cloud provider to protect your application against DDoS attacks.",
    "weakness_title_read_only": "Design weakness in application security architecture (Cloud)",
    "weakness_id_read_only": "P1661",
    "weakness": "3a1cb75a-468d-4aed-8a5f-0639432f235a",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "architecture-design",
    "created": "2022-06-03T14:13:30.408000-04:00",
    "last_updated": "2023-04-25T12:21:12.971000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2362",
    "universal_id": "3faf8060-1148-492e-96a7-b458b4e6d16d",
    "countermeasure_name": "Secure network access control (Cloud) (2/4)",
    "countermeasure_solution": "Follow the guidelines below to secure network access control in your cloud environment:\n\n- Use the default VPC only for testing and development purposes and avoid using it for the production environment.\n- Configure routing tables and network access control lists to control inbound/outbound traffic into or out of subnets based on the least privilege principle for necessary services.\n- Configure security/firewall rules for each server/instance to limit the inbound/outbound traffic to only required services and ports.\n- Create secure gateways for access to the public Internet and assign public IPs to only required instances/servers.",
    "weakness_title_read_only": "Improper network access control (Cloud)",
    "weakness_id_read_only": "P1662",
    "weakness": "257ad3e6-8ca7-4218-8a68-0d2079466105",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "deployment",
    "created": "2022-06-03T14:13:34.169000-04:00",
    "last_updated": "2023-04-25T12:16:50.994000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2363",
    "universal_id": "0bb6c663-dfa6-4c4e-b61b-12a1cc1cb8fe",
    "countermeasure_name": "Secure network access control (Cloud) (3/4)",
    "countermeasure_solution": "Follow the guidelines below to secure network access control in your cloud environment:\n\n- Use the default VPC only for testing and development purposes and avoid using it for the production environment.\n- Configure routing tables and network access control lists to control inbound/outbound traffic into or out of subnets based on the least privilege principle for necessary services.\n- Configure security/firewall rules for each server/instance to limit the inbound/outbound traffic to only required services and ports.\n- Create secure gateways for access to the public Internet and assign public IPs to only required instances/servers.",
    "weakness_title_read_only": "Improper network access control (Cloud)",
    "weakness_id_read_only": "P1662",
    "weakness": "257ad3e6-8ca7-4218-8a68-0d2079466105",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "deployment",
    "created": "2022-06-03T14:13:41.472000-04:00",
    "last_updated": "2023-04-25T12:11:49.656000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2364",
    "universal_id": "91bb9113-c49f-44b5-a18d-3ecfa0d9843f",
    "countermeasure_name": "Secure network access control (Cloud) (4/4)",
    "countermeasure_solution": "Follow the guidelines below to secure network access control in your cloud environment:\n\n- Use the default VPC only for testing and development purposes and avoid using it for the production environment.\n- Configure routing tables and network access control lists to control inbound/outbound traffic into or out of subnets based on the least privilege principle for necessary services.\n- Configure security/firewall rules for each server/instance to limit the inbound/outbound traffic to only required services and ports.\n- Create secure gateways for access to the public Internet and assign public IPs to only required instances/servers.",
    "weakness_title_read_only": "Improper network access control (Cloud)",
    "weakness_id_read_only": "P1662",
    "weakness": "257ad3e6-8ca7-4218-8a68-0d2079466105",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "deployment",
    "created": "2022-06-03T14:13:48.674000-04:00",
    "last_updated": "2023-04-25T11:57:40.621000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2365",
    "universal_id": "eb7e8228-957c-43bf-9260-f746369be741",
    "countermeasure_name": "Secure data in transit (Cloud) (2/2)",
    "countermeasure_solution": "To prevent unauthorized access to data in transit, make sure to implement adequate security measures:\n\n- Enforce the use of secure protocols that utilize encrypted network communications like TLS.\n- Ensure you use a secure version of each protocol.\n- Securely store secret keys and certificates used for secure communications.\n- Rotate secret keys and certificates used for secure communications regularly and avoid using expired TLS certificates.",
    "weakness_title_read_only": "Improper protection of data in transit (Cloud)",
    "weakness_id_read_only": "P1663",
    "weakness": "c22e9f08-e27b-40c1-8bca-d4153e1d7c27",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "deployment",
    "created": "2022-06-03T14:13:57.207000-04:00",
    "last_updated": "2023-04-25T11:51:42.152000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2366",
    "universal_id": "479d4be6-0ad1-4060-ab12-9abc2917c5d9",
    "countermeasure_name": "Protect data at rest (Cloud) (2/3)",
    "countermeasure_solution": "Follow the guidelines below to secure and protect data at rest:\n\n- Enable encryption for sensitive volumes attached to your instances/servers.\n- Enable encryption for all your database instances managed by your cloud provider.\n- Enable encryption for other storage services (e.g. object stores) provided by your cloud provider.\n- When possible, enable versioning for the storage services provided by your cloud provider.\n- Design a lifecycle policy for your storage services and configure data retention based on your specific needs.\n- Restrict access to your storage services.",
    "weakness_title_read_only": "Improper protection of data at rest (Cloud)",
    "weakness_id_read_only": "P1665",
    "weakness": "03ea5dd6-30f3-40e2-a261-f7b13d26d96b",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "deployment",
    "created": "2022-06-03T14:13:59.266000-04:00",
    "last_updated": "2023-04-25T11:50:49.835000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2367",
    "universal_id": "964ed0b9-cae6-4d8c-9f9a-35eae7c6e7ce",
    "countermeasure_name": "Protect data at rest (Cloud) (3/3)",
    "countermeasure_solution": "Follow the guidelines below to secure and protect data at rest:\n\n- Enable encryption for sensitive volumes attached to your instances/servers.\n- Enable encryption for all your database instances managed by your cloud provider.\n- Enable encryption for other storage services (e.g. object stores) provided by your cloud provider.\n- When possible, enable versioning for the storage services provided by your cloud provider.\n- Design a lifecycle policy for your storage services and configure data retention based on your specific needs.\n- Restrict access to your storage services.",
    "weakness_title_read_only": "Improper protection of data at rest (Cloud)",
    "weakness_id_read_only": "P1665",
    "weakness": "03ea5dd6-30f3-40e2-a261-f7b13d26d96b",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "deployment",
    "created": "2022-06-03T14:14:03.141000-04:00",
    "last_updated": "2023-04-25T11:45:47.265000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2368",
    "universal_id": "69ee6442-e701-4096-a629-e42db1c04077",
    "countermeasure_name": "Enable logging and protect log files in your cloud environment (Cloud) (2/4)",
    "countermeasure_solution": "Follow the guidelines below to enable and protect logging information:\n\n- Use logging services from your cloud provider.\n- When possible, enable logging for changes to the configuration of your cloud resources.\n- Enable logging for different cloud services you use.\n- Restrict access to logs.\n- When possible, encrypt logs.\n- When possible, version and backup logs.\n- Include sufficient information in the log files.",
    "weakness_title_read_only": "Lack of activity tracking and secure logging (Cloud)",
    "weakness_id_read_only": "P1666",
    "weakness": "f056c394-85fc-45c8-b301-4c4975aafdf4",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2022-06-03T14:14:11.019000-04:00",
    "last_updated": "2023-05-11T11:46:01.784000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2369",
    "universal_id": "80ca0286-2df2-48b4-a77e-d653b555628b",
    "countermeasure_name": "Enable logging and protect log files in your cloud environment (Cloud) (3/4)",
    "countermeasure_solution": "Follow the guidelines below to enable and protect logging information:\n\n- Use logging services from your cloud provider.\n- When possible, enable logging for changes to the configuration of your cloud resources.\n- Enable logging for different cloud services you use.\n- Restrict access to logs.\n- When possible, encrypt logs.\n- When possible, version and backup logs.\n- Include sufficient information in the log files.",
    "weakness_title_read_only": "Lack of activity tracking and secure logging (Cloud)",
    "weakness_id_read_only": "P1666",
    "weakness": "f056c394-85fc-45c8-b301-4c4975aafdf4",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2022-06-03T14:14:21.531000-04:00",
    "last_updated": "2023-04-28T17:31:11.935000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2370",
    "universal_id": "ee93296f-d5a3-43e7-ac0a-7633a59b8ba3",
    "countermeasure_name": "Enable logging and protect log files in your cloud environment (Cloud) (4/4)",
    "countermeasure_solution": "Follow the guidelines below to enable and protect logging information:\n\n- Use logging services from your cloud provider.\n- When possible, enable logging for changes to the configuration of your cloud resources.\n- Enable logging for different cloud services you use.\n- Restrict access to logs.\n- When possible, encrypt logs.\n- When possible, version and backup logs.\n- Include sufficient information in the log files.",
    "weakness_title_read_only": "Lack of activity tracking and secure logging (Cloud)",
    "weakness_id_read_only": "P1666",
    "weakness": "f056c394-85fc-45c8-b301-4c4975aafdf4",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2022-06-03T14:14:31.838000-04:00",
    "last_updated": "2023-04-28T17:29:28.036000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2371",
    "universal_id": "2e51de2b-54e0-4f5b-a4ae-7cdb625e46d3",
    "countermeasure_name": "Enable logs and configuration monitoring in your cloud environment (Cloud) (2/4)",
    "countermeasure_solution": "Follow the guidelines below for effective log and configuration monitoring:\n\n- Use log monitoring services from your cloud provider.\n- When possible, enable configuration monitoring for your cloud resources.\n- Create log metrics and alarms to be notified of anomalies.\n- Install and use monitoring agents inside your cloud instances to get more comprehensive performance data about your applications and services.",
    "weakness_title_read_only": "Lack of monitoring (Cloud)",
    "weakness_id_read_only": "P1667",
    "weakness": "692ff87f-9bb7-4995-b15e-a24d351df672",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2022-06-03T14:14:44.345000-04:00",
    "last_updated": "2023-05-11T11:49:51.521000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2372",
    "universal_id": "5c1e0691-1a70-4e8d-97ed-89164ff27281",
    "countermeasure_name": "Enable logs and configuration monitoring in your cloud environment (Cloud) (3/4)",
    "countermeasure_solution": "Follow the guidelines below for effective log and configuration monitoring:\n\n- Use log monitoring services from your cloud provider.\n- When possible, enable configuration monitoring for your cloud resources.\n- Create log metrics and alarms to be notified of anomalies.\n- Install and use monitoring agents inside your cloud instances to get more comprehensive performance data about your applications and services.",
    "weakness_title_read_only": "Lack of monitoring (Cloud)",
    "weakness_id_read_only": "P1667",
    "weakness": "692ff87f-9bb7-4995-b15e-a24d351df672",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2022-06-03T14:14:48.601000-04:00",
    "last_updated": "2023-05-11T11:50:38.563000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2373",
    "universal_id": "d5c6d082-8785-4486-b723-5a078c49c798",
    "countermeasure_name": "Enable logs and configuration monitoring in your cloud environment (Cloud) (4/4)",
    "countermeasure_solution": "Follow the guidelines below for effective log and configuration monitoring:\n\n- Use log monitoring services from your cloud provider.\n- When possible, enable configuration monitoring for your cloud resources.\n- Create log metrics and alarms to be notified of anomalies.\n- Install and use monitoring agents inside your cloud instances to get more comprehensive performance data about your applications and services.",
    "weakness_title_read_only": "Lack of monitoring (Cloud)",
    "weakness_id_read_only": "P1667",
    "weakness": "692ff87f-9bb7-4995-b15e-a24d351df672",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2022-06-03T14:14:52.840000-04:00",
    "last_updated": "2023-04-25T12:50:48.010000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2374",
    "universal_id": "a620bf90-a550-47e4-b295-59cbf28b99c1",
    "countermeasure_name": "Verify that logging is enabled and log files are protected (Cloud) (2/2)",
    "countermeasure_solution": "Follow these guidelines to verify that logging information in your cloud environment is protected:\n\n- Verify the use of logging services provided by your cloud provider.\n- Verify that changes to the configuration of your cloud resources are logged.\n- Verify that logging takes place for your specific cloud services.\n- Verify that log files are encrypted.\n- Verify the versioning and backup of log files.\n- Verify that sufficient information is included in log files.",
    "weakness_title_read_only": "Lack of activity tracking and secure logging (Cloud)",
    "weakness_id_read_only": "P1666",
    "weakness": "f056c394-85fc-45c8-b301-4c4975aafdf4",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2022-06-03T14:15:00.716000-04:00",
    "last_updated": "2023-05-11T12:49:39.812000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2375",
    "universal_id": "e14ce641-2c81-4437-a794-32f579e5f4f0",
    "countermeasure_name": "Verify that log monitoring and configuration monitoring are enabled (Cloud) (2/3)",
    "countermeasure_solution": "Follow these guidelines to verify that logs and configurations are monitored effectively:\n\n- Verify the use of log monitoring services provided by your cloud provider.\n- Verify that configuration monitoring for your cloud resources is enabled.\n- Verify the existence of log metrics and alarms for notification of anomalies.\n- Verify that monitoring agents inside your cloud instances are applied to get more comprehensive performance data about your applications and services.",
    "weakness_title_read_only": "Lack of monitoring (Cloud)",
    "weakness_id_read_only": "P1667",
    "weakness": "692ff87f-9bb7-4995-b15e-a24d351df672",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2022-06-03T14:15:10.106000-04:00",
    "last_updated": "2023-05-11T12:49:41.416000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2376",
    "universal_id": "f603f3ac-11a7-489c-a5fe-11dac60ff395",
    "countermeasure_name": "Verify that log monitoring and configuration monitoring are enabled (Cloud) (3/3)",
    "countermeasure_solution": "Follow these guidelines to verify that logs and configurations are monitored effectively:\n\n- Verify the use of log monitoring services provided by your cloud provider.\n- Verify that configuration monitoring for your cloud resources is enabled.\n- Verify the existence of log metrics and alarms for notification of anomalies.\n- Verify that monitoring agents inside your cloud instances are applied to get more comprehensive performance data about your applications and services.",
    "weakness_title_read_only": "Lack of monitoring (Cloud)",
    "weakness_id_read_only": "P1667",
    "weakness": "692ff87f-9bb7-4995-b15e-a24d351df672",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2022-06-03T14:15:12.849000-04:00",
    "last_updated": "2023-05-11T12:49:42.495000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2378",
    "universal_id": "f1b2b17b-adbb-4aa0-beb6-0525948ebf2a",
    "countermeasure_name": "Ensure compatibility with the United Nations automotive cybersecurity regulation WP.29",
    "countermeasure_solution": "To help ensure the safety of vehicles, the United Nations Economic Commission for Europe created the World Forum for Harmonization of Vehicle Regulations Working Party 29 (UNECE WP.29). This global forum introduced regulation covering the cybersecurity of vehicles and cybersecurity management systems. It provides guidelines for vehicle manufacturers regarding cybersecurity threats that can endanger the safety of vehicles, and offers mitigations to minimize these threats. Additionally, it defines some requirements for the cybersecurity management systems used by vehicle manufacturers.\n\nIn summary, vehicle manufacturers must follow these guidelines:\n\n- Use a Cyber Security Management System (CSMS) as part of a systematic risk-based approach that identifies processes and responsibilities and manages the risk associated with cyber threats. A CSMS is applicable to the following phases:\n    - Development phase\n    - Production phase\n    - Post-production phase\n- Implement processes to monitor, detect, and respond to cyber threats and vulnerabilities (7.2).\n- Verify that identified risks are managed appropriately (7.2).\n- Ensure that the risk assessment is kept up to date (7.2).\n- Create yearly assessments of whether the implemented cybersecurity measures are still efficient considering the latest cyber threats and vulnerabilities (7.2, 7.4).\n- Implement processes for supporting the analysis of failed and successful cyber-attacks (7.2).\n- Implement processes for managing dependencies with contracted suppliers, service providers, or manufacturer sub-organizations (7.2).\n- Identify and manage supplier-related risks for the vehicle being approved, and perform an exhaustive risk assessment for the critical elements of the vehicle type (7.3).\n- Perform sufficiently applicable testing to verify the effectiveness of implemented security measures (7.3).\n- Implement measures which (7.3):\n    - Identify and prevent cybersecurity attacks against vehicles.\n    - Allow the vehicle manufacturer to monitor a vehicle for purposes of detecting attacks, cyber threats, and vulnerabilities.\n    - Enable the analysis of attempted or successful cyberattacks through data forensics.\n- During the threat analysis, consider the following possible attack impacts (Annex 5):\n    - Safe operation of the vehicle and its functions\n    - Damage, loss, or breach of data\n    - Modification of the software and its impact on the performance of the vehicle\n    - Criminal activities\n\nFor more information, refer to [UN Regulation No. 155](https://unece.org/transport/documents/2021/03/standards/un-regulation-no-155-cyber-security-and-cyber-security).",
    "weakness_title_read_only": "Lack of processes for the approval of vehicles with regards to cyber security and cyber security management system",
    "weakness_id_read_only": "P1688",
    "weakness": "b0fa4a5d-ede7-433e-8035-e0c591608f49",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "activities",
    "created": "2022-07-28T12:43:10.256000-04:00",
    "last_updated": "2022-09-07T08:34:58.517000-04:00",
    "custom": "False",
    "rules": "1660e225-720a-43b4-aab8-81ec5242de06",
    "rules_read_only": "A1282"
  },
  {
    "countermeasure_id": "T2379",
    "universal_id": "2a1fc831-75ec-46d7-9290-865b6f716090",
    "countermeasure_name": "Ensure compliance with ISO/SAE 21434",
    "countermeasure_solution": "ISO/SAE 21434 is a standard that addresses cybersecurity in the engineering and the production of electrical and electronic (E/E) systems for road vehicles. The standard applies to series production road vehicle E/E systems, including their components and interfaces, whose development or modification began after August, 2021. Systems that are external to vehicles (such as back end servers) are not within the scope of this standard. Furthermore, ISO/SAE 21434 applies to the supply chain, but allows some flexibility for splitting the work between development partners to accommodate the needs of various situations.\n\nISO/SAE 21434 is divided into fifteen clauses. Each clause discusses cybersecurity specifications and requirements that need to be followed by organizations from a certain perspective. Hence, the standard enables organizations to manage cybersecurity risks and establish clear cybersecurity policies and processes. The cybersecurity risk management proposed by this standard applies throughout all phases of the development life cycle including concept, product development, production, operation, and maintenance.\n\nThe following clauses offer an overview of how organizations can comply with ISO/SAE 21434:\n\n- Clause 5: Maintain a cybersecurity culture, including well-defined policies, rules, and processes that can be audited against ISO/SAE 21434 requirements. Furthermore, implement systems and tools for quality assurance and cybersecurity management.\n- Clause 6: Allocate responsibilities and decide how cybersecurity-related project and engineering activities should be planned. This includes creating a cybersecurity case, assessing cybersecurity requirements, and deciding from a security perspective if a component can be deployed safely.\n- Clause 7: Provide as a supplier (e.g. a tier-1 organization) a record of cybersecurity capabilities. Evaluate as a customer (e.g. an OEM) supplier capabilities, and specify the cybersecurity requirements of items that the supplier provides. Both suppliers and customers must detail the distributed cybersecurity activities that need to be completed and prepare a cybersecurity interface agreement. This interface agreement should specify the actions and responsibilities of each party.\n- Clause 8: Monitor cybersecurity information and events during all phases of the development life cycle to find weaknesses, and then manage related vulnerabilities. To obtain cybersecurity information, use both internal sources (e.g. past vulnerabilities, collected information from vehicles) and external sources (e.g. recently discovered attack methods). By monitoring events, identify weaknesses and analyze them to find vulnerabilities. Manage and eliminate vulnerabilities by applying available remediations.\n- Clause 9: Specify the environment, boundaries, functions, architecture, and goals of items in the context of cybersecurity. Analyze the items based on their definitions, identify risks and threats, and choose suitable risk treatment methods. Verify the correctness, completeness, and consistency of the cybersecurity goals with implemented methods.\n- Clause 10: Define cybersecurity specifications from abstract to detailed, verify them from an architectural abstraction point of view, identify weaknesses, and document evidence that the implementations conform to the cybersecurity specifications. Use established approaches and principles such as NIST 800-160 Vol. 1, appendix F.1 to minizine identified weaknesses. To verify cybersecurity requirements, consider methods such as static and dynamic analysis, control and data flow analysis, requirement-based and interface tests, and resource usage evaluation. When testing, use defined test metrics to ensure sufficient coverage and consider methods such as fuzzing, penetration testing, vulnerability scanning, and functional testing. Provide a rationale for declining to test certain parts or components.\n- Clause 11: Validate the cybersecurity of items at the vehicle level, and ensure that risks are addressed sufficiently by cybersecurity goals. Confirm and validate the cybersecurity goals and claims, and ensure that no unreasonable risks are left untreated. Use methods such as penetration testing, reviews of managed risks, and documented validation reports.\n- Clause 12: Create a production control plan to prevent the introduction of vulnerabilities during the production phase and to ensure that post-development cybersecurity requirements are met. Within the production control plan, specify post-development cybersecurity requirements, tools and equipment used during production, physical and logical controls used to prevent unauthorized alteration of software during production, and inspection and calibration checks for post-development.\n- Clause 13: Maintain cybersecurity during vehicle operation by determining and implementing remedial actions for cybersecurity incidents. Maintain each component's security during their entire lifespan. Create a cybersecurity incident response plan for each potential cybersecurity incident, detailing remedial action, a communication plan, assigned responsibilities, a procedure for recording new cybersecurity information related to the incident, a method for determining progress, closure criteria, and actions for closure.\n- Clause 14: Announce the end of cybersecurity support to customers. Facilitate the decommissioning of items and components from a cybersecurity perspective.\n- Clause 15: Perform Threat Analysis and Risk Assessment (TARA) to evaluate the potential impact of threats on road users. Include in the analysis and assessment asset identification, threat scenario identification, impact rating determination, attack path analysis, attack feasibility rating, risk value determination, and ​​risk treatment selection.",
    "weakness_title_read_only": "Lack of processes for the approval of vehicles with regards to cyber security and cyber security management system",
    "weakness_id_read_only": "P1688",
    "weakness": "b0fa4a5d-ede7-433e-8035-e0c591608f49",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "activities",
    "created": "2022-08-24T07:29:04.769000-04:00",
    "last_updated": "2023-06-08T11:45:27.429000-04:00",
    "custom": "False",
    "rules": "eb5aba31-943f-4f34-a839-24bca9fcec51 AND f4c07455-7afd-4dc3-88ad-144a9ef041ef",
    "rules_read_only": "A1358 AND A1294"
  },
  {
    "countermeasure_id": "T2380",
    "universal_id": "48ca8148-4694-4604-85a9-628dabdb9b0c",
    "countermeasure_name": "Review and verify playbooks (Ansible)",
    "countermeasure_solution": "Review Ansible playbooks carefully to defend your system against mistakes and potential security vulnerabilities. One good tool for verifying playbooks is [ansible-lint](https://github.com/ansible/ansible-lint), a free linter maintained by RedHat. A linter is a type of static analysis tool that scans code for mistakes or potentially dangerous practices. (We call these code smells, because even though they aren’t outright errors, they’re a type of clue suggesting that something’s rotten.) Some of the potential problems ansible-lint can find include:\n\n- Deprecated features\n- Syntax that may be unclear or may lead to unexpected side effects\n- Direct commands or shell access instead of dedicated modules, which are safer and less error-prone\n- Tasks with missing name information",
    "weakness_title_read_only": "Insecure Ansible playbooks",
    "weakness_id_read_only": "P1691",
    "weakness": "f3d935a1-f43c-4ff1-81c7-d32d6a0075e4",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "development",
    "created": "2022-08-29T09:46:31.055000-04:00",
    "last_updated": "2022-11-21T12:40:32.892000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2381",
    "universal_id": "7cdd0cb0-a97f-480b-95d1-86f79408b30c",
    "countermeasure_name": "Follow a secure and guided workflow process (Ansible)",
    "countermeasure_solution": "Use a guided workflow process that guarantees predictability and stability. It greatly reduces the chance that someone will make an unexpected configuration change that could introduce a security vulnerability. It also prevents the fragile “snowflake server” problem, where a machine that’s been fine-tuned over time can’t be easily recreated with the right configuration. \n\nBelow is an example of a a guided workflow process:\n\n- Assign developers to write playbooks for the environment they need.\n- Assign a DevOps engineer to review the playbooks and sign off on them.\n- Assign a sysadmin to run the playbooks to create or update the environment.\n\nWhen creating a workflow, keep the following in mind:\n\n- Always use a VCS (Version Control System):\nThe basis of every good Ansible workflow is a VCS like Git. Every Ansible playbook you create should be stored in source control. When you run a playbook, only run the current, committed version whether you’re in a test or production environment.\n- Never make configuration changes by hand. No matter how good your workflow, it’s only reliable if you're consistent. That means preventing people from making direct configuration changes outside of Ansible or running playbooks that aren’t in version control.\n- Always build with Ansible first.\nWhen you need a new server, make the playbook first, and then use the playbook to build the server. Don’t build the server and then try to write a matching playbook.\n- Reuse your playbooks.\nYou can use the same playbooks in different environments using different credentials (for example, in testing and production). This helps to limit the amount of configuration you need to manage, and reduces configuration drift between your development and production environments.\n- Run Ansible early and often.\nCreating an environment is an iterative process. You need to tweak systems to optimize performance and roll out new updates. To prevent configuration drift, all these changes should go through Ansible playbooks.",
    "weakness_title_read_only": "Insecure Ansible playbooks",
    "weakness_id_read_only": "P1691",
    "weakness": "f3d935a1-f43c-4ff1-81c7-d32d6a0075e4",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "development",
    "created": "2022-08-29T10:20:09.867000-04:00",
    "last_updated": "2022-09-11T09:20:20.761000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2382",
    "universal_id": "3733bd75-c25d-4ff9-b645-08905cd185eb",
    "countermeasure_name": "Automate the workflow (Ansible)",
    "countermeasure_solution": "Set up a reliable workflow with Ansible. You can do this by having a qualified team member review and apply Ansible playbooks manually. However, it is possible to apply Ansible playbooks as an integrated step in the build pipeline. In this way, once the software is built it’s deployed to the infrastructure you expect, which is always correctly configured according to the latest version of your playbook.\n\nOne way to automate the Ansible workflow is to trigger the `ansible-playbook` command with a GitHub action. If you want to control which users can initiate builds, separate workloads by team, or configure alerts, you can use the web interface of Ansible Automation Platform (a subscription-based version of Ansible provided by RedHat) or the open-source community implementation called AWX. Alternatively, you may want to combine Ansible with a dedicated CI/CD tool like Jenkins.",
    "weakness_title_read_only": "Insecure Ansible playbooks",
    "weakness_id_read_only": "P1691",
    "weakness": "f3d935a1-f43c-4ff1-81c7-d32d6a0075e4",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "development",
    "created": "2022-08-29T10:48:44.085000-04:00",
    "last_updated": "2023-03-07T11:57:45.941000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2383",
    "universal_id": "3448d2e7-2d20-451a-bdc0-4099f93aed9c",
    "countermeasure_name": "Avoid using the 'root' account (Ansible)",
    "countermeasure_solution": "Do not use the root account to run commands. The distinction between logging in as root and elevating to root is a subtle one, particularly if you don’t have experience with Linux administration. However, there are several reasons that remote root access should be disabled:\n\n- It violates the principle of least privilege. That’s because logging in as root gives your entire session broad, unchecked permissions that it may not need, increasing the risk of damage from an error or an exploit.\n- It breaks logging. If you use specific user accounts, you’ll be able to track the operations they perform, even when they use sudo. But the host won’t log activity if the control node logs in with the root account.\n- It’s an easy target. The root account is always named root, and cybercriminals are likely to look for it and target it in an attack.\n- It threatens compliance. Most security standards, security audits, and automated security scanners flag remote root login as a serious vulnerability.",
    "weakness_title_read_only": "Running With Unnecessary Privileges",
    "weakness_id_read_only": "P150",
    "weakness": "07093262-3118-48ab-911f-86160f3ae8e2",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2022-08-29T11:06:17.323000-04:00",
    "last_updated": "2022-09-08T20:44:09.353000-04:00",
    "custom": "False",
    "rules": "33ad5f28-7c69-48bb-9e7b-a650f9f99324",
    "rules_read_only": "A1342"
  },
  {
    "countermeasure_id": "T2384",
    "universal_id": "af610d99-d160-405f-9a32-e9a7c784c462",
    "countermeasure_name": "Use public-private key authentication for SSH (Ansible)",
    "countermeasure_solution": "Disable remote password-based authentication on your hosts and use public-private key authentication instead. If you allow password-based authentication, you introduce a vulnerability to brute-force password-guessing attacks. Passwords are also notoriously difficult to manage, because one mistake (such as leaking them in an email, committing them to a repository in a configuration file, or reusing them with a compromised account) can lead to an exploit.",
    "weakness_title_read_only": "Weak authentication (Ansible)",
    "weakness_id_read_only": "P1692",
    "weakness": "b28f9c19-a538-4aea-a714-2846caa65258",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2022-08-29T11:27:01.383000-04:00",
    "last_updated": "2022-09-09T20:54:30.513000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2385",
    "universal_id": "40a285bc-e370-4c0c-88e4-b6506db072d1",
    "countermeasure_name": "Use Ansible Vault (Ansible)",
    "countermeasure_solution": "Do not store plaintext secrets in a playbook, configuration file, or any document that’s managed in source control. Ansible Vault is an Ansible feature that encrypts secrets so they can be placed in a configuration file without being exposed to other people. Store the password that Ansible Vault uses for encryption somewhere else—in a file on the control node computer, in an environment variable, or even in a cloud-based secrets manager.",
    "weakness_title_read_only": "Unprotected credentials in Ansible files",
    "weakness_id_read_only": "P1689",
    "weakness": "5bfc7cd8-8c9a-4297-871b-5a37854c018a",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2022-08-29T12:38:25.356000-04:00",
    "last_updated": "2022-09-11T08:43:19.267000-04:00",
    "custom": "False",
    "rules": "33ad5f28-7c69-48bb-9e7b-a650f9f99324",
    "rules_read_only": "A1342"
  },
  {
    "countermeasure_id": "T2386",
    "universal_id": "2e566270-d2f0-4a2f-bf82-7003f6bc9903",
    "countermeasure_name": "Use role-based access control in Automation Controller (Ansible)",
    "countermeasure_solution": "Use role-based access control in Ansible especially for running specific jobs. For this purpose, you should populate the following objects:\n\n[Organization]  \nStart with just a single organization, adding separate organizations later to represent distinct business units within the same company.\n\n[Inventory]  \nInventories list the hosts that you manage with Ansible. It’s a good practice to separate environments like development and staging with separate inventories.\n\n[Teams]  \nTeams group users into logical units so you can grant them specific permissions.\n\n[Projects]\nProjects store Ansible playbooks, which are linked to a repository in a version control system like Git. To run projects, you need jobs.\n\n[Jobs]  \nJobs track live operations that run on your system. They use templates that connect a playbook (from a project) and an environment (from an inventory).\n\nYou grant teams the ability to use specific job templates. That way, you follow the principle of least privilege, and users have the minimum permissions they need to perform their work rather than having broad permissions for all the assets they’re using. If you use this approach, a user who’s running a job:\n\n- Doesn’t need to be an administrator\n- Doesn’t need permission to change or even read the inventory of hosts\n- Doesn’t need permission to create or edit playbooks\n- Doesn’t need to know the credential that’s used to create the SSH connection with the remote server\n\nInstead, they need to be a member of a team that Ansible has granted the Execute role to for the job template that runs the appropriate playbook.",
    "weakness_title_read_only": "Inadequate access control in Ansible Automation Controller (Ansible)",
    "weakness_id_read_only": "P1690",
    "weakness": "8d27f7d2-ca12-4710-81b9-df7d7444fff2",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2022-08-29T14:09:11.360000-04:00",
    "last_updated": "2022-09-12T12:40:35.019000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2387",
    "universal_id": "e23dd00c-9bde-44f6-8d3b-d6531a33f4ef",
    "countermeasure_name": "Collect logs for analysis and auditing (Ansible)",
    "countermeasure_solution": "Review administrative system activity to find:\n\n- Unexpected problems (like a job that’s failing)\n- Violations of standard company practice \n- Evidence of unauthorized access\n\nMost logs, including those in Automation Controller, generate a large volume of data. To properly analyze this information and find trends over time, you should copy your log records to a third-party analysis tool. This is also a good security practice because it reduces the chance that a malicious user who gains access to your system can cover their tracks by tampering with the log. Automation Controller has integrations for log aggregation services like Splunk, Loggly, Sumologic, and Elastic Stack. Refer to the official documents for exact setup steps to use with your log tool.\n\nOnce you’ve set up a mechanism to transfer the Activity Stream records, you should also initiate a practice of regular review. Human-led reviews are always a good practice, although they’re laborious and can be inconsistent. Along with periodic manual reviews, you should also configure automated alerts in your log provider. These can warn you if they detect obvious red flags, like repeated failed logins over a short interval of time.",
    "weakness_title_read_only": "Insufficient Logging or Insufficient Protection of Logs",
    "weakness_id_read_only": "P619",
    "weakness": "9a42301f-ed6c-42cb-a85d-a5134b76b701",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2022-08-29T14:32:15.260000-04:00",
    "last_updated": "2022-09-11T08:59:30.769000-04:00",
    "custom": "False",
    "rules": "33ad5f28-7c69-48bb-9e7b-a650f9f99324",
    "rules_read_only": "A1342"
  },
  {
    "countermeasure_id": "T2388",
    "universal_id": "e3a56a9e-16d2-4cef-9c1d-25797ab6961a",
    "countermeasure_name": "Enforce the principle of separation of duties",
    "countermeasure_solution": "Enforce the principle of Separation of Duties. \n\nSeparation of Duty (SOD) refers to the principle that no user should be given enough privileges to misuse the system on their own. It can be enforced either statically (by defining conflicting roles, that is, roles which cannot be executed by the same user) or dynamically (by enforcing the control at access time).\n\nSource: NIST SP 800-192",
    "weakness_title_read_only": "Inadequate separation of duties among users (Google Cloud)",
    "weakness_id_read_only": "P1164",
    "weakness": "7a2a4046-15b8-4f66-bdde-af0ab063e1b2",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "architecture-design",
    "created": "2022-09-09T16:45:45.128000-04:00",
    "last_updated": "2022-09-12T21:52:24.604000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2389",
    "universal_id": "cde91ca9-b447-437b-9be6-3ed286dfd9d5",
    "countermeasure_name": "Prevent co-channel and adjacent channel interference",
    "countermeasure_solution": "Avoid Co-channel Interference (CCI) and Adjacent Channel Interference (ACI) issues by implementing a good channel plan. \n\n- Predictive planning software can help conduct careful planning by visualizing overlapping channels that can cause ACI. \n- 2.4 GHz spectrum has three non-overlapping channels. Therefore, it requires careful planning. \n- 5 GHz spectrum has 25 non-overlapping channels.",
    "weakness_title_read_only": "Poor WiFi Settings Configuration",
    "weakness_id_read_only": "P1693",
    "weakness": "b0f3ee2f-4ef8-4f14-be09-945a775748d1",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "requirements",
    "created": "2022-09-09T16:51:22.045000-04:00",
    "last_updated": "2022-09-12T23:29:57.836000-04:00",
    "custom": "False",
    "rules": "fcc228a0-9a93-4eb0-9242-920471565200 AND 2d746169-bd63-4cec-a6b6-2055df072262",
    "rules_read_only": "A1318 AND A1316"
  },
  {
    "countermeasure_id": "T2390",
    "universal_id": "90d731c9-eb03-47e6-9890-d42134d4f8d2",
    "countermeasure_name": "Limit the WiFi network coverage",
    "countermeasure_solution": "Configure the router's power input to limit the WiFi signal coverage area to only the needed range.",
    "weakness_title_read_only": "Poor WiFi Settings Configuration",
    "weakness_id_read_only": "P1693",
    "weakness": "b0f3ee2f-4ef8-4f14-be09-945a775748d1",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "requirements",
    "created": "2022-09-09T16:55:49.952000-04:00",
    "last_updated": "2022-09-12T23:30:37.275000-04:00",
    "custom": "False",
    "rules": "fcc228a0-9a93-4eb0-9242-920471565200 AND 2d746169-bd63-4cec-a6b6-2055df072262",
    "rules_read_only": "A1318 AND A1316"
  },
  {
    "countermeasure_id": "T2391",
    "universal_id": "e354e783-f7d0-442d-87a8-1cd39756af82",
    "countermeasure_name": "Change the default value of the SSID and other wireless defaults",
    "countermeasure_solution": "Change vendor defaults for wireless environments, including:\n \n- Change the default Service Set Identifier (SSID) to something unique. \n    - The SSID is case-sensitive and can contain 32 alphanumeric characters. Avoid using personal identifiers in the SSID.\n    - When possible, avoid publicizing your SSID to prevent your network from being easily found.\n- Change default wireless encryption keys.\n- Change or disable accounts and passwords on wireless access points.\n- Change SNMP defaults.\n- Change any other security-related wireless vendor defaults.",
    "weakness_title_read_only": "Poor WiFi Settings Configuration",
    "weakness_id_read_only": "P1693",
    "weakness": "b0f3ee2f-4ef8-4f14-be09-945a775748d1",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "requirements",
    "created": "2022-09-09T17:16:29.388000-04:00",
    "last_updated": "2023-03-23T18:15:56.425000-04:00",
    "custom": "False",
    "rules": "fcc228a0-9a93-4eb0-9242-920471565200 AND 2d746169-bd63-4cec-a6b6-2055df072262",
    "rules_read_only": "A1318 AND A1316"
  },
  {
    "countermeasure_id": "T2392",
    "universal_id": "5188e7b0-0605-4a2d-a056-31a70139600d",
    "countermeasure_name": "Create an Incident Response Plan",
    "countermeasure_solution": "Define a thorough and detailed course of action that the incident response team can follow to stop, contain, and control all security incidents as promptly as possible. \n\nAn incident response plan should cover the following items: \n\n- A communication plan that clearly defines roles, responsibilities, and processes. \n- A list of critical components and networks. \n- A continuity and recovery plan. \n- A list of tools that can be used, including Security Information and Event Management (SIEM), Intrusion Detection Systems (IDS), vulnerability scanners, availability monitors, and web proxies. \n- A list of evidence that needs to be collected in the event of a security incident. \n- The security incident response plan should include monitoring and responding to alerts from security monitoring systems, such as:\n    - Intrusion-detection and intrusion-prevention systems.\n    - Network security controls.\n    - Change-detection mechanisms for critical files.\n    - The change-and tamper-detection mechanism for payment pages.\n    - Detection of unauthorized wireless access points.\n- Designate specific personnel to be available on a 24/7 basis to respond to suspected or confirmed security incidents.\n- Privacy-related incidents.\n\nAn incident team from across the organization should be created and maintained along with maintaining the incident response plan. Also, it's required to establish both a privacy team and a qualified Computer Emergency Response Team (CERT).\n\nAccording to SANS Institute's Incident Handlers Handbook, an incident response consists of 6 steps: \n\n1. Preparation, which includes incident response planning and training to ensure that the incident response team is ready to respond to incidents. \n    - Personnel responsible for responding to suspected and confirmed security incidents are appropriately and periodically trained on their incident response responsibilities.\n2. Identification, which involves the detection of suspicious events that could be security incidents and the collection of evidence. \n3. Containment, which includes short-term containment (e.g., isolating a network segment) and long-term containment (e.g., implementing temporary fixes). \n4. Eradication, where root causes are identified, and mitigation mechanisms are deployed to prevent similar security incidents. \n5. Recovery, which includes bringing back production systems. Decisions around restore time, verification process, and monitoring period also occur at this stage. \n6. Lessons learned, which involves documenting the whole process to identify strengths and weaknesses in the applied procedure.\n\nFinally, ensure that you incorporate industry developments into your security incident response plan periodically.\n\n__Resources__: \n\n- [SANS](https://www.sans.org/white-papers/33901/)\n- [PCI-DSS 4.0](https://www.pcisecuritystandards.org/document_library/)",
    "weakness_title_read_only": "Lack of a Product Security Incident Response",
    "weakness_id_read_only": "P1687",
    "weakness": "580e603b-1c5e-4a43-9f59-95707e21d2f6",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "activities",
    "created": "2022-09-12T00:08:49.633000-04:00",
    "last_updated": "2023-05-25T13:09:48.707000-04:00",
    "custom": "False",
    "rules": "a51f437c-40f4-4b75-a1d7-91767230872c;bba3a932-302b-415e-b24a-6fb715b2d7a1;68c64fac-a002-469d-8f74-872b0a3352c9;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1228;A1229;A1233;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233"
  },
  {
    "countermeasure_id": "T2393",
    "universal_id": "58e3cbac-a919-4390-ae30-c5ec7d3e1fe0",
    "countermeasure_name": "Verify the principle of Separation of Duties is strongly implemented",
    "countermeasure_solution": "Ensure no employee or group is in a position both to perpetrate and conceal errors or fraud in the normal course of their duties. Reviewing the granted privileges ensures no individual or group has permission in two or more conflicting areas. Conflicting areas include authorization, custody, recording, and verification.",
    "weakness_title_read_only": "Inadequate separation of duties among users (Google Cloud)",
    "weakness_id_read_only": "P1164",
    "weakness": "7a2a4046-15b8-4f66-bdde-af0ab063e1b2",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2022-09-12T08:17:42.474000-04:00",
    "last_updated": "2022-09-12T23:35:33.420000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2394",
    "universal_id": "73220bd9-7b2e-4c1e-a7c3-c01446f2eea0",
    "countermeasure_name": "Test co-channel and adjacent channel interference is prevented",
    "countermeasure_solution": "Test a good channel plan is implemented to avoid Co-channel Interference (CCI) and Adjacent Channel Interference (ACI) issues. The following should be considered in the plan: \n\n- Predictive planning software is used to help conduct careful planning by visualizing overlapping channels that can cause ACI. \n- If the 2.4 GHz spectrum is used, it is considered that the 2.4 GHz spectrum has three non-overlapping channels in the plan. \n- if the 5 GHz spectrum is used, it is considered that it has 25 non-overlapping channels in the plan.",
    "weakness_title_read_only": "Poor WiFi Settings Configuration",
    "weakness_id_read_only": "P1693",
    "weakness": "b0f3ee2f-4ef8-4f14-be09-945a775748d1",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2022-09-12T08:36:54.154000-04:00",
    "last_updated": "2022-09-12T23:35:51.078000-04:00",
    "custom": "False",
    "rules": "fcc228a0-9a93-4eb0-9242-920471565200 AND 2d746169-bd63-4cec-a6b6-2055df072262",
    "rules_read_only": "A1318 AND A1316"
  },
  {
    "countermeasure_id": "T2395",
    "universal_id": "58c8451e-9149-468b-8656-043cda9fe4c5",
    "countermeasure_name": "Test the default value of the Service Set Identifier (SSID) is changed",
    "countermeasure_solution": " - Verify the default SSID is changed to something unique and personal identifiers are not used in the SSID name.\n- Verify Service Set Identifier (SSID) is not publicized if possible.",
    "weakness_title_read_only": "Poor WiFi Settings Configuration",
    "weakness_id_read_only": "P1693",
    "weakness": "b0f3ee2f-4ef8-4f14-be09-945a775748d1",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2022-09-12T08:49:34.754000-04:00",
    "last_updated": "2022-09-12T23:36:06.937000-04:00",
    "custom": "False",
    "rules": "fcc228a0-9a93-4eb0-9242-920471565200 AND 2d746169-bd63-4cec-a6b6-2055df072262",
    "rules_read_only": "A1318 AND A1316"
  },
  {
    "countermeasure_id": "T2396",
    "universal_id": "4c70833d-e116-404b-a37f-449f9d5f9d24",
    "countermeasure_name": "Verify that the organization has a Product Security Incident Plan",
    "countermeasure_solution": "Verify that your organization has a Product Security Incident Plan that defines a thorough and detailed course of action that the incident response team can follow to stop, contain, and control all security incidents as promptly as possible. \n\nVerify that the plan covers the following items: \n\n- A communication plan that clearly defines roles, responsibilities, and processes. \n- A list of critical components and networks. \n- A continuity and recovery plan. \n- A list of tools that can be used, including Security Information and Event Management (SIEM), Intrusion Detection Systems (IDS), vulnerability scanners, availability monitors, and web proxies. \n- A list of evidence that needs to be collected in the event of a security incident.",
    "weakness_title_read_only": "Lack of a Product Security Incident Response",
    "weakness_id_read_only": "P1687",
    "weakness": "580e603b-1c5e-4a43-9f59-95707e21d2f6",
    "tags": "",
    "countermeasure_priority": "5",
    "phase": "testing",
    "created": "2022-09-12T09:00:42.325000-04:00",
    "last_updated": "2023-02-10T12:54:49.376000-05:00",
    "custom": "False",
    "rules": "a51f437c-40f4-4b75-a1d7-91767230872c;bba3a932-302b-415e-b24a-6fb715b2d7a1;68c64fac-a002-469d-8f74-872b0a3352c9;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1228;A1229;A1233;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233"
  },
  {
    "countermeasure_id": "T2397",
    "universal_id": "4de4d1ab-9ecc-493f-9f2d-bce187ece9eb",
    "countermeasure_name": "Detect rogue stations in a wireless network",
    "countermeasure_solution": "A rogue access point is a WiFi access point installed on a secure network without the knowledge or authorization of the network system administrator. Rogue access can cause many threats, including DoS and information leakage. \n\nDetect rogue stations in a WiFi network:\n\n1. Scan all wireless devices and maintain an up-to-date inventory. Use a wireless scanner or wireless intrusion detection/prevention system (IDS/IPS). Wired scanning tools are used by many organizations for additional security but have a high false positive rate. \n2. Enable automatic alerts and a containment mechanism to eliminate rogue wireless points.\n3. Maintain a regular scan schedule",
    "weakness_title_read_only": "Information Exposure",
    "weakness_id_read_only": "P96",
    "weakness": "5caa926a-86e4-498d-97f8-5d2f5c5ddd7b",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "development",
    "created": "2022-09-12T11:15:38.340000-04:00",
    "last_updated": "2023-03-17T17:42:54.877000-04:00",
    "custom": "False",
    "rules": "fcc228a0-9a93-4eb0-9242-920471565200 AND 2d746169-bd63-4cec-a6b6-2055df072262",
    "rules_read_only": "A1318 AND A1316"
  },
  {
    "countermeasure_id": "T2398",
    "universal_id": "c750987a-d021-4f38-add1-9b5799e5f2da",
    "countermeasure_name": "Verify all rogue stations are detected in your wireless network",
    "countermeasure_solution": "Verify all rogue stations are detected in your wireless network.\n\n1. Ensure all wireless devices are scanned, and an up-to-date inventory exists.\n2. Test if automatic alerts are enabled, and a containment mechanism to eliminate rogue wireless points are in place.\n3. Verify that a regular scan schedule is maintained.",
    "weakness_title_read_only": "Information Exposure",
    "weakness_id_read_only": "P96",
    "weakness": "5caa926a-86e4-498d-97f8-5d2f5c5ddd7b",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2022-09-12T11:25:10.997000-04:00",
    "last_updated": "2022-09-12T23:37:12.176000-04:00",
    "custom": "False",
    "rules": "fcc228a0-9a93-4eb0-9242-920471565200 AND 2d746169-bd63-4cec-a6b6-2055df072262",
    "rules_read_only": "A1318 AND A1316"
  },
  {
    "countermeasure_id": "T2399",
    "universal_id": "428cdbe9-a1ff-4ce2-b516-ff413898f465",
    "countermeasure_name": "Perform a data access audit for sensitive data (Android)",
    "countermeasure_solution": "In big projects, it might be difficult to track which private data is being accessed and who is accessing it. To get a better view into how your application and its components access a user's private data, you should perform data access auditing. \n\nBy registering an instance of `AppOpsManager.OnOpNotedCallback`, we can define what happens when an application component or library dependency accesses a user's sensitive data. The callback is invoked when a user's private data is used by a part of the code (for instance, when getting geolocation updates).\n\nYou can also use attribution tags to better understand which part of an Android application provides a specific type of data access. For applications targeting Android 12 or higher, you should specify attribution tags for the app's components.\n\nTo create attribution tags you can follow these steps:\n\n1. Declare attribution tags in the manifest.\n2. Use attribution tags in your application.\n3. Include attribution tags in access logs.\n\nFor more information about how to perform a data access audit, please refer to Android's [data access audit](https://developer.android.com/guide/topics/data/audit-access) page.",
    "weakness_title_read_only": "Lack of sensitive data access audits",
    "weakness_id_read_only": "P1703",
    "weakness": "5285489c-eb41-4260-88d3-c174aade70d3",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "requirements",
    "created": "2022-10-13T11:48:54.723000-04:00",
    "last_updated": "2023-05-25T13:09:48.663000-04:00",
    "custom": "False",
    "rules": "64e2a4e5-efe8-4a19-8b5f-b835d963a40c",
    "rules_read_only": "A715"
  },
  {
    "countermeasure_id": "T2400",
    "universal_id": "c9c7e98b-332b-4019-b7d6-f62071e68609",
    "countermeasure_name": "Verify data access audits (Android)",
    "countermeasure_solution": "Ensure that your application follows best practices for data access audits.\n\n- Verify that the app's manifest file contains attribution tags. \n- Verify that an instance of `AppOpsManager.OnOpNotedCallback` is implemented in the components where you intend to audit data access.",
    "weakness_title_read_only": "Lack of sensitive data access audits",
    "weakness_id_read_only": "P1703",
    "weakness": "5285489c-eb41-4260-88d3-c174aade70d3",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2022-10-13T11:57:42.602000-04:00",
    "last_updated": "2022-12-05T22:11:37.521000-05:00",
    "custom": "False",
    "rules": "64e2a4e5-efe8-4a19-8b5f-b835d963a40c",
    "rules_read_only": "A715"
  },
  {
    "countermeasure_id": "T2404",
    "universal_id": "8b30c740-38bd-4103-9ac3-6b1fa7f67517",
    "countermeasure_name": "Enforce a minimum TLS version for API connections (Amazon API Gateway)",
    "countermeasure_solution": "Force clients to use the latest version of TLS (Transport Layer Security) when calling API methods. Currently, AWS recommends requiring TLS 1.2 or later, but allows TLS 1.0 or later for new APIs.\n\nTo enforce a requirement for TLS 1.2, you need a __custom domain name__ to use for your API. You must:\n\n- Register a domain name with Amazon Route 52 or a third-party registrar.\n- Update your DNS provider's resource record so that it maps to your API endpoint.\n- Import a certificate or request one with AWS Certificate Manager.\n\nIf these requirements are in place, configure API Gateway using the AWS console:\n\n1. Go to the API Gateway page.\n2. Choose __Custom domain names__ from the navigation menu.\n3. Choose __Create__.\n4. Enter your custom domain name, choose your certificate, and select __TLS 1.2__ for the __Minimum TLS version__.\n5. Choose __Create domain name__.\n\n## Notes\nThis requirement does not apply to private gateways, which always use TLS 1.2.\n\nIf you are creating a public API but you are not using a custom domain, you cannot change the minimum required TLS level. However, even without this enforcement, most up-to-date clients will start sessions using TLS 1.2. And no matter what configuration you set, AWS enforces encrypted HTTPS connections for all API communication.",
    "weakness_title_read_only": "Using deprecated encryption protocols",
    "weakness_id_read_only": "P1694",
    "weakness": "382c1d47-3601-4655-b62a-1cae5e53d836",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2022-10-17T11:50:56.650000-04:00",
    "last_updated": "2023-06-19T15:50:43.837000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2405",
    "universal_id": "9ddca29c-dc87-45ee-9aec-e8e3a08855cc",
    "countermeasure_name": "Verify a minimum TLS version for API connections is used (Amazon API Gateway)",
    "countermeasure_solution": "Verify the latest version of TLS (Transport Layer Security) is used when calling API methods. \n\nFirst Verify \n\n- A domain name with Amazon Route 52 or a third-party registrar is registered, and the DNS provider's resource record is updated.\n- A certificate is issued with AWS Certificate Manager.\n\nThen check the following configurations for API Gateway using the AWS console:\n\n1. Go to the API Gateway page.\n2. Choose __Custom domain names__ from the navigation menu.\n3. Choose __Create__.\n4. Verify your custom domain name and the certificate are added there, and __TLS 1.2__ for the __Minimum TLS version__ is selected.\n5. Choose __Create domain name__.",
    "weakness_title_read_only": "Using deprecated encryption protocols",
    "weakness_id_read_only": "P1694",
    "weakness": "382c1d47-3601-4655-b62a-1cae5e53d836",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2022-10-17T11:57:02.001000-04:00",
    "last_updated": "2023-06-19T15:50:03.661000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2406",
    "universal_id": "2a8b5af6-cb18-4d67-8d95-50d47af9b9df",
    "countermeasure_name": "Encrypt the API cache (Amazon API Gateway)",
    "countermeasure_solution": "Encrypt the API cache, or ensure that API caching is not enabled. Follow these steps in the AWS console:\n\n1. Go to the API Gateway page.\n2. In the navigation menu, choose __APIs__.\n3. Choose the API you want to examine (by clicking its name).\n4. Choose __Stages__ for that API.\n5. Choose the deployed API stage from the list.\n6. Choose the __Settings__ tab.\n7. In the __Cache Settings__ section, verify that either:\n    - __Enable API cache__ is not selected.\n    - Both __Enable API cache__ and __Encrypt cache data__ are selected.\n\n## Note\nBy default, APIs do not have caching enabled. Depending on the variability of your API methods, caching has the potential to significantly improve performance.",
    "weakness_title_read_only": "Lack of encryption for server-side cached data",
    "weakness_id_read_only": "P1695",
    "weakness": "2d67c11e-fd47-4619-860d-98c72d56536d",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2022-10-17T12:04:33.194000-04:00",
    "last_updated": "2023-01-25T09:31:11.265000-05:00",
    "custom": "False",
    "rules": "c2ef77af-8bed-4ae2-839d-aeebb691fd7c",
    "rules_read_only": "A1345"
  },
  {
    "countermeasure_id": "T2407",
    "universal_id": "f5703474-84af-46c6-ab84-f440c1050fff",
    "countermeasure_name": "Verify the API cache is encrypted (Amazon API Gateway)",
    "countermeasure_solution": "Verify that the API cache is encrypted, or that API caching is not enabled. Follow these steps in the AWS console:\n\n1. Go to the API Gateway page.\n2. In the navigation menu, choose __APIs__.\n3. Choose the API you want to examine (by clicking its name).\n4. Choose __Stages__ for that API.\n5. Choose the deployed API stage from the list.\n6. Choose the __Settings__ tab.\n7. In the __Cache Settings__ section, verify that either:\n    - __Enable API cache__ is not selected.\n    - Both __Enable API cache__ and __Encrypt cache data__ are selected.",
    "weakness_title_read_only": "Lack of encryption for server-side cached data",
    "weakness_id_read_only": "P1695",
    "weakness": "2d67c11e-fd47-4619-860d-98c72d56536d",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2022-10-17T12:07:56.280000-04:00",
    "last_updated": "2023-01-25T09:31:25.568000-05:00",
    "custom": "False",
    "rules": "c2ef77af-8bed-4ae2-839d-aeebb691fd7c",
    "rules_read_only": "A1345"
  },
  {
    "countermeasure_id": "T2408",
    "universal_id": "7b2083b1-9688-4bd7-91e3-7a65367ed874",
    "countermeasure_name": "Ensure API Gateway actions are logged (Amazon API Gateway)",
    "countermeasure_solution": "Review your APIs to confirm that they are being logged sufficiently.\n\nTo review the logging settings for an API, follow these steps in the AWS console:\n\n1. Go to the API Gateway page.\n2. Choose __APIs__ in the navigation menu.\n3. Choose the API you wish to examine (by clicking its name).\n4. Choose __Stages__ under the API name in the navigation menu.\n5. Choose the stage you used to deploy the API.\n6. Choose the __Logs/Tracing__ tab.\n7. Enable the appropriate logging options are enabled.\n\nAPI Gateway supports two types of logging with CloudWatch:\n\n- __Execution logging__ logs detailed information about API Gateway internals, resulting in a very verbose log (many log entries for each request). Often, execution logging is reserved for debugging or to capture error information. To enable execution logging of errors only, choose __Enable CloudWatch logs__, and set __Log level__ to __ERROR__.\n- __Access logging__ logs a single entry for each API Gateway request with the details you request, making it more suitable for most day-to-day operation. To enable access logging, choose __Enable Access Logging__ and set the __Log Format__ field with a JSON template that includes the information you want to capture. (Choose __JSON__ to see a sample template, or check the AWS documentation for a description of all the [log variables](https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-mapping-template-reference.html#context-variable-reference?cmpid=docs_apigateway_console).)\n\nCloudWatch logging is the foundation for API Gateway logging, but you may also want to add the following services:\n\n- CloudWatch metrics, which can detect emerging issues and be configured to raise alarms. Commonly monitored API Gateway metrics include `Latency`, `IntegrationLatency`, `4XXError`, and `5XXError`.\n- AWS Config, which can track changes to API configuration that may be unauthorized or linked to new errors.\n- AWS X-Ray tracing, which can link API requests to the actions it takes in underlying services. X-Ray tracing supports REST APIs only.\n\n## Note\nVerify that your logging continues to work when removing a service. All API Gateways use the same role to gain permissions to access CloudWatch. Configuration problems can occur if an API is removed with its associated role (for example, by CloudFormation) when that role is still required for another API.",
    "weakness_title_read_only": "Lack of monitoring (Cloud)",
    "weakness_id_read_only": "P1667",
    "weakness": "692ff87f-9bb7-4995-b15e-a24d351df672",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2022-10-17T12:12:46.453000-04:00",
    "last_updated": "2023-01-25T09:31:40.248000-05:00",
    "custom": "False",
    "rules": "c2ef77af-8bed-4ae2-839d-aeebb691fd7c",
    "rules_read_only": "A1345"
  },
  {
    "countermeasure_id": "T2409",
    "universal_id": "4a9dc649-8ad8-4ad5-a87f-537231980c8d",
    "countermeasure_name": "Verify API Gateway actions are logged (Amazon API Gateway)",
    "countermeasure_solution": "Verify API logging settings are appropriate.\n\nFollow these steps in the AWS console:\n\n1. Go to the API Gateway page.\n2. Choose __APIs__ in the navigation menu.\n3. Choose the API you wish to examine (by clicking its name).\n4. Choose __Stages__ under the API name in the navigation menu.\n5. Choose the stage used to deploy the API.\n6. Choose the __Logs/Tracing__ tab.\n7. Verify that the appropriate logging options are enabled.\n\nVerify that logging continues to work when removing a service.",
    "weakness_title_read_only": "Lack of monitoring (Cloud)",
    "weakness_id_read_only": "P1667",
    "weakness": "692ff87f-9bb7-4995-b15e-a24d351df672",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2022-10-17T12:16:11.947000-04:00",
    "last_updated": "2023-01-25T09:31:57.753000-05:00",
    "custom": "False",
    "rules": "c2ef77af-8bed-4ae2-839d-aeebb691fd7c",
    "rules_read_only": "A1345"
  },
  {
    "countermeasure_id": "T2410",
    "universal_id": "1ae28737-38fd-45b2-a8bf-5b82ffde53dc",
    "countermeasure_name": "Restrict outside access to internal APIs (Amazon API Gateway)",
    "countermeasure_solution": "Internal APIs are APIs that you call from inside your AWS environment (for example, from a Lambda function or another AWS service). Configure internal APIs to use private VPC endpoints. This keeps all API communication on the Amazon network.\n\n- Creating a private API is a multistep process described in the [Amazon developer documentation](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-private-apis.html).\n- Private APIs require REST APIs. For other API types (like HTTP APIs), you can use VPC endpoints to enforce private communication between the API Gateway and other AWS services, but not between the client and the API Gateway.\n\nTo determine whether an API is private, follow these steps in the AWS console:\n\n1. Go to the API Gateway page.\n2. Choose __APIs__ in the navigation menu.\n3. Look in the __Endpoint type__ column next to your API. A value of __Regional__ or __Edge optimized__ indicates a public API. A value of __Private__ indicates a private API.",
    "weakness_title_read_only": "Exposed APIs with public endpoints",
    "weakness_id_read_only": "P1696",
    "weakness": "eb8a0db5-214b-4e53-856a-21b627f0e316",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2022-10-17T12:23:00.695000-04:00",
    "last_updated": "2023-01-25T09:32:14.533000-05:00",
    "custom": "False",
    "rules": "c2ef77af-8bed-4ae2-839d-aeebb691fd7c",
    "rules_read_only": "A1345"
  },
  {
    "countermeasure_id": "T2411",
    "universal_id": "33529ffb-2012-4725-a90f-60763fb86076",
    "countermeasure_name": "Verify outside access to internal APIs is restricted (Amazon API Gateway)",
    "countermeasure_solution": "Verify that internal APIs are configured to use private VPC endpoints. \n\nFollow these steps in the AWS console to verify an API is private:\n\n1. Go to the API Gateway page.\n2. Choose __APIs__ in the navigation menu.\n3. Look in the __Endpoint type__ column next to your API. A value of __Regional__ or __Edge optimized__ indicates a public API. A value of __Private__ indicates a private API.",
    "weakness_title_read_only": "Exposed APIs with public endpoints",
    "weakness_id_read_only": "P1696",
    "weakness": "eb8a0db5-214b-4e53-856a-21b627f0e316",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2022-10-17T12:26:20.398000-04:00",
    "last_updated": "2023-01-25T09:32:30.099000-05:00",
    "custom": "False",
    "rules": "c2ef77af-8bed-4ae2-839d-aeebb691fd7c",
    "rules_read_only": "A1345"
  },
  {
    "countermeasure_id": "T2412",
    "universal_id": "92494b60-73f4-4b6a-8591-126ffe146a7f",
    "countermeasure_name": "Protect APIs with a Web Application Firewall (Amazon API Gateway)",
    "countermeasure_solution": "Enable a Web Application Firewall (WAF) for your APIs by following these steps in the AWS console:\n\n1. Go to the API Gateway page.\n2. In the navigation menu, choose __APIs__.\n3. Choose the API you want to examine (by clicking its name).\n4. Choose __Stages__ for that API.\n5. Choose the deployed API stage from the list.\n6. Choose the __Settings__ tab.\n7. Check the __Web ACL__ setting. If it's set to __None__, there is no ACL (access control list) configured, and no integration with WAF.\n\nTo attach an ACL to an API that doesn't have one:\n\n1. Go to the WAF & Shield page.\n2. Choose __Web ACLs__ from the navigation menu.\n3. Choose the ACL you want to use (by clicking its name).\n4. Choose the __Associated AWS resources__ tab.\n5. Choose __Add AWS resources__.\n6. Choose __Amazon API Gateway__ as the resource type and select your API from the list below.\n7. Choose __Add__.\n\nThis process assumes you have already configured an ACL with the rules you want to enforce.",
    "weakness_title_read_only": "API endpoints without basic firewall protections",
    "weakness_id_read_only": "P1697",
    "weakness": "83882a45-e5e5-483f-bf85-d4bf448d8f67",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2022-10-17T12:30:48.648000-04:00",
    "last_updated": "2023-06-19T15:51:48.802000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2413",
    "universal_id": "cdcd7530-0b32-4850-b60b-dce3fbeb75fc",
    "countermeasure_name": "Verify APIs are protected with a Web Application Firewall (Amazon API Gateway)",
    "countermeasure_solution": "Following these steps in the AWS console to verify that a WAF is enabled:\n\n1. Go to the API Gateway page.\n2. In the navigation menu, choose __APIs__.\n3. Choose the API you want to examine (by clicking its name).\n4. Choose __Stages__ for that API.\n5. Choose the deployed API stage from the list.\n6. Choose the __Settings__ tab.\n7. Check the __Web ACL__ setting. If it's set to __None__, there is no ACL (access control list) configured, and no integration with WAF (It should be enabled through WAF & Shield page as mentioned in the countermeasure). Otherwise, WAF is enabled for the API.",
    "weakness_title_read_only": "API endpoints without basic firewall protections",
    "weakness_id_read_only": "P1697",
    "weakness": "83882a45-e5e5-483f-bf85-d4bf448d8f67",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2022-10-17T12:33:13.934000-04:00",
    "last_updated": "2023-06-20T09:36:16.074000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2414",
    "universal_id": "312443b7-44a5-4f23-9e09-30678d0a12f0",
    "countermeasure_name": "Don't use API keys for authentication and authorization (Amazon API Gateway)",
    "countermeasure_solution": "AWS provides an API key system so you can apply best-effort throttling and usage quotas. \n\nUse them in the following way:\n\n- With a public API (one that does not attempt to limit access)\n- With a restricted API that incorporates another method of authentication\n\nThe best type of authentication for an API depends on your use case, but could be:\n\n- Amazon Cognito user pools\n- IAM roles\n- Client certificates using mutual TLS\n- Custom authentication through a Lambda authorizer",
    "weakness_title_read_only": "Weak Authentication",
    "weakness_id_read_only": "P1139",
    "weakness": "4bcb2026-5bef-4208-94e0-9353576a5abc",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2022-10-17T12:38:25.380000-04:00",
    "last_updated": "2023-01-25T09:33:27.041000-05:00",
    "custom": "False",
    "rules": "c2ef77af-8bed-4ae2-839d-aeebb691fd7c",
    "rules_read_only": "A1345"
  },
  {
    "countermeasure_id": "T2415",
    "universal_id": "baf117f4-e3d7-4778-861f-01813c1b19d7",
    "countermeasure_name": "Verify API keys are not the only mechanism for authentication and authorization (Amazon API Gateway)",
    "countermeasure_solution": "Verify that one of the following services is used as authentication for private APIs. It can be different for each API based on its use case.\n\n- Amazon Cognito user pools\n- IAM roles\n- Client certificates using mutual TLS\n- Custom authentication through a Lambda authorizer",
    "weakness_title_read_only": "Weak Authentication",
    "weakness_id_read_only": "P1139",
    "weakness": "4bcb2026-5bef-4208-94e0-9353576a5abc",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2022-10-17T12:41:46.227000-04:00",
    "last_updated": "2023-01-25T09:39:19.746000-05:00",
    "custom": "False",
    "rules": "c2ef77af-8bed-4ae2-839d-aeebb691fd7c",
    "rules_read_only": "A1345"
  },
  {
    "countermeasure_id": "T2416",
    "universal_id": "63bdf432-c52a-493e-ba93-6a7f45d66518",
    "countermeasure_name": "Encrypt Kinesis Firehose delivery streams (Amazon Kinesis Data Firehose)",
    "countermeasure_solution": "Ensure that data handled by Amazon Kinesis Firehose is encrypted on the server. There are two parts to this requirement:\n\n- __Stream encryption__. Encrypt the data that's temporarily stored in the Kinesis Firehose delivery stream, before it's delivered.\n- __Destination encryption__. Encrypt the data in the final destination.\n\nBoth are examples of server-side encryption. The difference is the sequence: data passes through the Kinesis Firehose data stream first and then reaches another destination, like an S3 bucket or Mongo DB database.\n\nTo encrypt the Kinesis Firehose delivery stream:\n\n1. Determine the data source.\n    - If the source is a Kinesis data stream, the data will not be stored in Kinesis Firehose at all. Instead, it's stored in the Kinesis data stream. Kinesis Firehose retrieves it, buffers it in memory, and sends it directly to its destination. The only way to encrypt it is to enable encryption on the underlying Kinesis data stream.\n    - If the source is __not__ a Kinesis data stream, follow the remainder of these steps in the AWS console.\n2. In the Amazon Kinesis page, choose __Delivery streams__.\n3. Select the stream.\n4. Choose the __Configuration__ tab.\n5. Look at the __Server-side encryption__ section. If it says __Disabled__:\n    1. Choose __Edit__.\n    2. Select __Enable server-side encryption for source records in delivery stream__.\n    3. Choose __Save changes__.\n\nThe steps for enabling destination encryption depend on the delivery of the data source. For example, if Kinesis Firehose is delivering to S3, verify that encryption is on for that S3 bucket:\n\n1. In the Amazon Kinesis page, choose __Delivery streams__.\n2. Select the stream.\n3. Choose the __Configuration__ tab.\n4. Look in __Destination settings__ section.\n5. Choose __Edit__.\n6. Expand the __Buffer hints, compression and encryption__ section.\n7. Set __Encryption for data records__ to __Enabled__.\n8. Choose __Save changes__.\n\nFor Redshift, Kinesis Firehose uses S3 as an intermediate storage location before copying the data. For other destinations, Kinesis Firehose uses S3 as a backup for data that fails the transfer process. In both cases, you can enable encryption on the S3 bucket in the Firehose delivery stream settings.\n\n## Note\nThese steps are for encrypting the Kinesis Firehose data when buffered or stored on the server. You do not need to take any additional steps to enable __encryption in transit__, because Kinesis Firehose always uses an HTTPS endpoint.",
    "weakness_title_read_only": "Clear Text and Unencrypted Transmission of Information",
    "weakness_id_read_only": "P216",
    "weakness": "b1d166d6-8ca7-415f-9cd9-8c2d745d3d01",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2022-10-17T12:51:23.776000-04:00",
    "last_updated": "2023-01-12T10:22:59.774000-05:00",
    "custom": "False",
    "rules": "0ba9a47a-9188-4de8-8372-175b51b4c8c4",
    "rules_read_only": "A1348"
  },
  {
    "countermeasure_id": "T2417",
    "universal_id": "9dea19b9-700d-4d5e-9ff5-8ea82cc5c04b",
    "countermeasure_name": "Verify Kinesis Firehose delivery streams are encrypted (Amazon Kinesis Data Firehose)",
    "countermeasure_solution": "Verify that data handled by Amazon Kinesis Firehose is encrypted on the server. \n\nThe following requirements should be tested.\n\n- __Stream encryption__.  The data that's temporarily stored in the Kinesis Firehose delivery stream is encrypted before it's delivered.\n- __Destination encryption__. The data in the final destination is encrypted.\n\n\nTo verify encryption of the Kinesis Firehose delivery stream:\n\n1. Determine the data source.\n    - If the source is a Kinesis data stream, the data will not be stored in Kinesis Firehose at all. Instead, it's stored in the Kinesis data stream. Kinesis Firehose retrieves it, buffers it in memory, and sends it directly to its destination. Then the encryption should be enabled on the underlying Kinesis data stream.\n    - If the source is __not__ a Kinesis data stream then continue with the following steps.\n2. In the Amazon Kinesis page, choose __Delivery streams__.\n3. Select the stream.\n4. Choose the __Configuration__ tab.\n5. At the __Server-side encryption__ section should say __Enable server-side encryption for source records in delivery stream__.\n         \n\nVerifying steps for the destination's encryption depends on the delivery's data source. For example, if Kinesis Firehose is delivering to S3, verify that encryption is on for that S3 bucket:\n\n1. On the Amazon Kinesis page, choose __Delivery streams__.\n2. Select the stream.\n3. Choose the __Configuration__ tab.\n4. In __Destination settings__ section.\n5. Expand the __Buffer hints, compression and encryption__ section.\n6. Verify  __Encryption for data records__ is set to __Enabled__.\n\nFor Redshift, Kinesis Firehose uses S3 as an intermediate storage location before copying the data. For other destinations, Kinesis Firehose uses S3 as a backup for data that fails the transfer process. In both cases, encryption should be enabled on the S3 bucket in the Firehose delivery stream settings.\n\n## Note\nThese steps are for verifying encrypting of the Kinesis Firehose data when buffered or stored on the server. For __encryption in transit__, Kinesis Firehose always uses an HTTPS endpoint.",
    "weakness_title_read_only": "Clear Text and Unencrypted Transmission of Information",
    "weakness_id_read_only": "P216",
    "weakness": "b1d166d6-8ca7-415f-9cd9-8c2d745d3d01",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2022-10-17T12:55:14.092000-04:00",
    "last_updated": "2023-03-27T07:03:10.354000-04:00",
    "custom": "False",
    "rules": "0ba9a47a-9188-4de8-8372-175b51b4c8c4",
    "rules_read_only": "A1348"
  },
  {
    "countermeasure_id": "T2418",
    "universal_id": "2fd74ef7-1f9f-464b-9bb7-456a1d0083c7",
    "countermeasure_name": "Ensure Cognito uses strong authentication requirements (Amazon Cognito)",
    "countermeasure_solution": "Review the authentication setting for every Cognito user pool. In the AWS console:\n\n1. Go to the Amazon Cognito page.\n2. Choose __User pools__ from the navigation menu.\n3. Choose your user pool (by clicking its name).\n4. Choose the __Sign-in experience__ tab.\n5. Set the following:\n    - Minimum length requirement of `8` or greater for the password policy. The other requirements for case, numbers, and symbols are recommended for increasing password entropy but are not required.\n    - Enable MFA (multi-factor authentication). For highly sensitive applications, choose __Require MFA__ rather than __Optional MFA__ to force users to configure a second authentication factor. To reduce user friction without compromising security, configure the device tracking settings to __User opt-in__, which allows users to configure trusted devices that won't require the second factor.\n\nSource: [Adding MFA to a user pool](https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-mfa.html)",
    "weakness_title_read_only": "Weak Authentication",
    "weakness_id_read_only": "P1139",
    "weakness": "4bcb2026-5bef-4208-94e0-9353576a5abc",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2022-10-17T13:01:08.344000-04:00",
    "last_updated": "2022-12-05T23:20:00.660000-05:00",
    "custom": "False",
    "rules": "cfc3f72f-cbdd-4188-ba4f-eb3d8845cc0b",
    "rules_read_only": "A1346"
  },
  {
    "countermeasure_id": "T2419",
    "universal_id": "c83ec08d-e879-4092-9c9f-be0e707ab3a4",
    "countermeasure_name": "Verify Cognito uses strong authentication requirements (Amazon Cognito)",
    "countermeasure_solution": "Verify the authentication setting for every Cognito user pool is aligned with best practices. \n\nIn the AWS console:\n\n1. Go to the Amazon Cognito page.\n2. Choose __User pools__ from the navigation menu.\n3. Choose your user pool (by clicking its name).\n4. Choose the __Sign-in experience__ tab.\n5. Verify the following:\n    - The password policy has a minimum length requirement of `8` or greater. \n    - MFA (multi-factor authentication) is enabled.",
    "weakness_title_read_only": "Weak Authentication",
    "weakness_id_read_only": "P1139",
    "weakness": "4bcb2026-5bef-4208-94e0-9353576a5abc",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2022-10-17T13:04:44.552000-04:00",
    "last_updated": "2022-12-05T23:20:02.918000-05:00",
    "custom": "False",
    "rules": "cfc3f72f-cbdd-4188-ba4f-eb3d8845cc0b",
    "rules_read_only": "A1346"
  },
  {
    "countermeasure_id": "T2420",
    "universal_id": "67df5c6f-143c-4581-aa17-11a8990354e5",
    "countermeasure_name": "Add advanced security to user pool (Amazon Cognito)",
    "countermeasure_solution": "Detect suspicious behavior using Amazon adaptive security features for Cognito. Follow these steps in the AWS console to enable it:\n\n1. Go to the Amazon Cognito page.\n2. Choose __User pools__ from the navigation menu.\n3. Choose your user pool (by clicking its name).\n4. Choose the __App integration__ tab.\n5. In the __Advanced security__ section, choose __Enable__.\n6. Choose __Full-function__. You will need to refine your settings:\n        - To put compromised credentials protection into effect, choose __Block sign-in__.\n        - To put adaptive authentication checks into effect, choose __Require MFA__ for __High risk__ and __Medium risk__ security incidents.\n7. Choose __Save changes__.\n\n## Note\nBy default, Cognito's adaptive security feature is not enabled. Adaptive security should be used in all security-forward applications, but you may need a phase-in period where you monitor for potential false positives (legitimate users being blocked unnecessarily). To make this possible:\n\n- Consider using __Audit-only__ instead of __Full-function__ to log adaptive security warnings and assess the likelihood of false positives before you use adaptive security in a production environment.\n- Consider not using the __Block sign-in__ options at first.\n- Fine-tune these settings if legitimate users are blocked. One possible remediation activity is to allow specific IP addresses to override adaptive security checks using the __IP address exceptions__ settings.\n\nSource: [Adding advanced security to a user pool](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pool-settings-advanced-security.html)",
    "weakness_title_read_only": "Inadequate Login Activity Monitoring and Notification",
    "weakness_id_read_only": "P774",
    "weakness": "d1c48f5c-6c1f-4d21-bd6a-7b763ecae311",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "deployment",
    "created": "2022-10-17T13:14:31.578000-04:00",
    "last_updated": "2022-12-05T23:22:38.539000-05:00",
    "custom": "False",
    "rules": "cfc3f72f-cbdd-4188-ba4f-eb3d8845cc0b",
    "rules_read_only": "A1346"
  },
  {
    "countermeasure_id": "T2421",
    "universal_id": "bffecc19-578b-4838-9712-753cabbf9f2d",
    "countermeasure_name": "Verify Cognito user pools are protected by adaptive security (AWS)",
    "countermeasure_solution": "Verify adaptive security features for Cognito that can detect suspicious behavior are enabled. \n\n1. Go to the Amazon Cognito page.\n2. Choose __User pools__ from the navigation menu.\n3. Choose your user pool (by clicking its name).\n4. Choose the __App integration__ tab.\n5. In the __Advanced security__ section,  __Enable__ should be selected\n6. Choose __Full-function__. \n        - To put compromised credentials protection into effect, __Block sign-in__should be selected.\n        - To put adaptive authentication checks into effect, __Require MFA__ for __High risk__ and __Medium risk__ security incidents should be selected.\n7. Choose __Save changes__.",
    "weakness_title_read_only": "Inadequate Login Activity Monitoring and Notification",
    "weakness_id_read_only": "P774",
    "weakness": "d1c48f5c-6c1f-4d21-bd6a-7b763ecae311",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2022-10-17T13:24:11.673000-04:00",
    "last_updated": "2022-12-05T23:22:41.884000-05:00",
    "custom": "False",
    "rules": "cfc3f72f-cbdd-4188-ba4f-eb3d8845cc0b",
    "rules_read_only": "A1346"
  },
  {
    "countermeasure_id": "T2422",
    "universal_id": "eebca5a4-722e-4635-9dcb-c4c92b387260",
    "countermeasure_name": "Check the S3 backup for Kinesis Firehose delivery failures (Amazon Kinesis Data Firehose)",
    "countermeasure_solution": "Monitor error conditions to avoid leaving orphaned data that isn't successfully transferred.\n\nMost data sources use an S3 backup for failed transfers. If data delivery fails, Kinesis Firehose creates an object that has information about the error and the data that could not be copied. This is an example of a failed transfer to Splunk: \n\n    {\n      \"attemptsMade\": 0,\n      \"arrivalTimestamp\": 1906035354675,\n      \"errorCode\": \"Splunk.AckTimeout\",\n      \"errorMessage\": \"Did not receive an acknowledgment from HEC before the HEC acknowledgment timeout expired.\",\n      \"attemptEndingTimestamp\": 13626284715507,\n      \"rawData\": \"MiAyNTE2MjAyNzIyMDk...\",\n      \"EventId\": \"4957719392811414733960...\"\n    }\n\n- Monitor the S3 bucket that holds failure records.\n    To configure settings for the S3 backup bucket, follow these steps:\n\n     1. On the Amazon Kinesis page, choose __Delivery streams__.\n     2. Select the stream.\n     3. Choose the __Configuration__ tab.\n     4. Look in __Backup settings__ section.\n     5. Choose __Edit__.\n     6. You can specify the S3 bucket, enable encryption, and choose whether to back up all data that Kinesis Firehose handles or only the failed data.\n     7. Choose __Save changes__.\n\n## Note\nAlternatively, you can monitor failure metrics in CloudWatch. Kinesis Firehose uses different CloudWatch metrics for different destinations. For example, Redshift errors include `Redshift.ConnectionFailed` and `Redshift.DatabaseNotFound`. For a list of data delivery errors, refer to the [AWS documentation](https://docs.aws.amazon.com/firehose/latest/dev/monitoring-with-cloudwatch-logs.html).",
    "weakness_title_read_only": "Transfer failure that leads to orphaned data",
    "weakness_id_read_only": "P1699",
    "weakness": "bb337e02-d3d8-4015-a042-1e6e1bdd31fd",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2022-10-17T13:39:24.137000-04:00",
    "last_updated": "2023-01-25T09:48:07.827000-05:00",
    "custom": "False",
    "rules": "0ba9a47a-9188-4de8-8372-175b51b4c8c4",
    "rules_read_only": "A1348"
  },
  {
    "countermeasure_id": "T2423",
    "universal_id": "b2a65c95-e1f3-454c-8149-b525ed622382",
    "countermeasure_name": "Verify the S3 backup for Kinesis Firehose delivery failures are checked regularly (Amazon Kinesis Data Firehose)",
    "countermeasure_solution": "Verify error conditions are monitored to avoid leaving orphaned data that isn't successfully transferred.\n\nVerify Kinesis Firehose creates error objects for data delivery failure that have information about the error and the data that could not be copied are checked and notified. \nThis is an example of a failed transfer to Splunk: \n\n    {\n      \"attemptsMade\": 0,\n      \"arrivalTimestamp\": 1906035354675,\n      \"errorCode\": \"Splunk.AckTimeout\",\n      \"errorMessage\": \"Did not receive an acknowledgment from HEC before the HEC acknowledgment timeout expired.\",\n      \"attemptEndingTimestamp\": 13626284715507,\n      \"rawData\": \"MiAyNTE2MjAyNzIyMDk...\",\n      \"EventId\": \"4957719392811414733960...\"\n    }\n\n- Verify that the S3 bucket that holds failure records is monitored.\n    \n    To verify settings for the S3 backup bucket, follow these steps:\n     \n     1. On the Amazon Kinesis page, choose __Delivery streams__.\n     2. Select the stream.\n     3. Choose the __Configuration__ tab.\n     4. Look in __Backup settings__ section.\n     5. Verify the S3 bucket, enable encryption, and whether to backup all data that Kinesis Firehose handles or only the failed data are set appropriately.",
    "weakness_title_read_only": "Transfer failure that leads to orphaned data",
    "weakness_id_read_only": "P1699",
    "weakness": "bb337e02-d3d8-4015-a042-1e6e1bdd31fd",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2022-10-17T13:42:58.705000-04:00",
    "last_updated": "2023-01-25T09:55:09.973000-05:00",
    "custom": "False",
    "rules": "0ba9a47a-9188-4de8-8372-175b51b4c8c4",
    "rules_read_only": "A1348"
  },
  {
    "countermeasure_id": "T2424",
    "universal_id": "0e287a95-a13e-4573-8dba-706a995248f3",
    "countermeasure_name": "Defend Cognito user pools with a WAF (Amazon Cognito)",
    "countermeasure_solution": "Use ACLs from AWS Web Application Firewall (WAF) to protect user pool activity. Follow these steps in the AWS console to enable WAF support and attach an ACL:\n\n1. Go to the Amazon Cognito page.\n2. Choose __User pools__ from the navigation menu.\n3. Choose your user pool (by clicking its name).\n4. Choose the __User pool properties__ tab.\n5. In the __AWS WAF__ section, choose __Edit__.\n6. Enable __Use AWS WAF with your user pool__ and choose the ACL you want to use\n7. Choose __Save changes__.\n\n## See Also\n<!-- maybe x-ref \"Verify that Web Application Firewall is enabled\" from \"03 - AWS Web Application Firewall.xlsx\" for ACL information -->\n\nSource: [Associating an AWS WAF web ACL with a user pool](https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-waf.html)",
    "weakness_title_read_only": "Not using a WAF to protect web applications and services against common attacks",
    "weakness_id_read_only": "P1698",
    "weakness": "2cdea6e1-d3c1-4b87-b0e4-680a638ff77a",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2022-10-17T13:52:00.871000-04:00",
    "last_updated": "2022-12-05T23:26:14.283000-05:00",
    "custom": "False",
    "rules": "cfc3f72f-cbdd-4188-ba4f-eb3d8845cc0b",
    "rules_read_only": "A1346"
  },
  {
    "countermeasure_id": "T2425",
    "universal_id": "f1b12fb1-21d0-4c1d-ba4a-73025d24c05f",
    "countermeasure_name": "Encrypt Kinesis streams on the server (Amazon Kinesis Data Streams)",
    "countermeasure_solution": "Encrypt all Kinesis stream data with server-side encryption:\n\n1. Select the stream in the Data Streams console.\n2. Choose the __Configuration__ tab.\n3. In the Encryption section, choose __Edit__.\n4. Turn on the __Enable server-side encryption__ setting.\n5. Choose the type of key:\n    - Select __Use AWS managed CMK__ to use a key that Kinesis generates automatically and manages transparently. This choice simplifies application setup, because there's no need to configure key policies as long as the principals that need to access the Kinesis stream are part of the same AWS account.\n    - Select __Use customer-managed CMK__ to use a KMS key that you own. This choice gives you the ability to revoke keys in the case of an intrusion, and to control other aspects of key policy. It also allows you to configure access for principals from another AWS account. However, more policy setup is required. Your Kinesis stream producers must have the `kms:GenerateDataKey` permission and your Kinesis stream consumers must have the `kms:Decrypt` permission. If you use a customer-managed key, make sure to verify that your application is successfully able to write and read to the stream. You can verify success by looking at the metrics `PutRecord.Success`, `PutRecords.Success`, and `GetRecords.Success` in CloudWatch.\n6. Choose __Save changes__.\n\n## Note\nKinesis encrypts data automatically, before it writes it to the Kinesis stream storage layer. You should __not__ perform manually encryption and decryption in the application layer unless absolutely necessary for an exceptional business case.",
    "weakness_title_read_only": "Clear Text and Unencrypted Transmission of Information",
    "weakness_id_read_only": "P216",
    "weakness": "b1d166d6-8ca7-415f-9cd9-8c2d745d3d01",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2022-10-17T13:54:15.103000-04:00",
    "last_updated": "2023-01-12T10:23:24.108000-05:00",
    "custom": "False",
    "rules": "686a7cc5-c21e-4949-9286-5e62f4618362",
    "rules_read_only": "A1347"
  },
  {
    "countermeasure_id": "T2426",
    "universal_id": "31e15cfd-a1d3-43ed-8c88-2305b6d5145f",
    "countermeasure_name": "Verify WAF is enabled for Cognito user pools (Amazon Cognito)",
    "countermeasure_solution": "Verify ACLs are used from AWS Web Application Firewall (WAF) to protect user pool activity.\n \n1. Go to the Amazon Cognito page.\n2. Choose __User pools__ from the navigation menu.\n3. Choose your user pool (by clicking its name).\n4. Choose the __User pool properties__ tab.\n5. In the __AWS WAF__ section, choose __Edit__.\n6. Verify __Use AWS WAF with your user pool__  is enabled and the proper ACL is selected.",
    "weakness_title_read_only": "Not using a WAF to protect web applications and services against common attacks",
    "weakness_id_read_only": "P1698",
    "weakness": "2cdea6e1-d3c1-4b87-b0e4-680a638ff77a",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2022-10-17T13:54:21.971000-04:00",
    "last_updated": "2022-12-05T23:26:43.910000-05:00",
    "custom": "False",
    "rules": "cfc3f72f-cbdd-4188-ba4f-eb3d8845cc0b",
    "rules_read_only": "A1346"
  },
  {
    "countermeasure_id": "T2427",
    "universal_id": "4b7c1b28-c253-4537-9ab8-c2e91c6c1f70",
    "countermeasure_name": "Verify Kinesis streams are encrypted on the server (Amazon Kinesis Data Streams)",
    "countermeasure_solution": "Verify all Kinesis stream data are protected with server-side encryption:\n\n1. Select the stream in the Data Streams console.\n2. Choose the __Configuration__ tab.\n3. In the Encryption section, verify the __Enable server-side encryption__ setting is enabled.\n5. As the type of key:\n    - __Use AWS managed CMK__  should be selected to use a key that Kinesis generates automatically and manages transparently. \n    - __Use customer-managed CMK__ should be selected to use a KMS key that you own. \n\n\n## Note\nKinesis encrypts data automatically, before it writes it to the Kinesis stream storage layer. Verify __not__ perform manually encryption and decryption in the application layer unless absolutely necessary for an exceptional business case.",
    "weakness_title_read_only": "Clear Text and Unencrypted Transmission of Information",
    "weakness_id_read_only": "P216",
    "weakness": "b1d166d6-8ca7-415f-9cd9-8c2d745d3d01",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2022-10-17T13:54:22.674000-04:00",
    "last_updated": "2023-03-27T07:03:47.790000-04:00",
    "custom": "False",
    "rules": "686a7cc5-c21e-4949-9286-5e62f4618362",
    "rules_read_only": "A1347"
  },
  {
    "countermeasure_id": "T2428",
    "universal_id": "f933951e-7a8d-49d6-b248-0740894cef72",
    "countermeasure_name": "Implement least privilege access to Kinesis streams (Amazon Kinesis Data Streams)",
    "countermeasure_solution": "Give consumers and producers using Kinesis data streams the minimum privileges required to perform their operations and nothing more.\n\n- Instead of writing policies that grant access to all streams (`\"Resource\": \"arn:aws:kinesis:[region]:[account-id]:stream/*\"`) or for all actions (`\"Action\": \"kinesis:*\"`), favor policies that grant targeted access. This prevents potential accidents and deliberate exploits.\n- Consumers and producers should have separate IAM policies.\n\nFor example, a stream reader will need permission for actions like `DescribeStreamSummary` and `GetRecord`, but not `CreateStream`, `DeleteStream`, or `PutRecord`. Here's an IAM policy that grants these permissions for a specific stream, and also allows the stream reader to get a list of all the Kinesis streams in the AWS account:\n\n    {\n        \"Version\": \"2012-10-17\",\n        \"Statement\": [\n            {\n                \"Effect\": \"Allow\",\n                \"Action\": [\n                    \"kinesis:Get*\",\n                    \"kinesis:DescribeStreamSummary\"\n                ],\n                \"Resource\": [\n                    \"arn:aws:kinesis:us-east-1:111122223333:stream/stream1\"\n                ]\n            },\n            {\n                \"Effect\": \"Allow\",\n                \"Action\": [\n                    \"kinesis:ListStreams\"\n                ],\n                \"Resource\": [\n                    \"*\"\n                ]\n            }\n        ]\n    }\n\nThe Kinesis API reference provides a list of all the [Kinesis actions](https://docs.aws.amazon.com/kinesis/latest/APIReference/Welcome.html) that you can target in an IAM policy.\n\n## Note\nIf your application uses the KCL (Kinesis Client Library), include permissions for DynamoDB (which KCL uses to track state) and CloudWatch (which KCL uses to send metrics) in the policy you create.",
    "weakness_title_read_only": "Unnecessary and excessive privileges",
    "weakness_id_read_only": "P1700",
    "weakness": "de75df03-145f-4962-b70e-6e198253d826",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2022-10-17T14:56:29.850000-04:00",
    "last_updated": "2023-05-11T13:23:34.693000-04:00",
    "custom": "False",
    "rules": "686a7cc5-c21e-4949-9286-5e62f4618362",
    "rules_read_only": "A1347"
  },
  {
    "countermeasure_id": "T2429",
    "universal_id": "4da88b8b-a988-4c00-8f4b-638aac43bb6d",
    "countermeasure_name": "Verify least privilege access to Kinesis streams is implemented (Amazon Kinesis Data Streams)",
    "countermeasure_solution": "Verify consumers and producers using Kinesis data streams are guaranteed the minimum privileges required to perform their operations and nothing more.\n\n- Verify policies are used that grant targeted access, not the policies that grant access to all streams (`\"Resource\": \"arn:aws:kinesis:[region]:[account-id]:stream/*\"`) or for all actions (`\"Action\": \"kinesis:*\"`).\n- Verify consumers and producers have separate IAM policies.\n\n## Note\nIf your application uses the KCL (Kinesis Client Library), verify permissions for DynamoDB (which KCL uses to track state) and CloudWatch (which KCL uses to send metrics) are included in the created policy.",
    "weakness_title_read_only": "Unnecessary and excessive privileges",
    "weakness_id_read_only": "P1700",
    "weakness": "de75df03-145f-4962-b70e-6e198253d826",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2022-10-17T14:56:37.935000-04:00",
    "last_updated": "2023-01-25T09:58:18.764000-05:00",
    "custom": "False",
    "rules": "686a7cc5-c21e-4949-9286-5e62f4618362",
    "rules_read_only": "A1347"
  },
  {
    "countermeasure_id": "T2430",
    "universal_id": "9377faaa-9e84-42ba-9e2d-72c4d0bfa0b0",
    "countermeasure_name": "Use IAM policy to safeguard Cognito user records against accidents (Amazon Cognito)",
    "countermeasure_solution": "Follow the principle of least privilege when creating IAM policies for the people who will be managing user pools:\n\n- Grant permissions to the specific user pool that a service user is managing. You can identify the user pool using its ARN in the `Resource` field of a policy by ARN in the format `arn:aws:cognito-idp:REGION:ACCOUNT_ID:userpool/USER_POOL_ID`.\n- Allow only the actions that a service user requires. For example, it's a good practice to restrict delete actions to prevent accidental removal of user pool data and configuration. You might accomplish that with a policy like this:\n\n        {\n            \"Version\":\"2012-10-17\",\n            \"Statement\":[{\n                \"Effect\":\"Deny\",\n                \"Action\":[\n                    \"cognito-idp:DeleteGroup\",\n                    \"cognito-idp:DeleteIdentityProvider\",\n                    \"cognito-idp:DeleteResourceServer\",\n                    \"cognito-idp:UserPool\",\n                    \"cognito-idp:UserPoolClient\",\n                    \"cognito-idp:UserPoolDomain\",\n                    \"cognito-identity:DeleteIdentityPool\"\n                ],\n                \"Resource\": \"*\"\n            }]\n        }\n\nSource: [Identity and access management for Amazon Cognito](https://docs.aws.amazon.com/cognito/latest/developerguide/security-iam.html)",
    "weakness_title_read_only": "Unnecessary and excessive privileges",
    "weakness_id_read_only": "P1700",
    "weakness": "de75df03-145f-4962-b70e-6e198253d826",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2022-10-17T15:59:44.395000-04:00",
    "last_updated": "2022-12-05T23:28:06.900000-05:00",
    "custom": "False",
    "rules": "cfc3f72f-cbdd-4188-ba4f-eb3d8845cc0b",
    "rules_read_only": "A1346"
  },
  {
    "countermeasure_id": "T2431",
    "universal_id": "dc275059-ed93-4a74-b795-9385fb061ea1",
    "countermeasure_name": "Verify IAM policies to safeguard Cognito user records against accidents is used (Amazon Cognito)",
    "countermeasure_solution": "Verify the principle of least privilege is followed when creating IAM policies for the people who will be managing user pools:\n\n- Verify permissions to the specific user pool that a service user is managing is guaranteed. You can identify the user pool using its ARN in the `Resource` field of a policy by ARN in the format `arn:aws:cognito-idp:REGION:ACCOUNT_ID:userpool/USER_POOL_ID`.\n- Verify only the actions that a service user requires are allowed. For example, delete-actions are restricted to prevent accidental removal of user pool data and configuration.",
    "weakness_title_read_only": "Unnecessary and excessive privileges",
    "weakness_id_read_only": "P1700",
    "weakness": "de75df03-145f-4962-b70e-6e198253d826",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2022-10-17T16:01:49.125000-04:00",
    "last_updated": "2022-12-05T23:28:09.809000-05:00",
    "custom": "False",
    "rules": "cfc3f72f-cbdd-4188-ba4f-eb3d8845cc0b",
    "rules_read_only": "A1346"
  },
  {
    "countermeasure_id": "T2432",
    "universal_id": "ec6db56b-a3da-4b76-900d-0dd9127658e0",
    "countermeasure_name": "Ensure Kinesis events are logged (Amazon Kinesis Data Streams)",
    "countermeasure_solution": "Keep a durable, encrypted log of Kinesis events.\n\nKinesis is integrated with CloudTrail, so its events will be visible in the event history for 90 days. A better practice is to create a custom trail that stores log events in an encrypted S3 bucketed for longer term storage.\n\nKinesis Data Stream events track interactions with a Kinesis data stream, including the IP address of the client making the request, the identity (service account or role) used to make the request, and whether the request originated from another AWS service.\n\n## Note\nThere are roughly 20 Kinesis events, and they are detailed in the [API reference](https://docs.aws.amazon.com/streams/latest/dev/logging-using-cloudtrail.html).",
    "weakness_title_read_only": "Lack of monitoring (Cloud)",
    "weakness_id_read_only": "P1667",
    "weakness": "692ff87f-9bb7-4995-b15e-a24d351df672",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2022-10-17T16:09:09.200000-04:00",
    "last_updated": "2023-01-25T09:58:36.492000-05:00",
    "custom": "False",
    "rules": "686a7cc5-c21e-4949-9286-5e62f4618362",
    "rules_read_only": "A1347"
  },
  {
    "countermeasure_id": "T2433",
    "universal_id": "691c0631-0580-4d87-96db-396d568d23e1",
    "countermeasure_name": "Verify Kinesis events are logged (Amazon Kinesis Data Streams)",
    "countermeasure_solution": "Verify consumers and producers using Kinesis data streams are guaranteed the minimum privileges required to perform their operations and nothing more.\n\n- Verify policies are used that grant targeted access, not the policies that grant access to all streams (`\"Resource\": \"arn:aws:kinesis:[region]:[account-id]:stream/*\"`) or for all actions (`\"Action\": \"kinesis:*\"`).\n- Verify consumers and producers have separate IAM policies.\n\n## Note\nIf your application uses the KCL (Kinesis Client Library), verify permissions for DynamoDB (which KCL uses to track state) and CloudWatch (which KCL uses to send metrics) are included in the created policy.",
    "weakness_title_read_only": "Lack of monitoring (Cloud)",
    "weakness_id_read_only": "P1667",
    "weakness": "692ff87f-9bb7-4995-b15e-a24d351df672",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2022-10-17T16:09:15.606000-04:00",
    "last_updated": "2023-05-11T13:43:16.971000-04:00",
    "custom": "False",
    "rules": "686a7cc5-c21e-4949-9286-5e62f4618362",
    "rules_read_only": "A1347"
  },
  {
    "countermeasure_id": "T2434",
    "universal_id": "35305b9c-d69e-4995-ad76-628faaeb4c5e",
    "countermeasure_name": "Enable Web Application Firewall (AWS Web Application Firewall)",
    "countermeasure_solution": "Verify that the Web Application Firewall (WAF) is enabled.\n \nFollow these steps in the AWS console: \n\n1. Go to the __WAF & Shield__ page.\n2. Under AWS WAF in the navigation menu, choose __Web ACLs__.\n    - If you see a list of ACLs, WAF is enabled.\n    - If you see the getting started page with an overview of WAF functionality, WAF is not yet configured.\n\nSet appropriate rules for the WAF.\nSimply having WAF enabled does not guarantee a secure system. There are many possible rules you can enforce with WAF, and the ones you choose depend on various factors (your application size, its functionality, its traffic, its sensitivity, and so on). But if you are enabling WAF for the first time, AWS guidelines suggest this process:\n\n1. Go the __WAF & Shield__ page.\n2. Choose __Web ACLs__ from the navigation menu.\n3. Choose __Create web ACL__.\n4. Enter a descriptive name (like `myapp1-acl`) and choose __Next__.  AWS suggests adding two rule types:\n    - A rate-liming rule:\n        1. In the __Rules__ section, choose __Add rules__, then __Add my own rules and rule groups__.\n        2. Select __Rule builder__.\n        3. In the __Rule__ section, select __Rate-based rule__.\n        4. In the __Rate limit__ box,  choose a maximum number of requests that can be received by one IP in a five-minute period. AWS suggests starting with a value of `2000` and reducing it as needed if it doesn't interfere with application behavior.\n        5. Optionally, choose a different response. The standard choice is __Block__, but you can use __CAPTCHA__ to give users the chance to pass a bot check.\n        6. Choose __Add rule__.\n5. The managed rules that apply to your application:\n    1. In the __Rules__ section, choose __Add rules__, then __Add managed rule groups__.\n    2. Expand the __AWS managed rule groups__ section.\n    3. Choose __Add to web ACL__ for all the rules that are relevant to your application.\n    4. Choose __Add rules__.\n6. When you have added both types of rules, choose __Next__ until you reach the end of the settings, and then __Create web ACL__.",
    "weakness_title_read_only": "Not using a WAF to protect web applications and services against common attacks",
    "weakness_id_read_only": "P1698",
    "weakness": "2cdea6e1-d3c1-4b87-b0e4-680a638ff77a",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2022-10-17T16:24:24.771000-04:00",
    "last_updated": "2023-01-25T10:00:53.819000-05:00",
    "custom": "False",
    "rules": "5a345fe6-4520-45d5-ad89-f347c9a86a5e",
    "rules_read_only": "A1349"
  },
  {
    "countermeasure_id": "T2435",
    "universal_id": "5389dc21-f5c9-4631-9736-8abf2723cb22",
    "countermeasure_name": "Verify the Web Application Firewall is enabled (AWS Web Application Firewall)",
    "countermeasure_solution": "Verify that the Web Application Firewall (WAF) is enabled.\n \nFollow these steps in the AWS console: \n\n1. Go to the __WAF & Shield__ page.\n2. Under AWS WAF in the navigation menu, choose __Web ACLs__.\n    - If you see a list of ACLs, WAF is enabled.\n    - If you see the getting started page with an overview of WAF functionality, WAF is not yet configured.\n\nVerify appropriate rules are set for the WAF.\n\n1. Go to the __WAF & Shield__ page.\n2. Choose __Web ACLs__ from the navigation menu.\n3. Select  ACL names (like `myapp1-acl`) and for each one in the __Rules__ section verify the defined rules are appropriate.",
    "weakness_title_read_only": "Not using a WAF to protect web applications and services against common attacks",
    "weakness_id_read_only": "P1698",
    "weakness": "2cdea6e1-d3c1-4b87-b0e4-680a638ff77a",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2022-10-17T16:27:03.797000-04:00",
    "last_updated": "2023-01-25T10:01:07.459000-05:00",
    "custom": "False",
    "rules": "5a345fe6-4520-45d5-ad89-f347c9a86a5e",
    "rules_read_only": "A1349"
  },
  {
    "countermeasure_id": "T2436",
    "universal_id": "66f8d9cf-f71b-459a-964b-4375c4998e3f",
    "countermeasure_name": "Ensure Cognito events are logged (Amazon Cognito)",
    "countermeasure_solution": "Keep a durable, encrypted log of events. Cognito is integrated with CloudTrail, so its events will be visible in the event history for 90 days. A better practice is to create a custom trail that stores log events in an encrypted S3 bucket for longer term storage. \n\n## See Also\n<!--- x-ref the \"\"Create a CloudTrail...\"\" task from \"\"00 - AWS [not service specific].xlsx\"\" -->\n\nSource: [Logging Amazon Cognito API calls with AWS CloudTrail](https://docs.aws.amazon.com/cognito/latest/developerguide/logging-using-cloudtrail.html)",
    "weakness_title_read_only": "Lack of monitoring (Cloud)",
    "weakness_id_read_only": "P1667",
    "weakness": "692ff87f-9bb7-4995-b15e-a24d351df672",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2022-10-17T16:34:55.583000-04:00",
    "last_updated": "2022-12-05T23:28:48.355000-05:00",
    "custom": "False",
    "rules": "cfc3f72f-cbdd-4188-ba4f-eb3d8845cc0b",
    "rules_read_only": "A1346"
  },
  {
    "countermeasure_id": "T2437",
    "universal_id": "fed3da28-1ac2-40fa-a5eb-c158ac9cc4e6",
    "countermeasure_name": "Verify Cognito events are logged (Amazon Cognito)",
    "countermeasure_solution": "Verify a durable, encrypted log of events is kept. \n\n- Verify Cognito's events are visible in the event history for a proper number of days.\n- Or that a custom trail is created that stores log events in an encrypted S3 bucket for longer-term storage.",
    "weakness_title_read_only": "Lack of monitoring (Cloud)",
    "weakness_id_read_only": "P1667",
    "weakness": "692ff87f-9bb7-4995-b15e-a24d351df672",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2022-10-17T16:37:28.371000-04:00",
    "last_updated": "2022-12-05T23:28:54.011000-05:00",
    "custom": "False",
    "rules": "cfc3f72f-cbdd-4188-ba4f-eb3d8845cc0b",
    "rules_read_only": "A1346"
  },
  {
    "countermeasure_id": "T2438",
    "universal_id": "661eb9f5-0568-4aa9-900a-6157f41e8f85",
    "countermeasure_name": "Ensure Web Application Firewall ACLs are logged (AWS Web Application Firewall)",
    "countermeasure_solution": "By default, ACLs are not logged. To enable logging and get detailed information traffic and ACL analysis, follow these steps:\n\n1. Go to the __WAF & Shield__ page.\n2. Choose __Web ACLs__ from the navigation menu.\n3. Select an ACL by clicking its name.\n4. Choose the __Logging and metrics__ tab.\n5. In the __Logging__ section, choose __Enable__.\n6. Choose a destination, which can be a CloudWatch log group, Kinesis Data Firehose stream, or S3 bucket. You can create the desired resource from the configuration page using __Create new__. Consider that ACLs can generate extensive log data, and select a source accordingly.\n7. Choose __Save__.",
    "weakness_title_read_only": "Lack of collecting log data for WAF rules",
    "weakness_id_read_only": "P1702",
    "weakness": "85d1742b-4409-4f73-8c6c-2932913ee14b",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2022-10-17T16:50:33.086000-04:00",
    "last_updated": "2023-01-25T10:01:21.637000-05:00",
    "custom": "False",
    "rules": "5a345fe6-4520-45d5-ad89-f347c9a86a5e",
    "rules_read_only": "A1349"
  },
  {
    "countermeasure_id": "T2439",
    "universal_id": "318af692-c5cd-4805-910f-25ded56c32f0",
    "countermeasure_name": "Review Web Application Firewall logs for issues (AWS Web Application Firewall)",
    "countermeasure_solution": "Follow these practices to review WAF traffic data To protect your application:\n\n- Establish a regular schedule that teams can use to review the ACL logs.\n- Add new rules carving out exceptions for legitimate traffic that's triggering a block from WAF (for example, a rule allowing certain URL patterns).\n- Add new rules to tighten security around suspicious activity (for example, banning problematic IPs).\n- Set CloudWatch alarms to get immediate notifications about exception traffic patterns (for example, a spike in rejected traffic). Useful metrics include `BlockedRequests`, `CaptchaRequests`, `DDoSDetected`, and `DDoSAttackRequestsPerSecond`.\n\n## Note\nThe WAF does not log ACLs unless you opt in.",
    "weakness_title_read_only": "Lack of monitoring WAF for false positives and suspicious activity",
    "weakness_id_read_only": "P1701",
    "weakness": "fe143c3a-8cc0-4e03-9885-79d0f582669d",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2022-10-17T16:53:03.689000-04:00",
    "last_updated": "2022-12-06T12:00:53.460000-05:00",
    "custom": "False",
    "rules": "5a345fe6-4520-45d5-ad89-f347c9a86a5e",
    "rules_read_only": "A1349"
  },
  {
    "countermeasure_id": "T2440",
    "universal_id": "da019dd8-0a7c-46a0-a756-d91d88315db6",
    "countermeasure_name": "Verify Web Application Firewall ACLs are logged (AWS Web Application Firewall)",
    "countermeasure_solution": "Verify logging the ACLs is enabled and detailed information traffic and ACL analysis are captured.\n\n1. Go to the __WAF & Shield__ page.\n2. Choose __Web ACLs__ from the navigation menu.\n3. Select an ACL by clicking its name.\n4. Choose the __Logging and metrics__ tab.\n5. In the __Logging__ section, verify  __Enable__ is selected.\n6. Verify an appropriate destination is selected, which can be a CloudWatch log group, Kinesis Data Firehose stream, or S3 bucket or any desired resource created in the configuration page using __Create new__.",
    "weakness_title_read_only": "Lack of collecting log data for WAF rules",
    "weakness_id_read_only": "P1702",
    "weakness": "85d1742b-4409-4f73-8c6c-2932913ee14b",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2022-10-17T16:53:47.348000-04:00",
    "last_updated": "2023-01-25T10:02:40.550000-05:00",
    "custom": "False",
    "rules": "5a345fe6-4520-45d5-ad89-f347c9a86a5e",
    "rules_read_only": "A1349"
  },
  {
    "countermeasure_id": "T2441",
    "universal_id": "79a2d4b6-917c-464a-84a1-ec053f799271",
    "countermeasure_name": "Verify WAF logs are reviewed in a timely manner for issues (AWS Web Application Firewall)",
    "countermeasure_solution": " - Verify a regular schedule is established that teams use to review the ACL logs.\n- Verify new rules carving out exceptions are added for legitimate traffic that's triggering a block from WAF.\n- Verify new rules are added to tighten security around suspicious activity.\n- Verify CloudWatch alarms are set to get immediate notifications about exception traffic patterns.",
    "weakness_title_read_only": "Lack of monitoring WAF for false positives and suspicious activity",
    "weakness_id_read_only": "P1701",
    "weakness": "fe143c3a-8cc0-4e03-9885-79d0f582669d",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2022-10-17T16:55:17.795000-04:00",
    "last_updated": "2022-12-05T23:29:51.446000-05:00",
    "custom": "False",
    "rules": "5a345fe6-4520-45d5-ad89-f347c9a86a5e",
    "rules_read_only": "A1349"
  },
  {
    "countermeasure_id": "T2442",
    "universal_id": "ba9998a6-9466-4817-b2b6-71a79da61ebd",
    "countermeasure_name": "Ensure proper permissions for files on worker nodes (Containerization)",
    "countermeasure_solution": "To secure configuration files on worker nodes using proper access rights:\n\n- Set proper access rights and permissions for kubeconfig files.",
    "weakness_title_read_only": "Lack of proper access rights for configuration files (Containerization)",
    "weakness_id_read_only": "P1704",
    "weakness": "66614ee4-8997-4455-bf66-ebb5d6bfcb5c",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "deployment",
    "created": "2022-11-24T19:36:13.604000-05:00",
    "last_updated": "2022-12-05T23:32:45.072000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2443",
    "universal_id": "d0fe1573-410d-4bb8-9ab6-10d07ab49766",
    "countermeasure_name": "Verify proper permissions for files on worker nodes (Containerization)",
    "countermeasure_solution": "To confirm that configuration files are securely configured on worker nodes:\n- Verify that kubeconfig files have proper access rights and permissions.",
    "weakness_title_read_only": "Lack of proper access rights for configuration files (Containerization)",
    "weakness_id_read_only": "P1704",
    "weakness": "66614ee4-8997-4455-bf66-ebb5d6bfcb5c",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "testing",
    "created": "2022-11-24T19:46:25.800000-05:00",
    "last_updated": "2023-05-11T13:26:42.907000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2444",
    "universal_id": "9c53cdd3-1910-49bb-9a1d-5e62a6d14c1a",
    "countermeasure_name": "Secure authentication to and from worker nodes (Containerization)",
    "countermeasure_solution": "It is critical to verify the identity of the parties involved to secure your system against spoofed messages and man-in-the-middle attacks. To secure the connections between the API server and worker nodes, and confirm the identity of the parties, adhere to the following guidelines:\n\n- Do not accept anonymous requests to the Kubelet server\n- configure TLS and client certificate authentication",
    "weakness_title_read_only": "Insecure authentication to and from worker nodes (Containerization)",
    "weakness_id_read_only": "P1705",
    "weakness": "79d981e3-2871-48c1-af6d-499deee71041",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2022-11-24T20:40:27.912000-05:00",
    "last_updated": "2022-12-05T23:33:12.254000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2445",
    "universal_id": "4cd9eb3f-ffac-4acb-9d1b-91082d8b0a67",
    "countermeasure_name": "Verify secure authentication to and from worker nodes (Containerization)",
    "countermeasure_solution": "To ensure that the authentication to and from nodes is secured:\n\n- Verify that anonymous requests to the Kubelet server are not accepted.\n- Verify that TLS and client certificate authentication are configured properly.",
    "weakness_title_read_only": "Insecure authentication to and from worker nodes (Containerization)",
    "weakness_id_read_only": "P1705",
    "weakness": "79d981e3-2871-48c1-af6d-499deee71041",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2022-11-24T20:52:25.403000-05:00",
    "last_updated": "2023-05-11T13:26:45.807000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2446",
    "universal_id": "82648033-9fc3-4110-8432-7f64944f4350",
    "countermeasure_name": "Collect and protect sensitive information on worker nodes (Containerization)",
    "countermeasure_solution": "It is critical to collect security events (at a proper rate) and to protect sensitive information on worker nodes. To ensure that you Collect and protect sensitive information on worker nodes:\n\n- Set appropriate rate to capture and log security-relevant information.\n- Ensure that unauthenticated access through Kubelet read-only port is not provided.",
    "weakness_title_read_only": "Poor collection and protection of sensitive information on worker nodes (Containerization)",
    "weakness_id_read_only": "P1706",
    "weakness": "fe3e005f-446e-4630-a99e-0b9986637bf4",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2022-11-24T22:45:15.965000-05:00",
    "last_updated": "2022-12-05T23:33:45.698000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2447",
    "universal_id": "debf6c6e-9262-43bd-ab0a-a41194b034ad",
    "countermeasure_name": "Verify the collection and protection of sensitive information on worker nodes (Containerization)",
    "countermeasure_solution": "To ensure that you capture and protect important security events in your environment:\n\n- Verify that the appropriate rate for capturing and logging security information is set.\n- Verify that unauthenticated access through Kubelet read-only port is not provided.",
    "weakness_title_read_only": "Poor collection and protection of sensitive information on worker nodes (Containerization)",
    "weakness_id_read_only": "P1706",
    "weakness": "fe3e005f-446e-4630-a99e-0b9986637bf4",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2022-11-24T23:01:09.011000-05:00",
    "last_updated": "2023-05-11T13:26:47.652000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2448",
    "universal_id": "2c4f0bad-2816-46ee-a011-c6d08e6ae929",
    "countermeasure_name": "Ensure the availability of worker nodes (Containerization)",
    "countermeasure_solution": "To limit resource consumption on your nodes and avoid downtime due to expired certificates:\n\n- Set idle timeouts on streaming connections.\n- Perform automated periodic rotation of certificates.",
    "weakness_title_read_only": "Unavailabilty of worker nodes (Containerization)",
    "weakness_id_read_only": "P1707",
    "weakness": "c85295e7-9638-48af-8c73-9cd3d28498c3",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2022-11-25T11:55:49.111000-05:00",
    "last_updated": "2022-12-05T23:35:49.225000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2449",
    "universal_id": "2edf24ef-ebf3-4910-8fd3-3f0211ce4050",
    "countermeasure_name": "Verify the availability of worker nodes (Containerization)",
    "countermeasure_solution": "To limit the consumption of resources on nodes and ensure the availability of nodes:\n\n- Verify that idle timeouts are set on streaming connections.\n- Verify that the periodic rotation of certificates is configured.",
    "weakness_title_read_only": "Unavailabilty of worker nodes (Containerization)",
    "weakness_id_read_only": "P1707",
    "weakness": "c85295e7-9638-48af-8c73-9cd3d28498c3",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2022-11-25T12:09:36.359000-05:00",
    "last_updated": "2023-05-11T13:26:48.871000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2450",
    "universal_id": "b1a0319e-2d3e-45f7-aca9-7e38808da2d0",
    "countermeasure_name": "Protect worker nodes with proper flags and arguments (Containerization)",
    "countermeasure_solution": "To securely configure your nodes, follow the below practices:\n\n- Protect the kernel of the nodes.\n- Configure Kubelets to automatically manage iptables.\n- Setup nodes with resolvable FQDNs.",
    "weakness_title_read_only": "Failure to protect worker nodes with proper flags and arguments (Containerization)",
    "weakness_id_read_only": "P1708",
    "weakness": "d0388572-dbbd-4ce1-aca9-d77f855467e8",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2022-11-25T12:32:38.282000-05:00",
    "last_updated": "2022-12-05T23:54:57.462000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2451",
    "universal_id": "3686e686-aa79-4322-a6e9-98780fab2e3e",
    "countermeasure_name": "Verify that worker nodes are protected with proper flags and arguments (Containerization)",
    "countermeasure_solution": "To verify that your nodes are configured with proper flags and arguments:\n\n- Verify that the Kernel parameters are set properly.\n- Verify that Kubelets automatically manage iptables.\n- Verify that nodes are set up with resolvable FQDNs.",
    "weakness_title_read_only": "Failure to protect worker nodes with proper flags and arguments (Containerization)",
    "weakness_id_read_only": "P1708",
    "weakness": "d0388572-dbbd-4ce1-aca9-d77f855467e8",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2022-11-25T12:47:30.610000-05:00",
    "last_updated": "2023-05-11T13:26:49.965000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2452",
    "universal_id": "9955e221-e97d-4fdf-a497-121d80093698",
    "countermeasure_name": "Use managed components (Containerization)",
    "countermeasure_solution": "Use managed components for \n- preventing manual methods for Kubernetes workloads to autenticate to the managed kubernetes service.\n- running untrusted workloads.",
    "weakness_title_read_only": "Using unmanaged components (Containerization)",
    "weakness_id_read_only": "P1710",
    "weakness": "14020336-d29a-454c-b604-4ea4320de0ce",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2022-11-25T14:36:45.990000-05:00",
    "last_updated": "2022-12-06T12:57:04.196000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2453",
    "universal_id": "0d70b0e0-f828-4537-9001-8abc76d4ff7a",
    "countermeasure_name": "Verify that managed components are used (Containerization).",
    "countermeasure_solution": "Verify that managed components are used to \n- prevent manual authentication methods for Kubernetes workloads\n- run untrusted workloads",
    "weakness_title_read_only": "Using unmanaged components (Containerization)",
    "weakness_id_read_only": "P1710",
    "weakness": "14020336-d29a-454c-b604-4ea4320de0ce",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2022-11-25T14:44:09.186000-05:00",
    "last_updated": "2022-12-06T12:57:51.967000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2454",
    "universal_id": "d1d165d9-04d2-4c39-929d-ca096881903a",
    "countermeasure_name": "Verify that managed container registries are securely configured (Containerization)",
    "countermeasure_solution": "To be sure that managed container registries are securely configured\n- ensure that secure privileges are set for accessing the registry\n- verify that malicious images cannot be added to the registry.",
    "weakness_title_read_only": "Insecurely configured managed container registries (Containerization)",
    "weakness_id_read_only": "P1709",
    "weakness": "32d6aeba-8bd4-4923-87fd-1018b7bb822e",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2022-11-25T16:30:53.459000-05:00",
    "last_updated": "2022-12-06T14:02:50.499000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2455",
    "universal_id": "7ad9ac28-aa4b-4a76-a4df-3acb7a374e7a",
    "countermeasure_name": "Securely configure managed container registries (Containerization)",
    "countermeasure_solution": "To securely configure managed container registries:\n\n- set secure privileges for accessing the registry\n- prevent malicious images from being added to the registry.",
    "weakness_title_read_only": "Insecurely configured managed container registries (Containerization)",
    "weakness_id_read_only": "P1709",
    "weakness": "32d6aeba-8bd4-4923-87fd-1018b7bb822e",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2022-11-25T16:34:08.336000-05:00",
    "last_updated": "2022-12-06T13:00:02.937000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2456",
    "universal_id": "9c2bcf79-d69d-47bf-9afb-cb954bc796a7",
    "countermeasure_name": "Assign roles properly (Containerization)",
    "countermeasure_solution": "Orchestrators provide a set of authentication methods and default roles. \n\n- Select an appropriate authentication method (e.g. bearer tokens, client certificates, HTTP authorization, etc.) following your specific needs and requirements.\n- Use admin roles with caution and only where required. In general, it is recommended to use fine-grained roles that grant users access to only the resources they need. \n- Follow the best practices to assign roles and permissions. That includes, but it's not limited to, enforcing least privilege, managing RBAC strategies, and using identity providers.",
    "weakness_title_read_only": "Lack of proper authentication and authorization (Containerization)",
    "weakness_id_read_only": "P1672",
    "weakness": "cf4718b9-7948-4de1-a4dd-2098a74d341f",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2022-11-25T19:22:58.956000-05:00",
    "last_updated": "2023-05-11T15:19:56.167000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2457",
    "universal_id": "0b2cc799-b6c7-42cf-ad7e-fd7618150956",
    "countermeasure_name": "Verify roles are assigned Properly(Containerization)",
    "countermeasure_solution": " - Verify an appropriate authentication method is selected.\n- Verify that admin roles only are used where required.\n-  Verify best practices are followed to assign roles and permissions.",
    "weakness_title_read_only": "Lack of proper authentication and authorization (Containerization)",
    "weakness_id_read_only": "P1672",
    "weakness": "cf4718b9-7948-4de1-a4dd-2098a74d341f",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2022-11-25T19:26:20.227000-05:00",
    "last_updated": "2022-12-06T00:06:00.377000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2458",
    "universal_id": "01b1ab6a-5308-46ae-9c73-5b925f4fe91f",
    "countermeasure_name": "Restrict user access (Containerization)",
    "countermeasure_solution": "Restrict user access to Control Plane Endpoint and also, minimize the number of users who have permission to create pods.",
    "weakness_title_read_only": "Lack of proper authentication and authorization (Containerization)",
    "weakness_id_read_only": "P1672",
    "weakness": "cf4718b9-7948-4de1-a4dd-2098a74d341f",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "development",
    "created": "2022-11-25T19:29:50.480000-05:00",
    "last_updated": "2022-12-06T00:06:21.278000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2459",
    "universal_id": "fb042e9f-53b1-4ec6-bb45-28c4b6fbbf1a",
    "countermeasure_name": "Verify user access is restricted (Containerization)",
    "countermeasure_solution": "Verify that user access to Control Plane Endpoint is restricted and the number of users who have permission to create pods is minimized.",
    "weakness_title_read_only": "Lack of proper authentication and authorization (Containerization)",
    "weakness_id_read_only": "P1672",
    "weakness": "cf4718b9-7948-4de1-a4dd-2098a74d341f",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2022-11-25T19:32:25.880000-05:00",
    "last_updated": "2022-12-06T00:06:22.889000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2460",
    "universal_id": "11d7ffec-e5cd-4850-90f5-a881c8bc1bba",
    "countermeasure_name": "Restrict service access (Containerization)",
    "countermeasure_solution": "Kubernetes provides a default service account and settings. Follow best practices to control services' access.\n\n- Disable or minimize the use of default service accounts.\n- Set secure values for authorization modes arguments.\n- Minimize the use of Service Account Tokens.",
    "weakness_title_read_only": "Lack of proper authentication and authorization (Containerization)",
    "weakness_id_read_only": "P1672",
    "weakness": "cf4718b9-7948-4de1-a4dd-2098a74d341f",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "development",
    "created": "2022-11-25T19:36:30.842000-05:00",
    "last_updated": "2022-12-06T00:08:36.625000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2461",
    "universal_id": "7e172597-fee9-4abb-a071-b9e201e25fb5",
    "countermeasure_name": "Verify service access is restricted (Containerization)",
    "countermeasure_solution": "To confirm service access is restricted\n\n- Verify default service accounts are disabled.\n- Verify secure values are set for authorization modes arguments.\n- Verify Service Account Tokens are only mounted where necessary.",
    "weakness_title_read_only": "Lack of proper authentication and authorization (Containerization)",
    "weakness_id_read_only": "P1672",
    "weakness": "cf4718b9-7948-4de1-a4dd-2098a74d341f",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2022-11-25T19:38:35.733000-05:00",
    "last_updated": "2022-12-06T00:08:38.178000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2462",
    "universal_id": "aa6f4281-03e0-49b4-bc63-95ef6d827fe9",
    "countermeasure_name": "Minimize the admission of high-privileged containers (Containerization)",
    "countermeasure_solution": "Minimize containers with excessive privileges, such as root containers and containers with Privilege Escalation rights.",
    "weakness_title_read_only": "Lack of proper authentication and authorization (Containerization)",
    "weakness_id_read_only": "P1672",
    "weakness": "cf4718b9-7948-4de1-a4dd-2098a74d341f",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "deployment",
    "created": "2022-11-25T19:45:48.437000-05:00",
    "last_updated": "2022-12-06T00:09:04.470000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2463",
    "universal_id": "cfd99da5-e89c-4bfc-b8f7-b46d258f2bab",
    "countermeasure_name": "Verify that containers with excessive privileges are minimized (Containerization)",
    "countermeasure_solution": "Confirm containers with excessive privileges, such as root containers and containers with Privilege Escalation rights, are minimized.",
    "weakness_title_read_only": "Lack of proper authentication and authorization (Containerization)",
    "weakness_id_read_only": "P1672",
    "weakness": "cf4718b9-7948-4de1-a4dd-2098a74d341f",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2022-11-25T19:48:18.299000-05:00",
    "last_updated": "2022-12-06T00:09:07.818000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2464",
    "universal_id": "48a34651-3dc4-4678-93ee-0e70cb5038c8",
    "countermeasure_name": "Minimize the admission of containers wishing to share namespaces (Containerization)",
    "countermeasure_solution": "Resources in a Kubernetes cluster should be segregated by namespace, to allow for security\ncontrols to be applied at that level and to make it easier to manage resources.  \n\n- Don't use default namespaces\n-  Minimize the admission of containers that share namespaces in different ways.",
    "weakness_title_read_only": "Lack of proper authentication and authorization (Containerization)",
    "weakness_id_read_only": "P1672",
    "weakness": "cf4718b9-7948-4de1-a4dd-2098a74d341f",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "deployment",
    "created": "2022-11-25T19:52:17.592000-05:00",
    "last_updated": "2022-12-06T00:09:41.593000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2465",
    "universal_id": "1f4f3b9d-71cb-43f6-b002-f405b21d0ec1",
    "countermeasure_name": "Verify that containers wishing to share namespaces are minimized (Containerization)",
    "countermeasure_solution": "To confirm that namespaces are used securely:\n\n- Verify default namespaces are not used.\n-  Verify the admission of containers that share namespaces is minimized.",
    "weakness_title_read_only": "Lack of proper authentication and authorization (Containerization)",
    "weakness_id_read_only": "P1672",
    "weakness": "cf4718b9-7948-4de1-a4dd-2098a74d341f",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "testing",
    "created": "2022-11-25T19:55:11.621000-05:00",
    "last_updated": "2022-12-06T00:09:46.034000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2466",
    "universal_id": "e58c9824-82a2-4e1e-b499-8d2a1ec483e3",
    "countermeasure_name": "Minimize the admission of containers with undesired capabilities (Containerization)",
    "countermeasure_solution": " - Do not permit containers with potentially dangerous capabilities, such as NET_RAW capability and capabilities assigned beyond the default set.",
    "weakness_title_read_only": "Lack of proper authentication and authorization (Containerization)",
    "weakness_id_read_only": "P1672",
    "weakness": "cf4718b9-7948-4de1-a4dd-2098a74d341f",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "development",
    "created": "2022-11-25T20:01:34.917000-05:00",
    "last_updated": "2022-12-06T00:10:22.392000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2467",
    "universal_id": "232cd35c-eef2-4604-a208-a3105d3caf48",
    "countermeasure_name": "Verify that containers with undesired capabilities are minimized (Containerization)",
    "countermeasure_solution": "Verify containers with potentially dangerous capabilities are not permitted.",
    "weakness_title_read_only": "Lack of proper authentication and authorization (Containerization)",
    "weakness_id_read_only": "P1672",
    "weakness": "cf4718b9-7948-4de1-a4dd-2098a74d341f",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2022-11-25T20:06:02.682000-05:00",
    "last_updated": "2022-12-06T00:10:23.809000-05:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2468",
    "universal_id": "ba463137-1ffb-434d-9c03-584aa82d3d22",
    "countermeasure_name": "Manage PCI-DSS compliance",
    "countermeasure_solution": "The Payment Card Industry Data Security Standard (PCI DSS) is a global standard that aims to strengthen the security and protection of cardholder data through technical and operational requirements. \n\nThe standard applies to all merchants and service providers that process, transmit, and/or store account data. Account data encompasses cardholder data and sensitive authentication data. Failing to comply with the standard has severe consequences, including financial penalties and withdrawal of the facility. \n\nThe PCI DSS v4.0 specifies 12 requirements that fulfill the six principle of PCI DSS:\n\n__Build and maintain a secure network and system__\n\n- Requirement 1: Install and maintain network security controls\n- Requirement 2: Apply secure configurations to all system components\n\n__Protect Account Data__\n\n- Requirement 3: Protect stored account data\n- Requirement 4: Protect cardholder data with strong cryptography during transmission over open, public networks\n\n__Maintain a vulnerability management program__\n\n- Requirement 5: Protect all systems and networks from malicious software\n- Requirement 6: Develop and maintain secure systems and software\n\n__Implement strong access control measures__\n\n- Requirement 7: Restrict access to system components and cardholder data by business need to know\n- Requirement 8: Identify users and authenticate access to system components\n- Requirement 9: Restrict physical access to cardholder data\n\n__Regularly monitor and test networks__\n\n- Requirement 10: Log and monitor all access to system components and cardholder data\n- Requirement 11: Test the security of systems and networks regularly\n\n__Maintain an information security policy__\n\n- Requirement 12: Support information security with organizational policies and programs\n\nPCI DSS v4.0 is the latest version of the standard. PCI DSS V3.2.1 will remain active for 18 months during the transition period (as of March 31, 2022). PCI DSS V3.2.1 will officially retire on March 31, 2024. However, the new PCI DSS v4.0 won’t be effective until March 31, 2025. \n\nFollow these guidelines to implement PCI DSS into day-to-day business processes:\n\n1. Identify and Confirm the scope of the PCI DSS \n\n2.  Maintain an inventory of system components that are in scope for PCI DSS, including a description of function/use, and keep it current.\n\n3. Ensure all security policies and operational procedures that are identified in PCI DSS requirements are:\n    - Documented.\n    - Kept up to date.\n    - In use.\n    - Known to all affected parties.\n\n4. Assign roles and responsibilities for performing activities for PCI DSS compliance to an individual or team.\n\n5. Develop performance metrics to measure the effectiveness of security initiatives and continuous monitoring of security controls, including those that are heavily relied upon, such as network security controls, intrusion-detection systems/intrusion-prevention systems (IDS/IPS), change-detection mechanisms, anti-malware solutions, and access controls, to ensure they are operating effectively and as intended.\n\n6. Monitor security controls and review logged data frequently to provide evidence and gain insights into the overall security of the environment.\n\n7. Define processes to respond to security control failures and make sure that all failures in security controls are detected and responded to promptly. \n\n8. Define a change management process and review changes that could introduce security risks to the environment.\n\n9. Do the following reviews if you third-party service or software provider and use them to provide evidence for a PCI assessment that the requirements are implemented and are effective. \n    - Review external connections and third-party access periodically.\n    - Review software development activities third parties are performing and confirm that they comply with software development requirements in PCI DSS.\n\n10. Perform periodic reviews to confirm that PCI DSS requirements continue to be in place and that personnel follows established processes. \n\n__Note__: If any of the requirements contained in the PCI DSS standard conflict with country, state, or local laws, the country, state, or local law will apply.",
    "weakness_title_read_only": "Lack of processes for the approval of compliance with PCI-DSS",
    "weakness_id_read_only": "P1713",
    "weakness": "1c93fcf7-dcb1-492f-a810-c062fabb19bf",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "requirements",
    "created": "2022-12-01T13:53:59.598000-05:00",
    "last_updated": "2023-04-25T12:44:55.118000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2469",
    "universal_id": "95fdbd44-a64e-45f5-880f-ecf227d92c84",
    "countermeasure_name": "Use CloudWatch to monitor Kinesis Firehose decryption failures (Amazon Kinesis Data Firehose)",
    "countermeasure_solution": "To prevent data loss with customer managed keys, monitor the following metrics in CloudWatch:\n\n- `KMSKeyAccessDenied`\n- `KMSKeyDisabled`\n- `KMSKeyInvalidState`\n- `KMSKeyNotFound`\n\nTo view these CloudWatch metrics, follow these steps in the AWS console:\n\n1. Navigate to the CloudWatch page.\n2. In the navigation menu, choose __Logs__ and then __Log groups__.\n3. Choose the log group for your Kinesis delivery stream.\n4. Choose the __Log streams__ tab to see the list of events in this log stream.\n\nAlso, consider creating a CloudWatch alarm for these metrics for immediate notification.",
    "weakness_title_read_only": "Decryption failure",
    "weakness_id_read_only": "P1714",
    "weakness": "1bb3b7c6-e48e-488a-8c76-8fd3453e6ab1",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2023-01-25T10:44:35.293000-05:00",
    "last_updated": "2023-01-25T12:29:41.283000-05:00",
    "custom": "False",
    "rules": "0ba9a47a-9188-4de8-8372-175b51b4c8c4",
    "rules_read_only": "A1348"
  },
  {
    "countermeasure_id": "T2470",
    "universal_id": "eef5df3d-e85d-46fb-ab46-162fb9f8bdc5",
    "countermeasure_name": "Verify CloudWatch is used to monitor Kinesis Firehose decryption failures (Amazon Kinesis Data Firehose)",
    "countermeasure_solution": "Verify the following metrics are monitored in CloudWatch:\n\n- `KMSKeyAccessDenied`\n- `KMSKeyDisabled`\n- `KMSKeyInvalidState`\n- `KMSKeyNotFound`\n\nTo view these CloudWatch metrics, follow these steps in the AWS console:\n\n1. Navigate to the CloudWatch page.\n2. In the navigation menu, choose __Logs__ and then __Log groups__.\n3. Choose the log group for your Kinesis delivery stream.\n4. Choose the __Log streams__ tab to see the list of events in this log stream.\n\nAlso, verify that CloudWatch alarms are created for these metrics for immediate notification.",
    "weakness_title_read_only": "Decryption failure",
    "weakness_id_read_only": "P1714",
    "weakness": "1bb3b7c6-e48e-488a-8c76-8fd3453e6ab1",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2023-01-25T10:47:52.297000-05:00",
    "last_updated": "2023-01-25T12:30:44.852000-05:00",
    "custom": "False",
    "rules": "0ba9a47a-9188-4de8-8372-175b51b4c8c4",
    "rules_read_only": "A1348"
  },
  {
    "countermeasure_id": "T2473",
    "universal_id": "1a0f82f4-9527-4429-9a31-32023971d7b9",
    "countermeasure_name": "Verify the presence of security constraints in all user stories and features",
    "countermeasure_solution": "You can use the following two steps to verify the presence of security constraints in all user stories:\n\n1. Check that the acceptance criteria for the user stories and features have been met and that the security constraints have been implemented correctly. \n2. Test against the potential threats identified while adding security constraints.",
    "weakness_title_read_only": "Lack of Technical Documentation",
    "weakness_id_read_only": "P1716",
    "weakness": "70f0763d-7878-4c3c-846b-a744db7c0a9f",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2023-03-07T07:27:21.169000-05:00",
    "last_updated": "2023-03-27T13:04:19.862000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2474",
    "universal_id": "32455737-7297-417e-962f-d6bf8d2e4f3c",
    "countermeasure_name": "Include security constraints in all user stories and features",
    "countermeasure_solution": "Include and verify that all user stories and features contain functional security constraints. A generic form of such user stories can be, \"As a persona, I should be able to perform task X. I should not be able to perform task Y,\" while tasks X and Y are related. \n\nFor instance, see the following story: \n\n    As a user, I should be able to view and edit my profile. \n\nSecurity constraints can be added to it in the following way: \n\n    As a user, I should be able to view and edit my profile. I should not be able to view or edit anyone else's profile. \n\n\n## References\n- [OWASP Application Security Verification Standard (ASVS)](https://owasp.org/www-project-application-security-verification-standard/)",
    "weakness_title_read_only": "Lack of Technical Documentation",
    "weakness_id_read_only": "P1716",
    "weakness": "70f0763d-7878-4c3c-846b-a744db7c0a9f",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "activities",
    "created": "2023-03-07T07:28:56.392000-05:00",
    "last_updated": "2023-03-27T13:04:34.799000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2477",
    "universal_id": "0e62beb1-d544-44da-aab5-2761041d2981",
    "countermeasure_name": "Test the re-deployment routines",
    "countermeasure_solution": "Verify that you have at least one of the following:\n\n* Automated deployment scripts. \n* Tested and documented runbook. \n* Recent backups.\n\nThe purpose is to ensure the application, its configuration, and all its dependencies can recover and be successfully re-deployed in a reasonable time. \n\nOne possible way to pass the test is by re-deploying the application and its related components using your selected methods.",
    "weakness_title_read_only": "Lack of automated re-deployment plan",
    "weakness_id_read_only": "P1719",
    "weakness": "1c7c5324-027b-4cde-b044-f62d91bde09f",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2023-03-07T07:36:29.312000-05:00",
    "last_updated": "2023-06-23T15:18:31.448000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2478",
    "universal_id": "cfe3d73f-71c0-4706-b708-46b548039b20",
    "countermeasure_name": "Manage re-deployment routines",
    "countermeasure_solution": "Ensure that the application, its configuration, and all of its dependencies can be re-deployed in a reasonable time in one of the following ways: \n\n* Use automated deployment scripts.\n* Build from a tested and documented runbook.\n* Restore from backups.\n\nSome widely used automation tools include Ansible and Jenkins.\n\n\n##References \n- [OWASP Application Security Verification Standard (ASVS)](https://owasp.org/www-project-application-security-verification-standard/)",
    "weakness_title_read_only": "Lack of automated re-deployment plan",
    "weakness_id_read_only": "P1719",
    "weakness": "1c7c5324-027b-4cde-b044-f62d91bde09f",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "deployment",
    "created": "2023-03-07T07:39:22.079000-05:00",
    "last_updated": "2023-06-23T15:18:41.120000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2479",
    "universal_id": "d0c4113b-7e34-489d-9a7f-1793fe899418",
    "countermeasure_name": "Test the Content-Disposition header in API responses",
    "countermeasure_solution": "Verify that all API responses contain the following (or other appropriate filenames for the content type):\n\n`Content-Disposition attachment : attachment; filename=\"api.json\"`",
    "weakness_title_read_only": "Encoding Error",
    "weakness_id_read_only": "P70",
    "weakness": "6643b613-76c1-47a4-a7b5-64cb7390d8f2",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2023-03-07T07:42:04.574000-05:00",
    "last_updated": "2023-03-27T13:12:35.326000-04:00",
    "custom": "False",
    "rules": "c94d6e52-ff33-4cdd-8779-5449ff2047f0 AND 8359976a-65ff-49fd-92b7-b95ab3d9df68",
    "rules_read_only": "A7 AND A754"
  },
  {
    "countermeasure_id": "T2480",
    "universal_id": "8eec61f0-40c7-4683-bf79-7920cce91079",
    "countermeasure_name": "Include Content-Disposition headers in API responses",
    "countermeasure_solution": "Use the Content-Disposition response header, and set its value to **attachment** in API responses. Similarly, a filename precision should be added to the header so the API response, displayed as an attachment, has a well-known filename.\n\nSet `filename=\"api.json\"` (or other appropriate filenames for the content type) for all API responses containing `Content-Disposition attachment: attachment`. \n\nThe following should be defined in the header:\n\n`Content-Disposition attachment : attachment; filename=\"api.json\"`\n\nNote: the specific implementation and support for the Content-Disposition header may vary across different APIs and frameworks.\n\n## References \n- [Content-Disposition - HTTP | MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Disposition)",
    "weakness_title_read_only": "Encoding Error",
    "weakness_id_read_only": "P70",
    "weakness": "6643b613-76c1-47a4-a7b5-64cb7390d8f2",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "development",
    "created": "2023-03-07T07:43:53.486000-05:00",
    "last_updated": "2023-05-24T14:12:03.062000-04:00",
    "custom": "False",
    "rules": "c94d6e52-ff33-4cdd-8779-5449ff2047f0 AND 8359976a-65ff-49fd-92b7-b95ab3d9df68",
    "rules_read_only": "A7 AND A754"
  },
  {
    "countermeasure_id": "T2481",
    "universal_id": "8f57fd41-f764-4b58-9cf3-c824eb43c98c",
    "countermeasure_name": "Define and apply configuration standards for Network Security Controls",
    "countermeasure_solution": "Define the way that Network Security Controls (NSCs) are configured and operated, and consistently applied in configuration standards. Configuration standards outline an organization's minimum requirements for the configuration of its NSCs.\n\n- Define the following in the configuration standard for each NSC (e.g. firewalls, routers):\n    - The requirements for acceptable protocols, and ports that are permitted to be used.\n    - Specific configuration requirements that are acceptable. \n    - Outline what the entity considers not acceptable or not permitted within its network.",
    "weakness_title_read_only": "Lack of configuration standards for Network Security Controls",
    "weakness_id_read_only": "P1717",
    "weakness": "5162a6a9-2eee-4ff2-8d35-830dac09b7fe",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "activities",
    "created": "2023-03-08T16:43:51.199000-05:00",
    "last_updated": "2023-03-27T13:15:44.889000-04:00",
    "custom": "False",
    "rules": "bba3a932-302b-415e-b24a-6fb715b2d7a1",
    "rules_read_only": "A1229"
  },
  {
    "countermeasure_id": "T2482",
    "universal_id": "55cef8cb-a705-43e9-a177-331e5ef63ec2",
    "countermeasure_name": "Verify implementing configuration standards",
    "countermeasure_solution": " - Verify that configuration standards are provided for  Network Security Controls (NSCs)\n- Examine configuration settings for NSC rulesets to verify that rulesets are implemented according to the configuration standards.",
    "weakness_title_read_only": "Lack of configuration standards for Network Security Controls",
    "weakness_id_read_only": "P1717",
    "weakness": "5162a6a9-2eee-4ff2-8d35-830dac09b7fe",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2023-03-08T16:49:28.799000-05:00",
    "last_updated": "2023-03-27T13:16:02.633000-04:00",
    "custom": "False",
    "rules": "bba3a932-302b-415e-b24a-6fb715b2d7a1",
    "rules_read_only": "A1229"
  },
  {
    "countermeasure_id": "T2483",
    "universal_id": "fe480346-e452-43df-81a4-27593aaa52c6",
    "countermeasure_name": "Follow a control change management process",
    "countermeasure_solution": "Any change to the network connection and configuration of Network Security Controls (NSCs) should be conducted based on a formal procedure that includes:\n\n- Description of the change.\n- Defined security impact.\n- Documented approvals.\n- Appropriate testing.\n- Steps to handle failures.\n\n####Note\n\nAny modifications to these processes must be effectuated by an authority and subject matter expert. Following any change, verification must be completed to ensure that there is no impact on network security and functions.\n\nIt is imperative that all modifications be approved before implementation, and verified following implementation. Following this, all modifications must be documented on the network. Ensure that there are no inconsistencies between the configuration and the network documentation.",
    "weakness_title_read_only": "Lack of change management for network connections and configurations",
    "weakness_id_read_only": "P1718",
    "weakness": "f84d9ad7-0227-4c14-b960-60ad5a3cb8ea",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "activities",
    "created": "2023-03-08T17:08:00.502000-05:00",
    "last_updated": "2023-05-26T14:10:13.430000-04:00",
    "custom": "False",
    "rules": "541a6527-47cc-4100-bb97-53b8b98c7948;a51f437c-40f4-4b75-a1d7-91767230872c;68c64fac-a002-469d-8f74-872b0a3352c9;bba3a932-302b-415e-b24a-6fb715b2d7a1;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1230;A1228;A1233;A1229;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233"
  },
  {
    "countermeasure_id": "T2484",
    "universal_id": "29e6174f-f7f8-4810-a6a0-638290901bdc",
    "countermeasure_name": "Verify a change management procedure is in place",
    "countermeasure_solution": "Verify a change management procedure is in place which includes the following:\n\n- Description of the change.\n- Defined security impact.\n- Documented approvals.\n- Appropriate testing.\n- Steps to handle failures.",
    "weakness_title_read_only": "Lack of change management for network connections and configurations",
    "weakness_id_read_only": "P1718",
    "weakness": "f84d9ad7-0227-4c14-b960-60ad5a3cb8ea",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2023-03-08T17:22:17.586000-05:00",
    "last_updated": "2023-05-26T14:07:47.531000-04:00",
    "custom": "False",
    "rules": "541a6527-47cc-4100-bb97-53b8b98c7948;68c64fac-a002-469d-8f74-872b0a3352c9;bba3a932-302b-415e-b24a-6fb715b2d7a1;a51f437c-40f4-4b75-a1d7-91767230872c;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1230;A1233;A1229;A1228;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233"
  },
  {
    "countermeasure_id": "T2485",
    "universal_id": "a8cea412-4cc8-407d-b518-41ced663849b",
    "countermeasure_name": "Verify that remote code and updates are correctly encrypted and signed (server side)",
    "countermeasure_solution": "Use the following guidelines to ensure that any remote code/update is properly encrypted and signed: \n\n- Verify that the code/update is encrypted using a shared key. \n- Check if the encrypted code/update is digitally signed. Make sure that the recipient knows the issuer of the Digital Signature Certificate and that the certificate is not expired. \n- Ensure the encrypted and signed code/update is delivered to the client/device through an encrypted channel, such as TLS.",
    "weakness_title_read_only": "Download of code/updates without checking its origin and/or integrity",
    "weakness_id_read_only": "P384",
    "weakness": "20806dd6-ac6a-43a2-a6ba-6aa515a7dd7e",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2023-03-09T14:20:11.746000-05:00",
    "last_updated": "2023-03-27T13:17:52.566000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2486",
    "universal_id": "ffccf898-83a3-4897-be62-870e2ec22d00",
    "countermeasure_name": "Encrypt and sign all remote code/updates (server side)",
    "countermeasure_solution": "For any remote code exchange, object serialization/deserialization, remote procedure calls, or any software update, the following should be performed on the server side:\n\n1. Encrypt the code/update using a shared key.\n2. Sign the encrypted code/update using a valid digital signature.\n3. Send the encrypted and signed code/update to the client/device through an encrypted channel, such as TLS.",
    "weakness_title_read_only": "Download of code/updates without checking its origin and/or integrity",
    "weakness_id_read_only": "P384",
    "weakness": "20806dd6-ac6a-43a2-a6ba-6aa515a7dd7e",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "requirements",
    "created": "2023-03-10T10:57:11.576000-05:00",
    "last_updated": "2023-03-27T13:18:17.059000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2488",
    "universal_id": "0bfecaa6-abac-4ac5-aaa9-307bddbad102",
    "countermeasure_name": "Detect and respond to unauthorized changes on payment pages (PCI-DSS 4.0)",
    "countermeasure_solution": "Implement a change-detection or tamper-detection mechanism to ensure:\n\n- E-commerce skimming codes or techniques cannot be added to payment pages as received by the consumer browser without a timely alert being generated.\n- Anti-skimming measures cannot be removed from payment pages without a prompt alert being generated.\n\nDeploy the change-detection or tamper-detection mechanism as follows:\n\n- Notify personnel of any unauthorized indicators of compromise, changes, additions, and deletions to the HTTP headers and the contents of payment pages as received by the consumer browser.\n- Configure the mechanism to evaluate the received HTTP header and payment page.\n- Conduct the change-detection or tamper-detection mechanism at least once every seven days or at the frequency defined in your targeted risk analysis. Refer to the \"Provide and maintain up-to-date knowledge and assessment of risks to the CDE (PCI-DSS 4.0)\" section of [Countermeasure 1892](/library/tasks/T1892/). \n\nSeveral methods are available to detect and report alterations made to payment page headers and content. These methods include, but are not limited to:\n\n- Content Security Policy (CSP) violations that occur on the payment page can be identified by utilizing CSP directives such as report-URI or report-to.\n- Modifying the CSP itself can signify an attempt at tampering with the payment page.\n- Synthetic user monitoring, where external systems request and analyze the web pages received, can detect changes to JavaScript in payment pages and alert staff.\n- Tamper-resistant and tamper-detection scripts can be embedded into the payment page to notify and obstruct any malicious script activity.\n- Reverse proxies and Content Delivery Networks are capable of recognizing modifications in scripts and informing personnel.\n\nWhile these mechanisms are typically subscription or cloud-based, custom solutions can also be implemented.",
    "weakness_title_read_only": "Insufficient control and response to unauthorized changes on payment pages",
    "weakness_id_read_only": "P1720",
    "weakness": "3413b4f0-6972-48c7-80d1-47d7a2a8e8cc",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "deployment",
    "created": "2023-03-16T12:44:44.974000-04:00",
    "last_updated": "2023-03-27T13:22:13.099000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2489",
    "universal_id": "dce7c82e-ff92-45b6-8be6-a260b04de869",
    "countermeasure_name": "Test that change-detection and tamper-detection mechanisms are implemented for payment pages (PCI-DSS 4.0)",
    "countermeasure_solution": "Test that the change-detection or tamper-detection mechanism is implemented and functioning as intended:\n\n- Test if the mechanism is able to detect any unauthorized changes made to the HTTP headers and payment page content. This can be done by intentionally modifying the headers and content of the payment page and verifying if the mechanism is able to detect and alert the relevant personnel.\n\n- Test if the mechanism is able to detect the removal of anti-skimming measures from the payment page. \n\n- Test the frequency of the mechanism's checks by verifying if the mechanism is performing checks at the frequency defined in the organization's targeted risk analysis.\n\n- Perform regression testing to ensure that the change-detection or tamper-detection mechanism has not caused any unintended effects on other parts of the payment page.",
    "weakness_title_read_only": "Insufficient control and response to unauthorized changes on payment pages",
    "weakness_id_read_only": "P1720",
    "weakness": "3413b4f0-6972-48c7-80d1-47d7a2a8e8cc",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2023-03-16T12:48:39.405000-04:00",
    "last_updated": "2023-03-27T13:22:19.795000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2490",
    "universal_id": "aaa6d7be-6c35-45eb-b2de-f0785ce35b33",
    "countermeasure_name": "Provision device with private/public key pair securely (Hardware/Firmware)",
    "countermeasure_solution": "Use the following guidance to provision devices with private/public keys in a secure manner:\n\n- Provision the device with a public/private key pair and a corresponding device certificate from a trusted product PKI service.\n\n- Use a hardware security module (HSM) to store private keys in secure storage. \n\n- Ensure secure storage allows cryptographic operations such as encryption, decryption, signing, and verification, and does not allow direct access to the private key itself. \n\n- Use an HSM that is able to store various types of private keys, including RSA, ECC, and symmetric keys.",
    "weakness_title_read_only": "Insecure storage of credentials (Hardware/Firmware)",
    "weakness_id_read_only": "P1721",
    "weakness": "74f6e04c-5bbc-4e51-b28c-19976343ea2a",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "requirements",
    "created": "2023-04-13T15:21:54.497000-04:00",
    "last_updated": "2023-06-19T09:40:13.686000-04:00",
    "custom": "False",
    "rules": "9cb6d018-3e64-4d24-ae32-413f5a4c0aa2;17d982e2-fe73-4bf1-b89c-b86bf4b0bfb4",
    "rules_read_only": "A1073;A1302"
  },
  {
    "countermeasure_id": "T2491",
    "universal_id": "c405839b-133e-4363-9ecf-8de4d0e9e83f",
    "countermeasure_name": "Verify that the device is securely provisioned with a private/public key pair (Hardware/Firmware)",
    "countermeasure_solution": " - Verify that the device is provisioned with a public/private key pair and a certificate from a trusted product PKI service.\n\n- Verify that a hardware security module (HSM) is used to store private keys.",
    "weakness_title_read_only": "Insecure storage of credentials (Hardware/Firmware)",
    "weakness_id_read_only": "P1721",
    "weakness": "74f6e04c-5bbc-4e51-b28c-19976343ea2a",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2023-04-13T15:27:22.698000-04:00",
    "last_updated": "2023-06-19T09:40:31.574000-04:00",
    "custom": "False",
    "rules": "9cb6d018-3e64-4d24-ae32-413f5a4c0aa2;17d982e2-fe73-4bf1-b89c-b86bf4b0bfb4",
    "rules_read_only": "A1073;A1302"
  },
  {
    "countermeasure_id": "T2492",
    "universal_id": "5b0c3a6b-fd43-4639-9b0a-50d2319fa2f7",
    "countermeasure_name": "Use device-generated opaque keys to encrypt OS files and data on the device (Hardware/Firmware)",
    "countermeasure_solution": "Use the following guidance to encrypt OS files and data on the device:\n\n- Implement a key generation algorithm on the device to prevent the key from being transmitted over a network or shared with any other device. \n\n- Ensure that the device-generated key is opaque, or difficult to understand or decipher, and ensure that the key is unique, unpredictable, and secure. To create an opaque key, you can encrypt the key, hash the key, use obfuscation techniques, and so on.\n\n- Use the device-specific key to encrypt:\n    - The OS files.\n    - All data at rest.\n    - Application program files that should be stored in one or more encrypted immutable partitions.",
    "weakness_title_read_only": "Unsecure key generation (Hardware/Firmware)",
    "weakness_id_read_only": "P1722",
    "weakness": "63ea6ef3-2362-4bc5-adb1-6c586a78c97d",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "requirements",
    "created": "2023-04-13T18:19:20.082000-04:00",
    "last_updated": "2023-06-19T09:41:55.987000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2493",
    "universal_id": "26b0a8ca-c87f-46e6-9437-658294ea7406",
    "countermeasure_name": "Verify that the device can generate opaque keys to encrypt OS files and data on the device (Hardware/Firmware)",
    "countermeasure_solution": " - Verify that the device generate its own key\n\n- Ensure that the device-generated key is opaque.\n\n- Test to ensure that the device-specific key is used to encrypt:\n    - The OS files.\n    - All data at rest.\n    - Application program files that should be stored in one or more encrypted immutable partitions.",
    "weakness_title_read_only": "Unsecure key generation (Hardware/Firmware)",
    "weakness_id_read_only": "P1722",
    "weakness": "63ea6ef3-2362-4bc5-adb1-6c586a78c97d",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2023-04-13T18:25:41.174000-04:00",
    "last_updated": "2023-06-19T09:42:01.501000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2494",
    "universal_id": "d75f8c29-ffd6-4750-9c49-801dd55af625",
    "countermeasure_name": "Encrypt the bootloader (Hardware/Firmware)",
    "countermeasure_solution": "A bootloader is a program or piece of code that is responsible for loading the operating system (OS) or other software onto the device's memory.\n\n- Encrypt the bootloader during transmission across networks.\n- Ensure the bootloader is not retrievable in plain text format.",
    "weakness_title_read_only": "Unencrypted bootloader (Hardware/Firmware)",
    "weakness_id_read_only": "P1723",
    "weakness": "0e8511da-79cc-4f57-8ed8-7f25be754ab9",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "requirements",
    "created": "2023-04-13T18:52:31.046000-04:00",
    "last_updated": "2023-06-19T09:43:24.095000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2495",
    "universal_id": "1625fb70-21f3-4eeb-a064-33c8359089c9",
    "countermeasure_name": "Verify that the bootloader is encrypted (Hardware/Firmware)",
    "countermeasure_solution": " - Verify that the bootloader is encrypted during transmission across networks.\n- Verify that the encrypted bootloader is not retrievable in plain text format.",
    "weakness_title_read_only": "Unencrypted bootloader (Hardware/Firmware)",
    "weakness_id_read_only": "P1723",
    "weakness": "0e8511da-79cc-4f57-8ed8-7f25be754ab9",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2023-04-13T18:55:39.862000-04:00",
    "last_updated": "2023-06-19T09:43:29.149000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2496",
    "universal_id": "f61aa05b-95a3-4fcd-9159-22c69d509b62",
    "countermeasure_name": "Generate and forward audit logs (Hardware/Firmware)",
    "countermeasure_solution": "The device should generate audit logs and forward them to the centralized log system as follows:\n\n- Generate audit logs for selected activities. \n- Use a standard logging format to ensure the system or device that is receiving the log data is able to parse and interpret the data.\n- Define log forwarding/delivery requirements as follows:\n    - Secure transmission: Transmit log data securely through secure protocols such as HTTPS or SSL, or other security measures.\n    - Data integrity: Maintain the integrity of log data during transmission to ensure that it has not been tampered with or modified in any way. \n    - Compliance: Ensure that Log forwarding or delivery mechanisms and systems comply with any relevant security or data privacy regulations and policies, such as HIPAA, PCI-DSS, or GDPR.",
    "weakness_title_read_only": "Lack of device-generated audit logs (Hardware/Firmware)",
    "weakness_id_read_only": "P1724",
    "weakness": "158d5235-0edd-401a-b9a6-c13319bb8dab",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "deployment",
    "created": "2023-04-14T13:38:36.413000-04:00",
    "last_updated": "2023-06-19T09:44:51.533000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2497",
    "universal_id": "c544d6c8-e9a4-48d6-a0ef-3d6ae2ecd90f",
    "countermeasure_name": "Verify that the device generates and forwards audit logs (Hardware/Firmware)",
    "countermeasure_solution": " - Verify that the device generates audit logs for selected activities. \n- Verify that the logs have a standard logging format.\n- Verify that log forwarding/delivery requirements are defined and followed:\n    - Secure transmission of logs is implemented.\n    - Integrity of log data is provided and verified.\n    - Compliance with any relevant security or data privacy regulations and policies is followed.",
    "weakness_title_read_only": "Lack of device-generated audit logs (Hardware/Firmware)",
    "weakness_id_read_only": "P1724",
    "weakness": "158d5235-0edd-401a-b9a6-c13319bb8dab",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2023-04-14T13:42:14.851000-04:00",
    "last_updated": "2023-06-19T09:44:56.055000-04:00",
    "custom": "False",
    "rules": "",
    "rules_read_only": ""
  },
  {
    "countermeasure_id": "T2498",
    "universal_id": "5da35809-62df-4a62-aea8-def0e585a504",
    "countermeasure_name": "Provide clear definitions for each component",
    "countermeasure_solution": "Provide the following information for each component:\n\n- An item boundary description or the interfaces with other internal or external items to distinguish the item from its operational environment.\n- Item functions describing the intended behaviour of the item during the stages of its life cycle that include development, testing, production, operation and maintenance, and decommissioning. \n-  A description of a preliminary architecture that contains the identification of item components, their connections, and their external interfaces.\n- A description of the item's operational environment as it pertains to cybersecurity. This helps in identifying attack paths and analyzing threat scenarios.",
    "weakness_title_read_only": "Lack of Technical Documentation",
    "weakness_id_read_only": "P1716",
    "weakness": "70f0763d-7878-4c3c-846b-a744db7c0a9f",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "activities",
    "created": "2023-05-15T14:11:18.706000-04:00",
    "last_updated": "2023-06-19T09:46:08.966000-04:00",
    "custom": "False",
    "rules": "2b5f47f2-88fd-484b-899a-023076dbce25;68c64fac-a002-469d-8f74-872b0a3352c9;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1231;A1233;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233"
  },
  {
    "countermeasure_id": "T2499",
    "universal_id": "2673e5b1-0c87-4e60-a47a-4a01d29d010c",
    "countermeasure_name": "Verify that clear definitions for each component exist",
    "countermeasure_solution": "Check whether the following definitions exist for each component:\n\n- Boundaries\n- Functionalities\n- Preliminary architecture\n- Operational environment\n\nAlso, verify the correctness and completeness of the above items. \nIf the above items are missing or unclear, this test _fails_.",
    "weakness_title_read_only": "Lack of Technical Documentation",
    "weakness_id_read_only": "P1716",
    "weakness": "70f0763d-7878-4c3c-846b-a744db7c0a9f",
    "tags": "",
    "countermeasure_priority": "4",
    "phase": "testing",
    "created": "2023-05-15T14:25:34.420000-04:00",
    "last_updated": "2023-06-19T09:46:13.552000-04:00",
    "custom": "False",
    "rules": "2b5f47f2-88fd-484b-899a-023076dbce25;68c64fac-a002-469d-8f74-872b0a3352c9;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1231;A1233;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233"
  },
  {
    "countermeasure_id": "T2500",
    "universal_id": "9684c933-f6de-452a-8fbf-c3d1ed32bb90",
    "countermeasure_name": "Verify that a Threat and Risk Assessment (TRA) is performed",
    "countermeasure_solution": "Check that the following is true and that an appropriate risk analysis has been performed:\n\n1. Verify that senior management understands both the role of TRAs in support of security risk management and their own responsibilities for approving acceptable levels of residual risk. Management must clarify roles and responsibilities for the TRA and identify an explicit risk acceptance authority.\n2. Verify that the scope for the TRA is established, related to the purpose of the assessment and the risk environment.\n3. Verify that a team with the knowledge and skills needed to collect essential information was assembled, that it analyzed the data, and that it recommended meaningful solutions to meet the business objectives of the organization. \n4. Verify that the required resources are identified and responsibilities are assigned with a realistic schedule for TRA activities.\n5. Verify that vulnerability reports have been reviewed and that statistics for previous software were used to inform the security risk assessment.\n6. Verify that all assets within the scope of the assessment were listed, and that the level of impact that might reasonably be expected to arise in the event of a compromise to the confidentiality, availability or integrity of each asset was determined. Assets and their values should be ranked from least to most valuable.\n7. Verify that meaningful threats and risks which might affect assets within the scope of the assessment were listed, and that the probability of each threat or risk actually occurring plus their potential impact were assessed. Assign levels for each threat or risk based on their likelihood and impact. Produce a list of threats and risks ranked from the most serious to the least.\n8. Verify that all relevant safeguards within the scope of the assessment were listed in detail, and that the effectiveness of these safeguards in mitigating potential threats or risks was determined. Identify the remaining vulnerabilities that expose assets to the identified threats or risks.\n9. Verify the effects of vulnerabilities on the likelihood of each threat or risk occurrence, the probability of compromise, and the severity of ensuing damage were assessed. Assign the relative levels for each vulnerability based on the increased exposure to the compromise of confidentiality, availability or integrity. Produce a list of vulnerabilities ranked from the most serious to the least.\n10. Verify that realistic safeguards that would mitigate all risks identified by addressing their associated vulnerabilities and reduce them to an acceptable level were identified.\n11. Verify that the TRA report with findings and recommendations was presented to the risk acceptance authority.",
    "weakness_title_read_only": "Lack of a process for identifying and assessing threats",
    "weakness_id_read_only": "P1187",
    "weakness": "f5cb4ac0-7383-4dc2-8f5d-90c95dfdc280",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2023-05-15T14:47:43.663000-04:00",
    "last_updated": "2023-06-19T09:46:37.367000-04:00",
    "custom": "False",
    "rules": "a51f437c-40f4-4b75-a1d7-91767230872c;68c64fac-a002-469d-8f74-872b0a3352c9;bba3a932-302b-415e-b24a-6fb715b2d7a1;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1228;A1233;A1229;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233"
  },
  {
    "countermeasure_id": "T2501",
    "universal_id": "13c4bff1-6c52-4de0-bc3f-f360d285fd57",
    "countermeasure_name": "Perform cybersecurity planning",
    "countermeasure_solution": " - Start with cybersecurity planning before defining the cybersecurity requirements of a component, which should include a relevant list of items or components and their details (newly developed item,  reused, or tailored items).\n- Include in the cybersecurity plan details such as the objective of each activity, dependencies on other activities or information, designated personnel responsible for each activity, necessary resources for activity performance, start or end points, expected activity durations, and the identification of expected work products to be produced. Specified activities should also cover the concept and product development phases. \n- Incorporate the cybersecurity plan into the project plan for development, either by referencing it or by including it in a manner that clearly distinguishes planned cybersecurity activities. \n- Update and maintain the cybersecurity plan and work products identified until the release for post-development. A cybersecurity activity can be updated, but only with sufficient reasoning. \n- Establish a cybersecurity plan for their respective activities and interfaces, in cases where cybersecurity activities are distributed, both the customer and supplier must do so. \n- Perform configuration management and documentation management processes for the cybersecurity plan. The work products must undergo configuration management, change management, requirements management, and documentation management.",
    "weakness_title_read_only": "Lack of cybersecurity planning",
    "weakness_id_read_only": "P1727",
    "weakness": "c4439487-3c89-4c23-938b-494da17331c5",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "activities",
    "created": "2023-05-15T15:27:16.460000-04:00",
    "last_updated": "2023-06-19T09:47:17.628000-04:00",
    "custom": "False",
    "rules": "a51f437c-40f4-4b75-a1d7-91767230872c;bba3a932-302b-415e-b24a-6fb715b2d7a1;541a6527-47cc-4100-bb97-53b8b98c7948;2b5f47f2-88fd-484b-899a-023076dbce25;3574b6ec-b55d-4390-99e7-35866abe1e17;68c64fac-a002-469d-8f74-872b0a3352c9;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1228;A1229;A1230;A1231;A1232;A1233;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233"
  },
  {
    "countermeasure_id": "T2502",
    "universal_id": "4d06ed54-eb75-46da-be3d-104972b6becc",
    "countermeasure_name": "Define a cybersecurity policy for your organization",
    "countermeasure_solution": "To ensure the effective management of cybersecurity risks in your organization, it is crucial that your cybersecurity policy not only acknowledges the existence of such risks but also highlights the executive management team's commitment toward addressing them. Furthermore, your policy should establish clear cybersecurity objectives that your organization intends to achieve.\n\nYour policy must:\n\n- Define rules and processes to support the mitigation of cybersecurity threats and risks. These rules and processes should cover various phases such as conceptualization, product development, production, operation, maintenance, and decommissioning, and should include techniques such as TARA methods, information sharing, cybersecurity monitoring, and cybersecurity incident response. \n\n- Assign and communicate roles and responsibilities to achieve and maintain cybersecurity. Ensure that personnel assigned to cybersecurity roles have competence, awareness, and training regarding known attack methods, cybersecurity controls, functional safety, and privacy. \n\n- Allocate resources (for example tools and personnel) to address cybersecurity issues. \n\n- Include a cybersecurity Continuous Improvement process for your organization. In your CI process, leverage past experiences, similar applications in the field, and cybersecurity-related information from internal and external sources with the goal of keeping your cybersecurity posture up to date. \n\n- Specify the circumstances where sharing cybersecurity-related information is necessary, authorized, or restricted, either within or outside the organization. \n\n- Employ a quality management system. Your quality management system should address issues such as change management, documentation management, configuration management, and requirements management. \n\n- Ensure that the information (for example documentation and configurations) needed to maintain the cybersecurity of your product is accessible until the end of the cybersecurity support for that product. Furthermore, ensure that you take the necessary steps that allow you to reproduce the environment required to remediate cybersecurity incidents for any particular product until the end of that product's cybersecurity support.\n\n- Employ a cybersecurity management system. \n\n- Enforce the management of tools (for example programming tools, static checkers, verification tools, and flash writers) that can affect the cybersecurity of the product. To ensure the proper management of your tools, you can employ methods such as access control and authentication. Additionally, ensure that your work products such as produced software are stored on a secure file server and are protected against unauthorized access. \n\n- Enforce security audits to ensure that your organization complies with required cybersecurity regulations and standards.",
    "weakness_title_read_only": "Lack of an organizational cybersecurity policy",
    "weakness_id_read_only": "P1726",
    "weakness": "3f942700-a93e-41b1-96ba-06279a4d1c36",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "activities",
    "created": "2023-05-15T15:31:00.209000-04:00",
    "last_updated": "2023-06-19T09:47:48.122000-04:00",
    "custom": "False",
    "rules": "a51f437c-40f4-4b75-a1d7-91767230872c;bba3a932-302b-415e-b24a-6fb715b2d7a1;541a6527-47cc-4100-bb97-53b8b98c7948;2b5f47f2-88fd-484b-899a-023076dbce25;3574b6ec-b55d-4390-99e7-35866abe1e17;68c64fac-a002-469d-8f74-872b0a3352c9;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1228;A1229;A1230;A1231;A1232;A1233;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233"
  },
  {
    "countermeasure_id": "T2503",
    "universal_id": "6bba0326-95d1-4dc6-ab4e-1a1cdbb907c2",
    "countermeasure_name": "Verify the cybersecurity policy of your organization",
    "countermeasure_solution": "To verify the cybersecurity policy of your organization, perform the following tasks:\n\n- Verify that your organization has cybersecurity policies, rules, and processes in place. \n\n- Verify that your personnel has the required level of competence in cybersecurity and you have a CI process in place. \n\n- Verify that you have a cybersecurity management system. \n\n- Verify that you are properly managing the tools used in the various stages of software production. \n\n- Verify that you perform security audits and that your organizational processes comply with applicable regulations and standards.",
    "weakness_title_read_only": "Lack of an organizational cybersecurity policy",
    "weakness_id_read_only": "P1726",
    "weakness": "3f942700-a93e-41b1-96ba-06279a4d1c36",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2023-05-15T15:35:26.245000-04:00",
    "last_updated": "2023-06-19T09:47:53.489000-04:00",
    "custom": "False",
    "rules": "a51f437c-40f4-4b75-a1d7-91767230872c;bba3a932-302b-415e-b24a-6fb715b2d7a1;541a6527-47cc-4100-bb97-53b8b98c7948;2b5f47f2-88fd-484b-899a-023076dbce25;3574b6ec-b55d-4390-99e7-35866abe1e17;68c64fac-a002-469d-8f74-872b0a3352c9;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1228;A1229;A1230;A1231;A1232;A1233;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233"
  },
  {
    "countermeasure_id": "T2504",
    "universal_id": "06908121-85c5-4b75-81ee-9120918ab3c1",
    "countermeasure_name": "Verify the cybersecurity plan",
    "countermeasure_solution": " - Verify that a cybersecurity plan is initiated before defining the cybersecurity requirements.\n- Verify that the cybersecurity plan includes all components, all cybersecurity activities, the duration of activities, and expected work products. \n- Verify that the cybersecurity plan is continuously updated and maintained. \n- Verify when applicable that suppliers are performing cybersecurity planning.",
    "weakness_title_read_only": "Lack of cybersecurity planning",
    "weakness_id_read_only": "P1727",
    "weakness": "c4439487-3c89-4c23-938b-494da17331c5",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2023-05-15T15:42:48.397000-04:00",
    "last_updated": "2023-06-19T09:47:57.674000-04:00",
    "custom": "False",
    "rules": "a51f437c-40f4-4b75-a1d7-91767230872c;bba3a932-302b-415e-b24a-6fb715b2d7a1;541a6527-47cc-4100-bb97-53b8b98c7948;2b5f47f2-88fd-484b-899a-023076dbce25;3574b6ec-b55d-4390-99e7-35866abe1e17;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9;68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1228;A1229;A1230;A1231;A1232;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233;A1233"
  },
  {
    "countermeasure_id": "T2505",
    "universal_id": "c3609206-ac84-4959-be03-b775b9a88873",
    "countermeasure_name": "Conduct cybersecurity assessments for components",
    "countermeasure_solution": "Establish a cybersecurity case to present the justification for the security measures of the item or component supported by relevant work products.\n\n##Perform a cybersecurity assessment\n- Identify the need for conducting a cybersecurity assessment for a component following a risk-based approach. Evaluate the cybersecurity of a component based on the cybersecurity assessment and independently review the reasoning behind the decision. \n\n##Include in the cybersecurity assessment:\n- The cybersecurity plan and all related work products\n- Mitigations for identified risks\n- An efficiency evaluation of the implemented cybersecurity controls\n- Rationales that demonstrate the completeness of the requirements\n- A recommendation for either accepting, conditionally accepting, or rejecting the cybersecurity of the item or component. The condition for acceptance should be clearly stated. \n\n##Create a release report for post-development\n- Assure the availability of the work products before post-development release, including a cybersecurity case, cybersecurity assessment report, and, if applicable, cybersecurity requirements for post-development.\n- Elaborate the argument for cybersecurity, verification of the cybersecurity case, and approval of cybersecurity requirements for the post-development release of a component.",
    "weakness_title_read_only": "Lack of a cybersecurity assessment",
    "weakness_id_read_only": "P1729",
    "weakness": "101a5eec-838d-44b0-85dd-77ae3f658c16",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "activities",
    "created": "2023-05-15T15:55:19.949000-04:00",
    "last_updated": "2023-06-19T09:48:28.225000-04:00",
    "custom": "False",
    "rules": "a51f437c-40f4-4b75-a1d7-91767230872c;bba3a932-302b-415e-b24a-6fb715b2d7a1;541a6527-47cc-4100-bb97-53b8b98c7948;2b5f47f2-88fd-484b-899a-023076dbce25;3574b6ec-b55d-4390-99e7-35866abe1e17;68c64fac-a002-469d-8f74-872b0a3352c9;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1228;A1229;A1230;A1231;A1232;A1233;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233"
  },
  {
    "countermeasure_id": "T2506",
    "universal_id": "8c6c76d4-d922-43aa-9f8d-886c3c684fda",
    "countermeasure_name": "Verify the cybersecurity assessment report",
    "countermeasure_solution": " - Verify that a cybersecurity case is established and includes justification for the security measures of a component.\n- Verify that the cybersecurity assessment is conducted following a risk-based approach, including the cybersecurity plan, mitigations, efficiency analysis, rational evaluation, and final acceptance recommendations. \n- Verify that all work products are available before the post-development release report.",
    "weakness_title_read_only": "Lack of a cybersecurity assessment",
    "weakness_id_read_only": "P1729",
    "weakness": "101a5eec-838d-44b0-85dd-77ae3f658c16",
    "tags": "",
    "countermeasure_priority": "7",
    "phase": "testing",
    "created": "2023-05-15T15:59:43.674000-04:00",
    "last_updated": "2023-06-19T09:48:35.508000-04:00",
    "custom": "False",
    "rules": "a51f437c-40f4-4b75-a1d7-91767230872c;bba3a932-302b-415e-b24a-6fb715b2d7a1;541a6527-47cc-4100-bb97-53b8b98c7948;2b5f47f2-88fd-484b-899a-023076dbce25;3574b6ec-b55d-4390-99e7-35866abe1e17;68c64fac-a002-469d-8f74-872b0a3352c9;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1228;A1229;A1230;A1231;A1232;A1233;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233"
  },
  {
    "countermeasure_id": "T2507",
    "universal_id": "d6826198-e2f9-44c4-9f75-55f677bba924",
    "countermeasure_name": "Verify vendor security assessment",
    "countermeasure_solution": "In order to verify your vendor's security assessment you should:\n\n- Verify that an evaluation of the type of data accessed by the vendor has been conducted. \n\n- Verify that recent independent evaluations of the vendor's security controls have been requested, such as risk assessments, compliance audit reports, or security attestation certificates. \n\n- Verify that a risk assessment of the vendor has been performed using a standard vendor security questionnaire. \n\n- Verify the identification of all significant risks, gaps, and vulnerabilities associated with the vendor. \n\n- Verify that once all identified risks have been mitigated to an acceptable level, contract clauses have been established to ensure that the vendor maintains their current level of security or improves it over time. \n\n- Verify the establishment of standard security clauses to be included in all supplier or vendor agreements. These clauses define the expected security measures and obligations for vendors.\n\n- Verify the documentation of all remaining and residual risks in a risk register, and ensure they are signed off by a senior business manager. Continuously monitor these risks and conduct annual reviews to ensure their ongoing management and mitigation.",
    "weakness_title_read_only": "Lack of vendor security assessment",
    "weakness_id_read_only": "P1437",
    "weakness": "34d62f67-74ed-48cd-9e01-4d718254b9b3",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2023-05-15T16:26:26.361000-04:00",
    "last_updated": "2023-06-19T09:48:39.683000-04:00",
    "custom": "False",
    "rules": "a51f437c-40f4-4b75-a1d7-91767230872c;bba3a932-302b-415e-b24a-6fb715b2d7a1;541a6527-47cc-4100-bb97-53b8b98c7948;2b5f47f2-88fd-484b-899a-023076dbce25;68c64fac-a002-469d-8f74-872b0a3352c9;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1228;A1229;A1230;A1231;A1233;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233"
  },
  {
    "countermeasure_id": "T2509",
    "universal_id": "fee0fcce-84b7-464e-9f23-c551171343c6",
    "countermeasure_name": "Verify the separation of development, test, and operational environments",
    "countermeasure_solution": "To ensure the safety and separation of development, test, and operational environments you should:\n\n- Verify that two or more environments have been established, such as dedicated networks, to perform development and testing activities separately.\n\n- Verify the isolation of the development and test environments from production environments and from each other. \n\n- Verify the implementation of malware detection and protection mechanisms to safeguard the source code used in development environments.\n\n- Verify the removal of all unnecessary sensitive information, such as authentication details and developer comments, from the source code before deploying it in the production environment.\n\n- Verify the use of access controls to prevent unauthorized changes by development staff in production environments.\n\n- Verify the enforcement of strict version control over development software through configuration management, logging access, and regular archiving of old software versions.\n\n- Verify the implementation of filtering or blocking methods to prevent the download of malicious mobile code into development environments.\n\n- Verify the use of integrity-checking software and configuration management tools to protect the source code in development environments, including software under development, business information, and system documentation.\n\n- Verify the maintenance of a copy of externally-generated application source code in escrow by a trusted external party. \n\n- Verify the provision of dedicated development endpoints on non-production networks with specific Countermeasures. \n\n- Verify the prevention of differences between environments, and if necessary, document any variations between the development/test environment and the production environment to facilitate the release deployment process.",
    "weakness_title_read_only": "Deploying software in production on the same environment as development and testing",
    "weakness_id_read_only": "P1191",
    "weakness": "74f1c49d-e232-4d42-bdd6-60c1427f317f",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2023-05-15T18:15:53.712000-04:00",
    "last_updated": "2023-06-01T13:18:13.002000-04:00",
    "custom": "False",
    "rules": "a51f437c-40f4-4b75-a1d7-91767230872c;bba3a932-302b-415e-b24a-6fb715b2d7a1;541a6527-47cc-4100-bb97-53b8b98c7948;2b5f47f2-88fd-484b-899a-023076dbce25;3574b6ec-b55d-4390-99e7-35866abe1e17;68c64fac-a002-469d-8f74-872b0a3352c9;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1228;A1229;A1230;A1231;A1232;A1233;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233"
  },
  {
    "countermeasure_id": "T2510",
    "universal_id": "5e95b9d6-93d9-44ec-9c16-9ada3a92a671",
    "countermeasure_name": "Define cybersecurity goals and requirements for a component",
    "countermeasure_solution": "Describe the cybersecurity controls (technical or operational) needed to achieve cybersecurity goals, including conditions for achieving a goal such as preventing, detecting, and monitoring a compromise. The description can be helpful to evaluate designs and to identify the targets for cybersecurity validation. Also, define the cybersecurity requirements of the item and its operational environment for the cybersecurity goals. This can include specific features of the item, such as its update capability.\n\n_Note:_\nAssign requirements to an item and to any of its applicable components.\nMake sure the definitions for cybersecurity goals and claims are correct and complete.",
    "weakness_title_read_only": "Lack of Technical Documentation",
    "weakness_id_read_only": "P1716",
    "weakness": "70f0763d-7878-4c3c-846b-a744db7c0a9f",
    "tags": "",
    "countermeasure_priority": "1",
    "phase": "activities",
    "created": "2023-05-16T11:56:23.904000-04:00",
    "last_updated": "2023-06-19T09:49:44.825000-04:00",
    "custom": "False",
    "rules": "3574b6ec-b55d-4390-99e7-35866abe1e17;68c64fac-a002-469d-8f74-872b0a3352c9;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1232;A1233;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233"
  },
  {
    "countermeasure_id": "T2511",
    "universal_id": "06f50a10-93bb-4e8e-8429-dae8fa7dd451",
    "countermeasure_name": "Define procedures for decommissioning and terminating cybersecurity support",
    "countermeasure_solution": "Decommissioning and terminating cybersecurity support are two different concepts. For example, an organization might cease to provide cybersecurity support for a product, yet it can continue to operate as intended. While both decommissioning and terminating cybersecurity support can lead to cybersecurity concerns, these issues are evaluated independently. \n\nTo perform the two processes adequately, you should:\n\n\n- Create a procedure to communicate to customers when your organization plans to terminate cybersecurity support for an item or component. The procedure can be communicated under contract requirements or announcements.\n\n- Make available cybersecurity requirements for post-development with regard to decommissioning, using appropriate documentation (for example, instructions or user manuals).",
    "weakness_title_read_only": "Lack of procedures for decommissioning and terminating cybersecurity support",
    "weakness_id_read_only": "P1730",
    "weakness": "769a68c0-7755-4db9-b81e-4dabef826b2d",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "activities",
    "created": "2023-05-16T12:29:20.012000-04:00",
    "last_updated": "2023-06-19T09:50:42.850000-04:00",
    "custom": "False",
    "rules": "68c64fac-a002-469d-8f74-872b0a3352c9;3574b6ec-b55d-4390-99e7-35866abe1e17;2b5f47f2-88fd-484b-899a-023076dbce25;541a6527-47cc-4100-bb97-53b8b98c7948;bba3a932-302b-415e-b24a-6fb715b2d7a1;a51f437c-40f4-4b75-a1d7-91767230872c;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1233;A1232;A1231;A1230;A1229;A1228;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233"
  },
  {
    "countermeasure_id": "T2512",
    "universal_id": "ca9aacab-c830-4d36-af33-67e6a7b651a7",
    "countermeasure_name": "Verify implemented procedures for decommissioning and terminating cybersecurity support",
    "countermeasure_solution": "Ensure that procedures for decommissioning and terminating cybersecurity support are in place. You should:\n\n\n- Verify that any plans to terminate cybersecurity support will be communicated to customers.\n\n- Verify that requirements for post-development regarding decommissioning are covered within the documentation.\n\n- Verify communication procedures related to the end of cybersecurity support.",
    "weakness_title_read_only": "Lack of procedures for decommissioning and terminating cybersecurity support",
    "weakness_id_read_only": "P1730",
    "weakness": "769a68c0-7755-4db9-b81e-4dabef826b2d",
    "tags": "",
    "countermeasure_priority": "9",
    "phase": "testing",
    "created": "2023-05-16T12:33:23.799000-04:00",
    "last_updated": "2023-06-19T09:50:47.998000-04:00",
    "custom": "False",
    "rules": "68c64fac-a002-469d-8f74-872b0a3352c9;3574b6ec-b55d-4390-99e7-35866abe1e17;2b5f47f2-88fd-484b-899a-023076dbce25;541a6527-47cc-4100-bb97-53b8b98c7948;bba3a932-302b-415e-b24a-6fb715b2d7a1;a51f437c-40f4-4b75-a1d7-91767230872c;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1233;A1232;A1231;A1230;A1229;A1228;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233"
  },
  {
    "countermeasure_id": "T2513",
    "universal_id": "cf61636a-df98-4763-9d4b-73869bd1f1ff",
    "countermeasure_name": "Verify whether cybersecurity goals and requirements are clearly defined for a component",
    "countermeasure_solution": "Check that the following items exist to ensure that the goals and requirements are clearly defined:\n\n- A document of the concepts including goals and requirements.\n- A report of the concepts.\n\nIf any of the above is missing or does not exist, this test _fails_.",
    "weakness_title_read_only": "Lack of Technical Documentation",
    "weakness_id_read_only": "P1716",
    "weakness": "70f0763d-7878-4c3c-846b-a744db7c0a9f",
    "tags": "",
    "countermeasure_priority": "1",
    "phase": "testing",
    "created": "2023-05-16T13:00:40.796000-04:00",
    "last_updated": "2023-06-19T09:51:18.325000-04:00",
    "custom": "False",
    "rules": "3574b6ec-b55d-4390-99e7-35866abe1e17;68c64fac-a002-469d-8f74-872b0a3352c9;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1232;A1233;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233"
  },
  {
    "countermeasure_id": "T2514",
    "universal_id": "ccea6ea0-f968-4e7c-a23c-2895f120e76b",
    "countermeasure_name": "Establish coding and testing guidelines",
    "countermeasure_solution": "As a part of cybersecurity specifications and architectural design, be sure to include coding and testing guidelines. Follow these steps to ensure well-establish coding specifications:\n\n\n- Consider cybersecurity factors relevant to design, modeling, or programming notations and languages, such as syntax, semantics, modularity, abstraction, and resilience against vulnerabilities resulting from improper use.\n\n- Address criteria not covered by the programming language through guidelines or the development environment, such as using language subsets or strong typing. \n\n- Verify the implementation and integration of components to ensure that they fulfill defined cybersecurity specifications. \n\n- Specify integration and verification activities, considering cybersecurity specifications, configurations, capabilities, and conformity with guidelines. \n\n- Evaluate test coverage using defined metrics to determine the sufficiency of test activities.\n\n- Conduct tests using functional testing, vulnerability scanning, fuzz testing, or penetration testing. If it's not possible to perform such tests, provide a rationale.",
    "weakness_title_read_only": "Lack of coding and testing guidelines",
    "weakness_id_read_only": "P1731",
    "weakness": "3445b105-847c-43bf-8626-a2188a89c4fa",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "activities",
    "created": "2023-05-16T13:11:38.184000-04:00",
    "last_updated": "2023-06-19T09:52:32.046000-04:00",
    "custom": "False",
    "rules": "68c64fac-a002-469d-8f74-872b0a3352c9;541a6527-47cc-4100-bb97-53b8b98c7948;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1233;A1230;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233"
  },
  {
    "countermeasure_id": "T2515",
    "universal_id": "bb1ada30-4bdd-43b1-a60b-e41d14c96787",
    "countermeasure_name": "Verify coding and testing guidelines",
    "countermeasure_solution": "Make sure your organization uses well-documented and established coding and testing guidelines by verifying that the following exist:\n\n\n- Available documentation of the modeling, design or programming languages and coding guidelines.\n\n- Available integration and verification specifications and reports.\n\n- Available guidelines to deal with weaknesses found during product development.\n\nIf any of the above items does not exist, this test _fails_.",
    "weakness_title_read_only": "Lack of coding and testing guidelines",
    "weakness_id_read_only": "P1731",
    "weakness": "3445b105-847c-43bf-8626-a2188a89c4fa",
    "tags": "",
    "countermeasure_priority": "6",
    "phase": "testing",
    "created": "2023-05-16T13:24:56.531000-04:00",
    "last_updated": "2023-06-19T09:52:35.703000-04:00",
    "custom": "False",
    "rules": "68c64fac-a002-469d-8f74-872b0a3352c9;541a6527-47cc-4100-bb97-53b8b98c7948;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1233;A1230;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233"
  },
  {
    "countermeasure_id": "T2516",
    "universal_id": "5bace67f-9c61-4901-b681-20d3576a60b9",
    "countermeasure_name": "Verify that common software weaknesses and threats are identified and tracked.",
    "countermeasure_solution": "To verify that common software weaknesses and threats are addressed in your application:\n\n- Verify that a process exists for analyzing your application for threats and weaknesses using the latest version of SD Elements and internal sources of information on software vulnerabilities and weaknesses.\n- Verify that this process is regular and fits well with your application's production release schedule. \n- Verify that the SD Elements project survey for your application contains an accurate description of the application. This ensures that recommended threats and weaknesses are as relevant as possible to your application. \n- Verify that an inventory of assessment results exists and is used to record results and decisions made during each regularly-scheduled assessment process.",
    "weakness_title_read_only": "Lack of a process for identifying and assessing threats",
    "weakness_id_read_only": "P1187",
    "weakness": "f5cb4ac0-7383-4dc2-8f5d-90c95dfdc280",
    "tags": "",
    "countermeasure_priority": "10",
    "phase": "testing",
    "created": "2023-05-17T10:22:41.922000-04:00",
    "last_updated": "2023-06-07T22:51:05.858000-04:00",
    "custom": "False",
    "rules": "a51f437c-40f4-4b75-a1d7-91767230872c;bba3a932-302b-415e-b24a-6fb715b2d7a1;541a6527-47cc-4100-bb97-53b8b98c7948;2b5f47f2-88fd-484b-899a-023076dbce25;68c64fac-a002-469d-8f74-872b0a3352c9;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1228;A1229;A1230;A1231;A1233;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233"
  },
  {
    "countermeasure_id": "T2517",
    "universal_id": "109b3937-d6d5-4e33-a635-8575fc54d975",
    "countermeasure_name": "Define cybersecurity specifications and post-development procedures",
    "countermeasure_solution": "Establish cybersecurity specifications and an architectural design that ensure the security and robustness of a system and its components. The process helps address cybersecurity challenges based on higher levels of architectural abstraction, cybersecurity controls, existing design, and identified weaknesses within the components. Satisfy the following requirements iteratively until no additional adjustments to the cybersecurity controls are necessary:\n\n- Define cybersecurity specifications based on higher-level abstractions, controls, and existing design, while allocating cybersecurity requirements to architectural design components. \n\n    - Cybersecurity specifications involve interface relationships among sub-components in the architecture, addressing their usage and static-dynamic aspects for meeting cybersecurity requirements.\n    - Consider post-development implications, such as secure key store management, debug interface deactivation, and the deletion of personal data.\n    - Identify configuration and calibration parameters relevant to cybersecurity requirements, including their settings or allowed value ranges, like proper hardware security module integration.\n    - Evaluate component capabilities for implementing cybersecurity controls, such as processor performance and memory resources.\n\n\n- Analyze the architectural design to identify and address weaknesses. Identified weaknesses undergo analysis for potential vulnerabilities, which are subsequently addressed. Remember that incorporating known weaknesses and vulnerabilities from reused components is possible. Notably, a resolution of identified weaknesses through architectural design modifications can be achieved without conducting a vulnerability analysis.\n\n\n- Specify procedures that will ensure cybersecurity after component development. This includes secure integration and maintenance.\n\n\n- Apply well-established and trusted design and implementation principles to avoid or mitigate weaknesses.",
    "weakness_title_read_only": "Lack of cybersecurity specifications and post-development procedures",
    "weakness_id_read_only": "P1732",
    "weakness": "c5914697-9171-4cda-85f3-82ce4b32dbac",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "activities",
    "created": "2023-05-18T14:23:09.623000-04:00",
    "last_updated": "2023-06-19T09:52:49.416000-04:00",
    "custom": "False",
    "rules": "68c64fac-a002-469d-8f74-872b0a3352c9;541a6527-47cc-4100-bb97-53b8b98c7948;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1233;A1230;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233"
  },
  {
    "countermeasure_id": "T2518",
    "universal_id": "ea1bc374-95f0-4681-8513-6a63c190700e",
    "countermeasure_name": "Verify cybersecurity specifications and post-development procedures",
    "countermeasure_solution": "To ensure that your organization implements adequate cybersecurity specifications and post-development procedures, you must: \n\n\n- Verify that well-established cybersecurity specifications are implemented. This includes completeness, correctness, and consistency. You can use review, analysis, simulation, or prototyping.\n\n- Verify the presence of cybersecurity requirements after product development. This includes secure integration and maintenance.",
    "weakness_title_read_only": "Lack of cybersecurity specifications and post-development procedures",
    "weakness_id_read_only": "P1732",
    "weakness": "c5914697-9171-4cda-85f3-82ce4b32dbac",
    "tags": "",
    "countermeasure_priority": "8",
    "phase": "testing",
    "created": "2023-05-18T14:51:43.073000-04:00",
    "last_updated": "2023-06-19T09:52:52.791000-04:00",
    "custom": "False",
    "rules": "68c64fac-a002-469d-8f74-872b0a3352c9;541a6527-47cc-4100-bb97-53b8b98c7948;!a51f437c-40f4-4b75-a1d7-91767230872c AND !bba3a932-302b-415e-b24a-6fb715b2d7a1 AND !541a6527-47cc-4100-bb97-53b8b98c7948 AND !2b5f47f2-88fd-484b-899a-023076dbce25 AND !3574b6ec-b55d-4390-99e7-35866abe1e17 AND !68c64fac-a002-469d-8f74-872b0a3352c9",
    "rules_read_only": "A1233;A1230;!A1228 AND !A1229 AND !A1230 AND !A1231 AND !A1232 AND !A1233"
  }
]